create table if not exists internal.account (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "identifier" jsonb,
  "name" jsonb,
  "owner" jsonb,
  "patient" jsonb,
  "period" jsonb,
  "status" jsonb,
  "subject" jsonb,
  "type" jsonb
);

create table if not exists internal.activitydefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "composed-of" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "date" jsonb,
  "depends-on" jsonb,
  "derived-from" jsonb,
  "description" jsonb,
  "effective" jsonb,
  "identifier" jsonb,
  "jurisdiction" jsonb,
  "name" jsonb,
  "predecessor" jsonb,
  "publisher" jsonb,
  "status" jsonb,
  "successor" jsonb,
  "title" jsonb,
  "topic" jsonb,
  "url" jsonb,
  "version" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb
);

create table if not exists internal.administrableproductdefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "device" jsonb,
  "dose-form" jsonb,
  "form-of" jsonb,
  "identifier" jsonb,
  "ingredient" jsonb,
  "manufactured-item" jsonb,
  "route" jsonb,
  "target-species" jsonb
);

create table if not exists internal.adverseevent (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "actuality" jsonb,
  "category" jsonb,
  "date" jsonb,
  "event" jsonb,
  "location" jsonb,
  "recorder" jsonb,
  "resultingcondition" jsonb,
  "seriousness" jsonb,
  "severity" jsonb,
  "study" jsonb,
  "subject" jsonb,
  "substance" jsonb
);

create table if not exists internal.allergyintolerance (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "asserter" jsonb,
  "category" jsonb,
  "clinical-status" jsonb,
  "code" jsonb,
  "criticality" jsonb,
  "date" jsonb,
  "identifier" jsonb,
  "last-date" jsonb,
  "manifestation" jsonb,
  "onset" jsonb,
  "patient" jsonb,
  "recorder" jsonb,
  "route" jsonb,
  "severity" jsonb,
  "type" jsonb,
  "verification-status" jsonb
);

create table if not exists internal.condition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "code" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "abatement-age" jsonb,
  "abatement-date" jsonb,
  "abatement-string" jsonb,
  "asserter" jsonb,
  "body-site" jsonb,
  "category" jsonb,
  "clinical-status" jsonb,
  "encounter" jsonb,
  "evidence" jsonb,
  "evidence-detail" jsonb,
  "onset-age" jsonb,
  "onset-date" jsonb,
  "onset-info" jsonb,
  "recorded-date" jsonb,
  "severity" jsonb,
  "stage" jsonb,
  "subject" jsonb,
  "verification-status" jsonb
);

create table if not exists internal.devicerequest (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "code" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "encounter" jsonb,
  "authored-on" jsonb,
  "based-on" jsonb,
  "device" jsonb,
  "event-date" jsonb,
  "group-identifier" jsonb,
  "instantiates-canonical" jsonb,
  "instantiates-uri" jsonb,
  "insurance" jsonb,
  "intent" jsonb,
  "performer" jsonb,
  "prior-request" jsonb,
  "requester" jsonb,
  "status" jsonb,
  "subject" jsonb
);

create table if not exists internal.diagnosticreport (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "code" jsonb,
  "date" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "encounter" jsonb,
  "based-on" jsonb,
  "category" jsonb,
  "conclusion" jsonb,
  "issued" jsonb,
  "media" jsonb,
  "performer" jsonb,
  "result" jsonb,
  "results-interpreter" jsonb,
  "specimen" jsonb,
  "status" jsonb,
  "subject" jsonb
);

create table if not exists internal.familymemberhistory (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "code" jsonb,
  "date" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "instantiates-canonical" jsonb,
  "instantiates-uri" jsonb,
  "relationship" jsonb,
  "sex" jsonb,
  "status" jsonb
);

create table if not exists internal.list (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "code" jsonb,
  "date" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "encounter" jsonb,
  "empty-reason" jsonb,
  "item" jsonb,
  "notes" jsonb,
  "source" jsonb,
  "status" jsonb,
  "subject" jsonb,
  "title" jsonb
);

create table if not exists internal.medication (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "code" jsonb,
  "expiration-date" jsonb,
  "form" jsonb,
  "identifier" jsonb,
  "ingredient" jsonb,
  "ingredient-code" jsonb,
  "lot-number" jsonb,
  "manufacturer" jsonb,
  "status" jsonb
);

create table if not exists internal.medicationadministration (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "code" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "context" jsonb,
  "device" jsonb,
  "effective-time" jsonb,
  "medication" jsonb,
  "performer" jsonb,
  "reason-given" jsonb,
  "reason-not-given" jsonb,
  "request" jsonb,
  "status" jsonb,
  "subject" jsonb
);

create table if not exists internal.medicationdispense (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "code" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "medication" jsonb,
  "status" jsonb,
  "context" jsonb,
  "destination" jsonb,
  "performer" jsonb,
  "prescription" jsonb,
  "receiver" jsonb,
  "responsibleparty" jsonb,
  "subject" jsonb,
  "type" jsonb,
  "whenhandedover" jsonb,
  "whenprepared" jsonb
);

create table if not exists internal.medicationrequest (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "code" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "medication" jsonb,
  "status" jsonb,
  "authoredon" jsonb,
  "category" jsonb,
  "date" jsonb,
  "encounter" jsonb,
  "intended-dispenser" jsonb,
  "intended-performer" jsonb,
  "intended-performertype" jsonb,
  "intent" jsonb,
  "priority" jsonb,
  "requester" jsonb,
  "subject" jsonb
);

create table if not exists internal.medicationstatement (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "code" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "medication" jsonb,
  "status" jsonb,
  "category" jsonb,
  "context" jsonb,
  "effective" jsonb,
  "part-of" jsonb,
  "source" jsonb,
  "subject" jsonb
);

create table if not exists internal.observation (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "code" jsonb,
  "date" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "encounter" jsonb,
  "based-on" jsonb,
  "category" jsonb,
  "combo-code" jsonb,
  "combo-data-absent-reason" jsonb,
  "combo-value-concept" jsonb,
  "combo-value-quantity" jsonb,
  "component-code" jsonb,
  "component-data-absent-reason" jsonb,
  "component-value-concept" jsonb,
  "component-value-quantity" jsonb,
  "data-absent-reason" jsonb,
  "derived-from" jsonb,
  "device" jsonb,
  "focus" jsonb,
  "has-member" jsonb,
  "method" jsonb,
  "part-of" jsonb,
  "performer" jsonb,
  "specimen" jsonb,
  "status" jsonb,
  "subject" jsonb,
  "value-concept" jsonb,
  "value-date" jsonb,
  "value-quantity" jsonb,
  "value-string" jsonb,
  "code-value-concept" jsonb,
  "code-value-date" jsonb,
  "code-value-quantity" jsonb,
  "code-value-string" jsonb,
  "combo-code-value-concept" jsonb,
  "combo-code-value-quantity" jsonb,
  "component-code-value-concept" jsonb,
  "component-code-value-quantity" jsonb
);

create table if not exists internal.procedure (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "code" jsonb,
  "date" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "encounter" jsonb,
  "based-on" jsonb,
  "category" jsonb,
  "instantiates-canonical" jsonb,
  "instantiates-uri" jsonb,
  "location" jsonb,
  "part-of" jsonb,
  "performer" jsonb,
  "reason-code" jsonb,
  "reason-reference" jsonb,
  "status" jsonb,
  "subject" jsonb
);

create table if not exists internal.servicerequest (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "code" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "encounter" jsonb,
  "authored" jsonb,
  "based-on" jsonb,
  "body-site" jsonb,
  "category" jsonb,
  "instantiates-canonical" jsonb,
  "instantiates-uri" jsonb,
  "intent" jsonb,
  "occurrence" jsonb,
  "performer" jsonb,
  "performer-type" jsonb,
  "priority" jsonb,
  "replaces" jsonb,
  "requester" jsonb,
  "requisition" jsonb,
  "specimen" jsonb,
  "status" jsonb,
  "subject" jsonb
);

create table if not exists internal.careplan (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "date" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "activity-code" jsonb,
  "activity-date" jsonb,
  "activity-reference" jsonb,
  "based-on" jsonb,
  "care-team" jsonb,
  "category" jsonb,
  "condition" jsonb,
  "encounter" jsonb,
  "goal" jsonb,
  "instantiates-canonical" jsonb,
  "instantiates-uri" jsonb,
  "intent" jsonb,
  "part-of" jsonb,
  "performer" jsonb,
  "replaces" jsonb,
  "status" jsonb,
  "subject" jsonb
);

create table if not exists internal.careteam (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "date" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "category" jsonb,
  "encounter" jsonb,
  "participant" jsonb,
  "status" jsonb,
  "subject" jsonb
);

create table if not exists internal.clinicalimpression (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "date" jsonb,
  "patient" jsonb,
  "assessor" jsonb,
  "encounter" jsonb,
  "finding-code" jsonb,
  "finding-ref" jsonb,
  "identifier" jsonb,
  "investigation" jsonb,
  "previous" jsonb,
  "problem" jsonb,
  "status" jsonb,
  "subject" jsonb,
  "supporting-info" jsonb
);

create table if not exists internal.composition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "date" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "type" jsonb,
  "attester" jsonb,
  "author" jsonb,
  "category" jsonb,
  "confidentiality" jsonb,
  "context" jsonb,
  "encounter" jsonb,
  "entry" jsonb,
  "period" jsonb,
  "related-id" jsonb,
  "related-ref" jsonb,
  "section" jsonb,
  "status" jsonb,
  "subject" jsonb,
  "title" jsonb
);

create table if not exists internal.consent (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "date" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "action" jsonb,
  "actor" jsonb,
  "category" jsonb,
  "consentor" jsonb,
  "data" jsonb,
  "organization" jsonb,
  "period" jsonb,
  "purpose" jsonb,
  "scope" jsonb,
  "security-label" jsonb,
  "source-reference" jsonb,
  "status" jsonb
);

create table if not exists internal.encounter (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "date" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "type" jsonb,
  "account" jsonb,
  "appointment" jsonb,
  "based-on" jsonb,
  "class" jsonb,
  "diagnosis" jsonb,
  "episode-of-care" jsonb,
  "length" jsonb,
  "location" jsonb,
  "location-period" jsonb,
  "part-of" jsonb,
  "participant" jsonb,
  "participant-type" jsonb,
  "practitioner" jsonb,
  "reason-code" jsonb,
  "reason-reference" jsonb,
  "service-provider" jsonb,
  "special-arrangement" jsonb,
  "status" jsonb,
  "subject" jsonb
);

create table if not exists internal.episodeofcare (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "date" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "type" jsonb,
  "care-manager" jsonb,
  "condition" jsonb,
  "incoming-referral" jsonb,
  "organization" jsonb,
  "status" jsonb
);

create table if not exists internal.flag (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "date" jsonb,
  "patient" jsonb,
  "encounter" jsonb,
  "author" jsonb,
  "identifier" jsonb,
  "subject" jsonb
);

create table if not exists internal.immunization (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "date" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "location" jsonb,
  "lot-number" jsonb,
  "manufacturer" jsonb,
  "performer" jsonb,
  "reaction" jsonb,
  "reaction-date" jsonb,
  "reason-code" jsonb,
  "reason-reference" jsonb,
  "series" jsonb,
  "status" jsonb,
  "status-reason" jsonb,
  "target-disease" jsonb,
  "vaccine-code" jsonb
);

create table if not exists internal.riskassessment (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "date" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "encounter" jsonb,
  "condition" jsonb,
  "method" jsonb,
  "performer" jsonb,
  "probability" jsonb,
  "risk" jsonb,
  "subject" jsonb
);

create table if not exists internal.supplyrequest (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "date" jsonb,
  "identifier" jsonb,
  "category" jsonb,
  "requester" jsonb,
  "status" jsonb,
  "subject" jsonb,
  "supplier" jsonb
);

create table if not exists internal.detectedissue (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "author" jsonb,
  "code" jsonb,
  "identified" jsonb,
  "implicated" jsonb
);

create table if not exists internal.documentmanifest (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "type" jsonb,
  "author" jsonb,
  "created" jsonb,
  "description" jsonb,
  "item" jsonb,
  "recipient" jsonb,
  "related-id" jsonb,
  "related-ref" jsonb,
  "source" jsonb,
  "status" jsonb,
  "subject" jsonb
);

create table if not exists internal.documentreference (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "type" jsonb,
  "encounter" jsonb,
  "authenticator" jsonb,
  "author" jsonb,
  "category" jsonb,
  "contenttype" jsonb,
  "custodian" jsonb,
  "date" jsonb,
  "description" jsonb,
  "event" jsonb,
  "facility" jsonb,
  "format" jsonb,
  "language" jsonb,
  "location" jsonb,
  "period" jsonb,
  "related" jsonb,
  "relatesto" jsonb,
  "relation" jsonb,
  "security-label" jsonb,
  "setting" jsonb,
  "status" jsonb,
  "subject" jsonb,
  "relationship" jsonb
);

create table if not exists internal.goal (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "achievement-status" jsonb,
  "category" jsonb,
  "lifecycle-status" jsonb,
  "start-date" jsonb,
  "subject" jsonb,
  "target-date" jsonb
);

create table if not exists internal.imagingstudy (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "basedon" jsonb,
  "bodysite" jsonb,
  "dicom-class" jsonb,
  "encounter" jsonb,
  "endpoint" jsonb,
  "instance" jsonb,
  "interpreter" jsonb,
  "modality" jsonb,
  "performer" jsonb,
  "reason" jsonb,
  "referrer" jsonb,
  "series" jsonb,
  "started" jsonb,
  "status" jsonb,
  "subject" jsonb
);

create table if not exists internal.nutritionorder (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "encounter" jsonb,
  "additive" jsonb,
  "datetime" jsonb,
  "formula" jsonb,
  "instantiates-canonical" jsonb,
  "instantiates-uri" jsonb,
  "oraldiet" jsonb,
  "provider" jsonb,
  "status" jsonb,
  "supplement" jsonb
);

create table if not exists internal.supplydelivery (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "receiver" jsonb,
  "status" jsonb,
  "supplier" jsonb
);

create table if not exists internal.visionprescription (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "encounter" jsonb,
  "datewritten" jsonb,
  "prescriber" jsonb,
  "status" jsonb
);

create table if not exists internal.deviceusestatement (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "patient" jsonb,
  "device" jsonb,
  "identifier" jsonb,
  "subject" jsonb
);

create table if not exists internal.appointment (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "actor" jsonb,
  "appointment-type" jsonb,
  "based-on" jsonb,
  "date" jsonb,
  "identifier" jsonb,
  "location" jsonb,
  "part-status" jsonb,
  "patient" jsonb,
  "practitioner" jsonb,
  "reason-code" jsonb,
  "reason-reference" jsonb,
  "service-category" jsonb,
  "service-type" jsonb,
  "slot" jsonb,
  "specialty" jsonb,
  "status" jsonb,
  "supporting-info" jsonb
);

create table if not exists internal.appointmentresponse (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "actor" jsonb,
  "appointment" jsonb,
  "identifier" jsonb,
  "location" jsonb,
  "part-status" jsonb,
  "patient" jsonb,
  "practitioner" jsonb
);

create table if not exists internal.auditevent (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "action" jsonb,
  "address" jsonb,
  "agent" jsonb,
  "agent-name" jsonb,
  "agent-role" jsonb,
  "altid" jsonb,
  "date" jsonb,
  "entity" jsonb,
  "entity-name" jsonb,
  "entity-role" jsonb,
  "entity-type" jsonb,
  "outcome" jsonb,
  "patient" jsonb,
  "policy" jsonb,
  "site" jsonb,
  "source" jsonb,
  "subtype" jsonb,
  "type" jsonb
);

create table if not exists internal.basic (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "author" jsonb,
  "code" jsonb,
  "created" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "subject" jsonb
);

create table if not exists internal.bodystructure (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "identifier" jsonb,
  "location" jsonb,
  "morphology" jsonb,
  "patient" jsonb
);

create table if not exists internal.bundle (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "composition" jsonb,
  "identifier" jsonb,
  "message" jsonb,
  "timestamp" jsonb,
  "type" jsonb
);

create table if not exists internal.capabilitystatement (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "date" jsonb,
  "description" jsonb,
  "fhirversion" jsonb,
  "format" jsonb,
  "guide" jsonb,
  "jurisdiction" jsonb,
  "mode" jsonb,
  "name" jsonb,
  "publisher" jsonb,
  "resource" jsonb,
  "resource-profile" jsonb,
  "security-service" jsonb,
  "software" jsonb,
  "status" jsonb,
  "supported-profile" jsonb,
  "title" jsonb,
  "url" jsonb,
  "version" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb
);

create table if not exists internal.codesystem (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "date" jsonb,
  "description" jsonb,
  "jurisdiction" jsonb,
  "name" jsonb,
  "publisher" jsonb,
  "status" jsonb,
  "title" jsonb,
  "url" jsonb,
  "version" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb,
  "code" jsonb,
  "content-mode" jsonb,
  "identifier" jsonb,
  "language" jsonb,
  "supplements" jsonb,
  "system" jsonb
);

create table if not exists internal.compartmentdefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "date" jsonb,
  "description" jsonb,
  "name" jsonb,
  "publisher" jsonb,
  "status" jsonb,
  "url" jsonb,
  "version" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb,
  "code" jsonb,
  "resource" jsonb
);

create table if not exists internal.conceptmap (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "date" jsonb,
  "description" jsonb,
  "jurisdiction" jsonb,
  "name" jsonb,
  "publisher" jsonb,
  "status" jsonb,
  "title" jsonb,
  "url" jsonb,
  "version" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb,
  "identifier" jsonb,
  "dependson" jsonb,
  "other" jsonb,
  "product" jsonb,
  "source" jsonb,
  "source-code" jsonb,
  "source-system" jsonb,
  "source-uri" jsonb,
  "target" jsonb,
  "target-code" jsonb,
  "target-system" jsonb,
  "target-uri" jsonb
);

create table if not exists internal.graphdefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "date" jsonb,
  "description" jsonb,
  "jurisdiction" jsonb,
  "name" jsonb,
  "publisher" jsonb,
  "status" jsonb,
  "url" jsonb,
  "version" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb,
  "start" jsonb
);

create table if not exists internal.implementationguide (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "date" jsonb,
  "description" jsonb,
  "jurisdiction" jsonb,
  "name" jsonb,
  "publisher" jsonb,
  "status" jsonb,
  "title" jsonb,
  "url" jsonb,
  "version" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb,
  "depends-on" jsonb,
  "experimental" jsonb,
  "global" jsonb,
  "resource" jsonb
);

create table if not exists internal.messagedefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "date" jsonb,
  "description" jsonb,
  "jurisdiction" jsonb,
  "name" jsonb,
  "publisher" jsonb,
  "status" jsonb,
  "title" jsonb,
  "url" jsonb,
  "version" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb,
  "identifier" jsonb,
  "category" jsonb,
  "event" jsonb,
  "focus" jsonb,
  "parent" jsonb
);

create table if not exists internal.namingsystem (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "date" jsonb,
  "description" jsonb,
  "jurisdiction" jsonb,
  "name" jsonb,
  "publisher" jsonb,
  "status" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb,
  "contact" jsonb,
  "id-type" jsonb,
  "kind" jsonb,
  "period" jsonb,
  "responsible" jsonb,
  "telecom" jsonb,
  "type" jsonb,
  "value" jsonb
);

create table if not exists internal.operationdefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "date" jsonb,
  "description" jsonb,
  "jurisdiction" jsonb,
  "name" jsonb,
  "publisher" jsonb,
  "status" jsonb,
  "title" jsonb,
  "url" jsonb,
  "version" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb,
  "base" jsonb,
  "code" jsonb,
  "input-profile" jsonb,
  "instance" jsonb,
  "kind" jsonb,
  "output-profile" jsonb,
  "system" jsonb,
  "type" jsonb
);

create table if not exists internal.searchparameter (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "date" jsonb,
  "description" jsonb,
  "jurisdiction" jsonb,
  "name" jsonb,
  "publisher" jsonb,
  "status" jsonb,
  "url" jsonb,
  "version" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb,
  "base" jsonb,
  "code" jsonb,
  "component" jsonb,
  "derived-from" jsonb,
  "target" jsonb,
  "type" jsonb
);

create table if not exists internal.structuredefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "date" jsonb,
  "description" jsonb,
  "jurisdiction" jsonb,
  "name" jsonb,
  "publisher" jsonb,
  "status" jsonb,
  "title" jsonb,
  "url" jsonb,
  "version" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb,
  "identifier" jsonb,
  "abstract" jsonb,
  "base" jsonb,
  "base-path" jsonb,
  "derivation" jsonb,
  "experimental" jsonb,
  "ext-context" jsonb,
  "keyword" jsonb,
  "kind" jsonb,
  "path" jsonb,
  "type" jsonb,
  "valueset" jsonb
);

create table if not exists internal.structuremap (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "date" jsonb,
  "description" jsonb,
  "jurisdiction" jsonb,
  "name" jsonb,
  "publisher" jsonb,
  "status" jsonb,
  "title" jsonb,
  "url" jsonb,
  "version" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb,
  "identifier" jsonb
);

create table if not exists internal.terminologycapabilities (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "date" jsonb,
  "description" jsonb,
  "jurisdiction" jsonb,
  "name" jsonb,
  "publisher" jsonb,
  "status" jsonb,
  "title" jsonb,
  "url" jsonb,
  "version" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb
);

create table if not exists internal.valueset (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "date" jsonb,
  "description" jsonb,
  "jurisdiction" jsonb,
  "name" jsonb,
  "publisher" jsonb,
  "status" jsonb,
  "title" jsonb,
  "url" jsonb,
  "version" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb,
  "identifier" jsonb,
  "code" jsonb,
  "expansion" jsonb,
  "reference" jsonb
);

create table if not exists internal.chargeitem (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "account" jsonb,
  "code" jsonb,
  "context" jsonb,
  "entered-date" jsonb,
  "enterer" jsonb,
  "factor-override" jsonb,
  "identifier" jsonb,
  "occurrence" jsonb,
  "patient" jsonb,
  "performer-actor" jsonb,
  "performer-function" jsonb,
  "performing-organization" jsonb,
  "price-override" jsonb,
  "quantity" jsonb,
  "requesting-organization" jsonb,
  "service" jsonb,
  "subject" jsonb
);

create table if not exists internal.chargeitemdefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "date" jsonb,
  "description" jsonb,
  "effective" jsonb,
  "identifier" jsonb,
  "jurisdiction" jsonb,
  "publisher" jsonb,
  "status" jsonb,
  "title" jsonb,
  "url" jsonb,
  "version" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb
);

create table if not exists internal.citation (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "date" jsonb,
  "description" jsonb,
  "effective" jsonb,
  "identifier" jsonb,
  "jurisdiction" jsonb,
  "name" jsonb,
  "publisher" jsonb,
  "status" jsonb,
  "title" jsonb,
  "url" jsonb,
  "version" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb
);

create table if not exists internal.claim (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "care-team" jsonb,
  "created" jsonb,
  "detail-udi" jsonb,
  "encounter" jsonb,
  "enterer" jsonb,
  "facility" jsonb,
  "identifier" jsonb,
  "insurer" jsonb,
  "item-udi" jsonb,
  "patient" jsonb,
  "payee" jsonb,
  "priority" jsonb,
  "procedure-udi" jsonb,
  "provider" jsonb,
  "status" jsonb,
  "subdetail-udi" jsonb,
  "use" jsonb
);

create table if not exists internal.claimresponse (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "created" jsonb,
  "disposition" jsonb,
  "identifier" jsonb,
  "insurer" jsonb,
  "outcome" jsonb,
  "patient" jsonb,
  "payment-date" jsonb,
  "request" jsonb,
  "requestor" jsonb,
  "status" jsonb,
  "use" jsonb
);

create table if not exists internal.clinicalusedefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "contraindication" jsonb,
  "contraindication-reference" jsonb,
  "effect" jsonb,
  "effect-reference" jsonb,
  "identifier" jsonb,
  "indication" jsonb,
  "indication-reference" jsonb,
  "interaction" jsonb,
  "product" jsonb,
  "subject" jsonb,
  "type" jsonb
);

create table if not exists internal.communication (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "based-on" jsonb,
  "category" jsonb,
  "encounter" jsonb,
  "identifier" jsonb,
  "instantiates-canonical" jsonb,
  "instantiates-uri" jsonb,
  "medium" jsonb,
  "part-of" jsonb,
  "patient" jsonb,
  "received" jsonb,
  "recipient" jsonb,
  "sender" jsonb,
  "sent" jsonb,
  "status" jsonb,
  "subject" jsonb
);

create table if not exists internal.communicationrequest (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "authored" jsonb,
  "based-on" jsonb,
  "category" jsonb,
  "encounter" jsonb,
  "group-identifier" jsonb,
  "identifier" jsonb,
  "medium" jsonb,
  "occurrence" jsonb,
  "patient" jsonb,
  "priority" jsonb,
  "recipient" jsonb,
  "replaces" jsonb,
  "requester" jsonb,
  "sender" jsonb,
  "status" jsonb,
  "subject" jsonb
);

create table if not exists internal.contract (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "authority" jsonb,
  "domain" jsonb,
  "identifier" jsonb,
  "instantiates" jsonb,
  "issued" jsonb,
  "patient" jsonb,
  "signer" jsonb,
  "status" jsonb,
  "subject" jsonb,
  "url" jsonb
);

create table if not exists internal.coverage (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "beneficiary" jsonb,
  "class-type" jsonb,
  "class-value" jsonb,
  "dependent" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "payor" jsonb,
  "policy-holder" jsonb,
  "status" jsonb,
  "subscriber" jsonb,
  "type" jsonb
);

create table if not exists internal.coverageeligibilityrequest (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "created" jsonb,
  "enterer" jsonb,
  "facility" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "provider" jsonb,
  "status" jsonb
);

create table if not exists internal.coverageeligibilityresponse (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "created" jsonb,
  "disposition" jsonb,
  "identifier" jsonb,
  "insurer" jsonb,
  "outcome" jsonb,
  "patient" jsonb,
  "request" jsonb,
  "requestor" jsonb,
  "status" jsonb
);

create table if not exists internal.device (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "device-name" jsonb,
  "identifier" jsonb,
  "location" jsonb,
  "manufacturer" jsonb,
  "model" jsonb,
  "organization" jsonb,
  "patient" jsonb,
  "status" jsonb,
  "type" jsonb,
  "udi-carrier" jsonb,
  "udi-di" jsonb,
  "url" jsonb
);

create table if not exists internal.devicedefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "identifier" jsonb,
  "parent" jsonb,
  "type" jsonb
);

create table if not exists internal.devicemetric (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "category" jsonb,
  "identifier" jsonb,
  "parent" jsonb,
  "source" jsonb,
  "type" jsonb
);

create table if not exists internal.endpoint (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "connection-type" jsonb,
  "identifier" jsonb,
  "name" jsonb,
  "organization" jsonb,
  "payload-type" jsonb,
  "status" jsonb
);

create table if not exists internal.enrollmentrequest (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "status" jsonb,
  "subject" jsonb
);

create table if not exists internal.enrollmentresponse (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "identifier" jsonb,
  "request" jsonb,
  "status" jsonb
);

create table if not exists internal.eventdefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "composed-of" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "date" jsonb,
  "depends-on" jsonb,
  "derived-from" jsonb,
  "description" jsonb,
  "effective" jsonb,
  "identifier" jsonb,
  "jurisdiction" jsonb,
  "name" jsonb,
  "predecessor" jsonb,
  "publisher" jsonb,
  "status" jsonb,
  "successor" jsonb,
  "title" jsonb,
  "topic" jsonb,
  "url" jsonb,
  "version" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb
);

create table if not exists internal.evidence (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "date" jsonb,
  "description" jsonb,
  "identifier" jsonb,
  "publisher" jsonb,
  "status" jsonb,
  "title" jsonb,
  "url" jsonb,
  "version" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb
);

create table if not exists internal.evidencereport (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "identifier" jsonb,
  "publisher" jsonb,
  "status" jsonb,
  "url" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb
);

create table if not exists internal.evidencevariable (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "date" jsonb,
  "description" jsonb,
  "identifier" jsonb,
  "name" jsonb,
  "publisher" jsonb,
  "status" jsonb,
  "title" jsonb,
  "url" jsonb,
  "version" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb
);

create table if not exists internal.examplescenario (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "date" jsonb,
  "identifier" jsonb,
  "jurisdiction" jsonb,
  "name" jsonb,
  "publisher" jsonb,
  "status" jsonb,
  "url" jsonb,
  "version" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb
);

create table if not exists internal.explanationofbenefit (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "care-team" jsonb,
  "claim" jsonb,
  "coverage" jsonb,
  "created" jsonb,
  "detail-udi" jsonb,
  "disposition" jsonb,
  "encounter" jsonb,
  "enterer" jsonb,
  "facility" jsonb,
  "identifier" jsonb,
  "item-udi" jsonb,
  "patient" jsonb,
  "payee" jsonb,
  "procedure-udi" jsonb,
  "provider" jsonb,
  "status" jsonb,
  "subdetail-udi" jsonb
);

create table if not exists internal.group (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "actual" jsonb,
  "characteristic" jsonb,
  "code" jsonb,
  "exclude" jsonb,
  "identifier" jsonb,
  "managing-entity" jsonb,
  "member" jsonb,
  "type" jsonb,
  "value" jsonb,
  "characteristic-value" jsonb
);

create table if not exists internal.guidanceresponse (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "request" jsonb,
  "subject" jsonb
);

create table if not exists internal.healthcareservice (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "active" jsonb,
  "characteristic" jsonb,
  "coverage-area" jsonb,
  "endpoint" jsonb,
  "identifier" jsonb,
  "location" jsonb,
  "name" jsonb,
  "organization" jsonb,
  "program" jsonb,
  "service-category" jsonb,
  "service-type" jsonb,
  "specialty" jsonb
);

create table if not exists internal.immunizationevaluation (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "date" jsonb,
  "dose-status" jsonb,
  "identifier" jsonb,
  "immunization-event" jsonb,
  "patient" jsonb,
  "status" jsonb,
  "target-disease" jsonb
);

create table if not exists internal.immunizationrecommendation (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "date" jsonb,
  "identifier" jsonb,
  "information" jsonb,
  "patient" jsonb,
  "status" jsonb,
  "support" jsonb,
  "target-disease" jsonb,
  "vaccine-type" jsonb
);

create table if not exists internal.ingredient (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "for" jsonb,
  "function" jsonb,
  "identifier" jsonb,
  "manufacturer" jsonb,
  "role" jsonb,
  "substance" jsonb,
  "substance-code" jsonb,
  "substance-definition" jsonb
);

create table if not exists internal.insuranceplan (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "address" jsonb,
  "address-city" jsonb,
  "address-country" jsonb,
  "address-postalcode" jsonb,
  "address-state" jsonb,
  "address-use" jsonb,
  "administered-by" jsonb,
  "endpoint" jsonb,
  "identifier" jsonb,
  "name" jsonb,
  "owned-by" jsonb,
  "phonetic" jsonb,
  "status" jsonb,
  "type" jsonb
);

create table if not exists internal.invoice (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "account" jsonb,
  "date" jsonb,
  "identifier" jsonb,
  "issuer" jsonb,
  "participant" jsonb,
  "participant-role" jsonb,
  "patient" jsonb,
  "recipient" jsonb,
  "status" jsonb,
  "subject" jsonb,
  "totalgross" jsonb,
  "totalnet" jsonb,
  "type" jsonb
);

create table if not exists internal.library (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "composed-of" jsonb,
  "content-type" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "date" jsonb,
  "depends-on" jsonb,
  "derived-from" jsonb,
  "description" jsonb,
  "effective" jsonb,
  "identifier" jsonb,
  "jurisdiction" jsonb,
  "name" jsonb,
  "predecessor" jsonb,
  "publisher" jsonb,
  "status" jsonb,
  "successor" jsonb,
  "title" jsonb,
  "topic" jsonb,
  "type" jsonb,
  "url" jsonb,
  "version" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb
);

create table if not exists internal.linkage (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "author" jsonb,
  "item" jsonb,
  "source" jsonb
);

create table if not exists internal.location (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "address" jsonb,
  "address-city" jsonb,
  "address-country" jsonb,
  "address-postalcode" jsonb,
  "address-state" jsonb,
  "address-use" jsonb,
  "endpoint" jsonb,
  "identifier" jsonb,
  "name" jsonb,
  "near" jsonb,
  "operational-status" jsonb,
  "organization" jsonb,
  "partof" jsonb,
  "status" jsonb,
  "type" jsonb
);

create table if not exists internal.manufactureditemdefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "dose-form" jsonb,
  "identifier" jsonb,
  "ingredient" jsonb
);

create table if not exists internal.measure (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "composed-of" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "date" jsonb,
  "depends-on" jsonb,
  "derived-from" jsonb,
  "description" jsonb,
  "effective" jsonb,
  "identifier" jsonb,
  "jurisdiction" jsonb,
  "name" jsonb,
  "predecessor" jsonb,
  "publisher" jsonb,
  "status" jsonb,
  "successor" jsonb,
  "title" jsonb,
  "topic" jsonb,
  "url" jsonb,
  "version" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb
);

create table if not exists internal.measurereport (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "date" jsonb,
  "evaluated-resource" jsonb,
  "identifier" jsonb,
  "measure" jsonb,
  "patient" jsonb,
  "period" jsonb,
  "reporter" jsonb,
  "status" jsonb,
  "subject" jsonb
);

create table if not exists internal.media (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "based-on" jsonb,
  "created" jsonb,
  "device" jsonb,
  "encounter" jsonb,
  "identifier" jsonb,
  "modality" jsonb,
  "operator" jsonb,
  "patient" jsonb,
  "site" jsonb,
  "status" jsonb,
  "subject" jsonb,
  "type" jsonb,
  "view" jsonb
);

create table if not exists internal.medicationknowledge (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "classification" jsonb,
  "classification-type" jsonb,
  "code" jsonb,
  "doseform" jsonb,
  "ingredient" jsonb,
  "ingredient-code" jsonb,
  "manufacturer" jsonb,
  "monitoring-program-name" jsonb,
  "monitoring-program-type" jsonb,
  "monograph" jsonb,
  "monograph-type" jsonb,
  "source-cost" jsonb,
  "status" jsonb
);

create table if not exists internal.medicinalproductdefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "characteristic" jsonb,
  "characteristic-type" jsonb,
  "contact" jsonb,
  "domain" jsonb,
  "identifier" jsonb,
  "ingredient" jsonb,
  "master-file" jsonb,
  "name" jsonb,
  "name-language" jsonb,
  "product-classification" jsonb,
  "status" jsonb,
  "type" jsonb
);

create table if not exists internal.messageheader (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "author" jsonb,
  "code" jsonb,
  "destination" jsonb,
  "destination-uri" jsonb,
  "enterer" jsonb,
  "event" jsonb,
  "focus" jsonb,
  "receiver" jsonb,
  "response-id" jsonb,
  "responsible" jsonb,
  "sender" jsonb,
  "source" jsonb,
  "source-uri" jsonb,
  "target" jsonb
);

create table if not exists internal.molecularsequence (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "chromosome" jsonb,
  "identifier" jsonb,
  "patient" jsonb,
  "referenceseqid" jsonb,
  "type" jsonb,
  "variant-end" jsonb,
  "variant-start" jsonb,
  "window-end" jsonb,
  "window-start" jsonb,
  "chromosome-variant-coordinate" jsonb,
  "chromosome-window-coordinate" jsonb,
  "referenceseqid-variant-coordinate" jsonb,
  "referenceseqid-window-coordinate" jsonb
);

create table if not exists internal.nutritionproduct (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "identifier" jsonb,
  "status" jsonb
);

create table if not exists internal.organization (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "active" jsonb,
  "address" jsonb,
  "address-city" jsonb,
  "address-country" jsonb,
  "address-postalcode" jsonb,
  "address-state" jsonb,
  "address-use" jsonb,
  "endpoint" jsonb,
  "identifier" jsonb,
  "name" jsonb,
  "partof" jsonb,
  "phonetic" jsonb,
  "type" jsonb
);

create table if not exists internal.organizationaffiliation (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "active" jsonb,
  "date" jsonb,
  "email" jsonb,
  "endpoint" jsonb,
  "identifier" jsonb,
  "location" jsonb,
  "network" jsonb,
  "participating-organization" jsonb,
  "phone" jsonb,
  "primary-organization" jsonb,
  "role" jsonb,
  "service" jsonb,
  "specialty" jsonb,
  "telecom" jsonb
);

create table if not exists internal.packagedproductdefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "biological" jsonb,
  "contained-item" jsonb,
  "device" jsonb,
  "identifier" jsonb,
  "manufactured-item" jsonb,
  "medication" jsonb,
  "name" jsonb,
  "nutrition" jsonb,
  "package" jsonb,
  "package-for" jsonb,
  "status" jsonb
);

create table if not exists internal.patient (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "active" jsonb,
  "address" jsonb,
  "address-city" jsonb,
  "address-country" jsonb,
  "address-postalcode" jsonb,
  "address-state" jsonb,
  "address-use" jsonb,
  "birthdate" jsonb,
  "death-date" jsonb,
  "deceased" jsonb,
  "email" jsonb,
  "family" jsonb,
  "gender" jsonb,
  "general-practitioner" jsonb,
  "given" jsonb,
  "identifier" jsonb,
  "language" jsonb,
  "link" jsonb,
  "name" jsonb,
  "organization" jsonb,
  "phone" jsonb,
  "phonetic" jsonb,
  "telecom" jsonb
);

create table if not exists internal.person (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "address" jsonb,
  "address-city" jsonb,
  "address-country" jsonb,
  "address-postalcode" jsonb,
  "address-state" jsonb,
  "address-use" jsonb,
  "birthdate" jsonb,
  "email" jsonb,
  "gender" jsonb,
  "phone" jsonb,
  "phonetic" jsonb,
  "telecom" jsonb,
  "identifier" jsonb,
  "link" jsonb,
  "name" jsonb,
  "organization" jsonb,
  "patient" jsonb,
  "practitioner" jsonb,
  "relatedperson" jsonb
);

create table if not exists internal.practitioner (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "address" jsonb,
  "address-city" jsonb,
  "address-country" jsonb,
  "address-postalcode" jsonb,
  "address-state" jsonb,
  "address-use" jsonb,
  "email" jsonb,
  "family" jsonb,
  "gender" jsonb,
  "given" jsonb,
  "phone" jsonb,
  "phonetic" jsonb,
  "telecom" jsonb,
  "active" jsonb,
  "communication" jsonb,
  "identifier" jsonb,
  "name" jsonb
);

create table if not exists internal.relatedperson (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "address" jsonb,
  "address-city" jsonb,
  "address-country" jsonb,
  "address-postalcode" jsonb,
  "address-state" jsonb,
  "address-use" jsonb,
  "birthdate" jsonb,
  "email" jsonb,
  "gender" jsonb,
  "phone" jsonb,
  "phonetic" jsonb,
  "telecom" jsonb,
  "active" jsonb,
  "identifier" jsonb,
  "name" jsonb,
  "patient" jsonb,
  "relationship" jsonb
);

create table if not exists internal.practitionerrole (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "email" jsonb,
  "phone" jsonb,
  "telecom" jsonb,
  "active" jsonb,
  "date" jsonb,
  "endpoint" jsonb,
  "identifier" jsonb,
  "location" jsonb,
  "organization" jsonb,
  "practitioner" jsonb,
  "role" jsonb,
  "service" jsonb,
  "specialty" jsonb
);

create table if not exists internal.paymentnotice (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "created" jsonb,
  "identifier" jsonb,
  "payment-status" jsonb,
  "provider" jsonb,
  "request" jsonb,
  "response" jsonb,
  "status" jsonb
);

create table if not exists internal.paymentreconciliation (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "created" jsonb,
  "disposition" jsonb,
  "identifier" jsonb,
  "outcome" jsonb,
  "payment-issuer" jsonb,
  "request" jsonb,
  "requestor" jsonb,
  "status" jsonb
);

create table if not exists internal.plandefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "composed-of" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "date" jsonb,
  "definition" jsonb,
  "depends-on" jsonb,
  "derived-from" jsonb,
  "description" jsonb,
  "effective" jsonb,
  "identifier" jsonb,
  "jurisdiction" jsonb,
  "name" jsonb,
  "predecessor" jsonb,
  "publisher" jsonb,
  "status" jsonb,
  "successor" jsonb,
  "title" jsonb,
  "topic" jsonb,
  "type" jsonb,
  "url" jsonb,
  "version" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb
);

create table if not exists internal.provenance (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "agent" jsonb,
  "agent-role" jsonb,
  "agent-type" jsonb,
  "entity" jsonb,
  "location" jsonb,
  "patient" jsonb,
  "recorded" jsonb,
  "signature-type" jsonb,
  "target" jsonb,
  "when" jsonb
);

create table if not exists internal.questionnaire (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "code" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "date" jsonb,
  "definition" jsonb,
  "description" jsonb,
  "effective" jsonb,
  "identifier" jsonb,
  "jurisdiction" jsonb,
  "name" jsonb,
  "publisher" jsonb,
  "status" jsonb,
  "subject-type" jsonb,
  "title" jsonb,
  "url" jsonb,
  "version" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb
);

create table if not exists internal.questionnaireresponse (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "author" jsonb,
  "authored" jsonb,
  "based-on" jsonb,
  "encounter" jsonb,
  "identifier" jsonb,
  "part-of" jsonb,
  "patient" jsonb,
  "questionnaire" jsonb,
  "source" jsonb,
  "status" jsonb,
  "subject" jsonb
);

create table if not exists internal.regulatedauthorization (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "case" jsonb,
  "case-type" jsonb,
  "holder" jsonb,
  "identifier" jsonb,
  "region" jsonb,
  "status" jsonb,
  "subject" jsonb
);

create table if not exists internal.requestgroup (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "author" jsonb,
  "authored" jsonb,
  "code" jsonb,
  "encounter" jsonb,
  "group-identifier" jsonb,
  "identifier" jsonb,
  "instantiates-canonical" jsonb,
  "instantiates-uri" jsonb,
  "intent" jsonb,
  "participant" jsonb,
  "patient" jsonb,
  "priority" jsonb,
  "status" jsonb,
  "subject" jsonb
);

create table if not exists internal.researchdefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "composed-of" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "date" jsonb,
  "depends-on" jsonb,
  "derived-from" jsonb,
  "description" jsonb,
  "effective" jsonb,
  "identifier" jsonb,
  "jurisdiction" jsonb,
  "name" jsonb,
  "predecessor" jsonb,
  "publisher" jsonb,
  "status" jsonb,
  "successor" jsonb,
  "title" jsonb,
  "topic" jsonb,
  "url" jsonb,
  "version" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb
);

create table if not exists internal.researchelementdefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "composed-of" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "date" jsonb,
  "depends-on" jsonb,
  "derived-from" jsonb,
  "description" jsonb,
  "effective" jsonb,
  "identifier" jsonb,
  "jurisdiction" jsonb,
  "name" jsonb,
  "predecessor" jsonb,
  "publisher" jsonb,
  "status" jsonb,
  "successor" jsonb,
  "title" jsonb,
  "topic" jsonb,
  "url" jsonb,
  "version" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb
);

create table if not exists internal.researchstudy (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "category" jsonb,
  "date" jsonb,
  "focus" jsonb,
  "identifier" jsonb,
  "keyword" jsonb,
  "location" jsonb,
  "partof" jsonb,
  "principalinvestigator" jsonb,
  "protocol" jsonb,
  "site" jsonb,
  "sponsor" jsonb,
  "status" jsonb,
  "title" jsonb
);

create table if not exists internal.researchsubject (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "date" jsonb,
  "identifier" jsonb,
  "individual" jsonb,
  "patient" jsonb,
  "status" jsonb,
  "study" jsonb
);

create table if not exists internal.schedule (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "active" jsonb,
  "actor" jsonb,
  "date" jsonb,
  "identifier" jsonb,
  "service-category" jsonb,
  "service-type" jsonb,
  "specialty" jsonb
);

create table if not exists internal.slot (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "appointment-type" jsonb,
  "identifier" jsonb,
  "schedule" jsonb,
  "service-category" jsonb,
  "service-type" jsonb,
  "specialty" jsonb,
  "start" jsonb,
  "status" jsonb
);

create table if not exists internal.specimen (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "accession" jsonb,
  "bodysite" jsonb,
  "collected" jsonb,
  "collector" jsonb,
  "container" jsonb,
  "container-id" jsonb,
  "identifier" jsonb,
  "parent" jsonb,
  "patient" jsonb,
  "status" jsonb,
  "subject" jsonb,
  "type" jsonb
);

create table if not exists internal.specimendefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "container" jsonb,
  "identifier" jsonb,
  "type" jsonb
);

create table if not exists internal.subscription (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "contact" jsonb,
  "criteria" jsonb,
  "payload" jsonb,
  "status" jsonb,
  "type" jsonb,
  "url" jsonb
);

create table if not exists internal.subscriptiontopic (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "date" jsonb,
  "derived-or-self" jsonb,
  "identifier" jsonb,
  "resource" jsonb,
  "status" jsonb,
  "title" jsonb,
  "trigger-description" jsonb,
  "url" jsonb,
  "version" jsonb
);

create table if not exists internal.substance (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "category" jsonb,
  "code" jsonb,
  "container-identifier" jsonb,
  "expiry" jsonb,
  "identifier" jsonb,
  "quantity" jsonb,
  "status" jsonb,
  "substance-reference" jsonb
);

create table if not exists internal.substancedefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "classification" jsonb,
  "code" jsonb,
  "domain" jsonb,
  "identifier" jsonb,
  "name" jsonb
);

create table if not exists internal.task (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "authored-on" jsonb,
  "based-on" jsonb,
  "business-status" jsonb,
  "code" jsonb,
  "encounter" jsonb,
  "focus" jsonb,
  "group-identifier" jsonb,
  "identifier" jsonb,
  "intent" jsonb,
  "modified" jsonb,
  "owner" jsonb,
  "part-of" jsonb,
  "patient" jsonb,
  "performer" jsonb,
  "period" jsonb,
  "priority" jsonb,
  "requester" jsonb,
  "status" jsonb,
  "subject" jsonb
);

create table if not exists internal.testreport (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "identifier" jsonb,
  "issued" jsonb,
  "participant" jsonb,
  "result" jsonb,
  "tester" jsonb,
  "testscript" jsonb
);

create table if not exists internal.testscript (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "context" jsonb,
  "context-quantity" jsonb,
  "context-type" jsonb,
  "date" jsonb,
  "description" jsonb,
  "identifier" jsonb,
  "jurisdiction" jsonb,
  "name" jsonb,
  "publisher" jsonb,
  "status" jsonb,
  "testscript-capability" jsonb,
  "title" jsonb,
  "url" jsonb,
  "version" jsonb,
  "context-type-quantity" jsonb,
  "context-type-value" jsonb
);

create table if not exists internal.verificationresult (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  "_content" jsonb,
  "_filter" jsonb,
  "_has" jsonb,
  "_id" jsonb,
  "_lastUpdated" jsonb,
  "_list" jsonb,
  "_profile" jsonb,
  "_query" jsonb,
  "_security" jsonb,
  "_source" jsonb,
  "_tag" jsonb,
  "_text" jsonb,
  "_type" jsonb,
  "target" jsonb
);