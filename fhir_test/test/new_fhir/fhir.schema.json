{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "id": "http://hl7.org/fhir/json-schema/5.0",
  "description": "see http://hl7.org/fhir/json.html#schema for information about the FHIR Json Schemas",
  "discriminator": {
    "propertyName": "resourceType",
    "mapping": {
      "Account": "#/definitions/Account",
      "ActivityDefinition": "#/definitions/ActivityDefinition",
      "ActorDefinition": "#/definitions/ActorDefinition",
      "AdministrableProductDefinition": "#/definitions/AdministrableProductDefinition",
      "AdverseEvent": "#/definitions/AdverseEvent",
      "AllergyIntolerance": "#/definitions/AllergyIntolerance",
      "Appointment": "#/definitions/Appointment",
      "AppointmentResponse": "#/definitions/AppointmentResponse",
      "ArtifactAssessment": "#/definitions/ArtifactAssessment",
      "AuditEvent": "#/definitions/AuditEvent",
      "Basic": "#/definitions/Basic",
      "Binary": "#/definitions/Binary",
      "BiologicallyDerivedProduct": "#/definitions/BiologicallyDerivedProduct",
      "BodyStructure": "#/definitions/BodyStructure",
      "Bundle": "#/definitions/Bundle",
      "CapabilityStatement": "#/definitions/CapabilityStatement",
      "CarePlan": "#/definitions/CarePlan",
      "CareTeam": "#/definitions/CareTeam",
      "ChargeItem": "#/definitions/ChargeItem",
      "ChargeItemDefinition": "#/definitions/ChargeItemDefinition",
      "Citation": "#/definitions/Citation",
      "Claim": "#/definitions/Claim",
      "ClaimResponse": "#/definitions/ClaimResponse",
      "ClinicalImpression": "#/definitions/ClinicalImpression",
      "ClinicalUseDefinition": "#/definitions/ClinicalUseDefinition",
      "CodeSystem": "#/definitions/CodeSystem",
      "Communication": "#/definitions/Communication",
      "CommunicationRequest": "#/definitions/CommunicationRequest",
      "CompartmentDefinition": "#/definitions/CompartmentDefinition",
      "Composition": "#/definitions/Composition",
      "ConceptMap": "#/definitions/ConceptMap",
      "Condition": "#/definitions/Condition",
      "ConditionDefinition": "#/definitions/ConditionDefinition",
      "Consent": "#/definitions/Consent",
      "Contract": "#/definitions/Contract",
      "Coverage": "#/definitions/Coverage",
      "CoverageEligibilityRequest": "#/definitions/CoverageEligibilityRequest",
      "CoverageEligibilityResponse": "#/definitions/CoverageEligibilityResponse",
      "DetectedIssue": "#/definitions/DetectedIssue",
      "Device": "#/definitions/Device",
      "DeviceDefinition": "#/definitions/DeviceDefinition",
      "DeviceDispense": "#/definitions/DeviceDispense",
      "DeviceMetric": "#/definitions/DeviceMetric",
      "DeviceRequest": "#/definitions/DeviceRequest",
      "DeviceUsage": "#/definitions/DeviceUsage",
      "DiagnosticReport": "#/definitions/DiagnosticReport",
      "DocumentManifest": "#/definitions/DocumentManifest",
      "DocumentReference": "#/definitions/DocumentReference",
      "Encounter": "#/definitions/Encounter",
      "Endpoint": "#/definitions/Endpoint",
      "EnrollmentRequest": "#/definitions/EnrollmentRequest",
      "EnrollmentResponse": "#/definitions/EnrollmentResponse",
      "EpisodeOfCare": "#/definitions/EpisodeOfCare",
      "EventDefinition": "#/definitions/EventDefinition",
      "Evidence": "#/definitions/Evidence",
      "EvidenceReport": "#/definitions/EvidenceReport",
      "EvidenceVariable": "#/definitions/EvidenceVariable",
      "ExampleScenario": "#/definitions/ExampleScenario",
      "ExplanationOfBenefit": "#/definitions/ExplanationOfBenefit",
      "FamilyMemberHistory": "#/definitions/FamilyMemberHistory",
      "Flag": "#/definitions/Flag",
      "FormularyItem": "#/definitions/FormularyItem",
      "GenomicStudy": "#/definitions/GenomicStudy",
      "Goal": "#/definitions/Goal",
      "GraphDefinition": "#/definitions/GraphDefinition",
      "Group": "#/definitions/Group",
      "GuidanceResponse": "#/definitions/GuidanceResponse",
      "HealthcareService": "#/definitions/HealthcareService",
      "ImagingSelection": "#/definitions/ImagingSelection",
      "ImagingStudy": "#/definitions/ImagingStudy",
      "Immunization": "#/definitions/Immunization",
      "ImmunizationEvaluation": "#/definitions/ImmunizationEvaluation",
      "ImmunizationRecommendation": "#/definitions/ImmunizationRecommendation",
      "ImplementationGuide": "#/definitions/ImplementationGuide",
      "Ingredient": "#/definitions/Ingredient",
      "InsurancePlan": "#/definitions/InsurancePlan",
      "InventoryReport": "#/definitions/InventoryReport",
      "Invoice": "#/definitions/Invoice",
      "Library": "#/definitions/Library",
      "Linkage": "#/definitions/Linkage",
      "List": "#/definitions/List",
      "Location": "#/definitions/Location",
      "ManufacturedItemDefinition": "#/definitions/ManufacturedItemDefinition",
      "Measure": "#/definitions/Measure",
      "MeasureReport": "#/definitions/MeasureReport",
      "Medication": "#/definitions/Medication",
      "MedicationAdministration": "#/definitions/MedicationAdministration",
      "MedicationDispense": "#/definitions/MedicationDispense",
      "MedicationKnowledge": "#/definitions/MedicationKnowledge",
      "MedicationRequest": "#/definitions/MedicationRequest",
      "MedicationUsage": "#/definitions/MedicationUsage",
      "MedicinalProductDefinition": "#/definitions/MedicinalProductDefinition",
      "MessageDefinition": "#/definitions/MessageDefinition",
      "MessageHeader": "#/definitions/MessageHeader",
      "MolecularSequence": "#/definitions/MolecularSequence",
      "NamingSystem": "#/definitions/NamingSystem",
      "NutritionIntake": "#/definitions/NutritionIntake",
      "NutritionOrder": "#/definitions/NutritionOrder",
      "NutritionProduct": "#/definitions/NutritionProduct",
      "Observation": "#/definitions/Observation",
      "ObservationDefinition": "#/definitions/ObservationDefinition",
      "OperationDefinition": "#/definitions/OperationDefinition",
      "OperationOutcome": "#/definitions/OperationOutcome",
      "Organization": "#/definitions/Organization",
      "OrganizationAffiliation": "#/definitions/OrganizationAffiliation",
      "PackagedProductDefinition": "#/definitions/PackagedProductDefinition",
      "Parameters": "#/definitions/Parameters",
      "Patient": "#/definitions/Patient",
      "PaymentNotice": "#/definitions/PaymentNotice",
      "PaymentReconciliation": "#/definitions/PaymentReconciliation",
      "Permission": "#/definitions/Permission",
      "Person": "#/definitions/Person",
      "PlanDefinition": "#/definitions/PlanDefinition",
      "Practitioner": "#/definitions/Practitioner",
      "PractitionerRole": "#/definitions/PractitionerRole",
      "Procedure": "#/definitions/Procedure",
      "Provenance": "#/definitions/Provenance",
      "Questionnaire": "#/definitions/Questionnaire",
      "QuestionnaireResponse": "#/definitions/QuestionnaireResponse",
      "RegulatedAuthorization": "#/definitions/RegulatedAuthorization",
      "RelatedPerson": "#/definitions/RelatedPerson",
      "RequestOrchestration": "#/definitions/RequestOrchestration",
      "Requirements": "#/definitions/Requirements",
      "ResearchStudy": "#/definitions/ResearchStudy",
      "ResearchSubject": "#/definitions/ResearchSubject",
      "RiskAssessment": "#/definitions/RiskAssessment",
      "Schedule": "#/definitions/Schedule",
      "SearchParameter": "#/definitions/SearchParameter",
      "ServiceRequest": "#/definitions/ServiceRequest",
      "Slot": "#/definitions/Slot",
      "Specimen": "#/definitions/Specimen",
      "SpecimenDefinition": "#/definitions/SpecimenDefinition",
      "StructureDefinition": "#/definitions/StructureDefinition",
      "StructureMap": "#/definitions/StructureMap",
      "Subscription": "#/definitions/Subscription",
      "SubscriptionStatus": "#/definitions/SubscriptionStatus",
      "SubscriptionTopic": "#/definitions/SubscriptionTopic",
      "Substance": "#/definitions/Substance",
      "SubstanceDefinition": "#/definitions/SubstanceDefinition",
      "SubstanceNucleicAcid": "#/definitions/SubstanceNucleicAcid",
      "SubstancePolymer": "#/definitions/SubstancePolymer",
      "SubstanceProtein": "#/definitions/SubstanceProtein",
      "SubstanceReferenceInformation": "#/definitions/SubstanceReferenceInformation",
      "SubstanceSourceMaterial": "#/definitions/SubstanceSourceMaterial",
      "SupplyDelivery": "#/definitions/SupplyDelivery",
      "SupplyRequest": "#/definitions/SupplyRequest",
      "Task": "#/definitions/Task",
      "TerminologyCapabilities": "#/definitions/TerminologyCapabilities",
      "TestReport": "#/definitions/TestReport",
      "TestScript": "#/definitions/TestScript",
      "Transport": "#/definitions/Transport",
      "ValueSet": "#/definitions/ValueSet",
      "VerificationResult": "#/definitions/VerificationResult",
      "VisionPrescription": "#/definitions/VisionPrescription"
    }
  },
  "oneOf": [
    {
      "$ref": "#/definitions/Account"
    },
    {
      "$ref": "#/definitions/ActivityDefinition"
    },
    {
      "$ref": "#/definitions/ActorDefinition"
    },
    {
      "$ref": "#/definitions/AdministrableProductDefinition"
    },
    {
      "$ref": "#/definitions/AdverseEvent"
    },
    {
      "$ref": "#/definitions/AllergyIntolerance"
    },
    {
      "$ref": "#/definitions/Appointment"
    },
    {
      "$ref": "#/definitions/AppointmentResponse"
    },
    {
      "$ref": "#/definitions/ArtifactAssessment"
    },
    {
      "$ref": "#/definitions/AuditEvent"
    },
    {
      "$ref": "#/definitions/Basic"
    },
    {
      "$ref": "#/definitions/Binary"
    },
    {
      "$ref": "#/definitions/BiologicallyDerivedProduct"
    },
    {
      "$ref": "#/definitions/BodyStructure"
    },
    {
      "$ref": "#/definitions/Bundle"
    },
    {
      "$ref": "#/definitions/CapabilityStatement"
    },
    {
      "$ref": "#/definitions/CarePlan"
    },
    {
      "$ref": "#/definitions/CareTeam"
    },
    {
      "$ref": "#/definitions/ChargeItem"
    },
    {
      "$ref": "#/definitions/ChargeItemDefinition"
    },
    {
      "$ref": "#/definitions/Citation"
    },
    {
      "$ref": "#/definitions/Claim"
    },
    {
      "$ref": "#/definitions/ClaimResponse"
    },
    {
      "$ref": "#/definitions/ClinicalImpression"
    },
    {
      "$ref": "#/definitions/ClinicalUseDefinition"
    },
    {
      "$ref": "#/definitions/CodeSystem"
    },
    {
      "$ref": "#/definitions/Communication"
    },
    {
      "$ref": "#/definitions/CommunicationRequest"
    },
    {
      "$ref": "#/definitions/CompartmentDefinition"
    },
    {
      "$ref": "#/definitions/Composition"
    },
    {
      "$ref": "#/definitions/ConceptMap"
    },
    {
      "$ref": "#/definitions/Condition"
    },
    {
      "$ref": "#/definitions/ConditionDefinition"
    },
    {
      "$ref": "#/definitions/Consent"
    },
    {
      "$ref": "#/definitions/Contract"
    },
    {
      "$ref": "#/definitions/Coverage"
    },
    {
      "$ref": "#/definitions/CoverageEligibilityRequest"
    },
    {
      "$ref": "#/definitions/CoverageEligibilityResponse"
    },
    {
      "$ref": "#/definitions/DetectedIssue"
    },
    {
      "$ref": "#/definitions/Device"
    },
    {
      "$ref": "#/definitions/DeviceDefinition"
    },
    {
      "$ref": "#/definitions/DeviceDispense"
    },
    {
      "$ref": "#/definitions/DeviceMetric"
    },
    {
      "$ref": "#/definitions/DeviceRequest"
    },
    {
      "$ref": "#/definitions/DeviceUsage"
    },
    {
      "$ref": "#/definitions/DiagnosticReport"
    },
    {
      "$ref": "#/definitions/DocumentManifest"
    },
    {
      "$ref": "#/definitions/DocumentReference"
    },
    {
      "$ref": "#/definitions/Encounter"
    },
    {
      "$ref": "#/definitions/Endpoint"
    },
    {
      "$ref": "#/definitions/EnrollmentRequest"
    },
    {
      "$ref": "#/definitions/EnrollmentResponse"
    },
    {
      "$ref": "#/definitions/EpisodeOfCare"
    },
    {
      "$ref": "#/definitions/EventDefinition"
    },
    {
      "$ref": "#/definitions/Evidence"
    },
    {
      "$ref": "#/definitions/EvidenceReport"
    },
    {
      "$ref": "#/definitions/EvidenceVariable"
    },
    {
      "$ref": "#/definitions/ExampleScenario"
    },
    {
      "$ref": "#/definitions/ExplanationOfBenefit"
    },
    {
      "$ref": "#/definitions/FamilyMemberHistory"
    },
    {
      "$ref": "#/definitions/Flag"
    },
    {
      "$ref": "#/definitions/FormularyItem"
    },
    {
      "$ref": "#/definitions/GenomicStudy"
    },
    {
      "$ref": "#/definitions/Goal"
    },
    {
      "$ref": "#/definitions/GraphDefinition"
    },
    {
      "$ref": "#/definitions/Group"
    },
    {
      "$ref": "#/definitions/GuidanceResponse"
    },
    {
      "$ref": "#/definitions/HealthcareService"
    },
    {
      "$ref": "#/definitions/ImagingSelection"
    },
    {
      "$ref": "#/definitions/ImagingStudy"
    },
    {
      "$ref": "#/definitions/Immunization"
    },
    {
      "$ref": "#/definitions/ImmunizationEvaluation"
    },
    {
      "$ref": "#/definitions/ImmunizationRecommendation"
    },
    {
      "$ref": "#/definitions/ImplementationGuide"
    },
    {
      "$ref": "#/definitions/Ingredient"
    },
    {
      "$ref": "#/definitions/InsurancePlan"
    },
    {
      "$ref": "#/definitions/InventoryReport"
    },
    {
      "$ref": "#/definitions/Invoice"
    },
    {
      "$ref": "#/definitions/Library"
    },
    {
      "$ref": "#/definitions/Linkage"
    },
    {
      "$ref": "#/definitions/List"
    },
    {
      "$ref": "#/definitions/Location"
    },
    {
      "$ref": "#/definitions/ManufacturedItemDefinition"
    },
    {
      "$ref": "#/definitions/Measure"
    },
    {
      "$ref": "#/definitions/MeasureReport"
    },
    {
      "$ref": "#/definitions/Medication"
    },
    {
      "$ref": "#/definitions/MedicationAdministration"
    },
    {
      "$ref": "#/definitions/MedicationDispense"
    },
    {
      "$ref": "#/definitions/MedicationKnowledge"
    },
    {
      "$ref": "#/definitions/MedicationRequest"
    },
    {
      "$ref": "#/definitions/MedicationUsage"
    },
    {
      "$ref": "#/definitions/MedicinalProductDefinition"
    },
    {
      "$ref": "#/definitions/MessageDefinition"
    },
    {
      "$ref": "#/definitions/MessageHeader"
    },
    {
      "$ref": "#/definitions/MolecularSequence"
    },
    {
      "$ref": "#/definitions/NamingSystem"
    },
    {
      "$ref": "#/definitions/NutritionIntake"
    },
    {
      "$ref": "#/definitions/NutritionOrder"
    },
    {
      "$ref": "#/definitions/NutritionProduct"
    },
    {
      "$ref": "#/definitions/Observation"
    },
    {
      "$ref": "#/definitions/ObservationDefinition"
    },
    {
      "$ref": "#/definitions/OperationDefinition"
    },
    {
      "$ref": "#/definitions/OperationOutcome"
    },
    {
      "$ref": "#/definitions/Organization"
    },
    {
      "$ref": "#/definitions/OrganizationAffiliation"
    },
    {
      "$ref": "#/definitions/PackagedProductDefinition"
    },
    {
      "$ref": "#/definitions/Parameters"
    },
    {
      "$ref": "#/definitions/Patient"
    },
    {
      "$ref": "#/definitions/PaymentNotice"
    },
    {
      "$ref": "#/definitions/PaymentReconciliation"
    },
    {
      "$ref": "#/definitions/Permission"
    },
    {
      "$ref": "#/definitions/Person"
    },
    {
      "$ref": "#/definitions/PlanDefinition"
    },
    {
      "$ref": "#/definitions/Practitioner"
    },
    {
      "$ref": "#/definitions/PractitionerRole"
    },
    {
      "$ref": "#/definitions/Procedure"
    },
    {
      "$ref": "#/definitions/Provenance"
    },
    {
      "$ref": "#/definitions/Questionnaire"
    },
    {
      "$ref": "#/definitions/QuestionnaireResponse"
    },
    {
      "$ref": "#/definitions/RegulatedAuthorization"
    },
    {
      "$ref": "#/definitions/RelatedPerson"
    },
    {
      "$ref": "#/definitions/RequestOrchestration"
    },
    {
      "$ref": "#/definitions/Requirements"
    },
    {
      "$ref": "#/definitions/ResearchStudy"
    },
    {
      "$ref": "#/definitions/ResearchSubject"
    },
    {
      "$ref": "#/definitions/RiskAssessment"
    },
    {
      "$ref": "#/definitions/Schedule"
    },
    {
      "$ref": "#/definitions/SearchParameter"
    },
    {
      "$ref": "#/definitions/ServiceRequest"
    },
    {
      "$ref": "#/definitions/Slot"
    },
    {
      "$ref": "#/definitions/Specimen"
    },
    {
      "$ref": "#/definitions/SpecimenDefinition"
    },
    {
      "$ref": "#/definitions/StructureDefinition"
    },
    {
      "$ref": "#/definitions/StructureMap"
    },
    {
      "$ref": "#/definitions/Subscription"
    },
    {
      "$ref": "#/definitions/SubscriptionStatus"
    },
    {
      "$ref": "#/definitions/SubscriptionTopic"
    },
    {
      "$ref": "#/definitions/Substance"
    },
    {
      "$ref": "#/definitions/SubstanceDefinition"
    },
    {
      "$ref": "#/definitions/SubstanceNucleicAcid"
    },
    {
      "$ref": "#/definitions/SubstancePolymer"
    },
    {
      "$ref": "#/definitions/SubstanceProtein"
    },
    {
      "$ref": "#/definitions/SubstanceReferenceInformation"
    },
    {
      "$ref": "#/definitions/SubstanceSourceMaterial"
    },
    {
      "$ref": "#/definitions/SupplyDelivery"
    },
    {
      "$ref": "#/definitions/SupplyRequest"
    },
    {
      "$ref": "#/definitions/Task"
    },
    {
      "$ref": "#/definitions/TerminologyCapabilities"
    },
    {
      "$ref": "#/definitions/TestReport"
    },
    {
      "$ref": "#/definitions/TestScript"
    },
    {
      "$ref": "#/definitions/Transport"
    },
    {
      "$ref": "#/definitions/ValueSet"
    },
    {
      "$ref": "#/definitions/VerificationResult"
    },
    {
      "$ref": "#/definitions/VisionPrescription"
    }
  ],
  "definitions": {
    "ResourceList": {
      "oneOf": [
        {
          "$ref": "#/definitions/Account"
        },
        {
          "$ref": "#/definitions/ActivityDefinition"
        },
        {
          "$ref": "#/definitions/ActorDefinition"
        },
        {
          "$ref": "#/definitions/AdministrableProductDefinition"
        },
        {
          "$ref": "#/definitions/AdverseEvent"
        },
        {
          "$ref": "#/definitions/AllergyIntolerance"
        },
        {
          "$ref": "#/definitions/Appointment"
        },
        {
          "$ref": "#/definitions/AppointmentResponse"
        },
        {
          "$ref": "#/definitions/ArtifactAssessment"
        },
        {
          "$ref": "#/definitions/AuditEvent"
        },
        {
          "$ref": "#/definitions/Basic"
        },
        {
          "$ref": "#/definitions/Binary"
        },
        {
          "$ref": "#/definitions/BiologicallyDerivedProduct"
        },
        {
          "$ref": "#/definitions/BodyStructure"
        },
        {
          "$ref": "#/definitions/Bundle"
        },
        {
          "$ref": "#/definitions/CapabilityStatement"
        },
        {
          "$ref": "#/definitions/CarePlan"
        },
        {
          "$ref": "#/definitions/CareTeam"
        },
        {
          "$ref": "#/definitions/ChargeItem"
        },
        {
          "$ref": "#/definitions/ChargeItemDefinition"
        },
        {
          "$ref": "#/definitions/Citation"
        },
        {
          "$ref": "#/definitions/Claim"
        },
        {
          "$ref": "#/definitions/ClaimResponse"
        },
        {
          "$ref": "#/definitions/ClinicalImpression"
        },
        {
          "$ref": "#/definitions/ClinicalUseDefinition"
        },
        {
          "$ref": "#/definitions/CodeSystem"
        },
        {
          "$ref": "#/definitions/Communication"
        },
        {
          "$ref": "#/definitions/CommunicationRequest"
        },
        {
          "$ref": "#/definitions/CompartmentDefinition"
        },
        {
          "$ref": "#/definitions/Composition"
        },
        {
          "$ref": "#/definitions/ConceptMap"
        },
        {
          "$ref": "#/definitions/Condition"
        },
        {
          "$ref": "#/definitions/ConditionDefinition"
        },
        {
          "$ref": "#/definitions/Consent"
        },
        {
          "$ref": "#/definitions/Contract"
        },
        {
          "$ref": "#/definitions/Coverage"
        },
        {
          "$ref": "#/definitions/CoverageEligibilityRequest"
        },
        {
          "$ref": "#/definitions/CoverageEligibilityResponse"
        },
        {
          "$ref": "#/definitions/DetectedIssue"
        },
        {
          "$ref": "#/definitions/Device"
        },
        {
          "$ref": "#/definitions/DeviceDefinition"
        },
        {
          "$ref": "#/definitions/DeviceDispense"
        },
        {
          "$ref": "#/definitions/DeviceMetric"
        },
        {
          "$ref": "#/definitions/DeviceRequest"
        },
        {
          "$ref": "#/definitions/DeviceUsage"
        },
        {
          "$ref": "#/definitions/DiagnosticReport"
        },
        {
          "$ref": "#/definitions/DocumentManifest"
        },
        {
          "$ref": "#/definitions/DocumentReference"
        },
        {
          "$ref": "#/definitions/Encounter"
        },
        {
          "$ref": "#/definitions/Endpoint"
        },
        {
          "$ref": "#/definitions/EnrollmentRequest"
        },
        {
          "$ref": "#/definitions/EnrollmentResponse"
        },
        {
          "$ref": "#/definitions/EpisodeOfCare"
        },
        {
          "$ref": "#/definitions/EventDefinition"
        },
        {
          "$ref": "#/definitions/Evidence"
        },
        {
          "$ref": "#/definitions/EvidenceReport"
        },
        {
          "$ref": "#/definitions/EvidenceVariable"
        },
        {
          "$ref": "#/definitions/ExampleScenario"
        },
        {
          "$ref": "#/definitions/ExplanationOfBenefit"
        },
        {
          "$ref": "#/definitions/FamilyMemberHistory"
        },
        {
          "$ref": "#/definitions/Flag"
        },
        {
          "$ref": "#/definitions/FormularyItem"
        },
        {
          "$ref": "#/definitions/GenomicStudy"
        },
        {
          "$ref": "#/definitions/Goal"
        },
        {
          "$ref": "#/definitions/GraphDefinition"
        },
        {
          "$ref": "#/definitions/Group"
        },
        {
          "$ref": "#/definitions/GuidanceResponse"
        },
        {
          "$ref": "#/definitions/HealthcareService"
        },
        {
          "$ref": "#/definitions/ImagingSelection"
        },
        {
          "$ref": "#/definitions/ImagingStudy"
        },
        {
          "$ref": "#/definitions/Immunization"
        },
        {
          "$ref": "#/definitions/ImmunizationEvaluation"
        },
        {
          "$ref": "#/definitions/ImmunizationRecommendation"
        },
        {
          "$ref": "#/definitions/ImplementationGuide"
        },
        {
          "$ref": "#/definitions/Ingredient"
        },
        {
          "$ref": "#/definitions/InsurancePlan"
        },
        {
          "$ref": "#/definitions/InventoryReport"
        },
        {
          "$ref": "#/definitions/Invoice"
        },
        {
          "$ref": "#/definitions/Library"
        },
        {
          "$ref": "#/definitions/Linkage"
        },
        {
          "$ref": "#/definitions/List"
        },
        {
          "$ref": "#/definitions/Location"
        },
        {
          "$ref": "#/definitions/ManufacturedItemDefinition"
        },
        {
          "$ref": "#/definitions/Measure"
        },
        {
          "$ref": "#/definitions/MeasureReport"
        },
        {
          "$ref": "#/definitions/Medication"
        },
        {
          "$ref": "#/definitions/MedicationAdministration"
        },
        {
          "$ref": "#/definitions/MedicationDispense"
        },
        {
          "$ref": "#/definitions/MedicationKnowledge"
        },
        {
          "$ref": "#/definitions/MedicationRequest"
        },
        {
          "$ref": "#/definitions/MedicationUsage"
        },
        {
          "$ref": "#/definitions/MedicinalProductDefinition"
        },
        {
          "$ref": "#/definitions/MessageDefinition"
        },
        {
          "$ref": "#/definitions/MessageHeader"
        },
        {
          "$ref": "#/definitions/MolecularSequence"
        },
        {
          "$ref": "#/definitions/NamingSystem"
        },
        {
          "$ref": "#/definitions/NutritionIntake"
        },
        {
          "$ref": "#/definitions/NutritionOrder"
        },
        {
          "$ref": "#/definitions/NutritionProduct"
        },
        {
          "$ref": "#/definitions/Observation"
        },
        {
          "$ref": "#/definitions/ObservationDefinition"
        },
        {
          "$ref": "#/definitions/OperationDefinition"
        },
        {
          "$ref": "#/definitions/OperationOutcome"
        },
        {
          "$ref": "#/definitions/Organization"
        },
        {
          "$ref": "#/definitions/OrganizationAffiliation"
        },
        {
          "$ref": "#/definitions/PackagedProductDefinition"
        },
        {
          "$ref": "#/definitions/Parameters"
        },
        {
          "$ref": "#/definitions/Patient"
        },
        {
          "$ref": "#/definitions/PaymentNotice"
        },
        {
          "$ref": "#/definitions/PaymentReconciliation"
        },
        {
          "$ref": "#/definitions/Permission"
        },
        {
          "$ref": "#/definitions/Person"
        },
        {
          "$ref": "#/definitions/PlanDefinition"
        },
        {
          "$ref": "#/definitions/Practitioner"
        },
        {
          "$ref": "#/definitions/PractitionerRole"
        },
        {
          "$ref": "#/definitions/Procedure"
        },
        {
          "$ref": "#/definitions/Provenance"
        },
        {
          "$ref": "#/definitions/Questionnaire"
        },
        {
          "$ref": "#/definitions/QuestionnaireResponse"
        },
        {
          "$ref": "#/definitions/RegulatedAuthorization"
        },
        {
          "$ref": "#/definitions/RelatedPerson"
        },
        {
          "$ref": "#/definitions/RequestOrchestration"
        },
        {
          "$ref": "#/definitions/Requirements"
        },
        {
          "$ref": "#/definitions/ResearchStudy"
        },
        {
          "$ref": "#/definitions/ResearchSubject"
        },
        {
          "$ref": "#/definitions/RiskAssessment"
        },
        {
          "$ref": "#/definitions/Schedule"
        },
        {
          "$ref": "#/definitions/SearchParameter"
        },
        {
          "$ref": "#/definitions/ServiceRequest"
        },
        {
          "$ref": "#/definitions/Slot"
        },
        {
          "$ref": "#/definitions/Specimen"
        },
        {
          "$ref": "#/definitions/SpecimenDefinition"
        },
        {
          "$ref": "#/definitions/StructureDefinition"
        },
        {
          "$ref": "#/definitions/StructureMap"
        },
        {
          "$ref": "#/definitions/Subscription"
        },
        {
          "$ref": "#/definitions/SubscriptionStatus"
        },
        {
          "$ref": "#/definitions/SubscriptionTopic"
        },
        {
          "$ref": "#/definitions/Substance"
        },
        {
          "$ref": "#/definitions/SubstanceDefinition"
        },
        {
          "$ref": "#/definitions/SubstanceNucleicAcid"
        },
        {
          "$ref": "#/definitions/SubstancePolymer"
        },
        {
          "$ref": "#/definitions/SubstanceProtein"
        },
        {
          "$ref": "#/definitions/SubstanceReferenceInformation"
        },
        {
          "$ref": "#/definitions/SubstanceSourceMaterial"
        },
        {
          "$ref": "#/definitions/SupplyDelivery"
        },
        {
          "$ref": "#/definitions/SupplyRequest"
        },
        {
          "$ref": "#/definitions/Task"
        },
        {
          "$ref": "#/definitions/TerminologyCapabilities"
        },
        {
          "$ref": "#/definitions/TestReport"
        },
        {
          "$ref": "#/definitions/TestScript"
        },
        {
          "$ref": "#/definitions/Transport"
        },
        {
          "$ref": "#/definitions/ValueSet"
        },
        {
          "$ref": "#/definitions/VerificationResult"
        },
        {
          "$ref": "#/definitions/VisionPrescription"
        }
      ]
    },
    "base64Binary": {
      "type": "string",
      "description": "A stream of bytes"
    },
    "boolean": {
      "pattern": "^true|false$",
      "type": "boolean",
      "description": "Value of \"true\" or \"false\""
    },
    "canonical": {
      "pattern": "^\\S*$",
      "type": "string",
      "description": "A URI that is a reference to a canonical URL on a FHIR resource"
    },
    "code": {
      "pattern": "^[^\\s]+( [^\\s]+)*$",
      "type": "string",
      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
    },
    "date": {
      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
      "type": "string",
      "description": "A date or partial date (e.g. just year or year + month). There is no UTC offset. The format is a union of the schema types gYear, gYearMonth and date.  Dates SHALL be valid dates."
    },
    "dateTime": {
      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
      "type": "string",
      "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a UTC offset SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
    },
    "decimal": {
      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
      "type": "number",
      "description": "A rational number with implicit precision"
    },
    "id": {
      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
      "type": "string",
      "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
    },
    "instant": {
      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
      "type": "string",
      "description": "An instant in time - known at least to the second"
    },
    "integer": {
      "pattern": "^-?([0]|([1-9][0-9]*))$",
      "type": "number",
      "description": "A whole number"
    },
    "integer64": {
      "pattern": "^-?([0]|([1-9][0-9]*))$",
      "type": "string",
      "description": "A very large whole number"
    },
    "markdown": {
      "pattern": "^\\s*(\\S|\\s)*$",
      "type": "string",
      "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
    },
    "oid": {
      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
      "type": "string",
      "description": "An OID represented as a URI"
    },
    "positiveInt": {
      "pattern": "^[1-9][0-9]*$",
      "type": "number",
      "description": "An integer with a value that is positive (e.g. \u003e0)"
    },
    "string": {
      "pattern": "^[ \\r\\n\\t\\S]+$",
      "type": "string",
      "description": "A sequence of Unicode characters"
    },
    "time": {
      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?$",
      "type": "string",
      "description": "A time during the day, with no date specified"
    },
    "unsignedInt": {
      "pattern": "^[0]|([1-9][0-9]*)$",
      "type": "number",
      "description": "An integer with a value that is not negative (e.g. \u003e\u003d 0)"
    },
    "uri": {
      "pattern": "^\\S*$",
      "type": "string",
      "description": "String of characters used to identify a name or a resource"
    },
    "url": {
      "pattern": "^\\S*$",
      "type": "string",
      "description": "A URI that is a literal reference"
    },
    "uuid": {
      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
      "type": "string",
      "description": "A UUID, represented as a URI"
    },
    "xhtml": {
      "description": "xhtml - escaped html (see specfication)"
    },
    "Base": {
      "description": "Base definition for all types defined in FHIR type system.",
      "properties": {},
      "type": "object",
      "additionalProperties": false
    },
    "Element": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "DataType": {
      "description": "The base class for all re-useable types defined as part of the FHIR Specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "PrimitiveType": {
      "description": "The base type for all re-useable types defined that have a simple property.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "BackboneType": {
      "description": "Base definition for the few data types that are allowed to carry modifier extensions.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Extension": {
      "description": "Optional Extension Element - found in all resources.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "Source of the definition for the extension code - a logical name or a URL.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "valueBase64Binary": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "pattern": "^\\s*([A-Za-z0-9+\\\\/]{4})*(([A-Za-z0-9+\\\\/]{2}\u003d\u003d)|([A-Za-z0-9+\\\\/]{3}\u003d)|([A-Za-z0-9+\\\\/]{4}))\\s*$",
          "type": "string"
        },
        "_valueBase64Binary": {
          "description": "Extensions for valueBase64Binary",
          "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueCanonical": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueCanonical": {
          "description": "Extensions for valueCanonical",
          "$ref": "#/definitions/Element"
        },
        "valueCode": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "pattern": "^[^\\s]+( [^\\s]+)*$",
          "type": "string"
        },
        "_valueCode": {
          "description": "Extensions for valueCode",
          "$ref": "#/definitions/Element"
        },
        "valueDate": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_valueDate": {
          "description": "Extensions for valueDate",
          "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_valueDateTime": {
          "description": "Extensions for valueDateTime",
          "$ref": "#/definitions/Element"
        },
        "valueDecimal": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_valueDecimal": {
          "description": "Extensions for valueDecimal",
          "$ref": "#/definitions/Element"
        },
        "valueId": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string"
        },
        "_valueId": {
          "description": "Extensions for valueId",
          "$ref": "#/definitions/Element"
        },
        "valueInstant": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string"
        },
        "_valueInstant": {
          "description": "Extensions for valueInstant",
          "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": {
          "description": "Extensions for valueInteger",
          "$ref": "#/definitions/Element"
        },
        "valueInteger64": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "string"
        },
        "_valueInteger64": {
          "description": "Extensions for valueInteger64",
          "$ref": "#/definitions/Element"
        },
        "valueMarkdown": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "pattern": "^\\s*(\\S|\\s)*$",
          "type": "string"
        },
        "_valueMarkdown": {
          "description": "Extensions for valueMarkdown",
          "$ref": "#/definitions/Element"
        },
        "valueOid": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
          "type": "string"
        },
        "_valueOid": {
          "description": "Extensions for valueOid",
          "$ref": "#/definitions/Element"
        },
        "valuePositiveInt": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_valuePositiveInt": {
          "description": "Extensions for valuePositiveInt",
          "$ref": "#/definitions/Element"
        },
        "valueString": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueTime": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?$",
          "type": "string"
        },
        "_valueTime": {
          "description": "Extensions for valueTime",
          "$ref": "#/definitions/Element"
        },
        "valueUnsignedInt": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_valueUnsignedInt": {
          "description": "Extensions for valueUnsignedInt",
          "$ref": "#/definitions/Element"
        },
        "valueUri": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUri": {
          "description": "Extensions for valueUri",
          "$ref": "#/definitions/Element"
        },
        "valueUrl": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUrl": {
          "description": "Extensions for valueUrl",
          "$ref": "#/definitions/Element"
        },
        "valueUuid": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
          "type": "string"
        },
        "_valueUuid": {
          "description": "Extensions for valueUuid",
          "$ref": "#/definitions/Element"
        },
        "valueAddress": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/Address"
        },
        "valueAge": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/Age"
        },
        "valueAnnotation": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/Annotation"
        },
        "valueAttachment": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/Attachment"
        },
        "valueCodeableConcept": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCodeableReference": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/CodeableReference"
        },
        "valueCoding": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/Coding"
        },
        "valueContactPoint": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/ContactPoint"
        },
        "valueCount": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/Count"
        },
        "valueDistance": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/Distance"
        },
        "valueDuration": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/Duration"
        },
        "valueHumanName": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/HumanName"
        },
        "valueIdentifier": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/Identifier"
        },
        "valueMoney": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/Money"
        },
        "valuePeriod": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/Period"
        },
        "valueQuantity": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/Range"
        },
        "valueRatio": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/Ratio"
        },
        "valueRatioRange": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/RatioRange"
        },
        "valueReference": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/Reference"
        },
        "valueSampledData": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/SampledData"
        },
        "valueSignature": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/Signature"
        },
        "valueTiming": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/Timing"
        },
        "valueContactDetail": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/ContactDetail"
        },
        "valueDataRequirement": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/DataRequirement"
        },
        "valueExpression": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/Expression"
        },
        "valueParameterDefinition": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/ParameterDefinition"
        },
        "valueRelatedArtifact": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/RelatedArtifact"
        },
        "valueTriggerDefinition": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/TriggerDefinition"
        },
        "valueUsageContext": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/UsageContext"
        },
        "valueAvailability": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/Availability"
        },
        "valueExtendedContactDetail": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/ExtendedContactDetail"
        },
        "valueDosage": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/Dosage"
        },
        "valueMeta": {
          "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
          "$ref": "#/definitions/Meta"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Narrative": {
      "description": "A human-readable summary of the resource conveying the essential clinical and business information for the resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of the narrative - whether it\u0027s entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data.",
          "enum": [
            "generated",
            "extensions",
            "additional",
            "empty"
          ]
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "div": {
          "description": "The actual narrative content, a stripped down version of XHTML.",
          "$ref": "#/definitions/xhtml"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "div"
      ]
    },
    "Annotation": {
      "description": "A  text note which also  contains information about who made the statement and when.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "authorReference": {
          "description": "The individual responsible for making the annotation.",
          "$ref": "#/definitions/Reference"
        },
        "authorString": {
          "description": "The individual responsible for making the annotation.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_authorString": {
          "description": "Extensions for authorString",
          "$ref": "#/definitions/Element"
        },
        "time": {
          "description": "Indicates when this particular annotation was made.",
          "$ref": "#/definitions/dateTime"
        },
        "_time": {
          "description": "Extensions for time",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "The text of the annotation in markdown format.",
          "$ref": "#/definitions/markdown"
        },
        "_text": {
          "description": "Extensions for text",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Attachment": {
      "description": "For referring to data content defined in other formats.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "contentType": {
          "description": "Identifies the type of the data in the attachment and allows a method to be chosen to interpret or render the data. Includes mime type parameters such as charset where appropriate.",
          "$ref": "#/definitions/code"
        },
        "_contentType": {
          "description": "Extensions for contentType",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The human language of the content. The value can be any valid value according to BCP 47.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "data": {
          "description": "The actual data of the attachment - a sequence of bytes, base64 encoded.",
          "$ref": "#/definitions/base64Binary"
        },
        "_data": {
          "description": "Extensions for data",
          "$ref": "#/definitions/Element"
        },
        "url": {
          "description": "A location where the data can be accessed.",
          "$ref": "#/definitions/url"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "size": {
          "description": "The number of bytes of data that make up this attachment (before base64 encoding, if that is done).",
          "$ref": "#/definitions/integer64"
        },
        "_size": {
          "description": "Extensions for size",
          "$ref": "#/definitions/Element"
        },
        "hash": {
          "description": "The calculated hash of the data using SHA-1. Represented using base64.",
          "$ref": "#/definitions/base64Binary"
        },
        "_hash": {
          "description": "Extensions for hash",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A label or set of text to display in place of the data.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "creation": {
          "description": "The date that the attachment was first created.",
          "$ref": "#/definitions/dateTime"
        },
        "_creation": {
          "description": "Extensions for creation",
          "$ref": "#/definitions/Element"
        },
        "height": {
          "description": "Height of the image in pixels (photo/video).",
          "$ref": "#/definitions/positiveInt"
        },
        "_height": {
          "description": "Extensions for height",
          "$ref": "#/definitions/Element"
        },
        "width": {
          "description": "Width of the image in pixels (photo/video).",
          "$ref": "#/definitions/positiveInt"
        },
        "_width": {
          "description": "Extensions for width",
          "$ref": "#/definitions/Element"
        },
        "frames": {
          "description": "The number of frames in a photo. This is used with a multi-page fax, or an imaging acquisition context that takes multiple slices in a single image, or an animated gif. If there is more than one frame, this SHALL have a value in order to alert interface software that a multi-frame capable rendering widget is required.",
          "$ref": "#/definitions/positiveInt"
        },
        "_frames": {
          "description": "Extensions for frames",
          "$ref": "#/definitions/Element"
        },
        "duration": {
          "description": "The duration of the recording in seconds - for audio and video.",
          "$ref": "#/definitions/decimal"
        },
        "_duration": {
          "description": "Extensions for duration",
          "$ref": "#/definitions/Element"
        },
        "pages": {
          "description": "The number of pages when printed.",
          "$ref": "#/definitions/positiveInt"
        },
        "_pages": {
          "description": "Extensions for pages",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Identifier": {
      "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "use": {
          "description": "The purpose of this identifier.",
          "enum": [
            "usual",
            "official",
            "temp",
            "secondary",
            "old"
          ]
        },
        "_use": {
          "description": "Extensions for use",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "system": {
          "description": "Establishes the namespace for the value - that is, a absolute URL that describes a set values that are unique.",
          "$ref": "#/definitions/uri"
        },
        "_system": {
          "description": "Extensions for system",
          "$ref": "#/definitions/Element"
        },
        "value": {
          "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
          "$ref": "#/definitions/string"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        },
        "period": {
          "description": "Time period during which identifier is/was valid for use.",
          "$ref": "#/definitions/Period"
        },
        "assigner": {
          "description": "Organization that issued/manages the identifier.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "CodeableConcept": {
      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "coding": {
          "description": "A reference to a code defined by a terminology system.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        },
        "text": {
          "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.",
          "$ref": "#/definitions/string"
        },
        "_text": {
          "description": "Extensions for text",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "CodeableReference": {
      "description": "A reference to a resource (by instance), or instead, a reference to a concept defined in a terminology or ontology (by class).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "concept": {
          "description": "A reference to a concept - e.g. the information is identified by its general class to the degree of precision found in the terminology.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "reference": {
          "description": "A reference to a resource the provides exact details about the information being referenced.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Coding": {
      "description": "A reference to a code defined by a terminology system.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "system": {
          "description": "The identification of the code system that defines the meaning of the symbol in the code.",
          "$ref": "#/definitions/uri"
        },
        "_system": {
          "description": "Extensions for system",
          "$ref": "#/definitions/Element"
        },
        "version": {
          "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "display": {
          "description": "A representation of the meaning of the code in the system, following the rules of the system.",
          "$ref": "#/definitions/string"
        },
        "_display": {
          "description": "Extensions for display",
          "$ref": "#/definitions/Element"
        },
        "userSelected": {
          "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).",
          "$ref": "#/definitions/boolean"
        },
        "_userSelected": {
          "description": "Extensions for userSelected",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Quantity": {
      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "value": {
          "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value.",
          "$ref": "#/definitions/decimal"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        },
        "comparator": {
          "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"\u003c\" , then the real value is \u003c stated value.",
          "enum": [
            "\u003c",
            "\u003c\u003d",
            "\u003e\u003d",
            "\u003e",
            "ad"
          ]
        },
        "_comparator": {
          "description": "Extensions for comparator",
          "$ref": "#/definitions/Element"
        },
        "unit": {
          "description": "A human-readable form of the unit.",
          "$ref": "#/definitions/string"
        },
        "_unit": {
          "description": "Extensions for unit",
          "$ref": "#/definitions/Element"
        },
        "system": {
          "description": "The identification of the system that provides the coded form of the unit.",
          "$ref": "#/definitions/uri"
        },
        "_system": {
          "description": "Extensions for system",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "A computer processable form of the unit in some unit representation system.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Duration": {
      "description": "A length of time.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "value": {
          "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value.",
          "$ref": "#/definitions/decimal"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        },
        "comparator": {
          "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"\u003c\" , then the real value is \u003c stated value.",
          "enum": [
            "\u003c",
            "\u003c\u003d",
            "\u003e\u003d",
            "\u003e",
            "ad"
          ]
        },
        "_comparator": {
          "description": "Extensions for comparator",
          "$ref": "#/definitions/Element"
        },
        "unit": {
          "description": "A human-readable form of the unit.",
          "$ref": "#/definitions/string"
        },
        "_unit": {
          "description": "Extensions for unit",
          "$ref": "#/definitions/Element"
        },
        "system": {
          "description": "The identification of the system that provides the coded form of the unit.",
          "$ref": "#/definitions/uri"
        },
        "_system": {
          "description": "Extensions for system",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "A computer processable form of the unit in some unit representation system.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Distance": {
      "description": "A length - a value with a unit that is a physical distance.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "value": {
          "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value.",
          "$ref": "#/definitions/decimal"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        },
        "comparator": {
          "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"\u003c\" , then the real value is \u003c stated value.",
          "enum": [
            "\u003c",
            "\u003c\u003d",
            "\u003e\u003d",
            "\u003e",
            "ad"
          ]
        },
        "_comparator": {
          "description": "Extensions for comparator",
          "$ref": "#/definitions/Element"
        },
        "unit": {
          "description": "A human-readable form of the unit.",
          "$ref": "#/definitions/string"
        },
        "_unit": {
          "description": "Extensions for unit",
          "$ref": "#/definitions/Element"
        },
        "system": {
          "description": "The identification of the system that provides the coded form of the unit.",
          "$ref": "#/definitions/uri"
        },
        "_system": {
          "description": "Extensions for system",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "A computer processable form of the unit in some unit representation system.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Count": {
      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "value": {
          "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value.",
          "$ref": "#/definitions/decimal"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        },
        "comparator": {
          "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"\u003c\" , then the real value is \u003c stated value.",
          "enum": [
            "\u003c",
            "\u003c\u003d",
            "\u003e\u003d",
            "\u003e",
            "ad"
          ]
        },
        "_comparator": {
          "description": "Extensions for comparator",
          "$ref": "#/definitions/Element"
        },
        "unit": {
          "description": "A human-readable form of the unit.",
          "$ref": "#/definitions/string"
        },
        "_unit": {
          "description": "Extensions for unit",
          "$ref": "#/definitions/Element"
        },
        "system": {
          "description": "The identification of the system that provides the coded form of the unit.",
          "$ref": "#/definitions/uri"
        },
        "_system": {
          "description": "Extensions for system",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "A computer processable form of the unit in some unit representation system.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Money": {
      "description": "An amount of economic utility in some recognized currency.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "value": {
          "description": "Numerical value (with implicit precision).",
          "$ref": "#/definitions/decimal"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        },
        "currency": {
          "description": "ISO 4217 Currency Code.",
          "$ref": "#/definitions/code"
        },
        "_currency": {
          "description": "Extensions for currency",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Age": {
      "description": "A duration of time during which an organism (or a process) has existed.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "value": {
          "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value.",
          "$ref": "#/definitions/decimal"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        },
        "comparator": {
          "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"\u003c\" , then the real value is \u003c stated value.",
          "enum": [
            "\u003c",
            "\u003c\u003d",
            "\u003e\u003d",
            "\u003e",
            "ad"
          ]
        },
        "_comparator": {
          "description": "Extensions for comparator",
          "$ref": "#/definitions/Element"
        },
        "unit": {
          "description": "A human-readable form of the unit.",
          "$ref": "#/definitions/string"
        },
        "_unit": {
          "description": "Extensions for unit",
          "$ref": "#/definitions/Element"
        },
        "system": {
          "description": "The identification of the system that provides the coded form of the unit.",
          "$ref": "#/definitions/uri"
        },
        "_system": {
          "description": "Extensions for system",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "A computer processable form of the unit in some unit representation system.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Range": {
      "description": "A set of ordered Quantities defined by a low and high limit.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "low": {
          "description": "The low limit. The boundary is inclusive.",
          "$ref": "#/definitions/Quantity"
        },
        "high": {
          "description": "The high limit. The boundary is inclusive.",
          "$ref": "#/definitions/Quantity"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Period": {
      "description": "A time period defined by a start and end date and optionally time.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "start": {
          "description": "The start of the period. The boundary is inclusive.",
          "$ref": "#/definitions/dateTime"
        },
        "_start": {
          "description": "Extensions for start",
          "$ref": "#/definitions/Element"
        },
        "end": {
          "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time.",
          "$ref": "#/definitions/dateTime"
        },
        "_end": {
          "description": "Extensions for end",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Ratio": {
      "description": "A relationship of two Quantity values - expressed as a numerator and a denominator.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "numerator": {
          "description": "The value of the numerator.",
          "$ref": "#/definitions/Quantity"
        },
        "denominator": {
          "description": "The value of the denominator.",
          "$ref": "#/definitions/Quantity"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "RatioRange": {
      "description": "A range of ratios expressed as a low and high numerator and a denominator.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "lowNumerator": {
          "description": "The value of the low limit numerator.",
          "$ref": "#/definitions/Quantity"
        },
        "highNumerator": {
          "description": "The value of the high limit numerator.",
          "$ref": "#/definitions/Quantity"
        },
        "denominator": {
          "description": "The value of the denominator.",
          "$ref": "#/definitions/Quantity"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Reference": {
      "description": "A reference from one resource to another.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "reference": {
          "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with \u0027#\u0027) refer to contained resources.",
          "$ref": "#/definitions/string"
        },
        "_reference": {
          "description": "Extensions for reference",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).",
          "$ref": "#/definitions/uri"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference.",
          "$ref": "#/definitions/Identifier"
        },
        "display": {
          "description": "Plain text narrative that identifies the resource in addition to the resource reference.",
          "$ref": "#/definitions/string"
        },
        "_display": {
          "description": "Extensions for display",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SampledData": {
      "description": "A series of measurements taken by a device, with upper and lower limits. There may be more than one dimension in the data.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "origin": {
          "description": "The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series.",
          "$ref": "#/definitions/Quantity"
        },
        "interval": {
          "description": "Amount of intervalUnits between samples, eg. milliseconds for time-based sampling.",
          "$ref": "#/definitions/decimal"
        },
        "_interval": {
          "description": "Extensions for interval",
          "$ref": "#/definitions/Element"
        },
        "intervalUnit": {
          "description": "The measurement unit in which the sample interval is expressed.",
          "$ref": "#/definitions/code"
        },
        "_intervalUnit": {
          "description": "Extensions for intervalUnit",
          "$ref": "#/definitions/Element"
        },
        "factor": {
          "description": "A correction factor that is applied to the sampled data points before they are added to the origin.",
          "$ref": "#/definitions/decimal"
        },
        "_factor": {
          "description": "Extensions for factor",
          "$ref": "#/definitions/Element"
        },
        "lowerLimit": {
          "description": "The lower limit of detection of the measured points. This is needed if any of the data points have the value \"L\" (lower than detection limit).",
          "$ref": "#/definitions/decimal"
        },
        "_lowerLimit": {
          "description": "Extensions for lowerLimit",
          "$ref": "#/definitions/Element"
        },
        "upperLimit": {
          "description": "The upper limit of detection of the measured points. This is needed if any of the data points have the value \"U\" (higher than detection limit).",
          "$ref": "#/definitions/decimal"
        },
        "_upperLimit": {
          "description": "Extensions for upperLimit",
          "$ref": "#/definitions/Element"
        },
        "dimensions": {
          "description": "The number of sample points at each time point. If this value is greater than one, then the dimensions will be interlaced - all the sample points for a point in time will be recorded at once.",
          "$ref": "#/definitions/positiveInt"
        },
        "_dimensions": {
          "description": "Extensions for dimensions",
          "$ref": "#/definitions/Element"
        },
        "data": {
          "description": "A series of data points which are decimal values separated by a single space (character u20). The special values \"E\" (error), \"L\" (below detection limit) and \"U\" (above detection limit) can also be used in place of a decimal value.",
          "$ref": "#/definitions/string"
        },
        "_data": {
          "description": "Extensions for data",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "origin"
      ]
    },
    "Signature": {
      "description": "A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "An indication of the reason that the entity signed this document. This may be explicitly included as part of the signature information and can be used when determining accountability for various actions concerning the document.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        },
        "when": {
          "description": "When the digital signature was signed.",
          "$ref": "#/definitions/instant"
        },
        "_when": {
          "description": "Extensions for when",
          "$ref": "#/definitions/Element"
        },
        "who": {
          "description": "A reference to an application-usable description of the identity that signed  (e.g. the signature used their private key).",
          "$ref": "#/definitions/Reference"
        },
        "onBehalfOf": {
          "description": "A reference to an application-usable description of the identity that is represented by the signature.",
          "$ref": "#/definitions/Reference"
        },
        "targetFormat": {
          "description": "A mime type that indicates the technical format of the target resources signed by the signature.",
          "$ref": "#/definitions/code"
        },
        "_targetFormat": {
          "description": "Extensions for targetFormat",
          "$ref": "#/definitions/Element"
        },
        "sigFormat": {
          "description": "A mime type that indicates the technical format of the signature. Important mime types are application/signature+xml for X ML DigSig, application/jose for JWS, and image/* for a graphical image of a signature, etc.",
          "$ref": "#/definitions/code"
        },
        "_sigFormat": {
          "description": "Extensions for sigFormat",
          "$ref": "#/definitions/Element"
        },
        "data": {
          "description": "The base64 encoding of the Signature content. When signature is not recorded electronically this element would be empty.",
          "$ref": "#/definitions/base64Binary"
        },
        "_data": {
          "description": "Extensions for data",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "HumanName": {
      "description": "A name, normally of a human, that can be used for other living entities (eg. animals but not organizations) that have been assigned names by a human and may need the use of name parts or the need for usage information.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "use": {
          "description": "Identifies the purpose for this name.",
          "enum": [
            "usual",
            "official",
            "temp",
            "nickname",
            "anonymous",
            "old",
            "maiden"
          ]
        },
        "_use": {
          "description": "Extensions for use",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "Specifies the entire name as it should be displayed e.g. on an application UI. This may be provided instead of or as well as the specific parts.",
          "$ref": "#/definitions/string"
        },
        "_text": {
          "description": "Extensions for text",
          "$ref": "#/definitions/Element"
        },
        "family": {
          "description": "The part of a name that links to the genealogy. In some cultures (e.g. Eritrea) the family name of a son is the first name of his father.",
          "$ref": "#/definitions/string"
        },
        "_family": {
          "description": "Extensions for family",
          "$ref": "#/definitions/Element"
        },
        "given": {
          "description": "Given name.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_given": {
          "description": "Extensions for given",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "prefix": {
          "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_prefix": {
          "description": "Extensions for prefix",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "suffix": {
          "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_suffix": {
          "description": "Extensions for suffix",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "period": {
          "description": "Indicates the period of time when this name was valid for the named person.",
          "$ref": "#/definitions/Period"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Address": {
      "description": "An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.\nThe ISO21090-codedString may be used to provide a coded representation of the contents of strings in an Address.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "use": {
          "description": "The purpose of this address.",
          "enum": [
            "home",
            "work",
            "temp",
            "old",
            "billing"
          ]
        },
        "_use": {
          "description": "Extensions for use",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care-of addresses). Most addresses are both.",
          "enum": [
            "postal",
            "physical",
            "both"
          ]
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "Specifies the entire address as it should be displayed e.g. on a postal label. This may be provided instead of or as well as the specific parts.",
          "$ref": "#/definitions/string"
        },
        "_text": {
          "description": "Extensions for text",
          "$ref": "#/definitions/Element"
        },
        "line": {
          "description": "This component contains the house number, apartment number, street name, street direction,  P.O. Box number, delivery hints, and similar address information.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_line": {
          "description": "Extensions for line",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "city": {
          "description": "The name of the city, town, suburb, village or other community or delivery center.",
          "$ref": "#/definitions/string"
        },
        "_city": {
          "description": "Extensions for city",
          "$ref": "#/definitions/Element"
        },
        "district": {
          "description": "The name of the administrative area (county).",
          "$ref": "#/definitions/string"
        },
        "_district": {
          "description": "Extensions for district",
          "$ref": "#/definitions/Element"
        },
        "state": {
          "description": "Sub-unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (e.g. US 2 letter state codes).",
          "$ref": "#/definitions/string"
        },
        "_state": {
          "description": "Extensions for state",
          "$ref": "#/definitions/Element"
        },
        "postalCode": {
          "description": "A postal code designating a region defined by the postal service.",
          "$ref": "#/definitions/string"
        },
        "_postalCode": {
          "description": "Extensions for postalCode",
          "$ref": "#/definitions/Element"
        },
        "country": {
          "description": "Country - a nation as commonly understood or generally accepted.",
          "$ref": "#/definitions/string"
        },
        "_country": {
          "description": "Extensions for country",
          "$ref": "#/definitions/Element"
        },
        "period": {
          "description": "Time period when address was/is in use.",
          "$ref": "#/definitions/Period"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ContactPoint": {
      "description": "Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "system": {
          "description": "Telecommunications form for contact point - what communications system is required to make use of the contact.",
          "enum": [
            "phone",
            "fax",
            "email",
            "pager",
            "url",
            "sms",
            "other"
          ]
        },
        "_system": {
          "description": "Extensions for system",
          "$ref": "#/definitions/Element"
        },
        "value": {
          "description": "The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address).",
          "$ref": "#/definitions/string"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        },
        "use": {
          "description": "Identifies the purpose for the contact point.",
          "enum": [
            "home",
            "work",
            "temp",
            "old",
            "mobile"
          ]
        },
        "_use": {
          "description": "Extensions for use",
          "$ref": "#/definitions/Element"
        },
        "rank": {
          "description": "Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values.",
          "$ref": "#/definitions/positiveInt"
        },
        "_rank": {
          "description": "Extensions for rank",
          "$ref": "#/definitions/Element"
        },
        "period": {
          "description": "Time period when the contact point was/is in use.",
          "$ref": "#/definitions/Period"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Timing": {
      "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "event": {
          "description": "Identifies specific times when the event occurs.",
          "items": {
            "$ref": "#/definitions/dateTime"
          },
          "type": "array"
        },
        "_event": {
          "description": "Extensions for event",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "repeat": {
          "description": "A set of rules that describe when the event is scheduled.",
          "$ref": "#/definitions/Timing_Repeat"
        },
        "code": {
          "description": "A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code).",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Timing_Repeat": {
      "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "boundsDuration": {
          "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
          "$ref": "#/definitions/Duration"
        },
        "boundsRange": {
          "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
          "$ref": "#/definitions/Range"
        },
        "boundsPeriod": {
          "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
          "$ref": "#/definitions/Period"
        },
        "count": {
          "description": "A total count of the desired number of repetitions across the duration of the entire timing specification. If countMax is present, this element indicates the lower bound of the allowed range of count values.",
          "$ref": "#/definitions/positiveInt"
        },
        "_count": {
          "description": "Extensions for count",
          "$ref": "#/definitions/Element"
        },
        "countMax": {
          "description": "If present, indicates that the count is a range - so to perform the action between [count] and [countMax] times.",
          "$ref": "#/definitions/positiveInt"
        },
        "_countMax": {
          "description": "Extensions for countMax",
          "$ref": "#/definitions/Element"
        },
        "duration": {
          "description": "How long this thing happens for when it happens. If durationMax is present, this element indicates the lower bound of the allowed range of the duration.",
          "$ref": "#/definitions/decimal"
        },
        "_duration": {
          "description": "Extensions for duration",
          "$ref": "#/definitions/Element"
        },
        "durationMax": {
          "description": "If present, indicates that the duration is a range - so to perform the action between [duration] and [durationMax] time length.",
          "$ref": "#/definitions/decimal"
        },
        "_durationMax": {
          "description": "Extensions for durationMax",
          "$ref": "#/definitions/Element"
        },
        "durationUnit": {
          "description": "The units of time for the duration, in UCUM units\nNormal practice is to use the \u0027mo\u0027 code as a calendar month when calculating the next occurrence.",
          "enum": [
            "s",
            "min",
            "h",
            "d",
            "wk",
            "mo",
            "a"
          ]
        },
        "_durationUnit": {
          "description": "Extensions for durationUnit",
          "$ref": "#/definitions/Element"
        },
        "frequency": {
          "description": "The number of times to repeat the action within the specified period. If frequencyMax is present, this element indicates the lower bound of the allowed range of the frequency.",
          "$ref": "#/definitions/positiveInt"
        },
        "_frequency": {
          "description": "Extensions for frequency",
          "$ref": "#/definitions/Element"
        },
        "frequencyMax": {
          "description": "If present, indicates that the frequency is a range - so to repeat between [frequency] and [frequencyMax] times within the period or period range.",
          "$ref": "#/definitions/positiveInt"
        },
        "_frequencyMax": {
          "description": "Extensions for frequencyMax",
          "$ref": "#/definitions/Element"
        },
        "period": {
          "description": "Indicates the duration of time over which repetitions are to occur; e.g. to express \"3 times per day\", 3 would be the frequency and \"1 day\" would be the period. If periodMax is present, this element indicates the lower bound of the allowed range of the period length.",
          "$ref": "#/definitions/decimal"
        },
        "_period": {
          "description": "Extensions for period",
          "$ref": "#/definitions/Element"
        },
        "periodMax": {
          "description": "If present, indicates that the period is a range from [period] to [periodMax], allowing expressing concepts such as \"do this once every 3-5 days.",
          "$ref": "#/definitions/decimal"
        },
        "_periodMax": {
          "description": "Extensions for periodMax",
          "$ref": "#/definitions/Element"
        },
        "periodUnit": {
          "description": "The units of time for the period in UCUM units\nNormal practice is to use the \u0027mo\u0027 code as a calendar month when calculating the next occurrence.",
          "enum": [
            "s",
            "min",
            "h",
            "d",
            "wk",
            "mo",
            "a"
          ]
        },
        "_periodUnit": {
          "description": "Extensions for periodUnit",
          "$ref": "#/definitions/Element"
        },
        "dayOfWeek": {
          "description": "If one or more days of week is provided, then the action happens only on the specified day(s).",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_dayOfWeek": {
          "description": "Extensions for dayOfWeek",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "timeOfDay": {
          "description": "Specified time of day for action to take place.",
          "items": {
            "$ref": "#/definitions/time"
          },
          "type": "array"
        },
        "_timeOfDay": {
          "description": "Extensions for timeOfDay",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "when": {
          "description": "An approximate time period during the day, potentially linked to an event of daily living that indicates when the action should occur.",
          "items": {
            "enum": [
              "MORN",
              "MORN.early",
              "MORN.late",
              "NOON",
              "AFT",
              "AFT.early",
              "AFT.late",
              "EVE",
              "EVE.early",
              "EVE.late",
              "NIGHT",
              "PHS",
              "IMD",
              "HS",
              "WAKE",
              "C",
              "CM",
              "CD",
              "CV",
              "AC",
              "ACM",
              "ACD",
              "ACV",
              "PC",
              "PCM",
              "PCD",
              "PCV"
            ]
          },
          "type": "array"
        },
        "_when": {
          "description": "Extensions for when",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "offset": {
          "description": "The number of minutes from the event. If the event code does not indicate whether the minutes is before or after the event, then the offset is assumed to be after the event.",
          "$ref": "#/definitions/unsignedInt"
        },
        "_offset": {
          "description": "Extensions for offset",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Meta": {
      "description": "The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "versionId": {
          "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted.",
          "$ref": "#/definitions/id"
        },
        "_versionId": {
          "description": "Extensions for versionId",
          "$ref": "#/definitions/Element"
        },
        "lastUpdated": {
          "description": "When the resource last changed - e.g. when the version changed.",
          "$ref": "#/definitions/instant"
        },
        "_lastUpdated": {
          "description": "Extensions for lastUpdated",
          "$ref": "#/definitions/Element"
        },
        "source": {
          "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [[[Provenance]]] information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc.",
          "$ref": "#/definitions/uri"
        },
        "_source": {
          "description": "Extensions for source",
          "$ref": "#/definitions/Element"
        },
        "profile": {
          "description": "A list of profiles (references to [[[StructureDefinition]]] resources) that this resource claims to conform to. The URL is a reference to [[[StructureDefinition.url]]].",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "security": {
          "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        },
        "tag": {
          "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ContactDetail": {
      "description": "Specifies contact information for a person or organization.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "The name of an individual to contact.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "telecom": {
          "description": "The contact details for the individual (if a name was provided) or the organization.",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ExtendedContactDetail": {
      "description": "Specifies contact information for a specific purpose over a period of time, might be handled/monitored by a specific named person or organization.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "purpose": {
          "description": "The purpose/type of contact.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "name": {
          "description": "The name of an individual to contact, some types of contact detail are usually blank.",
          "items": {
            "$ref": "#/definitions/HumanName"
          },
          "type": "array"
        },
        "telecom": {
          "description": "The contact details application for the purpose defined.",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          },
          "type": "array"
        },
        "address": {
          "description": "Address for the contact.",
          "$ref": "#/definitions/Address"
        },
        "organization": {
          "description": "This contact detail is handled/monitored by a specific organization. If the name is provided in the contact, then it is referring to the named individual within this organization.",
          "$ref": "#/definitions/Reference"
        },
        "period": {
          "description": "Period that this contact was valid for usage.",
          "$ref": "#/definitions/Period"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "VirtualServiceDetail": {
      "description": "Virtual Service Contact Details.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "channelType": {
          "description": "The type of virtual service to connect to (i.e. Teams, Zoom, Specific VMR technology, WhatsApp).",
          "$ref": "#/definitions/Coding"
        },
        "addressUrl": {
          "description": "What address or number needs to be used for a user to connect to the virtual service to join. The channelType informs as to which datatype is appropriate to use (requires knowledge of the specific type).",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_addressUrl": {
          "description": "Extensions for addressUrl",
          "$ref": "#/definitions/Element"
        },
        "addressString": {
          "description": "What address or number needs to be used for a user to connect to the virtual service to join. The channelType informs as to which datatype is appropriate to use (requires knowledge of the specific type).",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_addressString": {
          "description": "Extensions for addressString",
          "$ref": "#/definitions/Element"
        },
        "addressContactPoint": {
          "description": "What address or number needs to be used for a user to connect to the virtual service to join. The channelType informs as to which datatype is appropriate to use (requires knowledge of the specific type).",
          "$ref": "#/definitions/ContactPoint"
        },
        "addressExtendedContactDetail": {
          "description": "What address or number needs to be used for a user to connect to the virtual service to join. The channelType informs as to which datatype is appropriate to use (requires knowledge of the specific type).",
          "$ref": "#/definitions/ExtendedContactDetail"
        },
        "additionalInfo": {
          "description": "Address to see alternative connection details.",
          "items": {
            "$ref": "#/definitions/url"
          },
          "type": "array"
        },
        "_additionalInfo": {
          "description": "Extensions for additionalInfo",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "maxParticipants": {
          "description": "Maximum number of participants supported by the virtual service.",
          "$ref": "#/definitions/positiveInt"
        },
        "_maxParticipants": {
          "description": "Extensions for maxParticipants",
          "$ref": "#/definitions/Element"
        },
        "sessionKey": {
          "description": "Session Key required by the virtual service.",
          "$ref": "#/definitions/string"
        },
        "_sessionKey": {
          "description": "Extensions for sessionKey",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Availability": {
      "description": "Availability data for an {item}.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "availableTime": {
          "description": "Times the {item} is available.",
          "items": {
            "$ref": "#/definitions/Availability_AvailableTime"
          },
          "type": "array"
        },
        "notAvailableTime": {
          "description": "Not available during this time due to provided reason.",
          "items": {
            "$ref": "#/definitions/Availability_NotAvailableTime"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Availability_AvailableTime": {
      "description": "Availability data for an {item}.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "daysOfWeek": {
          "description": "mon | tue | wed | thu | fri | sat | sun.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_daysOfWeek": {
          "description": "Extensions for daysOfWeek",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "allDay": {
          "description": "Always available? i.e. 24 hour service.",
          "$ref": "#/definitions/boolean"
        },
        "_allDay": {
          "description": "Extensions for allDay",
          "$ref": "#/definitions/Element"
        },
        "availableStartTime": {
          "description": "Opening time of day (ignored if allDay \u003d true).",
          "$ref": "#/definitions/time"
        },
        "_availableStartTime": {
          "description": "Extensions for availableStartTime",
          "$ref": "#/definitions/Element"
        },
        "availableEndTime": {
          "description": "Closing time of day (ignored if allDay \u003d true).",
          "$ref": "#/definitions/time"
        },
        "_availableEndTime": {
          "description": "Extensions for availableEndTime",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Availability_NotAvailableTime": {
      "description": "Availability data for an {item}.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "description": {
          "description": "Reason presented to the user explaining why time not available.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "during": {
          "description": "Service not available during this period.",
          "$ref": "#/definitions/Period"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MonetaryComponent": {
      "description": "Availability data for an {item}.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "base | surcharge | deduction | discount | tax | informational.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "Codes may be used to differentiate between kinds of taxes, surcharges, discounts etc.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "factor": {
          "description": "Factor used for calculating this component.",
          "$ref": "#/definitions/decimal"
        },
        "_factor": {
          "description": "Extensions for factor",
          "$ref": "#/definitions/Element"
        },
        "amount": {
          "description": "Explicit value amount to be used.",
          "$ref": "#/definitions/Money"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Contributor": {
      "description": "A contributor to the content of a knowledge asset, including authors, editors, reviewers, and endorsers.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of contributor.",
          "enum": [
            "author",
            "editor",
            "reviewer",
            "endorser"
          ]
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "name": {
          "description": "The name of the individual or organization responsible for the contribution.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the contributor.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "DataRequirement": {
      "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of the required data, specified as the type name of a resource. For profiles, this value is set to the type of the base resource of the profile.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "profile": {
          "description": "The profile of the required data, specified as the uri of the profile definition.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "subjectCodeableConcept": {
          "description": "The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subjectReference": {
          "description": "The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed.",
          "$ref": "#/definitions/Reference"
        },
        "mustSupport": {
          "description": "Indicates that specific elements of the type are referenced by the knowledge module and must be supported by the consumer in order to obtain an effective evaluation. This does not mean that a value is required for this element, only that the consuming system must understand the element and be able to provide values for it if they are available. \n\nThe value of mustSupport SHALL be a FHIRPath resolveable on the type of the DataRequirement. The path SHALL consist only of identifiers, constant indexers, and .resolve() (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_mustSupport": {
          "description": "Extensions for mustSupport",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "codeFilter": {
          "description": "Code filters specify additional constraints on the data, specifying the value set of interest for a particular element of the data. Each code filter defines an additional constraint on the data, i.e. code filters are AND\u0027ed, not OR\u0027ed.",
          "items": {
            "$ref": "#/definitions/DataRequirement_CodeFilter"
          },
          "type": "array"
        },
        "dateFilter": {
          "description": "Date filters specify additional constraints on the data in terms of the applicable date range for specific elements. Each date filter specifies an additional constraint on the data, i.e. date filters are AND\u0027ed, not OR\u0027ed.",
          "items": {
            "$ref": "#/definitions/DataRequirement_DateFilter"
          },
          "type": "array"
        },
        "valueFilter": {
          "description": "Value filters specify additional constraints on the data for elements other than code-valued or date-valued. Each value filter specifies an additional constraint on the data (i.e. valueFilters are AND\u0027ed, not OR\u0027ed).",
          "items": {
            "$ref": "#/definitions/DataRequirement_ValueFilter"
          },
          "type": "array"
        },
        "limit": {
          "description": "Specifies a maximum number of results that are required (uses the _count search parameter).",
          "$ref": "#/definitions/positiveInt"
        },
        "_limit": {
          "description": "Extensions for limit",
          "$ref": "#/definitions/Element"
        },
        "sort": {
          "description": "Specifies the order of the results to be returned.",
          "items": {
            "$ref": "#/definitions/DataRequirement_Sort"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "DataRequirement_CodeFilter": {
      "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "path": {
          "description": "The code-valued attribute of the filter. The specified path SHALL be a FHIRPath resolveable on the specified type of the DataRequirement, and SHALL consist only of identifiers, constant indexers, and .resolve(). The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details). Note that the index must be an integer constant. The path must resolve to an element of type code, Coding, or CodeableConcept.",
          "$ref": "#/definitions/string"
        },
        "_path": {
          "description": "Extensions for path",
          "$ref": "#/definitions/Element"
        },
        "searchParam": {
          "description": "A token parameter that refers to a search parameter defined on the specified type of the DataRequirement, and which searches on elements of type code, Coding, or CodeableConcept.",
          "$ref": "#/definitions/string"
        },
        "_searchParam": {
          "description": "Extensions for searchParam",
          "$ref": "#/definitions/Element"
        },
        "valueSet": {
          "description": "The valueset for the code filter. The valueSet and code elements are additive. If valueSet is specified, the filter will return only those data items for which the value of the code-valued element specified in the path is a member of the specified valueset.",
          "$ref": "#/definitions/canonical"
        },
        "code": {
          "description": "The codes for the code filter. If values are given, the filter will return only those data items for which the code-valued attribute specified by the path has a value that is one of the specified codes. If codes are specified in addition to a value set, the filter returns items matching a code in the value set or one of the specified codes.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "DataRequirement_DateFilter": {
      "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "path": {
          "description": "The date-valued attribute of the filter. The specified path SHALL be a FHIRPath resolveable on the specified type of the DataRequirement, and SHALL consist only of identifiers, constant indexers, and .resolve(). The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details). Note that the index must be an integer constant. The path must resolve to an element of type date, dateTime, Period, Schedule, or Timing.",
          "$ref": "#/definitions/string"
        },
        "_path": {
          "description": "Extensions for path",
          "$ref": "#/definitions/Element"
        },
        "searchParam": {
          "description": "A date parameter that refers to a search parameter defined on the specified type of the DataRequirement, and which searches on elements of type date, dateTime, Period, Schedule, or Timing.",
          "$ref": "#/definitions/string"
        },
        "_searchParam": {
          "description": "Extensions for searchParam",
          "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "description": "The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_valueDateTime": {
          "description": "Extensions for valueDateTime",
          "$ref": "#/definitions/Element"
        },
        "valuePeriod": {
          "description": "The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.",
          "$ref": "#/definitions/Period"
        },
        "valueDuration": {
          "description": "The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.",
          "$ref": "#/definitions/Duration"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "DataRequirement_ValueFilter": {
      "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "path": {
          "description": "The attribute of the filter. The specified path SHALL be a FHIRPath resolveable on the specified type of the DataRequirement, and SHALL consist only of identifiers, constant indexers, and .resolve(). The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details). Note that the index must be an integer constant. The path must resolve to an element of a type that is comparable to the valueFilter.value[x] element for the filter.",
          "$ref": "#/definitions/string"
        },
        "_path": {
          "description": "Extensions for path",
          "$ref": "#/definitions/Element"
        },
        "searchParam": {
          "description": "A search parameter defined on the specified type of the DataRequirement, and which searches on elements of a type compatible with the type of the valueFilter.value[x] for the filter.",
          "$ref": "#/definitions/string"
        },
        "_searchParam": {
          "description": "Extensions for searchParam",
          "$ref": "#/definitions/Element"
        },
        "comparator": {
          "description": "The comparator to be used to determine whether the value is matching.",
          "$ref": "#/definitions/code"
        },
        "_comparator": {
          "description": "Extensions for comparator",
          "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "description": "The value of the filter.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_valueDateTime": {
          "description": "Extensions for valueDateTime",
          "$ref": "#/definitions/Element"
        },
        "valuePeriod": {
          "description": "The value of the filter.",
          "$ref": "#/definitions/Period"
        },
        "valueDuration": {
          "description": "The value of the filter.",
          "$ref": "#/definitions/Duration"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "DataRequirement_Sort": {
      "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "path": {
          "description": "The attribute of the sort. The specified path must be resolvable from the type of the required data. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements. Note that the index must be an integer constant.",
          "$ref": "#/definitions/string"
        },
        "_path": {
          "description": "Extensions for path",
          "$ref": "#/definitions/Element"
        },
        "direction": {
          "description": "The direction of the sort, ascending or descending.",
          "enum": [
            "ascending",
            "descending"
          ]
        },
        "_direction": {
          "description": "Extensions for direction",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ParameterDefinition": {
      "description": "The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "The name of the parameter used to allow access to the value of the parameter in evaluation contexts.",
          "$ref": "#/definitions/code"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "use": {
          "description": "Whether the parameter is input or output for the module.",
          "$ref": "#/definitions/code"
        },
        "_use": {
          "description": "Extensions for use",
          "$ref": "#/definitions/Element"
        },
        "min": {
          "description": "The minimum number of times this parameter SHALL appear in the request or response.",
          "$ref": "#/definitions/integer"
        },
        "_min": {
          "description": "Extensions for min",
          "$ref": "#/definitions/Element"
        },
        "max": {
          "description": "The maximum number of times this element is permitted to appear in the request or response.",
          "$ref": "#/definitions/string"
        },
        "_max": {
          "description": "Extensions for max",
          "$ref": "#/definitions/Element"
        },
        "documentation": {
          "description": "A brief discussion of what the parameter is for and how it is used by the module.",
          "$ref": "#/definitions/string"
        },
        "_documentation": {
          "description": "Extensions for documentation",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "The type of the parameter.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "profile": {
          "description": "If specified, this indicates a profile that the input data must conform to, or that the output data will conform to.",
          "$ref": "#/definitions/canonical"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "RelatedArtifact": {
      "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of relationship to the related artifact.",
          "enum": [
            "documentation",
            "justification",
            "citation",
            "predecessor",
            "successor",
            "derived-from",
            "depends-on",
            "composed-of",
            "part-of",
            "amends",
            "amended-with",
            "appends",
            "appended-with",
            "cites",
            "cited-by",
            "comments-on",
            "comment-in",
            "contains",
            "contained-in",
            "corrects",
            "correction-in",
            "replaces",
            "replaced-with",
            "retracts",
            "retracted-by",
            "signs",
            "similar-to",
            "supports",
            "supported-with",
            "transforms",
            "transformed-into",
            "transformed-with",
            "documents",
            "specification-of",
            "created-with",
            "cite-as"
          ]
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "classifier": {
          "description": "Provides additional classifiers of the related artifact.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "label": {
          "description": "A short label that can be used to reference the citation from elsewhere in the containing artifact, such as a footnote index.",
          "$ref": "#/definitions/string"
        },
        "_label": {
          "description": "Extensions for label",
          "$ref": "#/definitions/Element"
        },
        "display": {
          "description": "A brief description of the document or knowledge resource being referenced, suitable for display to a consumer.",
          "$ref": "#/definitions/string"
        },
        "_display": {
          "description": "Extensions for display",
          "$ref": "#/definitions/Element"
        },
        "citation": {
          "description": "A bibliographic citation for the related artifact. This text SHOULD be formatted according to an accepted citation format.",
          "$ref": "#/definitions/markdown"
        },
        "_citation": {
          "description": "Extensions for citation",
          "$ref": "#/definitions/Element"
        },
        "document": {
          "description": "The document being referenced, represented as an attachment. This is exclusive with the resource element.",
          "$ref": "#/definitions/Attachment"
        },
        "resource": {
          "description": "The related artifact, such as a library, value set, profile, or other knowledge resource.",
          "$ref": "#/definitions/canonical"
        },
        "resourceReference": {
          "description": "The related artifact, if the artifact is not a canonical resource, or a resource reference to a canonical resource.",
          "$ref": "#/definitions/Reference"
        },
        "publicationStatus": {
          "description": "The publication status of the artifact being referred to.",
          "$ref": "#/definitions/code"
        },
        "_publicationStatus": {
          "description": "Extensions for publicationStatus",
          "$ref": "#/definitions/Element"
        },
        "publicationDate": {
          "description": "The date of publication of the artifact being referred to.",
          "$ref": "#/definitions/date"
        },
        "_publicationDate": {
          "description": "Extensions for publicationDate",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "TriggerDefinition": {
      "description": "A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of triggering event.",
          "enum": [
            "named-event",
            "periodic",
            "data-changed",
            "data-added",
            "data-modified",
            "data-removed",
            "data-accessed",
            "data-access-ended"
          ]
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "name": {
          "description": "A formal name for the event. This may be an absolute URI that identifies the event formally (e.g. from a trigger registry), or a simple relative URI that identifies the event in a local context.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "A code that identifies the event.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subscriptionTopic": {
          "description": "A reference to a SubscriptionTopic resource that defines the event. If this element is provided, no other information about the trigger definition may be supplied.",
          "$ref": "#/definitions/canonical"
        },
        "timingTiming": {
          "description": "The timing of the event (if this is a periodic trigger).",
          "$ref": "#/definitions/Timing"
        },
        "timingReference": {
          "description": "The timing of the event (if this is a periodic trigger).",
          "$ref": "#/definitions/Reference"
        },
        "timingDate": {
          "description": "The timing of the event (if this is a periodic trigger).",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_timingDate": {
          "description": "Extensions for timingDate",
          "$ref": "#/definitions/Element"
        },
        "timingDateTime": {
          "description": "The timing of the event (if this is a periodic trigger).",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_timingDateTime": {
          "description": "Extensions for timingDateTime",
          "$ref": "#/definitions/Element"
        },
        "data": {
          "description": "The triggering data of the event (if this is a data trigger). If more than one data is requirement is specified, then all the data requirements must be true.",
          "items": {
            "$ref": "#/definitions/DataRequirement"
          },
          "type": "array"
        },
        "condition": {
          "description": "A boolean-valued expression that is evaluated in the context of the container of the trigger definition and returns whether or not the trigger fires.",
          "$ref": "#/definitions/Expression"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "UsageContext": {
      "description": "Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "A code that identifies the type of context being specified by this usage context.",
          "$ref": "#/definitions/Coding"
        },
        "valueCodeableConcept": {
          "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": {
          "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.",
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.",
          "$ref": "#/definitions/Range"
        },
        "valueReference": {
          "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "Dosage": {
      "description": "Indicates how the medication is/was taken or should be taken by the patient.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "sequence": {
          "description": "Indicates the order in which the dosage instructions should be applied or interpreted.",
          "$ref": "#/definitions/integer"
        },
        "_sequence": {
          "description": "Extensions for sequence",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "Free text dosage instructions e.g. SIG.",
          "$ref": "#/definitions/string"
        },
        "_text": {
          "description": "Extensions for text",
          "$ref": "#/definitions/Element"
        },
        "additionalInstruction": {
          "description": "Supplemental instructions to the patient on how to take the medication  (e.g. \"with meals\" or\"take half to one hour before food\") or warnings for the patient about the medication (e.g. \"may cause drowsiness\" or \"avoid exposure of skin to direct sunlight or sunlamps\").",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "patientInstruction": {
          "description": "Instructions in terms that are understood by the patient or consumer.",
          "$ref": "#/definitions/string"
        },
        "_patientInstruction": {
          "description": "Extensions for patientInstruction",
          "$ref": "#/definitions/Element"
        },
        "timing": {
          "description": "When medication should be administered.",
          "$ref": "#/definitions/Timing"
        },
        "asNeeded": {
          "description": "Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option).",
          "$ref": "#/definitions/boolean"
        },
        "_asNeeded": {
          "description": "Extensions for asNeeded",
          "$ref": "#/definitions/Element"
        },
        "asNeededFor": {
          "description": "Indicates whether the Medication is only taken based on a precondition for taking the Medication (CodeableConcept).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "site": {
          "description": "Body site to administer to.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "route": {
          "description": "How drug should enter body.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "method": {
          "description": "Technique for administering medication.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "doseAndRate": {
          "description": "Depending on the resource,this is the amount of medication administered, to  be administered or typical amount to be administered.",
          "items": {
            "$ref": "#/definitions/Dosage_DoseAndRate"
          },
          "type": "array"
        },
        "maxDosePerPeriod": {
          "description": "Upper limit on medication per unit of time.",
          "items": {
            "$ref": "#/definitions/Ratio"
          },
          "type": "array"
        },
        "maxDosePerAdministration": {
          "description": "Upper limit on medication per administration.",
          "$ref": "#/definitions/Quantity"
        },
        "maxDosePerLifetime": {
          "description": "Upper limit on medication per lifetime of the patient.",
          "$ref": "#/definitions/Quantity"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Dosage_DoseAndRate": {
      "description": "Indicates how the medication is/was taken or should be taken by the patient.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The kind of dose or rate specified, for example, ordered or calculated.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "doseRange": {
          "description": "Amount of medication per dose.",
          "$ref": "#/definitions/Range"
        },
        "doseQuantity": {
          "description": "Amount of medication per dose.",
          "$ref": "#/definitions/Quantity"
        },
        "rateRatio": {
          "description": "Amount of medication per unit of time.",
          "$ref": "#/definitions/Ratio"
        },
        "rateRange": {
          "description": "Amount of medication per unit of time.",
          "$ref": "#/definitions/Range"
        },
        "rateQuantity": {
          "description": "Amount of medication per unit of time.",
          "$ref": "#/definitions/Quantity"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Population": {
      "description": "A populatioof people with some set of grouping criteria.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "ageRange": {
          "description": "The age of the specific population.",
          "$ref": "#/definitions/Range"
        },
        "ageCodeableConcept": {
          "description": "The age of the specific population.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "gender": {
          "description": "The gender of the specific population.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "race": {
          "description": "Race of the specific population.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "physiologicalCondition": {
          "description": "The existing physiological conditions of the specific population to which this applies.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ProductShelfLife": {
      "description": "The shelf-life and storage information for a medicinal product item or container can be described using this class.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "This describes the shelf life, taking into account various scenarios such as shelf life of the packaged Medicinal Product itself, shelf life after transformation where necessary and shelf life after the first opening of a bottle, etc. The shelf life type shall be specified using an appropriate controlled vocabulary The controlled term and the controlled term identifier shall be specified.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "periodDuration": {
          "description": "The shelf life time period can be specified using a numerical value for the period of time and its unit of time measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used.",
          "$ref": "#/definitions/Duration"
        },
        "periodString": {
          "description": "The shelf life time period can be specified using a numerical value for the period of time and its unit of time measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_periodString": {
          "description": "Extensions for periodString",
          "$ref": "#/definitions/Element"
        },
        "specialPrecautionsForStorage": {
          "description": "Special precautions for storage, if any, can be specified using an appropriate controlled vocabulary The controlled term and the controlled term identifier shall be specified.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MarketingStatus": {
      "description": "The marketing status describes the date when a medicinal product is actually put on the market or the date as of which it is no longer available.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "country": {
          "description": "The country in which the marketing authorisation has been granted shall be specified It should be specified using the ISO 3166 ‑ 1 alpha-2 code elements.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "jurisdiction": {
          "description": "Where a Medicines Regulatory Agency has granted a marketing authorisation for which specific provisions within a jurisdiction apply, the jurisdiction can be specified using an appropriate controlled terminology The controlled term and the controlled term identifier shall be specified.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "status": {
          "description": "This attribute provides information on the status of the marketing of the medicinal product See ISO/TS 20443 for more information and examples.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "dateRange": {
          "description": "The date when the Medicinal Product is placed on the market by the Marketing Authorisation Holder (or where applicable, the manufacturer/distributor) in a country and/or jurisdiction shall be provided A complete date consisting of day, month and year shall be specified using the ISO 8601 date format NOTE “Placed on the market” refers to the release of the Medicinal Product into the distribution chain.",
          "$ref": "#/definitions/Period"
        },
        "restoreDate": {
          "description": "The date when the Medicinal Product is placed on the market by the Marketing Authorisation Holder (or where applicable, the manufacturer/distributor) in a country and/or jurisdiction shall be provided A complete date consisting of day, month and year shall be specified using the ISO 8601 date format NOTE “Placed on the market” refers to the release of the Medicinal Product into the distribution chain.",
          "$ref": "#/definitions/dateTime"
        },
        "_restoreDate": {
          "description": "Extensions for restoreDate",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "status"
      ]
    },
    "Expression": {
      "description": "A expression that is evaluated in a specified context and returns a value. The context of use of the expression must specify the context in which the expression is evaluated, and how the result of the expression is used.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "description": {
          "description": "A brief, natural language description of the condition that effectively communicates the intended semantics.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "name": {
          "description": "A short name assigned to the expression to allow for multiple reuse of the expression in the context where it is defined.",
          "$ref": "#/definitions/id"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The media type of the language for the expression.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "expression": {
          "description": "An expression in the specified language that returns a value.",
          "$ref": "#/definitions/string"
        },
        "_expression": {
          "description": "Extensions for expression",
          "$ref": "#/definitions/Element"
        },
        "reference": {
          "description": "A URI that defines where the expression is found.",
          "$ref": "#/definitions/uri"
        },
        "_reference": {
          "description": "Extensions for reference",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ElementDefinition": {
      "description": "Captures constraints on each element within the resource, profile, or extension.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "path": {
          "description": "The path identifies the element and is expressed as a \".\"-separated list of ancestor elements, beginning with the name of the resource or extension.",
          "$ref": "#/definitions/string"
        },
        "_path": {
          "description": "Extensions for path",
          "$ref": "#/definitions/Element"
        },
        "representation": {
          "description": "Codes that define how this element is represented in instances, when the deviation varies from the normal case. No extensions are allowed on elements with a representation of \u0027xmlAttr\u0027, no matter what FHIR serialization format is used.",
          "items": {
            "enum": [
              "xmlAttr",
              "xmlText",
              "typeAttr",
              "cdaText",
              "xhtml"
            ]
          },
          "type": "array"
        },
        "_representation": {
          "description": "Extensions for representation",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "sliceName": {
          "description": "The name of this element definition slice, when slicing is working. The name must be a token with no dots or spaces. This is a unique name referring to a specific set of constraints applied to this element, used to provide a name to different slices of the same element.",
          "$ref": "#/definitions/string"
        },
        "_sliceName": {
          "description": "Extensions for sliceName",
          "$ref": "#/definitions/Element"
        },
        "sliceIsConstraining": {
          "description": "If true, indicates that this slice definition is constraining a slice definition with the same name in an inherited profile. If false, the slice is not overriding any slice in an inherited profile. If missing, the slice might or might not be overriding a slice in an inherited profile, depending on the sliceName.",
          "$ref": "#/definitions/boolean"
        },
        "_sliceIsConstraining": {
          "description": "Extensions for sliceIsConstraining",
          "$ref": "#/definitions/Element"
        },
        "label": {
          "description": "A single preferred label which is the text to display beside the element indicating its meaning or to use to prompt for the element in a user display or form.",
          "$ref": "#/definitions/string"
        },
        "_label": {
          "description": "Extensions for label",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "A code that has the same meaning as the element in a particular terminology.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        },
        "slicing": {
          "description": "Indicates that the element is sliced into a set of alternative definitions (i.e. in a structure definition, there are multiple different constraints on a single element in the base resource). Slicing can be used in any resource that has cardinality ..* on the base resource, or any resource with a choice of types. The set of slices is any elements that come after this in the element sequence that have the same path, until a shorter path occurs (the shorter path terminates the set).",
          "$ref": "#/definitions/ElementDefinition_Slicing"
        },
        "short": {
          "description": "A concise description of what this element means (e.g. for use in autogenerated summaries).",
          "$ref": "#/definitions/string"
        },
        "_short": {
          "description": "Extensions for short",
          "$ref": "#/definitions/Element"
        },
        "definition": {
          "description": "Provides a complete explanation of the meaning of the data element for human readability.  For the case of elements derived from existing elements (e.g. constraints), the definition SHALL be consistent with the base definition, but convey the meaning of the element in the particular context of use of the resource. (Note: The text you are reading is specified in ElementDefinition.definition).",
          "$ref": "#/definitions/markdown"
        },
        "_definition": {
          "description": "Extensions for definition",
          "$ref": "#/definitions/Element"
        },
        "comment": {
          "description": "Explanatory notes and implementation guidance about the data element, including notes about how to use the data properly, exceptions to proper use, etc. (Note: The text you are reading is specified in ElementDefinition.comment).",
          "$ref": "#/definitions/markdown"
        },
        "_comment": {
          "description": "Extensions for comment",
          "$ref": "#/definitions/Element"
        },
        "requirements": {
          "description": "This element is for traceability of why the element was created and why the constraints exist as they do. This may be used to point to source materials or specifications that drove the structure of this element.",
          "$ref": "#/definitions/markdown"
        },
        "_requirements": {
          "description": "Extensions for requirements",
          "$ref": "#/definitions/Element"
        },
        "alias": {
          "description": "Identifies additional names by which this element might also be known.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_alias": {
          "description": "Extensions for alias",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "min": {
          "description": "The minimum number of times this element SHALL appear in the instance.",
          "$ref": "#/definitions/unsignedInt"
        },
        "_min": {
          "description": "Extensions for min",
          "$ref": "#/definitions/Element"
        },
        "max": {
          "description": "The maximum number of times this element is permitted to appear in the instance.",
          "$ref": "#/definitions/string"
        },
        "_max": {
          "description": "Extensions for max",
          "$ref": "#/definitions/Element"
        },
        "base": {
          "description": "Information about the base definition of the element, provided to make it unnecessary for tools to trace the deviation of the element through the derived and related profiles. When the element definition is not the original definition of an element - i.g. either in a constraint on another type, or for elements from a super type in a snap shot - then the information in provided in the element definition may be different to the base definition. On the original definition of the element, it will be same.",
          "$ref": "#/definitions/ElementDefinition_Base"
        },
        "contentReference": {
          "description": "Identifies an element defined elsewhere in the definition whose content rules should be applied to the current element. ContentReferences bring across all the rules that are in the ElementDefinition for the element, including definitions, cardinality constraints, bindings, invariants etc.",
          "$ref": "#/definitions/uri"
        },
        "_contentReference": {
          "description": "Extensions for contentReference",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "The data type or resource that the value of this element is permitted to be.",
          "items": {
            "$ref": "#/definitions/ElementDefinition_Type"
          },
          "type": "array"
        },
        "defaultValueBase64Binary": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "pattern": "^\\s*([A-Za-z0-9+\\\\/]{4})*(([A-Za-z0-9+\\\\/]{2}\u003d\u003d)|([A-Za-z0-9+\\\\/]{3}\u003d)|([A-Za-z0-9+\\\\/]{4}))\\s*$",
          "type": "string"
        },
        "_defaultValueBase64Binary": {
          "description": "Extensions for defaultValueBase64Binary",
          "$ref": "#/definitions/Element"
        },
        "defaultValueBoolean": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_defaultValueBoolean": {
          "description": "Extensions for defaultValueBoolean",
          "$ref": "#/definitions/Element"
        },
        "defaultValueCanonical": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_defaultValueCanonical": {
          "description": "Extensions for defaultValueCanonical",
          "$ref": "#/definitions/Element"
        },
        "defaultValueCode": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "pattern": "^[^\\s]+( [^\\s]+)*$",
          "type": "string"
        },
        "_defaultValueCode": {
          "description": "Extensions for defaultValueCode",
          "$ref": "#/definitions/Element"
        },
        "defaultValueDate": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_defaultValueDate": {
          "description": "Extensions for defaultValueDate",
          "$ref": "#/definitions/Element"
        },
        "defaultValueDateTime": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_defaultValueDateTime": {
          "description": "Extensions for defaultValueDateTime",
          "$ref": "#/definitions/Element"
        },
        "defaultValueDecimal": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_defaultValueDecimal": {
          "description": "Extensions for defaultValueDecimal",
          "$ref": "#/definitions/Element"
        },
        "defaultValueId": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string"
        },
        "_defaultValueId": {
          "description": "Extensions for defaultValueId",
          "$ref": "#/definitions/Element"
        },
        "defaultValueInstant": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string"
        },
        "_defaultValueInstant": {
          "description": "Extensions for defaultValueInstant",
          "$ref": "#/definitions/Element"
        },
        "defaultValueInteger": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_defaultValueInteger": {
          "description": "Extensions for defaultValueInteger",
          "$ref": "#/definitions/Element"
        },
        "defaultValueInteger64": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "string"
        },
        "_defaultValueInteger64": {
          "description": "Extensions for defaultValueInteger64",
          "$ref": "#/definitions/Element"
        },
        "defaultValueMarkdown": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "pattern": "^\\s*(\\S|\\s)*$",
          "type": "string"
        },
        "_defaultValueMarkdown": {
          "description": "Extensions for defaultValueMarkdown",
          "$ref": "#/definitions/Element"
        },
        "defaultValueOid": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
          "type": "string"
        },
        "_defaultValueOid": {
          "description": "Extensions for defaultValueOid",
          "$ref": "#/definitions/Element"
        },
        "defaultValuePositiveInt": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_defaultValuePositiveInt": {
          "description": "Extensions for defaultValuePositiveInt",
          "$ref": "#/definitions/Element"
        },
        "defaultValueString": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_defaultValueString": {
          "description": "Extensions for defaultValueString",
          "$ref": "#/definitions/Element"
        },
        "defaultValueTime": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?$",
          "type": "string"
        },
        "_defaultValueTime": {
          "description": "Extensions for defaultValueTime",
          "$ref": "#/definitions/Element"
        },
        "defaultValueUnsignedInt": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_defaultValueUnsignedInt": {
          "description": "Extensions for defaultValueUnsignedInt",
          "$ref": "#/definitions/Element"
        },
        "defaultValueUri": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_defaultValueUri": {
          "description": "Extensions for defaultValueUri",
          "$ref": "#/definitions/Element"
        },
        "defaultValueUrl": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_defaultValueUrl": {
          "description": "Extensions for defaultValueUrl",
          "$ref": "#/definitions/Element"
        },
        "defaultValueUuid": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
          "type": "string"
        },
        "_defaultValueUuid": {
          "description": "Extensions for defaultValueUuid",
          "$ref": "#/definitions/Element"
        },
        "defaultValueAddress": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/Address"
        },
        "defaultValueAge": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/Age"
        },
        "defaultValueAnnotation": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/Annotation"
        },
        "defaultValueAttachment": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/Attachment"
        },
        "defaultValueCodeableConcept": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "defaultValueCodeableReference": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/CodeableReference"
        },
        "defaultValueCoding": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/Coding"
        },
        "defaultValueContactPoint": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/ContactPoint"
        },
        "defaultValueCount": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/Count"
        },
        "defaultValueDistance": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/Distance"
        },
        "defaultValueDuration": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/Duration"
        },
        "defaultValueHumanName": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/HumanName"
        },
        "defaultValueIdentifier": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/Identifier"
        },
        "defaultValueMoney": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/Money"
        },
        "defaultValuePeriod": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/Period"
        },
        "defaultValueQuantity": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/Quantity"
        },
        "defaultValueRange": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/Range"
        },
        "defaultValueRatio": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/Ratio"
        },
        "defaultValueRatioRange": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/RatioRange"
        },
        "defaultValueReference": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/Reference"
        },
        "defaultValueSampledData": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/SampledData"
        },
        "defaultValueSignature": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/Signature"
        },
        "defaultValueTiming": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/Timing"
        },
        "defaultValueContactDetail": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/ContactDetail"
        },
        "defaultValueDataRequirement": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/DataRequirement"
        },
        "defaultValueExpression": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/Expression"
        },
        "defaultValueParameterDefinition": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/ParameterDefinition"
        },
        "defaultValueRelatedArtifact": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/RelatedArtifact"
        },
        "defaultValueTriggerDefinition": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/TriggerDefinition"
        },
        "defaultValueUsageContext": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/UsageContext"
        },
        "defaultValueAvailability": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/Availability"
        },
        "defaultValueExtendedContactDetail": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/ExtendedContactDetail"
        },
        "defaultValueDosage": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/Dosage"
        },
        "defaultValueMeta": {
          "description": "The value that should be used if there is no value stated in the instance (e.g. \u0027if not otherwise specified, the abstract is false\u0027).",
          "$ref": "#/definitions/Meta"
        },
        "meaningWhenMissing": {
          "description": "The Implicit meaning that is to be understood when this element is missing (e.g. \u0027when this element is missing, the period is ongoing\u0027).",
          "$ref": "#/definitions/markdown"
        },
        "_meaningWhenMissing": {
          "description": "Extensions for meaningWhenMissing",
          "$ref": "#/definitions/Element"
        },
        "orderMeaning": {
          "description": "If present, indicates that the order of the repeating element has meaning and describes what that meaning is.  If absent, it means that the order of the element has no meaning.",
          "$ref": "#/definitions/string"
        },
        "_orderMeaning": {
          "description": "Extensions for orderMeaning",
          "$ref": "#/definitions/Element"
        },
        "fixedBase64Binary": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "pattern": "^\\s*([A-Za-z0-9+\\\\/]{4})*(([A-Za-z0-9+\\\\/]{2}\u003d\u003d)|([A-Za-z0-9+\\\\/]{3}\u003d)|([A-Za-z0-9+\\\\/]{4}))\\s*$",
          "type": "string"
        },
        "_fixedBase64Binary": {
          "description": "Extensions for fixedBase64Binary",
          "$ref": "#/definitions/Element"
        },
        "fixedBoolean": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_fixedBoolean": {
          "description": "Extensions for fixedBoolean",
          "$ref": "#/definitions/Element"
        },
        "fixedCanonical": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_fixedCanonical": {
          "description": "Extensions for fixedCanonical",
          "$ref": "#/definitions/Element"
        },
        "fixedCode": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "pattern": "^[^\\s]+( [^\\s]+)*$",
          "type": "string"
        },
        "_fixedCode": {
          "description": "Extensions for fixedCode",
          "$ref": "#/definitions/Element"
        },
        "fixedDate": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_fixedDate": {
          "description": "Extensions for fixedDate",
          "$ref": "#/definitions/Element"
        },
        "fixedDateTime": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_fixedDateTime": {
          "description": "Extensions for fixedDateTime",
          "$ref": "#/definitions/Element"
        },
        "fixedDecimal": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_fixedDecimal": {
          "description": "Extensions for fixedDecimal",
          "$ref": "#/definitions/Element"
        },
        "fixedId": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string"
        },
        "_fixedId": {
          "description": "Extensions for fixedId",
          "$ref": "#/definitions/Element"
        },
        "fixedInstant": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string"
        },
        "_fixedInstant": {
          "description": "Extensions for fixedInstant",
          "$ref": "#/definitions/Element"
        },
        "fixedInteger": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_fixedInteger": {
          "description": "Extensions for fixedInteger",
          "$ref": "#/definitions/Element"
        },
        "fixedInteger64": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "string"
        },
        "_fixedInteger64": {
          "description": "Extensions for fixedInteger64",
          "$ref": "#/definitions/Element"
        },
        "fixedMarkdown": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "pattern": "^\\s*(\\S|\\s)*$",
          "type": "string"
        },
        "_fixedMarkdown": {
          "description": "Extensions for fixedMarkdown",
          "$ref": "#/definitions/Element"
        },
        "fixedOid": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
          "type": "string"
        },
        "_fixedOid": {
          "description": "Extensions for fixedOid",
          "$ref": "#/definitions/Element"
        },
        "fixedPositiveInt": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_fixedPositiveInt": {
          "description": "Extensions for fixedPositiveInt",
          "$ref": "#/definitions/Element"
        },
        "fixedString": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_fixedString": {
          "description": "Extensions for fixedString",
          "$ref": "#/definitions/Element"
        },
        "fixedTime": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?$",
          "type": "string"
        },
        "_fixedTime": {
          "description": "Extensions for fixedTime",
          "$ref": "#/definitions/Element"
        },
        "fixedUnsignedInt": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_fixedUnsignedInt": {
          "description": "Extensions for fixedUnsignedInt",
          "$ref": "#/definitions/Element"
        },
        "fixedUri": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_fixedUri": {
          "description": "Extensions for fixedUri",
          "$ref": "#/definitions/Element"
        },
        "fixedUrl": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_fixedUrl": {
          "description": "Extensions for fixedUrl",
          "$ref": "#/definitions/Element"
        },
        "fixedUuid": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
          "type": "string"
        },
        "_fixedUuid": {
          "description": "Extensions for fixedUuid",
          "$ref": "#/definitions/Element"
        },
        "fixedAddress": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/Address"
        },
        "fixedAge": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/Age"
        },
        "fixedAnnotation": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/Annotation"
        },
        "fixedAttachment": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/Attachment"
        },
        "fixedCodeableConcept": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "fixedCodeableReference": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/CodeableReference"
        },
        "fixedCoding": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/Coding"
        },
        "fixedContactPoint": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/ContactPoint"
        },
        "fixedCount": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/Count"
        },
        "fixedDistance": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/Distance"
        },
        "fixedDuration": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/Duration"
        },
        "fixedHumanName": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/HumanName"
        },
        "fixedIdentifier": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/Identifier"
        },
        "fixedMoney": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/Money"
        },
        "fixedPeriod": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/Period"
        },
        "fixedQuantity": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/Quantity"
        },
        "fixedRange": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/Range"
        },
        "fixedRatio": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/Ratio"
        },
        "fixedRatioRange": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/RatioRange"
        },
        "fixedReference": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/Reference"
        },
        "fixedSampledData": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/SampledData"
        },
        "fixedSignature": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/Signature"
        },
        "fixedTiming": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/Timing"
        },
        "fixedContactDetail": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/ContactDetail"
        },
        "fixedDataRequirement": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/DataRequirement"
        },
        "fixedExpression": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/Expression"
        },
        "fixedParameterDefinition": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/ParameterDefinition"
        },
        "fixedRelatedArtifact": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/RelatedArtifact"
        },
        "fixedTriggerDefinition": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/TriggerDefinition"
        },
        "fixedUsageContext": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/UsageContext"
        },
        "fixedAvailability": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/Availability"
        },
        "fixedExtendedContactDetail": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/ExtendedContactDetail"
        },
        "fixedDosage": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/Dosage"
        },
        "fixedMeta": {
          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance, if present. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
          "$ref": "#/definitions/Meta"
        },
        "patternBase64Binary": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "pattern": "^\\s*([A-Za-z0-9+\\\\/]{4})*(([A-Za-z0-9+\\\\/]{2}\u003d\u003d)|([A-Za-z0-9+\\\\/]{3}\u003d)|([A-Za-z0-9+\\\\/]{4}))\\s*$",
          "type": "string"
        },
        "_patternBase64Binary": {
          "description": "Extensions for patternBase64Binary",
          "$ref": "#/definitions/Element"
        },
        "patternBoolean": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_patternBoolean": {
          "description": "Extensions for patternBoolean",
          "$ref": "#/definitions/Element"
        },
        "patternCanonical": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_patternCanonical": {
          "description": "Extensions for patternCanonical",
          "$ref": "#/definitions/Element"
        },
        "patternCode": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "pattern": "^[^\\s]+( [^\\s]+)*$",
          "type": "string"
        },
        "_patternCode": {
          "description": "Extensions for patternCode",
          "$ref": "#/definitions/Element"
        },
        "patternDate": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_patternDate": {
          "description": "Extensions for patternDate",
          "$ref": "#/definitions/Element"
        },
        "patternDateTime": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_patternDateTime": {
          "description": "Extensions for patternDateTime",
          "$ref": "#/definitions/Element"
        },
        "patternDecimal": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_patternDecimal": {
          "description": "Extensions for patternDecimal",
          "$ref": "#/definitions/Element"
        },
        "patternId": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string"
        },
        "_patternId": {
          "description": "Extensions for patternId",
          "$ref": "#/definitions/Element"
        },
        "patternInstant": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string"
        },
        "_patternInstant": {
          "description": "Extensions for patternInstant",
          "$ref": "#/definitions/Element"
        },
        "patternInteger": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_patternInteger": {
          "description": "Extensions for patternInteger",
          "$ref": "#/definitions/Element"
        },
        "patternInteger64": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "string"
        },
        "_patternInteger64": {
          "description": "Extensions for patternInteger64",
          "$ref": "#/definitions/Element"
        },
        "patternMarkdown": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "pattern": "^\\s*(\\S|\\s)*$",
          "type": "string"
        },
        "_patternMarkdown": {
          "description": "Extensions for patternMarkdown",
          "$ref": "#/definitions/Element"
        },
        "patternOid": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
          "type": "string"
        },
        "_patternOid": {
          "description": "Extensions for patternOid",
          "$ref": "#/definitions/Element"
        },
        "patternPositiveInt": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_patternPositiveInt": {
          "description": "Extensions for patternPositiveInt",
          "$ref": "#/definitions/Element"
        },
        "patternString": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_patternString": {
          "description": "Extensions for patternString",
          "$ref": "#/definitions/Element"
        },
        "patternTime": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?$",
          "type": "string"
        },
        "_patternTime": {
          "description": "Extensions for patternTime",
          "$ref": "#/definitions/Element"
        },
        "patternUnsignedInt": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_patternUnsignedInt": {
          "description": "Extensions for patternUnsignedInt",
          "$ref": "#/definitions/Element"
        },
        "patternUri": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_patternUri": {
          "description": "Extensions for patternUri",
          "$ref": "#/definitions/Element"
        },
        "patternUrl": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_patternUrl": {
          "description": "Extensions for patternUrl",
          "$ref": "#/definitions/Element"
        },
        "patternUuid": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
          "type": "string"
        },
        "_patternUuid": {
          "description": "Extensions for patternUuid",
          "$ref": "#/definitions/Element"
        },
        "patternAddress": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/Address"
        },
        "patternAge": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/Age"
        },
        "patternAnnotation": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/Annotation"
        },
        "patternAttachment": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/Attachment"
        },
        "patternCodeableConcept": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "patternCodeableReference": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/CodeableReference"
        },
        "patternCoding": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/Coding"
        },
        "patternContactPoint": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/ContactPoint"
        },
        "patternCount": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/Count"
        },
        "patternDistance": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/Distance"
        },
        "patternDuration": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/Duration"
        },
        "patternHumanName": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/HumanName"
        },
        "patternIdentifier": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/Identifier"
        },
        "patternMoney": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/Money"
        },
        "patternPeriod": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/Period"
        },
        "patternQuantity": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/Quantity"
        },
        "patternRange": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/Range"
        },
        "patternRatio": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/Ratio"
        },
        "patternRatioRange": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/RatioRange"
        },
        "patternReference": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/Reference"
        },
        "patternSampledData": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/SampledData"
        },
        "patternSignature": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/Signature"
        },
        "patternTiming": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/Timing"
        },
        "patternContactDetail": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/ContactDetail"
        },
        "patternDataRequirement": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/DataRequirement"
        },
        "patternExpression": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/Expression"
        },
        "patternParameterDefinition": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/ParameterDefinition"
        },
        "patternRelatedArtifact": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/RelatedArtifact"
        },
        "patternTriggerDefinition": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/TriggerDefinition"
        },
        "patternUsageContext": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/UsageContext"
        },
        "patternAvailability": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/Availability"
        },
        "patternExtendedContactDetail": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/ExtendedContactDetail"
        },
        "patternDosage": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/Dosage"
        },
        "patternMeta": {
          "description": "Specifies a value that each occurrence of the element in the instance SHALL follow - that is, any value in the pattern must be found in the instance, if the element has a value. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen an element within a pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value\n\nIf a pattern[x] is declared on a repeating element, the pattern applies to all repetitions.  If the desire is for a pattern to apply to only one element or a subset of elements, slicing must be used. See [Examples of Patterns](elementdefinition-examples.html#pattern-examples) for examples of pattern usage and the effect it will have.",
          "$ref": "#/definitions/Meta"
        },
        "example": {
          "description": "A sample value for this element demonstrating the type of information that would typically be found in the element.",
          "items": {
            "$ref": "#/definitions/ElementDefinition_Example"
          },
          "type": "array"
        },
        "minValueDate": {
          "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_minValueDate": {
          "description": "Extensions for minValueDate",
          "$ref": "#/definitions/Element"
        },
        "minValueDateTime": {
          "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_minValueDateTime": {
          "description": "Extensions for minValueDateTime",
          "$ref": "#/definitions/Element"
        },
        "minValueInstant": {
          "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string"
        },
        "_minValueInstant": {
          "description": "Extensions for minValueInstant",
          "$ref": "#/definitions/Element"
        },
        "minValueTime": {
          "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?$",
          "type": "string"
        },
        "_minValueTime": {
          "description": "Extensions for minValueTime",
          "$ref": "#/definitions/Element"
        },
        "minValueDecimal": {
          "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_minValueDecimal": {
          "description": "Extensions for minValueDecimal",
          "$ref": "#/definitions/Element"
        },
        "minValueInteger": {
          "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_minValueInteger": {
          "description": "Extensions for minValueInteger",
          "$ref": "#/definitions/Element"
        },
        "minValueInteger64": {
          "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "string"
        },
        "_minValueInteger64": {
          "description": "Extensions for minValueInteger64",
          "$ref": "#/definitions/Element"
        },
        "minValuePositiveInt": {
          "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_minValuePositiveInt": {
          "description": "Extensions for minValuePositiveInt",
          "$ref": "#/definitions/Element"
        },
        "minValueUnsignedInt": {
          "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_minValueUnsignedInt": {
          "description": "Extensions for minValueUnsignedInt",
          "$ref": "#/definitions/Element"
        },
        "minValueQuantity": {
          "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
          "$ref": "#/definitions/Quantity"
        },
        "maxValueDate": {
          "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_maxValueDate": {
          "description": "Extensions for maxValueDate",
          "$ref": "#/definitions/Element"
        },
        "maxValueDateTime": {
          "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_maxValueDateTime": {
          "description": "Extensions for maxValueDateTime",
          "$ref": "#/definitions/Element"
        },
        "maxValueInstant": {
          "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string"
        },
        "_maxValueInstant": {
          "description": "Extensions for maxValueInstant",
          "$ref": "#/definitions/Element"
        },
        "maxValueTime": {
          "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?$",
          "type": "string"
        },
        "_maxValueTime": {
          "description": "Extensions for maxValueTime",
          "$ref": "#/definitions/Element"
        },
        "maxValueDecimal": {
          "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_maxValueDecimal": {
          "description": "Extensions for maxValueDecimal",
          "$ref": "#/definitions/Element"
        },
        "maxValueInteger": {
          "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_maxValueInteger": {
          "description": "Extensions for maxValueInteger",
          "$ref": "#/definitions/Element"
        },
        "maxValueInteger64": {
          "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "string"
        },
        "_maxValueInteger64": {
          "description": "Extensions for maxValueInteger64",
          "$ref": "#/definitions/Element"
        },
        "maxValuePositiveInt": {
          "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_maxValuePositiveInt": {
          "description": "Extensions for maxValuePositiveInt",
          "$ref": "#/definitions/Element"
        },
        "maxValueUnsignedInt": {
          "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_maxValueUnsignedInt": {
          "description": "Extensions for maxValueUnsignedInt",
          "$ref": "#/definitions/Element"
        },
        "maxValueQuantity": {
          "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
          "$ref": "#/definitions/Quantity"
        },
        "maxLength": {
          "description": "Indicates the maximum length in characters that is permitted to be present in conformant instances and which is expected to be supported by conformant consumers that support the element. ```maxLength``` SHOULD only be used on primitive data types that have a string representation (see [Datatype characteristics](extension-structuredefinition-type-characteristics.html)).",
          "$ref": "#/definitions/integer"
        },
        "_maxLength": {
          "description": "Extensions for maxLength",
          "$ref": "#/definitions/Element"
        },
        "condition": {
          "description": "A reference to an invariant that may make additional statements about the cardinality or value in the instance.",
          "items": {
            "$ref": "#/definitions/id"
          },
          "type": "array"
        },
        "_condition": {
          "description": "Extensions for condition",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "constraint": {
          "description": "Formal constraints such as co-occurrence and other constraints that can be computationally evaluated within the context of the instance.",
          "items": {
            "$ref": "#/definitions/ElementDefinition_Constraint"
          },
          "type": "array"
        },
        "mustHaveValue": {
          "description": "Specifies for a primitive data type that the value of the data type cannot be replaced by an extension.",
          "$ref": "#/definitions/boolean"
        },
        "_mustHaveValue": {
          "description": "Extensions for mustHaveValue",
          "$ref": "#/definitions/Element"
        },
        "valueAlternatives": {
          "description": "Specifies a list of extensions that can appear in place of a primitive value.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "mustSupport": {
          "description": "If true, implementations that produce or consume resources SHALL provide \"support\" for the element in some meaningful way. Note that this is being phased out and replaced by obligations (see below).  If false, the element may be ignored and not supported. If false, whether to populate or use the data element in any way is at the discretion of the implementation.",
          "$ref": "#/definitions/boolean"
        },
        "_mustSupport": {
          "description": "Extensions for mustSupport",
          "$ref": "#/definitions/Element"
        },
        "obligation": {
          "description": "Documents obligations that apply to applications implementing this element. The obligations relate to application behaviour, not the content of the element itself in the resource instances that contain this element.",
          "items": {
            "$ref": "#/definitions/ElementDefinition_Obligation"
          },
          "type": "array"
        },
        "isModifier": {
          "description": "If true, the value of this element affects the interpretation of the element or resource that contains it, and the value of the element cannot be ignored. Typically, this is used for status, negation and qualification codes. The effect of this is that the element cannot be ignored by systems: they SHALL either recognize the element and process it, and/or a pre-determination has been made that it is not relevant to their particular system.",
          "$ref": "#/definitions/boolean"
        },
        "_isModifier": {
          "description": "Extensions for isModifier",
          "$ref": "#/definitions/Element"
        },
        "isModifierReason": {
          "description": "Explains how that element affects the interpretation of the resource or element that contains it.",
          "$ref": "#/definitions/string"
        },
        "_isModifierReason": {
          "description": "Extensions for isModifierReason",
          "$ref": "#/definitions/Element"
        },
        "isSummary": {
          "description": "Whether the element should be included if a client requests a search with the parameter _summary\u003dtrue.",
          "$ref": "#/definitions/boolean"
        },
        "_isSummary": {
          "description": "Extensions for isSummary",
          "$ref": "#/definitions/Element"
        },
        "binding": {
          "description": "Binds to a value set if this element is coded (code, Coding, CodeableConcept, Quantity), or the data types (string, uri).",
          "$ref": "#/definitions/ElementDefinition_Binding"
        },
        "mapping": {
          "description": "Identifies a concept from an external specification that roughly corresponds to this element.",
          "items": {
            "$ref": "#/definitions/ElementDefinition_Mapping"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ElementDefinition_Slicing": {
      "description": "Captures constraints on each element within the resource, profile, or extension.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "discriminator": {
          "description": "Designates which child elements are used to discriminate between the slices when processing an instance. If one or more discriminators are provided, the value of the child elements in the instance data SHALL completely distinguish which slice the element in the resource matches based on the allowed values for those elements in each of the slices.",
          "items": {
            "$ref": "#/definitions/ElementDefinition_Discriminator"
          },
          "type": "array"
        },
        "description": {
          "description": "A human-readable text description of how the slicing works. If there is no discriminator, this is required to be present to provide whatever information is possible about how the slices can be differentiated.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "ordered": {
          "description": "If the matching elements have to occur in the same order as defined in the profile.",
          "$ref": "#/definitions/boolean"
        },
        "_ordered": {
          "description": "Extensions for ordered",
          "$ref": "#/definitions/Element"
        },
        "rules": {
          "description": "Whether additional slices are allowed or not. When the slices are ordered, profile authors can also say that additional slices are only allowed at the end.",
          "enum": [
            "closed",
            "open",
            "openAtEnd"
          ]
        },
        "_rules": {
          "description": "Extensions for rules",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ElementDefinition_Discriminator": {
      "description": "Captures constraints on each element within the resource, profile, or extension.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "How the element value is interpreted when discrimination is evaluated.",
          "enum": [
            "value",
            "exists",
            "pattern",
            "type",
            "profile",
            "position"
          ]
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "path": {
          "description": "A FHIRPath expression, using [the simple subset of FHIRPath](fhirpath.html#simple), that is used to identify the element on which discrimination is based.",
          "$ref": "#/definitions/string"
        },
        "_path": {
          "description": "Extensions for path",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ElementDefinition_Base": {
      "description": "Captures constraints on each element within the resource, profile, or extension.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "path": {
          "description": "The Path that identifies the base element - this matches the ElementDefinition.path for that element. Across FHIR, there is only one base definition of any element - that is, an element definition on a [[[StructureDefinition]]] without a StructureDefinition.base.",
          "$ref": "#/definitions/string"
        },
        "_path": {
          "description": "Extensions for path",
          "$ref": "#/definitions/Element"
        },
        "min": {
          "description": "Minimum cardinality of the base element identified by the path.",
          "$ref": "#/definitions/unsignedInt"
        },
        "_min": {
          "description": "Extensions for min",
          "$ref": "#/definitions/Element"
        },
        "max": {
          "description": "Maximum cardinality of the base element identified by the path.",
          "$ref": "#/definitions/string"
        },
        "_max": {
          "description": "Extensions for max",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ElementDefinition_Type": {
      "description": "Captures constraints on each element within the resource, profile, or extension.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "URL of Data type or Resource that is a(or the) type used for this element. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition e.g. \"string\" is a reference to http://hl7.org/fhir/StructureDefinition/string. Absolute URLs are only allowed in logical models.",
          "$ref": "#/definitions/uri"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "profile": {
          "description": "Identifies a profile structure or implementation Guide that applies to the datatype this element refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the type SHALL conform to at least one profile defined in the implementation guide.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "targetProfile": {
          "description": "Used when the type is \"Reference\" or \"canonical\", and identifies a profile structure or implementation Guide that applies to the target of the reference this element refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the target resource SHALL conform to at least one profile defined in the implementation guide.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "aggregation": {
          "description": "If the type is a reference to another resource, how the resource is or can be aggregated - is it a contained resource, or a reference, and if the context is a bundle, is it included in the bundle.",
          "items": {
            "enum": [
              "contained",
              "referenced",
              "bundled"
            ]
          },
          "type": "array"
        },
        "_aggregation": {
          "description": "Extensions for aggregation",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "versioning": {
          "description": "Whether this reference needs to be version specific or version independent, or whether either can be used.",
          "enum": [
            "either",
            "independent",
            "specific"
          ]
        },
        "_versioning": {
          "description": "Extensions for versioning",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ElementDefinition_Example": {
      "description": "Captures constraints on each element within the resource, profile, or extension.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "label": {
          "description": "Describes the purpose of this example amoung the set of examples.",
          "$ref": "#/definitions/string"
        },
        "_label": {
          "description": "Extensions for label",
          "$ref": "#/definitions/Element"
        },
        "valueBase64Binary": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "pattern": "^\\s*([A-Za-z0-9+\\\\/]{4})*(([A-Za-z0-9+\\\\/]{2}\u003d\u003d)|([A-Za-z0-9+\\\\/]{3}\u003d)|([A-Za-z0-9+\\\\/]{4}))\\s*$",
          "type": "string"
        },
        "_valueBase64Binary": {
          "description": "Extensions for valueBase64Binary",
          "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueCanonical": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueCanonical": {
          "description": "Extensions for valueCanonical",
          "$ref": "#/definitions/Element"
        },
        "valueCode": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "pattern": "^[^\\s]+( [^\\s]+)*$",
          "type": "string"
        },
        "_valueCode": {
          "description": "Extensions for valueCode",
          "$ref": "#/definitions/Element"
        },
        "valueDate": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_valueDate": {
          "description": "Extensions for valueDate",
          "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_valueDateTime": {
          "description": "Extensions for valueDateTime",
          "$ref": "#/definitions/Element"
        },
        "valueDecimal": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_valueDecimal": {
          "description": "Extensions for valueDecimal",
          "$ref": "#/definitions/Element"
        },
        "valueId": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string"
        },
        "_valueId": {
          "description": "Extensions for valueId",
          "$ref": "#/definitions/Element"
        },
        "valueInstant": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string"
        },
        "_valueInstant": {
          "description": "Extensions for valueInstant",
          "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": {
          "description": "Extensions for valueInteger",
          "$ref": "#/definitions/Element"
        },
        "valueInteger64": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "string"
        },
        "_valueInteger64": {
          "description": "Extensions for valueInteger64",
          "$ref": "#/definitions/Element"
        },
        "valueMarkdown": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "pattern": "^\\s*(\\S|\\s)*$",
          "type": "string"
        },
        "_valueMarkdown": {
          "description": "Extensions for valueMarkdown",
          "$ref": "#/definitions/Element"
        },
        "valueOid": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
          "type": "string"
        },
        "_valueOid": {
          "description": "Extensions for valueOid",
          "$ref": "#/definitions/Element"
        },
        "valuePositiveInt": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_valuePositiveInt": {
          "description": "Extensions for valuePositiveInt",
          "$ref": "#/definitions/Element"
        },
        "valueString": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueTime": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?$",
          "type": "string"
        },
        "_valueTime": {
          "description": "Extensions for valueTime",
          "$ref": "#/definitions/Element"
        },
        "valueUnsignedInt": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_valueUnsignedInt": {
          "description": "Extensions for valueUnsignedInt",
          "$ref": "#/definitions/Element"
        },
        "valueUri": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUri": {
          "description": "Extensions for valueUri",
          "$ref": "#/definitions/Element"
        },
        "valueUrl": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUrl": {
          "description": "Extensions for valueUrl",
          "$ref": "#/definitions/Element"
        },
        "valueUuid": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
          "type": "string"
        },
        "_valueUuid": {
          "description": "Extensions for valueUuid",
          "$ref": "#/definitions/Element"
        },
        "valueAddress": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/Address"
        },
        "valueAge": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/Age"
        },
        "valueAnnotation": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/Annotation"
        },
        "valueAttachment": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/Attachment"
        },
        "valueCodeableConcept": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCodeableReference": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/CodeableReference"
        },
        "valueCoding": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/Coding"
        },
        "valueContactPoint": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/ContactPoint"
        },
        "valueCount": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/Count"
        },
        "valueDistance": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/Distance"
        },
        "valueDuration": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/Duration"
        },
        "valueHumanName": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/HumanName"
        },
        "valueIdentifier": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/Identifier"
        },
        "valueMoney": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/Money"
        },
        "valuePeriod": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/Period"
        },
        "valueQuantity": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/Range"
        },
        "valueRatio": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/Ratio"
        },
        "valueRatioRange": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/RatioRange"
        },
        "valueReference": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/Reference"
        },
        "valueSampledData": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/SampledData"
        },
        "valueSignature": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/Signature"
        },
        "valueTiming": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/Timing"
        },
        "valueContactDetail": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/ContactDetail"
        },
        "valueDataRequirement": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/DataRequirement"
        },
        "valueExpression": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/Expression"
        },
        "valueParameterDefinition": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/ParameterDefinition"
        },
        "valueRelatedArtifact": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/RelatedArtifact"
        },
        "valueTriggerDefinition": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/TriggerDefinition"
        },
        "valueUsageContext": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/UsageContext"
        },
        "valueAvailability": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/Availability"
        },
        "valueExtendedContactDetail": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/ExtendedContactDetail"
        },
        "valueDosage": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/Dosage"
        },
        "valueMeta": {
          "description": "The actual value for the element, which must be one of the types allowed for this element.",
          "$ref": "#/definitions/Meta"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ElementDefinition_Constraint": {
      "description": "Captures constraints on each element within the resource, profile, or extension.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "key": {
          "description": "Allows identification of which elements have their cardinalities impacted by the constraint.  Will not be referenced for constraints that do not affect cardinality.",
          "$ref": "#/definitions/id"
        },
        "_key": {
          "description": "Extensions for key",
          "$ref": "#/definitions/Element"
        },
        "requirements": {
          "description": "Description of why this constraint is necessary or appropriate.",
          "$ref": "#/definitions/markdown"
        },
        "_requirements": {
          "description": "Extensions for requirements",
          "$ref": "#/definitions/Element"
        },
        "severity": {
          "description": "Identifies the impact constraint violation has on the conformance of the instance.",
          "enum": [
            "error",
            "warning"
          ]
        },
        "_severity": {
          "description": "Extensions for severity",
          "$ref": "#/definitions/Element"
        },
        "suppress": {
          "description": "If true, indicates that the warning or best practice guideline should be suppressed.",
          "$ref": "#/definitions/boolean"
        },
        "_suppress": {
          "description": "Extensions for suppress",
          "$ref": "#/definitions/Element"
        },
        "human": {
          "description": "Text that can be used to describe the constraint in messages identifying that the constraint has been violated.",
          "$ref": "#/definitions/string"
        },
        "_human": {
          "description": "Extensions for human",
          "$ref": "#/definitions/Element"
        },
        "expression": {
          "description": "A [FHIRPath](fhirpath.html) expression of constraint that can be executed to see if this constraint is met.",
          "$ref": "#/definitions/string"
        },
        "_expression": {
          "description": "Extensions for expression",
          "$ref": "#/definitions/Element"
        },
        "source": {
          "description": "A reference to the original source of the constraint, for traceability purposes.",
          "$ref": "#/definitions/canonical"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ElementDefinition_Obligation": {
      "description": "Captures constraints on each element within the resource, profile, or extension.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "Codes, potentially combination code, that describe the obligations that apply to implementing applications.",
          "$ref": "#/definitions/Coding"
        },
        "actor": {
          "description": "Actor(s) to which the obligation applies.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "documentation": {
          "description": "Human readable documentation of the purpose or application of the obligation.",
          "$ref": "#/definitions/markdown"
        },
        "_documentation": {
          "description": "Extensions for documentation",
          "$ref": "#/definitions/Element"
        },
        "usage": {
          "description": "Qualifies the usage of the obligation. Typically obligations are qualified by jurisdiction, but they may also be qualified by gender, workflow status, clinical domain etc. The information to decide whether a usege context applies is usually outside the resource, determined by context, and this might present challenges for validation tooling.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "filter": {
          "description": "A FHIRPath expression that restricts to the obligation to one of a set of repeats.",
          "$ref": "#/definitions/string"
        },
        "_filter": {
          "description": "Extensions for filter",
          "$ref": "#/definitions/Element"
        },
        "filterDocumentation": {
          "description": "Documents the FHIRPath expression for the benefit of users who are not familiar with FHIRPath.",
          "$ref": "#/definitions/string"
        },
        "_filterDocumentation": {
          "description": "Extensions for filterDocumentation",
          "$ref": "#/definitions/Element"
        },
        "process": {
          "description": "A process that the obligation applies to. This might a canonical URL for an OperationDefinition, or some other reference.",
          "items": {
            "$ref": "#/definitions/uri"
          },
          "type": "array"
        },
        "_process": {
          "description": "Extensions for process",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "ElementDefinition_Binding": {
      "description": "Captures constraints on each element within the resource, profile, or extension.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "strength": {
          "description": "Indicates the degree of conformance expectations associated with this binding - that is, the degree to which the provided value set must be adhered to in the instances.",
          "enum": [
            "required",
            "extensible",
            "preferred",
            "example"
          ]
        },
        "_strength": {
          "description": "Extensions for strength",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "Describes the intended use of this particular set of codes.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "valueSet": {
          "description": "Refers to the value set that identifies the set of codes the binding refers to.",
          "$ref": "#/definitions/canonical"
        },
        "additional": {
          "description": "Additional bindings that help applications implementing this element. Additional bindings do not replace the main binding but provide more information and/or context.",
          "items": {
            "$ref": "#/definitions/ElementDefinition_Additional"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ElementDefinition_Additional": {
      "description": "Captures constraints on each element within the resource, profile, or extension.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "purpose": {
          "description": "The use of this additional binding.",
          "$ref": "#/definitions/code"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "valueSet": {
          "description": "The valueSet that is being bound for the purpose.",
          "$ref": "#/definitions/canonical"
        },
        "documentation": {
          "description": "Documentation of the purpose of use of the bindingproviding additional information about how it is intended to be used.",
          "$ref": "#/definitions/markdown"
        },
        "_documentation": {
          "description": "Extensions for documentation",
          "$ref": "#/definitions/Element"
        },
        "shortDoco": {
          "description": "Concise documentation - for summary tables.",
          "$ref": "#/definitions/string"
        },
        "_shortDoco": {
          "description": "Extensions for shortDoco",
          "$ref": "#/definitions/Element"
        },
        "usage": {
          "description": "Qualifies the usage of the binding. Typically bindings are qualified by jurisdiction, but they may also be qualified by gender, workflow status, clinical domain etc. The information to decide whether a usege context applies is usually outside the resource, determined by context, and this might present challenges for validation tooling.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "any": {
          "description": "Whether the binding applies to all repeats, or just to any one of them. This is only relevant for elements that can repeat.",
          "$ref": "#/definitions/boolean"
        },
        "_any": {
          "description": "Extensions for any",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "valueSet"
      ]
    },
    "ElementDefinition_Mapping": {
      "description": "Captures constraints on each element within the resource, profile, or extension.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identity": {
          "description": "An internal reference to the definition of a mapping.",
          "$ref": "#/definitions/id"
        },
        "_identity": {
          "description": "Extensions for identity",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "Identifies the computable language in which mapping.map is expressed.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "map": {
          "description": "Expresses what part of the target specification corresponds to this element.",
          "$ref": "#/definitions/string"
        },
        "_map": {
          "description": "Extensions for map",
          "$ref": "#/definitions/Element"
        },
        "comment": {
          "description": "Comments that provide information about the mapping or its use.",
          "$ref": "#/definitions/markdown"
        },
        "_comment": {
          "description": "Extensions for comment",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Account": {
      "description": "A financial tool for tracking value accrued for a particular purpose.  In the healthcare field, used to track charges for a patient, cost centers, etc.",
      "properties": {
        "resourceType": {
          "description": "This is a Account resource",
          "const": "Account"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Unique identifier used to reference the account.  Might or might not be intended for human use (e.g. credit card number).",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "Indicates whether the account is presently used/usable or not.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "billingStatus": {
          "description": "The BillingStatus tracks the lifecycle of the account through the billing process. It indicates how transactions are treated when they are allocated to the account.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "type": {
          "description": "Categorizes the account for reporting and searching purposes.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "name": {
          "description": "Name used for the account when displaying it to humans in reports, etc.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "subject": {
          "description": "Identifies the entity which incurs the expenses. While the immediate recipients of services or goods might be entities related to the subject, the expenses were ultimately incurred by the subject of the Account.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "servicePeriod": {
          "description": "The date range of services associated with this account.",
          "$ref": "#/definitions/Period"
        },
        "coverage": {
          "description": "The party(s) that are responsible for covering the payment of this account, and what order should they be applied to the account.",
          "items": {
            "$ref": "#/definitions/Account_Coverage"
          },
          "type": "array"
        },
        "owner": {
          "description": "Indicates the service area, hospital, department, etc. with responsibility for managing the Account.",
          "$ref": "#/definitions/Reference"
        },
        "description": {
          "description": "Provides additional information about what the account tracks and how it is used.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "guarantor": {
          "description": "The parties responsible for balancing the account if other payment options fall short.",
          "items": {
            "$ref": "#/definitions/Account_Guarantor"
          },
          "type": "array"
        },
        "relatedAccount": {
          "description": "Other associated accounts related to this account.",
          "items": {
            "$ref": "#/definitions/Account_RelatedAccount"
          },
          "type": "array"
        },
        "currency": {
          "description": "The default currency for the account.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "balance": {
          "description": "The calculated account balances - these are calculated and processed by the finance system.\r\rThe balances with a `term` that is not current are usually generated/updated by an invoicing or similar process.",
          "items": {
            "$ref": "#/definitions/Account_Balance"
          },
          "type": "array"
        },
        "calculatedAt": {
          "description": "Time the balance amount was calculated.",
          "$ref": "#/definitions/instant"
        },
        "_calculatedAt": {
          "description": "Extensions for calculatedAt",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Account_Coverage": {
      "description": "A financial tool for tracking value accrued for a particular purpose.  In the healthcare field, used to track charges for a patient, cost centers, etc.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "coverage": {
          "description": "The party(s) that contribute to payment (or part of) of the charges applied to this account (including self-pay).\n\nA coverage may only be responsible for specific types of charges, and the sequence of the coverages in the account could be important when processing billing.",
          "$ref": "#/definitions/Reference"
        },
        "priority": {
          "description": "The priority of the coverage in the context of this account.",
          "$ref": "#/definitions/positiveInt"
        },
        "_priority": {
          "description": "Extensions for priority",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "coverage"
      ]
    },
    "Account_Guarantor": {
      "description": "A financial tool for tracking value accrued for a particular purpose.  In the healthcare field, used to track charges for a patient, cost centers, etc.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "party": {
          "description": "The entity who is responsible.",
          "$ref": "#/definitions/Reference"
        },
        "onHold": {
          "description": "A guarantor may be placed on credit hold or otherwise have their role temporarily suspended.",
          "$ref": "#/definitions/boolean"
        },
        "_onHold": {
          "description": "Extensions for onHold",
          "$ref": "#/definitions/Element"
        },
        "period": {
          "description": "The timeframe during which the guarantor accepts responsibility for the account.",
          "$ref": "#/definitions/Period"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "party"
      ]
    },
    "Account_RelatedAccount": {
      "description": "A financial tool for tracking value accrued for a particular purpose.  In the healthcare field, used to track charges for a patient, cost centers, etc.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "relationship": {
          "description": "Relationship of the associated Account.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "account": {
          "description": "Reference to an associated Account.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "account"
      ]
    },
    "Account_Balance": {
      "description": "A financial tool for tracking value accrued for a particular purpose.  In the healthcare field, used to track charges for a patient, cost centers, etc.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "aggregate": {
          "description": "Who is expected to pay this part of the balance.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "term": {
          "description": "The term of the account balances - The balance value is the amount that was outstanding for this age.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "estimate": {
          "description": "The amount is only an estimated value - this is likely common for `current` term balances, but not with known terms (that were generated by a backend process).",
          "$ref": "#/definitions/boolean"
        },
        "_estimate": {
          "description": "Extensions for estimate",
          "$ref": "#/definitions/Element"
        },
        "amount": {
          "description": "The actual balance value calculated for the age defined in the term property.",
          "$ref": "#/definitions/Money"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "amount"
      ]
    },
    "ActivityDefinition": {
      "description": "This resource allows for the definition of some activity to be performed, independent of a particular patient, practitioner, or other performance context.",
      "properties": {
        "resourceType": {
          "description": "This is a ActivityDefinition resource",
          "const": "ActivityDefinition"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this activity definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this activity definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the activity definition is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this activity definition when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the activity definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the activity definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active assets.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the activity definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the activity definition.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this activity definition. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this activity definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the activity definition was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the activity definition changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the activity definition.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the activity definition from a consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate activity definition instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the activity definition is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this activity definition is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the activity definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the activity definition.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "approvalDate": {
          "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
          "$ref": "#/definitions/date"
        },
        "_approvalDate": {
          "description": "Extensions for approvalDate",
          "$ref": "#/definitions/Element"
        },
        "lastReviewDate": {
          "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
          "$ref": "#/definitions/date"
        },
        "_lastReviewDate": {
          "description": "Extensions for lastReviewDate",
          "$ref": "#/definitions/Element"
        },
        "effectivePeriod": {
          "description": "The period during which the activity definition content was or is planned to be in active use.",
          "$ref": "#/definitions/Period"
        },
        "topic": {
          "description": "Descriptive topics related to the content of the activity. Topics provide a high-level categorization of the activity that can be useful for filtering and searching.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "author": {
          "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "editor": {
          "description": "An individual or organization primarily responsible for internal coherence of the content.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "reviewer": {
          "description": "An individual or organization primarily responsible for review of some aspect of the content.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "endorser": {
          "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "relatedArtifact": {
          "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          },
          "type": "array"
        },
        "subtitle": {
          "description": "An explanatory or alternate title for the activity definition giving additional information about its content.",
          "$ref": "#/definitions/string"
        },
        "_subtitle": {
          "description": "Extensions for subtitle",
          "$ref": "#/definitions/Element"
        },
        "subjectCodeableConcept": {
          "description": "A code, group definition, or canonical reference that describes  or identifies the intended subject of the activity being defined.  Canonical references are allowed to support the definition of protocols for drug and substance quality specifications, and is allowed to reference a MedicinalProductDefinition, SubstanceDefinition, AdministrableProductDefinition, ManufacturedItemDefinition, or PackagedProductDefinition resource.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subjectReference": {
          "description": "A code, group definition, or canonical reference that describes  or identifies the intended subject of the activity being defined.  Canonical references are allowed to support the definition of protocols for drug and substance quality specifications, and is allowed to reference a MedicinalProductDefinition, SubstanceDefinition, AdministrableProductDefinition, ManufacturedItemDefinition, or PackagedProductDefinition resource.",
          "$ref": "#/definitions/Reference"
        },
        "subjectCanonical": {
          "description": "A code, group definition, or canonical reference that describes  or identifies the intended subject of the activity being defined.  Canonical references are allowed to support the definition of protocols for drug and substance quality specifications, and is allowed to reference a MedicinalProductDefinition, SubstanceDefinition, AdministrableProductDefinition, ManufacturedItemDefinition, or PackagedProductDefinition resource.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_subjectCanonical": {
          "description": "Extensions for subjectCanonical",
          "$ref": "#/definitions/Element"
        },
        "usage": {
          "description": "A detailed description of how the activity definition is used from a clinical perspective.",
          "$ref": "#/definitions/string"
        },
        "_usage": {
          "description": "Extensions for usage",
          "$ref": "#/definitions/Element"
        },
        "library": {
          "description": "A reference to a Library resource containing any formal logic used by the activity definition.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "kind": {
          "description": "A description of the kind of resource the activity definition is representing. For example, a MedicationRequest, a ServiceRequest, or a CommunicationRequest. Typically, but not always, this is a Request resource.",
          "$ref": "#/definitions/code"
        },
        "_kind": {
          "description": "Extensions for kind",
          "$ref": "#/definitions/Element"
        },
        "profile": {
          "description": "A profile to which the target of the activity definition is expected to conform.",
          "$ref": "#/definitions/canonical"
        },
        "code": {
          "description": "Detailed description of the type of activity; e.g. What lab test, what procedure, what kind of encounter.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "intent": {
          "description": "Indicates the level of authority/intentionality associated with the activity and where the request should fit into the workflow chain.",
          "$ref": "#/definitions/code"
        },
        "_intent": {
          "description": "Extensions for intent",
          "$ref": "#/definitions/Element"
        },
        "priority": {
          "description": "Indicates how quickly the activity  should be addressed with respect to other requests.",
          "$ref": "#/definitions/code"
        },
        "_priority": {
          "description": "Extensions for priority",
          "$ref": "#/definitions/Element"
        },
        "doNotPerform": {
          "description": "Set this to true if the definition is to indicate that a particular activity should NOT be performed. If true, this element should be interpreted to reinforce a negative coding. For example NPO as a code with a doNotPerform of true would still indicate to NOT perform the action.",
          "$ref": "#/definitions/boolean"
        },
        "_doNotPerform": {
          "description": "Extensions for doNotPerform",
          "$ref": "#/definitions/Element"
        },
        "timingTiming": {
          "description": "The timing or frequency upon which the described activity is to occur.",
          "$ref": "#/definitions/Timing"
        },
        "timingAge": {
          "description": "The timing or frequency upon which the described activity is to occur.",
          "$ref": "#/definitions/Age"
        },
        "timingRange": {
          "description": "The timing or frequency upon which the described activity is to occur.",
          "$ref": "#/definitions/Range"
        },
        "timingDuration": {
          "description": "The timing or frequency upon which the described activity is to occur.",
          "$ref": "#/definitions/Duration"
        },
        "asNeededBoolean": {
          "description": "If a CodeableConcept is present, it indicates the pre-condition for performing the service.  For example \"pain\", \"on flare-up\", etc.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_asNeededBoolean": {
          "description": "Extensions for asNeededBoolean",
          "$ref": "#/definitions/Element"
        },
        "asNeededCodeableConcept": {
          "description": "If a CodeableConcept is present, it indicates the pre-condition for performing the service.  For example \"pain\", \"on flare-up\", etc.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "location": {
          "description": "Identifies the facility where the activity will occur; e.g. home, hospital, specific clinic, etc.",
          "$ref": "#/definitions/CodeableReference"
        },
        "participant": {
          "description": "Indicates who should participate in performing the action described.",
          "items": {
            "$ref": "#/definitions/ActivityDefinition_Participant"
          },
          "type": "array"
        },
        "productReference": {
          "description": "Identifies the food, drug or other product being consumed or supplied in the activity.",
          "$ref": "#/definitions/Reference"
        },
        "productCodeableConcept": {
          "description": "Identifies the food, drug or other product being consumed or supplied in the activity.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "quantity": {
          "description": "Identifies the quantity expected to be consumed at once (per dose, per meal, etc.).",
          "$ref": "#/definitions/Quantity"
        },
        "dosage": {
          "description": "Provides detailed dosage instructions in the same way that they are described for MedicationRequest resources.",
          "items": {
            "$ref": "#/definitions/Dosage"
          },
          "type": "array"
        },
        "bodySite": {
          "description": "Indicates the sites on the subject\u0027s body where the procedure should be performed (I.e. the target sites).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "specimenRequirement": {
          "description": "Defines specimen requirements for the action to be performed, such as required specimens for a lab test.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "observationRequirement": {
          "description": "Defines observation requirements for the action to be performed, such as body weight or surface area.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "observationResultRequirement": {
          "description": "Defines the observations that are expected to be produced by the action.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "transform": {
          "description": "A reference to a StructureMap resource that defines a transform that can be executed to produce the intent resource using the ActivityDefinition instance as the input.",
          "$ref": "#/definitions/canonical"
        },
        "dynamicValue": {
          "description": "Dynamic values that will be evaluated to produce values for elements of the resulting resource. For example, if the dosage of a medication must be computed based on the patient\u0027s weight, a dynamic value would be used to specify an expression that calculated the weight, and the path on the request resource that would contain the result.",
          "items": {
            "$ref": "#/definitions/ActivityDefinition_DynamicValue"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "ActivityDefinition_Participant": {
      "description": "This resource allows for the definition of some activity to be performed, independent of a particular patient, practitioner, or other performance context.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of participant in the action.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "typeCanonical": {
          "description": "The type of participant in the action.",
          "$ref": "#/definitions/canonical"
        },
        "typeReference": {
          "description": "The type of participant in the action.",
          "$ref": "#/definitions/Reference"
        },
        "role": {
          "description": "The role the participant should play in performing the described action.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "function": {
          "description": "Indicates how the actor will be involved in the action - author, reviewer, witness, etc.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ActivityDefinition_DynamicValue": {
      "description": "This resource allows for the definition of some activity to be performed, independent of a particular patient, practitioner, or other performance context.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "path": {
          "description": "The path to the element to be customized. This is the path on the resource that will hold the result of the calculation defined by the expression. The specified path SHALL be a FHIRPath resolveable on the specified target type of the ActivityDefinition, and SHALL consist only of identifiers, constant indexers, and a restricted subset of functions. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).",
          "$ref": "#/definitions/string"
        },
        "_path": {
          "description": "Extensions for path",
          "$ref": "#/definitions/Element"
        },
        "expression": {
          "description": "An expression specifying the value of the customized element.",
          "$ref": "#/definitions/Expression"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "expression"
      ]
    },
    "ActorDefinition": {
      "description": "Describes an actor - a human or an application that plays a role in data exchange, and that may have obligations associated with the role the actor plays.",
      "properties": {
        "resourceType": {
          "description": "This is a ActorDefinition resource",
          "const": "ActorDefinition"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this actor definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this actor definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the actor definition is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this actor definition when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the actor definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the actor definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the actor definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the actor definition.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this actor definition. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this actor definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the actor definition was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the actor definition changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the actor definition.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the actor.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate actor definition instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the actor definition is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this actor definition is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the actor definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the actor definition.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "Whether the actor represents a human or an appliction.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "documentation": {
          "description": "Documentation about the functionality of the actor.",
          "$ref": "#/definitions/markdown"
        },
        "_documentation": {
          "description": "Extensions for documentation",
          "$ref": "#/definitions/Element"
        },
        "reference": {
          "description": "A reference to additional documentation about the actor, but description and documentation.",
          "items": {
            "$ref": "#/definitions/url"
          },
          "type": "array"
        },
        "_reference": {
          "description": "Extensions for reference",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "capabilities": {
          "description": "The capability statement for the actor (if the concept is applicable).",
          "$ref": "#/definitions/canonical"
        },
        "derivedFrom": {
          "description": "A url that identifies the definition of this actor in another IG (which IG must be listed in the dependencies). This actor inherits all the obligations etc as defined in the other IG.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "AdministrableProductDefinition": {
      "description": "A medicinal product in the final form which is suitable for administering to a patient (after any mixing of multiple components, dissolution etc. has been performed).",
      "properties": {
        "resourceType": {
          "description": "This is a AdministrableProductDefinition resource",
          "const": "AdministrableProductDefinition"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "An identifier for the administrable product.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of this administrable product. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "formOf": {
          "description": "References a product from which one or more of the constituent parts of that product can be prepared and used as described by this administrable product.  If this administrable product describes the administration of a crushed tablet, the \u0027formOf\u0027 would be the product representing a distribution containing tablets and possibly also a cream.  This is distinct from the \u0027producedFrom\u0027 which refers to the specific components of the product that are used in this preparation, rather than the product as a whole.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "administrableDoseForm": {
          "description": "The dose form of the final product after necessary reconstitution or processing. Contrasts to the manufactured dose form (see ManufacturedItemDefinition). If the manufactured form was \u0027powder for solution for injection\u0027, the administrable dose form could be \u0027solution for injection\u0027 (once mixed with another item having manufactured form \u0027solvent for solution for injection\u0027).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "unitOfPresentation": {
          "description": "The presentation type in which this item is given to a patient. e.g. for a spray - \u0027puff\u0027 (as in \u0027contains 100 mcg per puff\u0027), or for a liquid - \u0027vial\u0027 (as in \u0027contains 5 ml per vial\u0027).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "producedFrom": {
          "description": "Indicates the specific manufactured items that are part of the \u0027formOf\u0027 product that are used in the preparation of this specific administrable form.  In some cases, an administrable form might use all of the items from the overall product (or there might only be one item), while in other cases, an administrable form might use only a subset of the items available in the overall product.  For example, an administrable form might involve combining a liquid and a powder available as part of an overall product, but not involve applying the also supplied cream.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "ingredient": {
          "description": "The ingredients of this administrable medicinal product. This is only needed if the ingredients are not specified either using ManufacturedItemDefiniton (via AdministrableProductDefinition.producedFrom) to state which component items are used to make this, or using by incoming references from the Ingredient resource, to state in detail which substances exist within this. This element allows a basic coded ingredient to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "device": {
          "description": "A device that is integral to the medicinal product, in effect being considered as an \"ingredient\" of the medicinal product. This is not intended for devices that are just co-packaged.",
          "$ref": "#/definitions/Reference"
        },
        "property": {
          "description": "Characteristics e.g. a product\u0027s onset of action.",
          "items": {
            "$ref": "#/definitions/AdministrableProductDefinition_Property"
          },
          "type": "array"
        },
        "routeOfAdministration": {
          "description": "The path by which the product is taken into or makes contact with the body. In some regions this is referred to as the licenced or approved route. RouteOfAdministration cannot be used when the \u0027formOf\u0027 product already uses MedicinalProductDefinition.route (and vice versa).",
          "items": {
            "$ref": "#/definitions/AdministrableProductDefinition_RouteOfAdministration"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "routeOfAdministration",
        "resourceType"
      ]
    },
    "AdministrableProductDefinition_Property": {
      "description": "A medicinal product in the final form which is suitable for administering to a patient (after any mixing of multiple components, dissolution etc. has been performed).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "A code expressing the type of characteristic.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCodeableConcept": {
          "description": "A value for the characteristic.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": {
          "description": "A value for the characteristic.",
          "$ref": "#/definitions/Quantity"
        },
        "valueDate": {
          "description": "A value for the characteristic.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_valueDate": {
          "description": "Extensions for valueDate",
          "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "description": "A value for the characteristic.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueAttachment": {
          "description": "A value for the characteristic.",
          "$ref": "#/definitions/Attachment"
        },
        "status": {
          "description": "The status of characteristic e.g. assigned or pending.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "AdministrableProductDefinition_RouteOfAdministration": {
      "description": "A medicinal product in the final form which is suitable for administering to a patient (after any mixing of multiple components, dissolution etc. has been performed).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "Coded expression for the route.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "firstDose": {
          "description": "The first dose (dose quantity) administered can be specified for the product, using a numerical value and its unit of measurement.",
          "$ref": "#/definitions/Quantity"
        },
        "maxSingleDose": {
          "description": "The maximum single dose that can be administered, specified using a numerical value and its unit of measurement.",
          "$ref": "#/definitions/Quantity"
        },
        "maxDosePerDay": {
          "description": "The maximum dose per day (maximum dose quantity to be administered in any one 24-h period) that can be administered.",
          "$ref": "#/definitions/Quantity"
        },
        "maxDosePerTreatmentPeriod": {
          "description": "The maximum dose per treatment period that can be administered.",
          "$ref": "#/definitions/Ratio"
        },
        "maxTreatmentPeriod": {
          "description": "The maximum treatment period during which the product can be administered.",
          "$ref": "#/definitions/Duration"
        },
        "targetSpecies": {
          "description": "A species for which this route applies.",
          "items": {
            "$ref": "#/definitions/AdministrableProductDefinition_TargetSpecies"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "AdministrableProductDefinition_TargetSpecies": {
      "description": "A medicinal product in the final form which is suitable for administering to a patient (after any mixing of multiple components, dissolution etc. has been performed).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "Coded expression for the species.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "withdrawalPeriod": {
          "description": "A species specific time during which consumption of animal product is not appropriate.",
          "items": {
            "$ref": "#/definitions/AdministrableProductDefinition_WithdrawalPeriod"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "AdministrableProductDefinition_WithdrawalPeriod": {
      "description": "A medicinal product in the final form which is suitable for administering to a patient (after any mixing of multiple components, dissolution etc. has been performed).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "tissue": {
          "description": "Coded expression for the type of tissue for which the withdrawal period applies, e.g. meat, milk.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "value": {
          "description": "A value for the time.",
          "$ref": "#/definitions/Quantity"
        },
        "supportingInformation": {
          "description": "Extra information about the withdrawal period.",
          "$ref": "#/definitions/string"
        },
        "_supportingInformation": {
          "description": "Extensions for supportingInformation",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "tissue",
        "value"
      ]
    },
    "AdverseEvent": {
      "description": "An event (i.e. any change to current patient status) that may be related to unintended effects on a patient or research subject. The unintended effects may require additional monitoring, treatment, hospitalization, or may result in death. The AdverseEvent resource also extends to potential or avoided events that could have had such effects. There are two major domains where the AdverseEvent resource is expected to be used. One is in clinical care reported adverse events and the other is in reporting adverse events in clinical  research trial management. Given the differences between these two concepts, we recommend consulting the domain specific implementation guides when implementing the AdverseEvent Resource. The implementation guides include specific extensions, value sets and constraints.",
      "properties": {
        "resourceType": {
          "description": "This is a AdverseEvent resource",
          "const": "AdverseEvent"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Business identifiers assigned to this adverse event by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "The current state of the adverse event or potential adverse event.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "actuality": {
          "description": "Whether the event actually happened or was a near miss. Note that this is independent of whether anyone was affected or harmed or how severely.",
          "$ref": "#/definitions/code"
        },
        "_actuality": {
          "description": "Extensions for actuality",
          "$ref": "#/definitions/Element"
        },
        "category": {
          "description": "The overall type of event, intended for search and filtering purposes.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "code": {
          "description": "Specific event that occurred or that was averted, such as patient fall, wrong organ removed, or wrong blood transfused.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subject": {
          "description": "This subject or group impacted by the event.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "The Encounter associated with the start of the AdverseEvent.",
          "$ref": "#/definitions/Reference"
        },
        "occurrenceDateTime": {
          "description": "The date (and perhaps time) when the adverse event occurred.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_occurrenceDateTime": {
          "description": "Extensions for occurrenceDateTime",
          "$ref": "#/definitions/Element"
        },
        "occurrencePeriod": {
          "description": "The date (and perhaps time) when the adverse event occurred.",
          "$ref": "#/definitions/Period"
        },
        "occurrenceTiming": {
          "description": "The date (and perhaps time) when the adverse event occurred.",
          "$ref": "#/definitions/Timing"
        },
        "detected": {
          "description": "Estimated or actual date the AdverseEvent began, in the opinion of the reporter.",
          "$ref": "#/definitions/dateTime"
        },
        "_detected": {
          "description": "Extensions for detected",
          "$ref": "#/definitions/Element"
        },
        "recordedDate": {
          "description": "The date on which the existence of the AdverseEvent was first recorded.",
          "$ref": "#/definitions/dateTime"
        },
        "_recordedDate": {
          "description": "Extensions for recordedDate",
          "$ref": "#/definitions/Element"
        },
        "resultingEffect": {
          "description": "Information about the condition that occurred as a result of the adverse event, such as hives due to the exposure to a substance (for example, a drug or a chemical) or a broken leg as a result of the fall.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "location": {
          "description": "The information about where the adverse event occurred.",
          "$ref": "#/definitions/Reference"
        },
        "seriousness": {
          "description": "Assessment whether this event, or averted event, was of clinical importance.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "outcome": {
          "description": "Describes the type of outcome from the adverse event, such as resolved, recovering, ongoing, resolved-with-sequelae, or fatal.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "recorder": {
          "description": "Information on who recorded the adverse event.  May be the patient or a practitioner.",
          "$ref": "#/definitions/Reference"
        },
        "participant": {
          "description": "Indicates who or what participated in the adverse event and how they were involved.",
          "items": {
            "$ref": "#/definitions/AdverseEvent_Participant"
          },
          "type": "array"
        },
        "study": {
          "description": "The research study that the subject is enrolled in.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "expectedInResearchStudy": {
          "description": "Considered likely or probable or anticipated in the research study.  Whether the reported event matches any of the outcomes for the patient that are considered by the study as known or likely.",
          "$ref": "#/definitions/boolean"
        },
        "_expectedInResearchStudy": {
          "description": "Extensions for expectedInResearchStudy",
          "$ref": "#/definitions/Element"
        },
        "suspectEntity": {
          "description": "Describes the entity that is suspected to have caused the adverse event.",
          "items": {
            "$ref": "#/definitions/AdverseEvent_SuspectEntity"
          },
          "type": "array"
        },
        "contributingFactor": {
          "description": "The contributing factors suspected to have increased the probability or severity of the adverse event.",
          "items": {
            "$ref": "#/definitions/AdverseEvent_ContributingFactor"
          },
          "type": "array"
        },
        "preventiveAction": {
          "description": "Preventive actions that contributed to avoiding the adverse event.",
          "items": {
            "$ref": "#/definitions/AdverseEvent_PreventiveAction"
          },
          "type": "array"
        },
        "mitigatingAction": {
          "description": "The ameliorating action taken after the adverse event occured in order to reduce the extent of harm.",
          "items": {
            "$ref": "#/definitions/AdverseEvent_MitigatingAction"
          },
          "type": "array"
        },
        "supportingInfo": {
          "description": "Supporting information relevant to the event.",
          "items": {
            "$ref": "#/definitions/AdverseEvent_SupportingInfo"
          },
          "type": "array"
        },
        "note": {
          "description": "Comments made about the adverse event by the performer, subject or other participants.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "subject",
        "resourceType"
      ]
    },
    "AdverseEvent_Participant": {
      "description": "An event (i.e. any change to current patient status) that may be related to unintended effects on a patient or research subject. The unintended effects may require additional monitoring, treatment, hospitalization, or may result in death. The AdverseEvent resource also extends to potential or avoided events that could have had such effects. There are two major domains where the AdverseEvent resource is expected to be used. One is in clinical care reported adverse events and the other is in reporting adverse events in clinical  research trial management. Given the differences between these two concepts, we recommend consulting the domain specific implementation guides when implementing the AdverseEvent Resource. The implementation guides include specific extensions, value sets and constraints.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "function": {
          "description": "Distinguishes the type of involvement of the actor in the adverse event, such as contributor or informant.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "actor": {
          "description": "Indicates who or what participated in the event.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "actor"
      ]
    },
    "AdverseEvent_SuspectEntity": {
      "description": "An event (i.e. any change to current patient status) that may be related to unintended effects on a patient or research subject. The unintended effects may require additional monitoring, treatment, hospitalization, or may result in death. The AdverseEvent resource also extends to potential or avoided events that could have had such effects. There are two major domains where the AdverseEvent resource is expected to be used. One is in clinical care reported adverse events and the other is in reporting adverse events in clinical  research trial management. Given the differences between these two concepts, we recommend consulting the domain specific implementation guides when implementing the AdverseEvent Resource. The implementation guides include specific extensions, value sets and constraints.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "instanceCodeableConcept": {
          "description": "Identifies the actual instance of what caused the adverse event.  May be a substance, medication, medication administration, medication statement or a device.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "instanceReference": {
          "description": "Identifies the actual instance of what caused the adverse event.  May be a substance, medication, medication administration, medication statement or a device.",
          "$ref": "#/definitions/Reference"
        },
        "causality": {
          "description": "Information on the possible cause of the event.",
          "$ref": "#/definitions/AdverseEvent_Causality"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "AdverseEvent_Causality": {
      "description": "An event (i.e. any change to current patient status) that may be related to unintended effects on a patient or research subject. The unintended effects may require additional monitoring, treatment, hospitalization, or may result in death. The AdverseEvent resource also extends to potential or avoided events that could have had such effects. There are two major domains where the AdverseEvent resource is expected to be used. One is in clinical care reported adverse events and the other is in reporting adverse events in clinical  research trial management. Given the differences between these two concepts, we recommend consulting the domain specific implementation guides when implementing the AdverseEvent Resource. The implementation guides include specific extensions, value sets and constraints.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "assessmentMethod": {
          "description": "The method of evaluating the relatedness of the suspected entity to the event.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "entityRelatedness": {
          "description": "The result of the assessment regarding the relatedness of the suspected entity to the event.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "author": {
          "description": "The author of the information on the possible cause of the event.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "AdverseEvent_ContributingFactor": {
      "description": "An event (i.e. any change to current patient status) that may be related to unintended effects on a patient or research subject. The unintended effects may require additional monitoring, treatment, hospitalization, or may result in death. The AdverseEvent resource also extends to potential or avoided events that could have had such effects. There are two major domains where the AdverseEvent resource is expected to be used. One is in clinical care reported adverse events and the other is in reporting adverse events in clinical  research trial management. Given the differences between these two concepts, we recommend consulting the domain specific implementation guides when implementing the AdverseEvent Resource. The implementation guides include specific extensions, value sets and constraints.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "itemReference": {
          "description": "The item that is suspected to have increased the probability or severity of the adverse event.",
          "$ref": "#/definitions/Reference"
        },
        "itemCodeableConcept": {
          "description": "The item that is suspected to have increased the probability or severity of the adverse event.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "AdverseEvent_PreventiveAction": {
      "description": "An event (i.e. any change to current patient status) that may be related to unintended effects on a patient or research subject. The unintended effects may require additional monitoring, treatment, hospitalization, or may result in death. The AdverseEvent resource also extends to potential or avoided events that could have had such effects. There are two major domains where the AdverseEvent resource is expected to be used. One is in clinical care reported adverse events and the other is in reporting adverse events in clinical  research trial management. Given the differences between these two concepts, we recommend consulting the domain specific implementation guides when implementing the AdverseEvent Resource. The implementation guides include specific extensions, value sets and constraints.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "itemReference": {
          "description": "The action that contributed to avoiding the adverse event.",
          "$ref": "#/definitions/Reference"
        },
        "itemCodeableConcept": {
          "description": "The action that contributed to avoiding the adverse event.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "AdverseEvent_MitigatingAction": {
      "description": "An event (i.e. any change to current patient status) that may be related to unintended effects on a patient or research subject. The unintended effects may require additional monitoring, treatment, hospitalization, or may result in death. The AdverseEvent resource also extends to potential or avoided events that could have had such effects. There are two major domains where the AdverseEvent resource is expected to be used. One is in clinical care reported adverse events and the other is in reporting adverse events in clinical  research trial management. Given the differences between these two concepts, we recommend consulting the domain specific implementation guides when implementing the AdverseEvent Resource. The implementation guides include specific extensions, value sets and constraints.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "itemReference": {
          "description": "The ameliorating action taken after the adverse event occured in order to reduce the extent of harm.",
          "$ref": "#/definitions/Reference"
        },
        "itemCodeableConcept": {
          "description": "The ameliorating action taken after the adverse event occured in order to reduce the extent of harm.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "AdverseEvent_SupportingInfo": {
      "description": "An event (i.e. any change to current patient status) that may be related to unintended effects on a patient or research subject. The unintended effects may require additional monitoring, treatment, hospitalization, or may result in death. The AdverseEvent resource also extends to potential or avoided events that could have had such effects. There are two major domains where the AdverseEvent resource is expected to be used. One is in clinical care reported adverse events and the other is in reporting adverse events in clinical  research trial management. Given the differences between these two concepts, we recommend consulting the domain specific implementation guides when implementing the AdverseEvent Resource. The implementation guides include specific extensions, value sets and constraints.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "itemReference": {
          "description": "Relevant past history for the subject. In a clinical care context, an example being a patient had an adverse event following a pencillin administration and the patient had a previously documented penicillin allergy. In a clinical trials context, an example is a bunion or rash that was present prior to the study. Additionally, the supporting item can be a document that is relevant to this instance of the adverse event that is not part of the subject\u0027s medical history. For example, a clinical note, staff list, or material safety data sheet (MSDS).  Supporting information is not a contributing factor, preventive action, or mitigating action.",
          "$ref": "#/definitions/Reference"
        },
        "itemCodeableConcept": {
          "description": "Relevant past history for the subject. In a clinical care context, an example being a patient had an adverse event following a pencillin administration and the patient had a previously documented penicillin allergy. In a clinical trials context, an example is a bunion or rash that was present prior to the study. Additionally, the supporting item can be a document that is relevant to this instance of the adverse event that is not part of the subject\u0027s medical history. For example, a clinical note, staff list, or material safety data sheet (MSDS).  Supporting information is not a contributing factor, preventive action, or mitigating action.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "AllergyIntolerance": {
      "description": "Risk of harmful or undesirable physiological response which is specific to an individual and associated with exposure to a substance.",
      "properties": {
        "resourceType": {
          "description": "This is a AllergyIntolerance resource",
          "const": "AllergyIntolerance"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Business identifiers assigned to this AllergyIntolerance by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "clinicalStatus": {
          "description": "The clinical status of the allergy or intolerance.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "verificationStatus": {
          "description": "Assertion about certainty associated with the propensity, or potential risk, of a reaction to the identified substance (including pharmaceutical product).  The verification status pertains to the allergy or intolerance, itself, not to any specific AllergyIntolerance attribute.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "type": {
          "description": "Identification of the underlying physiological mechanism for the reaction risk.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "category": {
          "description": "Category of the identified substance.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_category": {
          "description": "Extensions for category",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "criticality": {
          "description": "Estimate of the potential clinical harm, or seriousness, of the reaction to the identified substance.",
          "$ref": "#/definitions/code"
        },
        "_criticality": {
          "description": "Extensions for criticality",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "Code for an allergy or intolerance statement (either a positive or a negated/excluded statement).  This may be a code for a substance or pharmaceutical product that is considered to be responsible for the adverse reaction risk (e.g., \"Latex\"), an allergy or intolerance condition (e.g., \"Latex allergy\"), or a negated/excluded code for a specific substance or class (e.g., \"No latex allergy\") or a general or categorical negated statement (e.g.,  \"No known allergy\", \"No known drug allergies\").  Note: the substance for a specific reaction may be different from the substance identified as the cause of the risk, but it must be consistent with it. For instance, it may be a more specific substance (e.g. a brand medication) or a composite product that includes the identified substance. It must be clinically safe to only process the \u0027code\u0027 and ignore the \u0027reaction.substance\u0027.  If a receiving system is unable to confirm that AllergyIntolerance.reaction.substance falls within the semantic scope of AllergyIntolerance.code, then the receiving system should ignore AllergyIntolerance.reaction.substance.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "patient": {
          "description": "The patient who has the allergy or intolerance.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "The encounter when the allergy or intolerance was asserted.",
          "$ref": "#/definitions/Reference"
        },
        "onsetDateTime": {
          "description": "Estimated or actual date,  date-time, or age when allergy or intolerance was identified.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_onsetDateTime": {
          "description": "Extensions for onsetDateTime",
          "$ref": "#/definitions/Element"
        },
        "onsetAge": {
          "description": "Estimated or actual date,  date-time, or age when allergy or intolerance was identified.",
          "$ref": "#/definitions/Age"
        },
        "onsetPeriod": {
          "description": "Estimated or actual date,  date-time, or age when allergy or intolerance was identified.",
          "$ref": "#/definitions/Period"
        },
        "onsetRange": {
          "description": "Estimated or actual date,  date-time, or age when allergy or intolerance was identified.",
          "$ref": "#/definitions/Range"
        },
        "onsetString": {
          "description": "Estimated or actual date,  date-time, or age when allergy or intolerance was identified.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_onsetString": {
          "description": "Extensions for onsetString",
          "$ref": "#/definitions/Element"
        },
        "recordedDate": {
          "description": "The recordedDate represents when this particular AllergyIntolerance record was created in the system, which is often a system-generated date.",
          "$ref": "#/definitions/dateTime"
        },
        "_recordedDate": {
          "description": "Extensions for recordedDate",
          "$ref": "#/definitions/Element"
        },
        "participant": {
          "description": "Indicates who or what participated in the activities related to the allergy or intolerance and how they were involved.",
          "items": {
            "$ref": "#/definitions/AllergyIntolerance_Participant"
          },
          "type": "array"
        },
        "lastOccurrence": {
          "description": "Represents the date and/or time of the last known occurrence of a reaction event.",
          "$ref": "#/definitions/dateTime"
        },
        "_lastOccurrence": {
          "description": "Extensions for lastOccurrence",
          "$ref": "#/definitions/Element"
        },
        "note": {
          "description": "Additional narrative about the propensity for the Adverse Reaction, not captured in other fields.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "reaction": {
          "description": "Details about each adverse reaction event linked to exposure to the identified substance.",
          "items": {
            "$ref": "#/definitions/AllergyIntolerance_Reaction"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "patient",
        "resourceType"
      ]
    },
    "AllergyIntolerance_Participant": {
      "description": "Risk of harmful or undesirable physiological response which is specific to an individual and associated with exposure to a substance.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "function": {
          "description": "Distinguishes the type of involvement of the actor in the activities related to the allergy or intolerance.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "actor": {
          "description": "Indicates who or what participated in the activities related to the allergy or intolerance.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "actor"
      ]
    },
    "AllergyIntolerance_Reaction": {
      "description": "Risk of harmful or undesirable physiological response which is specific to an individual and associated with exposure to a substance.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "substance": {
          "description": "Identification of the specific substance (or pharmaceutical product) considered to be responsible for the Adverse Reaction event. Note: the substance for a specific reaction may be different from the substance identified as the cause of the risk, but it must be consistent with it. For instance, it may be a more specific substance (e.g. a brand medication) or a composite product that includes the identified substance. It must be clinically safe to only process the \u0027code\u0027 and ignore the \u0027reaction.substance\u0027.  If a receiving system is unable to confirm that AllergyIntolerance.reaction.substance falls within the semantic scope of AllergyIntolerance.code, then the receiving system should ignore AllergyIntolerance.reaction.substance.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "manifestation": {
          "description": "Clinical symptoms and/or signs that are observed or associated with the adverse reaction event.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "description": {
          "description": "Text description about the reaction as a whole, including details of the manifestation if required.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "onset": {
          "description": "Record of the date and/or time of the onset of the Reaction.",
          "$ref": "#/definitions/dateTime"
        },
        "_onset": {
          "description": "Extensions for onset",
          "$ref": "#/definitions/Element"
        },
        "severity": {
          "description": "Clinical assessment of the severity of the reaction event as a whole, potentially considering multiple different manifestations.",
          "$ref": "#/definitions/code"
        },
        "_severity": {
          "description": "Extensions for severity",
          "$ref": "#/definitions/Element"
        },
        "exposureRoute": {
          "description": "Identification of the route by which the subject was exposed to the substance.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "note": {
          "description": "Additional text about the adverse reaction event not captured in other fields.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "manifestation"
      ]
    },
    "Appointment": {
      "description": "A booking of a healthcare event among patient(s), practitioner(s), related person(s) and/or device(s) for a specific date/time. This may result in one or more Encounter(s).",
      "properties": {
        "resourceType": {
          "description": "This is a Appointment resource",
          "const": "Appointment"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "This records identifiers associated with this appointment concern that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate (e.g. in CDA documents, or in written / printed documentation).",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "The overall status of the Appointment. Each of the participants has their own participation status which indicates their involvement in the process, however this status indicates the shared status.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "cancellationReason": {
          "description": "The coded reason for the appointment being cancelled. This is often used in reporting/billing/futher processing to determine if further actions are required, or specific fees apply.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "class": {
          "description": "Concepts representing classification of patient encounter such as ambulatory (outpatient), inpatient, emergency, home health or others due to local variations.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "serviceCategory": {
          "description": "A broad categorization of the service that is to be performed during this appointment.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "serviceType": {
          "description": "The specific service that is to be performed during this appointment.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "specialty": {
          "description": "The specialty of a practitioner that would be required to perform the service requested in this appointment.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "appointmentType": {
          "description": "The style of appointment or patient that has been booked in the slot (not service type).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "reason": {
          "description": "The reason that this appointment is being scheduled. This is more clinical than administrative. This can be coded, or as specified using information from another resource. When the patient arrives and the encounter begins it may be used as the admission diagnosis. The indication will typically be a Condition (with other resources referenced in the evidence.detail), or a Procedure.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "priority": {
          "description": "The priority of the appointment. Can be used to make informed decisions if needing to re-prioritize appointments. (The iCal Standard specifies 0 as undefined, 1 as highest, 9 as lowest priority).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "description": {
          "description": "The brief description of the appointment as would be shown on a subject line in a meeting request, or appointment list. Detailed or expanded information should be put in the comment field.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "replaces": {
          "description": "Appointment replaced by this Appointment in cases where there is a cancellation, the details of the cancellation can be found in the cancellationReason property (on the referenced resource).",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "virtualService": {
          "description": "Connection details of a virtual service (e.g. conference call).",
          "items": {
            "$ref": "#/definitions/VirtualServiceDetail"
          },
          "type": "array"
        },
        "supportingInformation": {
          "description": "Additional information to support the appointment provided when making the appointment.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "previousAppointment": {
          "description": "The previous appointment in a series of related appointments.",
          "$ref": "#/definitions/Reference"
        },
        "originatingAppointment": {
          "description": "The originating appointment in a recurring set of related appointments.",
          "$ref": "#/definitions/Reference"
        },
        "start": {
          "description": "Date/Time that the appointment is to take place.",
          "$ref": "#/definitions/instant"
        },
        "_start": {
          "description": "Extensions for start",
          "$ref": "#/definitions/Element"
        },
        "end": {
          "description": "Date/Time that the appointment is to conclude.",
          "$ref": "#/definitions/instant"
        },
        "_end": {
          "description": "Extensions for end",
          "$ref": "#/definitions/Element"
        },
        "minutesDuration": {
          "description": "Number of minutes that the appointment is to take. This can be less than the duration between the start and end times.  For example, where the actual time of appointment is only an estimate or if a 30 minute appointment is being requested, but any time would work.  Also, if there is, for example, a planned 15 minute break in the middle of a long appointment, the duration may be 15 minutes less than the difference between the start and end.",
          "$ref": "#/definitions/positiveInt"
        },
        "_minutesDuration": {
          "description": "Extensions for minutesDuration",
          "$ref": "#/definitions/Element"
        },
        "slot": {
          "description": "The slots from the participants\u0027 schedules that will be filled by the appointment.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "account": {
          "description": "The set of accounts that is expected to be used for billing the activities that result from this Appointment.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "created": {
          "description": "The date that this appointment was initially created. This could be different to the meta.lastModified value on the initial entry, as this could have been before the resource was created on the FHIR server, and should remain unchanged over the lifespan of the appointment.",
          "$ref": "#/definitions/dateTime"
        },
        "_created": {
          "description": "Extensions for created",
          "$ref": "#/definitions/Element"
        },
        "note": {
          "description": "Additional notes/comments about the appointment.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "patientInstruction": {
          "description": "While Appointment.note contains information for internal use, Appointment.patientInstructions is used to capture patient facing information about the Appointment (e.g. please bring your referral or fast from 8pm night before).",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "basedOn": {
          "description": "The request this appointment is allocated to assess (e.g. incoming referral or procedure request).",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "subject": {
          "description": "The patient or group associated with the appointment, if they are to be present (usually) then they should also be included in the participant backbone element.",
          "$ref": "#/definitions/Reference"
        },
        "participant": {
          "description": "List of participants involved in the appointment.",
          "items": {
            "$ref": "#/definitions/Appointment_Participant"
          },
          "type": "array"
        },
        "requestedPeriod": {
          "description": "A set of date ranges (potentially including times) that the appointment is preferred to be scheduled within.\n\nThe duration (usually in minutes) could also be provided to indicate the length of the appointment to fill and populate the start/end times for the actual allocated time. However, in other situations the duration may be calculated by the scheduling system.",
          "items": {
            "$ref": "#/definitions/Period"
          },
          "type": "array"
        },
        "recurrenceId": {
          "description": "The sequence number that identifies a specific appointment in a recurring pattern.",
          "$ref": "#/definitions/positiveInt"
        },
        "_recurrenceId": {
          "description": "Extensions for recurrenceId",
          "$ref": "#/definitions/Element"
        },
        "occurrenceChanged": {
          "description": "This appointment varies from the recurring pattern.",
          "$ref": "#/definitions/boolean"
        },
        "_occurrenceChanged": {
          "description": "Extensions for occurrenceChanged",
          "$ref": "#/definitions/Element"
        },
        "recurrenceTemplate": {
          "description": "The details of the recurrence pattern or template that is used to generate recurring appointments.",
          "items": {
            "$ref": "#/definitions/Appointment_RecurrenceTemplate"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "participant",
        "resourceType"
      ]
    },
    "Appointment_Participant": {
      "description": "A booking of a healthcare event among patient(s), practitioner(s), related person(s) and/or device(s) for a specific date/time. This may result in one or more Encounter(s).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Role of participant in the appointment.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "period": {
          "description": "Participation period of the actor.",
          "$ref": "#/definitions/Period"
        },
        "actor": {
          "description": "The individual, device, location, or service participating in the appointment.",
          "$ref": "#/definitions/Reference"
        },
        "required": {
          "description": "Whether this participant is required to be present at the meeting. If false, the participant is optional.",
          "$ref": "#/definitions/boolean"
        },
        "_required": {
          "description": "Extensions for required",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "Participation status of the actor.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Appointment_RecurrenceTemplate": {
      "description": "A booking of a healthcare event among patient(s), practitioner(s), related person(s) and/or device(s) for a specific date/time. This may result in one or more Encounter(s).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "timezone": {
          "description": "The timezone of the recurring appointment occurrences.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "recurrenceType": {
          "description": "How often the appointment series should recur.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "lastOccurrenceDate": {
          "description": "Recurring appointments will not occur after this date.",
          "$ref": "#/definitions/date"
        },
        "_lastOccurrenceDate": {
          "description": "Extensions for lastOccurrenceDate",
          "$ref": "#/definitions/Element"
        },
        "occurrenceCount": {
          "description": "How many appointments are planned in the recurrence.",
          "$ref": "#/definitions/positiveInt"
        },
        "_occurrenceCount": {
          "description": "Extensions for occurrenceCount",
          "$ref": "#/definitions/Element"
        },
        "occurrenceDate": {
          "description": "The list of specific dates that will have appointments generated.",
          "items": {
            "$ref": "#/definitions/date"
          },
          "type": "array"
        },
        "_occurrenceDate": {
          "description": "Extensions for occurrenceDate",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "weeklyTemplate": {
          "description": "Information about weekly recurring appointments.",
          "$ref": "#/definitions/Appointment_WeeklyTemplate"
        },
        "monthlyTemplate": {
          "description": "Information about monthly recurring appointments.",
          "$ref": "#/definitions/Appointment_MonthlyTemplate"
        },
        "yearlyTemplate": {
          "description": "Information about yearly recurring appointments.",
          "$ref": "#/definitions/Appointment_YearlyTemplate"
        },
        "excludingDate": {
          "description": "Any dates, such as holidays, that should be excluded from the recurrence.",
          "items": {
            "$ref": "#/definitions/date"
          },
          "type": "array"
        },
        "_excludingDate": {
          "description": "Extensions for excludingDate",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "excludingRecurrenceId": {
          "description": "Any dates, such as holidays, that should be excluded from the recurrence.",
          "items": {
            "$ref": "#/definitions/positiveInt"
          },
          "type": "array"
        },
        "_excludingRecurrenceId": {
          "description": "Extensions for excludingRecurrenceId",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "recurrenceType"
      ]
    },
    "Appointment_WeeklyTemplate": {
      "description": "A booking of a healthcare event among patient(s), practitioner(s), related person(s) and/or device(s) for a specific date/time. This may result in one or more Encounter(s).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "monday": {
          "description": "Indicates that recurring appointments should occur on Mondays.",
          "$ref": "#/definitions/boolean"
        },
        "_monday": {
          "description": "Extensions for monday",
          "$ref": "#/definitions/Element"
        },
        "tuesday": {
          "description": "Indicates that recurring appointments should occur on Tuesdays.",
          "$ref": "#/definitions/boolean"
        },
        "_tuesday": {
          "description": "Extensions for tuesday",
          "$ref": "#/definitions/Element"
        },
        "wednesday": {
          "description": "Indicates that recurring appointments should occur on Wednesdays.",
          "$ref": "#/definitions/boolean"
        },
        "_wednesday": {
          "description": "Extensions for wednesday",
          "$ref": "#/definitions/Element"
        },
        "thursday": {
          "description": "Indicates that recurring appointments should occur on Thursdays.",
          "$ref": "#/definitions/boolean"
        },
        "_thursday": {
          "description": "Extensions for thursday",
          "$ref": "#/definitions/Element"
        },
        "friday": {
          "description": "Indicates that recurring appointments should occur on Fridays.",
          "$ref": "#/definitions/boolean"
        },
        "_friday": {
          "description": "Extensions for friday",
          "$ref": "#/definitions/Element"
        },
        "saturday": {
          "description": "Indicates that recurring appointments should occur on Saturdays.",
          "$ref": "#/definitions/boolean"
        },
        "_saturday": {
          "description": "Extensions for saturday",
          "$ref": "#/definitions/Element"
        },
        "sunday": {
          "description": "Indicates that recurring appointments should occur on Sundays.",
          "$ref": "#/definitions/boolean"
        },
        "_sunday": {
          "description": "Extensions for sunday",
          "$ref": "#/definitions/Element"
        },
        "weekInterval": {
          "description": "The interval defines if the recurrence is every nth week. The default is every week, so it is expected that this value will be 2 or more.\r\re.g. For recurring every second week this interval would be 2, or every third week the interval would be 3.",
          "$ref": "#/definitions/positiveInt"
        },
        "_weekInterval": {
          "description": "Extensions for weekInterval",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Appointment_MonthlyTemplate": {
      "description": "A booking of a healthcare event among patient(s), practitioner(s), related person(s) and/or device(s) for a specific date/time. This may result in one or more Encounter(s).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "dayOfMonth": {
          "description": "Indicates that appointments in the series of recurring appointments should occur on a specific day of the month.",
          "$ref": "#/definitions/positiveInt"
        },
        "_dayOfMonth": {
          "description": "Extensions for dayOfMonth",
          "$ref": "#/definitions/Element"
        },
        "nthWeekOfMonth": {
          "description": "Indicates which week within a month the appointments in the series of recurring appointments should occur on.",
          "$ref": "#/definitions/Coding"
        },
        "dayOfWeek": {
          "description": "Indicates which day of the week the recurring appointments should occur each nth week.",
          "$ref": "#/definitions/Coding"
        },
        "monthInterval": {
          "description": "Indicates that recurring appointments should occur every nth month.",
          "$ref": "#/definitions/positiveInt"
        },
        "_monthInterval": {
          "description": "Extensions for monthInterval",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Appointment_YearlyTemplate": {
      "description": "A booking of a healthcare event among patient(s), practitioner(s), related person(s) and/or device(s) for a specific date/time. This may result in one or more Encounter(s).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "yearInterval": {
          "description": "Appointment recurs every nth year.",
          "$ref": "#/definitions/positiveInt"
        },
        "_yearInterval": {
          "description": "Extensions for yearInterval",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "AppointmentResponse": {
      "description": "A reply to an appointment request for a patient and/or practitioner(s), such as a confirmation or rejection.",
      "properties": {
        "resourceType": {
          "description": "This is a AppointmentResponse resource",
          "const": "AppointmentResponse"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "This records identifiers associated with this appointment response concern that are defined by business processes and/ or used to refer to it when a direct URL reference to the resource itself is not appropriate.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "appointment": {
          "description": "Appointment that this response is replying to.",
          "$ref": "#/definitions/Reference"
        },
        "proposedNewTime": {
          "description": "Indicates that the response is proposing a different time that was initially requested.  The new proposed time will be indicated in the start and end properties.",
          "$ref": "#/definitions/boolean"
        },
        "_proposedNewTime": {
          "description": "Extensions for proposedNewTime",
          "$ref": "#/definitions/Element"
        },
        "start": {
          "description": "Date/Time that the appointment is to take place, or requested new start time.",
          "$ref": "#/definitions/instant"
        },
        "_start": {
          "description": "Extensions for start",
          "$ref": "#/definitions/Element"
        },
        "end": {
          "description": "This may be either the same as the appointment request to confirm the details of the appointment, or alternately a new time to request a re-negotiation of the end time.",
          "$ref": "#/definitions/instant"
        },
        "_end": {
          "description": "Extensions for end",
          "$ref": "#/definitions/Element"
        },
        "participantType": {
          "description": "Role of participant in the appointment.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "actor": {
          "description": "A Person, Location, HealthcareService, or Device that is participating in the appointment.",
          "$ref": "#/definitions/Reference"
        },
        "participantStatus": {
          "description": "Participation status of the participant. When the status is declined or tentative if the start/end times are different to the appointment, then these times should be interpreted as a requested time change. When the status is accepted, the times can either be the time of the appointment (as a confirmation of the time) or can be empty.",
          "$ref": "#/definitions/code"
        },
        "_participantStatus": {
          "description": "Extensions for participantStatus",
          "$ref": "#/definitions/Element"
        },
        "comment": {
          "description": "Additional comments about the appointment.",
          "$ref": "#/definitions/string"
        },
        "_comment": {
          "description": "Extensions for comment",
          "$ref": "#/definitions/Element"
        },
        "recurring": {
          "description": "Indicates that this AppointmentResponse applies to all occurrences in a recurring request.",
          "$ref": "#/definitions/boolean"
        },
        "_recurring": {
          "description": "Extensions for recurring",
          "$ref": "#/definitions/Element"
        },
        "occurrenceDate": {
          "description": "The original date within a recurring request. This could be used in place of the recurrenceId to be more direct (or where the template is provided through the simple list of dates in `Appointment.occurrenceDate`).",
          "$ref": "#/definitions/date"
        },
        "_occurrenceDate": {
          "description": "Extensions for occurrenceDate",
          "$ref": "#/definitions/Element"
        },
        "recurrenceId": {
          "description": "The recurrence ID (sequence number) of the specific appointment when responding to a recurring request.",
          "$ref": "#/definitions/positiveInt"
        },
        "_recurrenceId": {
          "description": "Extensions for recurrenceId",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "appointment",
        "resourceType"
      ]
    },
    "ArtifactAssessment": {
      "description": "This Resource provides one or more comments, classifiers or ratings about a Resource and supports attribution and rights management metadata for the added content.",
      "properties": {
        "resourceType": {
          "description": "This is a ArtifactAssessment resource",
          "const": "ArtifactAssessment"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this artifact assessment when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "citeAsReference": {
          "description": "Display of or reference to the bibliographic citation of the comment, classifier, or rating.",
          "$ref": "#/definitions/Reference"
        },
        "citeAsMarkdown": {
          "description": "Display of or reference to the bibliographic citation of the comment, classifier, or rating.",
          "pattern": "^\\s*(\\S|\\s)*$",
          "type": "string"
        },
        "_citeAsMarkdown": {
          "description": "Extensions for citeAsMarkdown",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the artifact assessment was published. The date must change when the disposition changes and it must change if the workflow status code changes. In addition, it should change when the substantive content of the artifact assessment changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the artifact assessment and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the artifact assessment.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "approvalDate": {
          "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
          "$ref": "#/definitions/date"
        },
        "_approvalDate": {
          "description": "Extensions for approvalDate",
          "$ref": "#/definitions/Element"
        },
        "lastReviewDate": {
          "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
          "$ref": "#/definitions/date"
        },
        "_lastReviewDate": {
          "description": "Extensions for lastReviewDate",
          "$ref": "#/definitions/Element"
        },
        "artifactReference": {
          "description": "A reference to a resource, canonical resource, or non-FHIR resource which the comment or assessment is about.",
          "$ref": "#/definitions/Reference"
        },
        "artifactCanonical": {
          "description": "A reference to a resource, canonical resource, or non-FHIR resource which the comment or assessment is about.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_artifactCanonical": {
          "description": "Extensions for artifactCanonical",
          "$ref": "#/definitions/Element"
        },
        "artifactUri": {
          "description": "A reference to a resource, canonical resource, or non-FHIR resource which the comment or assessment is about.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_artifactUri": {
          "description": "Extensions for artifactUri",
          "$ref": "#/definitions/Element"
        },
        "content": {
          "description": "A component comment, classifier, or rating of the artifact.",
          "items": {
            "$ref": "#/definitions/ArtifactAssessment_Content"
          },
          "type": "array"
        },
        "workflowStatus": {
          "description": "Indicates the workflow status of the comment or change request.",
          "$ref": "#/definitions/code"
        },
        "_workflowStatus": {
          "description": "Extensions for workflowStatus",
          "$ref": "#/definitions/Element"
        },
        "disposition": {
          "description": "Indicates the disposition of the responsible party to the comment or change request.",
          "$ref": "#/definitions/code"
        },
        "_disposition": {
          "description": "Extensions for disposition",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "ArtifactAssessment_Content": {
      "description": "This Resource provides one or more comments, classifiers or ratings about a Resource and supports attribution and rights management metadata for the added content.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "informationType": {
          "description": "The type of information this component of the content represents.",
          "$ref": "#/definitions/code"
        },
        "_informationType": {
          "description": "Extensions for informationType",
          "$ref": "#/definitions/Element"
        },
        "summary": {
          "description": "A brief summary of the content of this component.",
          "$ref": "#/definitions/markdown"
        },
        "_summary": {
          "description": "Extensions for summary",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "Indicates what type of content this component represents.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "classifier": {
          "description": "Represents a rating, classifier, or assessment of the artifact.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "author": {
          "description": "Indicates who or what authored the content.",
          "$ref": "#/definitions/Reference"
        },
        "path": {
          "description": "A URI that points to what the comment is about, such as a line of text in the CQL, or a specific element in a resource.",
          "items": {
            "$ref": "#/definitions/uri"
          },
          "type": "array"
        },
        "_path": {
          "description": "Extensions for path",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "relatedArtifact": {
          "description": "Additional related artifacts that provide supporting documentation, additional evidence, or further information related to the content.",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          },
          "type": "array"
        },
        "freeToShare": {
          "description": "Acceptable to publicly share the comment, classifier or rating.",
          "$ref": "#/definitions/boolean"
        },
        "_freeToShare": {
          "description": "Extensions for freeToShare",
          "$ref": "#/definitions/Element"
        },
        "component": {
          "description": "If the informationType is container, the components of the content.",
          "items": {
            "$ref": "#/definitions/ArtifactAssessment_Content"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "AuditEvent": {
      "description": "A record of an event relevant for purposes such as operations, privacy, security, maintenance, and performance analysis.",
      "properties": {
        "resourceType": {
          "description": "This is a AuditEvent resource",
          "const": "AuditEvent"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "category": {
          "description": "Classification of the type of event.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "code": {
          "description": "Describes what happened. The most specific code for the event.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "action": {
          "description": "Indicator for type of action performed during the event that generated the audit.",
          "$ref": "#/definitions/code"
        },
        "_action": {
          "description": "Extensions for action",
          "$ref": "#/definitions/Element"
        },
        "severity": {
          "description": "Indicates and enables segmentation of various severity including debugging from critical.",
          "$ref": "#/definitions/code"
        },
        "_severity": {
          "description": "Extensions for severity",
          "$ref": "#/definitions/Element"
        },
        "occurredPeriod": {
          "description": "The time or period during which the activity occurred.",
          "$ref": "#/definitions/Period"
        },
        "occurredDateTime": {
          "description": "The time or period during which the activity occurred.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_occurredDateTime": {
          "description": "Extensions for occurredDateTime",
          "$ref": "#/definitions/Element"
        },
        "recorded": {
          "description": "The time when the event was recorded.",
          "$ref": "#/definitions/instant"
        },
        "_recorded": {
          "description": "Extensions for recorded",
          "$ref": "#/definitions/Element"
        },
        "outcome": {
          "description": "Indicates whether the event succeeded or failed. A free text descripiton can be given in outcome.text.",
          "$ref": "#/definitions/AuditEvent_Outcome"
        },
        "authorization": {
          "description": "The authorization (e.g., PurposeOfUse) that was used during the event being recorded.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "basedOn": {
          "description": "Allows tracing of authorizatino for the events and tracking whether proposals/recommendations were acted upon.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "patient": {
          "description": "The patient element is available to enable deterministic tracking of activities that involve the patient as the subject of the data used in an activity.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "This will typically be the encounter the event occurred, but some events may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission lab tests).",
          "$ref": "#/definitions/Reference"
        },
        "agent": {
          "description": "An actor taking an active role in the event or activity that is logged.",
          "items": {
            "$ref": "#/definitions/AuditEvent_Agent"
          },
          "type": "array"
        },
        "source": {
          "description": "The actor that is reporting the event.",
          "$ref": "#/definitions/AuditEvent_Source"
        },
        "entity": {
          "description": "Specific instances of data or objects that have been accessed.",
          "items": {
            "$ref": "#/definitions/AuditEvent_Entity"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "agent",
        "code",
        "source",
        "resourceType"
      ]
    },
    "AuditEvent_Outcome": {
      "description": "A record of an event relevant for purposes such as operations, privacy, security, maintenance, and performance analysis.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "Indicates whether the event succeeded or failed.",
          "$ref": "#/definitions/Coding"
        },
        "detail": {
          "description": "Additional details about the error. This may be a text description of the error or a system code that identifies the error.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "AuditEvent_Agent": {
      "description": "A record of an event relevant for purposes such as operations, privacy, security, maintenance, and performance analysis.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The Functional Role of the user when performing the event.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "role": {
          "description": "The structural roles of the agent indicating the agent\u0027s competency. The security role enabling the agent with respect to the activity.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "who": {
          "description": "Reference to who this agent is that was involved in the event.",
          "$ref": "#/definitions/Reference"
        },
        "requestor": {
          "description": "Indicator that the user is or is not the requestor, or initiator, for the event being audited.",
          "$ref": "#/definitions/boolean"
        },
        "_requestor": {
          "description": "Extensions for requestor",
          "$ref": "#/definitions/Element"
        },
        "location": {
          "description": "Where the agent location is known, the agent location when the event occurred.",
          "$ref": "#/definitions/Reference"
        },
        "policy": {
          "description": "Where the policy(ies) are known that authorized the agent participation in the event. Typically, a single activity may have multiple applicable policies, such as patient consent, guarantor funding, etc. The policy would also indicate the security token used.",
          "items": {
            "$ref": "#/definitions/uri"
          },
          "type": "array"
        },
        "_policy": {
          "description": "Extensions for policy",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "networkReference": {
          "description": "When the event utilizes a network there should be an agent describing the local system, and an agent describing remote system, with the network interface details.",
          "$ref": "#/definitions/Reference"
        },
        "networkUri": {
          "description": "When the event utilizes a network there should be an agent describing the local system, and an agent describing remote system, with the network interface details.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_networkUri": {
          "description": "Extensions for networkUri",
          "$ref": "#/definitions/Element"
        },
        "networkString": {
          "description": "When the event utilizes a network there should be an agent describing the local system, and an agent describing remote system, with the network interface details.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_networkString": {
          "description": "Extensions for networkString",
          "$ref": "#/definitions/Element"
        },
        "authorization": {
          "description": "The authorization (e.g., PurposeOfUse) that was used during the event being recorded.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "who"
      ]
    },
    "AuditEvent_Source": {
      "description": "A record of an event relevant for purposes such as operations, privacy, security, maintenance, and performance analysis.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "site": {
          "description": "Logical source location within the healthcare enterprise network.  For example, a hospital or other provider location within a multi-entity provider group.",
          "$ref": "#/definitions/Reference"
        },
        "observer": {
          "description": "Identifier of the source where the event was detected.",
          "$ref": "#/definitions/Reference"
        },
        "type": {
          "description": "Code specifying the type of source where event originated.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "observer"
      ]
    },
    "AuditEvent_Entity": {
      "description": "A record of an event relevant for purposes such as operations, privacy, security, maintenance, and performance analysis.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "what": {
          "description": "Identifies a specific instance of the entity. The reference should be version specific. This is allowed to be a Parameters resource.",
          "$ref": "#/definitions/Reference"
        },
        "role": {
          "description": "Code representing the role the entity played in the event being audited.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "securityLabel": {
          "description": "Security labels for the identified entity.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "query": {
          "description": "The query parameters for a query-type entities.",
          "$ref": "#/definitions/base64Binary"
        },
        "_query": {
          "description": "Extensions for query",
          "$ref": "#/definitions/Element"
        },
        "detail": {
          "description": "Tagged value pairs for conveying additional information about the entity.",
          "items": {
            "$ref": "#/definitions/AuditEvent_Detail"
          },
          "type": "array"
        },
        "agent": {
          "description": "The entity is attributed to an agent to express the agent\u0027s responsibility for that entity in the activity. This is most used to indicate when persistence media (the entity) are used by an agent. For example when importing data from a device, the device would be described in an entity, and the user importing data from that media would be indicated as the entity.agent.",
          "items": {
            "$ref": "#/definitions/AuditEvent_Agent"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "AuditEvent_Detail": {
      "description": "A record of an event relevant for purposes such as operations, privacy, security, maintenance, and performance analysis.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of extra detail provided in the value.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": {
          "description": "The  value of the extra detail.",
          "$ref": "#/definitions/Quantity"
        },
        "valueCodeableConcept": {
          "description": "The  value of the extra detail.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueString": {
          "description": "The  value of the extra detail.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "description": "The  value of the extra detail.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "description": "The  value of the extra detail.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": {
          "description": "Extensions for valueInteger",
          "$ref": "#/definitions/Element"
        },
        "valueRange": {
          "description": "The  value of the extra detail.",
          "$ref": "#/definitions/Range"
        },
        "valueRatio": {
          "description": "The  value of the extra detail.",
          "$ref": "#/definitions/Ratio"
        },
        "valueTime": {
          "description": "The  value of the extra detail.",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?$",
          "type": "string"
        },
        "_valueTime": {
          "description": "Extensions for valueTime",
          "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "description": "The  value of the extra detail.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_valueDateTime": {
          "description": "Extensions for valueDateTime",
          "$ref": "#/definitions/Element"
        },
        "valuePeriod": {
          "description": "The  value of the extra detail.",
          "$ref": "#/definitions/Period"
        },
        "valueBase64Binary": {
          "description": "The  value of the extra detail.",
          "pattern": "^\\s*([A-Za-z0-9+\\\\/]{4})*(([A-Za-z0-9+\\\\/]{2}\u003d\u003d)|([A-Za-z0-9+\\\\/]{3}\u003d)|([A-Za-z0-9+\\\\/]{4}))\\s*$",
          "type": "string"
        },
        "_valueBase64Binary": {
          "description": "Extensions for valueBase64Binary",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "Basic": {
      "description": "Basic is used for handling concepts not yet defined in FHIR, narrative-only resources that don\u0027t map to an existing resource, and custom resources not appropriate for inclusion in the FHIR specification.",
      "properties": {
        "resourceType": {
          "description": "This is a Basic resource",
          "const": "Basic"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifier assigned to the resource for business purposes, outside the context of FHIR.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "code": {
          "description": "Identifies the \u0027type\u0027 of resource - equivalent to the resource name for other resources.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subject": {
          "description": "Identifies the patient, practitioner, device or any other resource that is the \"focus\" of this resource.",
          "$ref": "#/definitions/Reference"
        },
        "created": {
          "description": "Identifies when the resource was first created.",
          "$ref": "#/definitions/dateTime"
        },
        "_created": {
          "description": "Extensions for created",
          "$ref": "#/definitions/Element"
        },
        "author": {
          "description": "Indicates who was responsible for creating the resource instance.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code",
        "resourceType"
      ]
    },
    "Binary": {
      "description": "A resource that represents the data of a single raw artifact as digital content accessible in its native format.  A Binary resource can contain any content, whether text, image, pdf, zip archive, etc.",
      "properties": {
        "resourceType": {
          "description": "This is a Binary resource",
          "const": "Binary"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "contentType": {
          "description": "MimeType of the binary content represented as a standard MimeType (BCP 13).",
          "$ref": "#/definitions/code"
        },
        "_contentType": {
          "description": "Extensions for contentType",
          "$ref": "#/definitions/Element"
        },
        "securityContext": {
          "description": "This element identifies another resource that can be used as a proxy of the security sensitivity to use when deciding and enforcing access control rules for the Binary resource. Given that the Binary resource contains very few elements that can be used to determine the sensitivity of the data and relationships to individuals, the referenced resource stands in as a proxy equivalent for this purpose. This referenced resource may be related to the Binary (e.g. DocumentReference), or may be some non-related Resource purely as a security proxy. E.g. to identify that the binary resource relates to a patient, and access should only be granted to applications that have access to the patient.",
          "$ref": "#/definitions/Reference"
        },
        "data": {
          "description": "The actual content, base64 encoded.",
          "$ref": "#/definitions/base64Binary"
        },
        "_data": {
          "description": "Extensions for data",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "BiologicallyDerivedProduct": {
      "description": "This resource reflects an instance of a biologically derived product. A material substance originating from a biological entity intended to be transplanted or infused\ninto another (possibly the same) biological entity.",
      "properties": {
        "resourceType": {
          "description": "This is a BiologicallyDerivedProduct resource",
          "const": "BiologicallyDerivedProduct"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "productCategory": {
          "description": "Broad category of this product.",
          "$ref": "#/definitions/Coding"
        },
        "productCode": {
          "description": "A codified value that systematically supports characterization and classification of medical products of human origin inclusive of processing conditions such as additives, volumes and handling conditions.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "parent": {
          "description": "Parent product (if any) for this biologically-derived product.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "request": {
          "description": "Request to obtain and/or infuse this biologically derived product.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Unique instance identifiers assigned to a biologically derived product. Note: This is a business identifier, not a resource identifier.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "biologicalSourceEvent": {
          "description": "An identifier that supports traceability to the event during which material in this product from one or more biological entities was obtained or pooled.",
          "$ref": "#/definitions/Identifier"
        },
        "processingFacility": {
          "description": "Processing facilities responsible for the labeling and distribution of this biologically derived product.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "division": {
          "description": "A unique identifier for an aliquot of a product.  Used to distinguish individual aliquots of a product carrying the same biologicalSource and productCode identifiers.",
          "$ref": "#/definitions/string"
        },
        "_division": {
          "description": "Extensions for division",
          "$ref": "#/definitions/Element"
        },
        "productStatus": {
          "description": "Whether the product is currently available.",
          "$ref": "#/definitions/Coding"
        },
        "expirationDate": {
          "description": "Date, and where relevant time, of expiration.",
          "$ref": "#/definitions/dateTime"
        },
        "_expirationDate": {
          "description": "Extensions for expirationDate",
          "$ref": "#/definitions/Element"
        },
        "collection": {
          "description": "How this product was collected.",
          "$ref": "#/definitions/BiologicallyDerivedProduct_Collection"
        },
        "storageTempRequirements": {
          "description": "The temperature requirements for storage of the biologically-derived product.",
          "$ref": "#/definitions/Range"
        },
        "property": {
          "description": "A property that is specific to this BiologicallyDerviedProduct instance.",
          "items": {
            "$ref": "#/definitions/BiologicallyDerivedProduct_Property"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "BiologicallyDerivedProduct_Collection": {
      "description": "This resource reflects an instance of a biologically derived product. A material substance originating from a biological entity intended to be transplanted or infused\ninto another (possibly the same) biological entity.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "collector": {
          "description": "Healthcare professional who is performing the collection.",
          "$ref": "#/definitions/Reference"
        },
        "source": {
          "description": "The patient or entity, such as a hospital or vendor in the case of a processed/manipulated/manufactured product, providing the product.",
          "$ref": "#/definitions/Reference"
        },
        "collectedDateTime": {
          "description": "Time of product collection.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_collectedDateTime": {
          "description": "Extensions for collectedDateTime",
          "$ref": "#/definitions/Element"
        },
        "collectedPeriod": {
          "description": "Time of product collection.",
          "$ref": "#/definitions/Period"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "BiologicallyDerivedProduct_Property": {
      "description": "This resource reflects an instance of a biologically derived product. A material substance originating from a biological entity intended to be transplanted or infused\ninto another (possibly the same) biological entity.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Code that specifies the property. It should reference an established coding system.",
          "$ref": "#/definitions/Coding"
        },
        "valueBoolean": {
          "description": "Property values.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "description": "Property values.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": {
          "description": "Extensions for valueInteger",
          "$ref": "#/definitions/Element"
        },
        "valueCodeableConcept": {
          "description": "Property values.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valuePeriod": {
          "description": "Property values.",
          "$ref": "#/definitions/Period"
        },
        "valueQuantity": {
          "description": "Property values.",
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "description": "Property values.",
          "$ref": "#/definitions/Range"
        },
        "valueRatio": {
          "description": "Property values.",
          "$ref": "#/definitions/Ratio"
        },
        "valueString": {
          "description": "Property values.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueAttachment": {
          "description": "Property values.",
          "$ref": "#/definitions/Attachment"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "BodyStructure": {
      "description": "Record details about an anatomical structure.  This resource may be used when a coded concept does not provide the necessary detail needed for the use case.",
      "properties": {
        "resourceType": {
          "description": "This is a BodyStructure resource",
          "const": "BodyStructure"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifier for this instance of the anatomical structure.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "active": {
          "description": "Whether this body site is in active use.",
          "$ref": "#/definitions/boolean"
        },
        "_active": {
          "description": "Extensions for active",
          "$ref": "#/definitions/Element"
        },
        "morphology": {
          "description": "The kind of structure being represented by the body structure at `BodyStructure.location`.  This can define both normal and abnormal morphologies.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "includedStructure": {
          "description": "The anatomical location(s) or region(s) of the specimen, lesion, or body structure.",
          "items": {
            "$ref": "#/definitions/BodyStructure_IncludedStructure"
          },
          "type": "array"
        },
        "excludedStructure": {
          "description": "The anatomical location(s) or region(s) not occupied or represented by the specimen, lesion, or body structure.",
          "items": {
            "$ref": "#/definitions/BodyStructure_ExcludedStructure"
          },
          "type": "array"
        },
        "description": {
          "description": "A summary, characterization or explanation of the body structure.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "image": {
          "description": "Image or images used to identify a location.",
          "items": {
            "$ref": "#/definitions/Attachment"
          },
          "type": "array"
        },
        "patient": {
          "description": "The person to which the body site belongs.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "includedStructure",
        "patient",
        "resourceType"
      ]
    },
    "BodyStructure_IncludedStructure": {
      "description": "Record details about an anatomical structure.  This resource may be used when a coded concept does not provide the necessary detail needed for the use case.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "structure": {
          "description": "Code that represents the included structure.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "laterality": {
          "description": "Code that represents the included structure laterality.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "qualifier": {
          "description": "Code that represents the included structure qualifier.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "structure"
      ]
    },
    "BodyStructure_ExcludedStructure": {
      "description": "Record details about an anatomical structure.  This resource may be used when a coded concept does not provide the necessary detail needed for the use case.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "structure": {
          "description": "Code that represents the excluded structure.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "laterality": {
          "description": "Code that represents the excluded structure laterality.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "qualifier": {
          "description": "Code that represents the excluded structure qualifier.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "structure"
      ]
    },
    "Bundle": {
      "description": "A container for a collection of resources.",
      "properties": {
        "resourceType": {
          "description": "This is a Bundle resource",
          "const": "Bundle"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A persistent identifier for the bundle that won\u0027t change as a bundle is copied from server to server.",
          "$ref": "#/definitions/Identifier"
        },
        "type": {
          "description": "Indicates the purpose of this bundle - how it is intended to be used.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "timestamp": {
          "description": "The date/time that the bundle was assembled - i.e. when the resources were placed in the bundle.",
          "$ref": "#/definitions/instant"
        },
        "_timestamp": {
          "description": "Extensions for timestamp",
          "$ref": "#/definitions/Element"
        },
        "total": {
          "description": "If a set of search matches, this is the (potentially estimated) total number of entries of type \u0027match\u0027 across all pages in the search.  It does not include search.mode \u003d \u0027include\u0027 or \u0027outcome\u0027 entries and it does not provide a count of the number of entries in the Bundle.",
          "$ref": "#/definitions/unsignedInt"
        },
        "_total": {
          "description": "Extensions for total",
          "$ref": "#/definitions/Element"
        },
        "link": {
          "description": "A series of links that provide context to this bundle.",
          "items": {
            "$ref": "#/definitions/Bundle_Link"
          },
          "type": "array"
        },
        "entry": {
          "description": "An entry in a bundle resource - will either contain a resource or information about a resource (transactions and history only).",
          "items": {
            "$ref": "#/definitions/Bundle_Entry"
          },
          "type": "array"
        },
        "signature": {
          "description": "Digital Signature - base64 encoded. XML-DSig or a JWS.",
          "$ref": "#/definitions/Signature"
        },
        "issues": {
          "description": "Captures issues and warnings that relate to the construction of the Bundle and the content within it.",
          "$ref": "#/definitions/ResourceList"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Bundle_Link": {
      "description": "A container for a collection of resources.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "relation": {
          "description": "A name which details the functional use for this link - see [http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1](http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1).",
          "$ref": "#/definitions/code"
        },
        "_relation": {
          "description": "Extensions for relation",
          "$ref": "#/definitions/Element"
        },
        "url": {
          "description": "The reference details for the link.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Bundle_Entry": {
      "description": "A container for a collection of resources.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "link": {
          "description": "A series of links that provide context to this entry.",
          "items": {
            "$ref": "#/definitions/Bundle_Link"
          },
          "type": "array"
        },
        "fullUrl": {
          "description": "The Absolute URL for the resource. Except for transactions and batches, each entry in a Bundle must have a fullUrl. The fullUrl SHALL NOT disagree with the id in the resource - i.e. if the fullUrl is not a urn:uuid, the URL shall be version-independent URL consistent with the Resource.id. The fullUrl is a version independent reference to the resource. Even when not required, fullUrl MAY be set to a urn:uuid to allow referencing entries in a transaction. The fullUrl can be an arbitrary URI and is not limited to urn:uuid, urn:oid, http, and https. The fullUrl element SHALL have a value except when: \n* invoking a create\n* invoking or responding to an operation where the body is not a single identified resource\n* invoking or returning the results of a search or history operation.",
          "$ref": "#/definitions/uri"
        },
        "_fullUrl": {
          "description": "Extensions for fullUrl",
          "$ref": "#/definitions/Element"
        },
        "resource": {
          "description": "The Resource for the entry. The purpose/meaning of the resource is determined by the Bundle.type. This is allowed to be a Parameters resource if and only if it is referenced by something else within the Bundle that provides context/meaning.",
          "$ref": "#/definitions/ResourceList"
        },
        "search": {
          "description": "Information about the search process that lead to the creation of this entry.",
          "$ref": "#/definitions/Bundle_Search"
        },
        "request": {
          "description": "Additional information about how this entry should be processed as part of a transaction or batch.  For history, it shows how the entry was processed to create the version contained in the entry.",
          "$ref": "#/definitions/Bundle_Request"
        },
        "response": {
          "description": "Indicates the results of processing the corresponding \u0027request\u0027 entry in the batch or transaction being responded to or what the results of an operation where when returning history.",
          "$ref": "#/definitions/Bundle_Response"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Bundle_Search": {
      "description": "A container for a collection of resources.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "mode": {
          "description": "Why this entry is in the result set - whether it\u0027s included as a match or because of an _include requirement, or to convey information or warning information about the search process.",
          "$ref": "#/definitions/code"
        },
        "_mode": {
          "description": "Extensions for mode",
          "$ref": "#/definitions/Element"
        },
        "score": {
          "description": "When searching, the server\u0027s search ranking score for the entry.",
          "$ref": "#/definitions/decimal"
        },
        "_score": {
          "description": "Extensions for score",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Bundle_Request": {
      "description": "A container for a collection of resources.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "method": {
          "description": "In a transaction or batch, this is the HTTP action to be executed for this entry. In a history bundle, this indicates the HTTP action that occurred.",
          "$ref": "#/definitions/code"
        },
        "_method": {
          "description": "Extensions for method",
          "$ref": "#/definitions/Element"
        },
        "url": {
          "description": "The URL for this entry, relative to the root (the address to which the request is posted).",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "ifNoneMatch": {
          "description": "If the ETag values match, return a 304 Not Modified status. See the API documentation for [\"Conditional Read\"](http.html#cread).",
          "$ref": "#/definitions/string"
        },
        "_ifNoneMatch": {
          "description": "Extensions for ifNoneMatch",
          "$ref": "#/definitions/Element"
        },
        "ifModifiedSince": {
          "description": "Only perform the operation if the last updated date matches. See the API documentation for [\"Conditional Read\"](http.html#cread).",
          "$ref": "#/definitions/instant"
        },
        "_ifModifiedSince": {
          "description": "Extensions for ifModifiedSince",
          "$ref": "#/definitions/Element"
        },
        "ifMatch": {
          "description": "Only perform the operation if the Etag value matches. For more information, see the API section [\"Managing Resource Contention\"](http.html#concurrency).",
          "$ref": "#/definitions/string"
        },
        "_ifMatch": {
          "description": "Extensions for ifMatch",
          "$ref": "#/definitions/Element"
        },
        "ifNoneExist": {
          "description": "Instruct the server not to perform the create if a specified resource already exists. For further information, see the API documentation for [\"Conditional Create\"](http.html#ccreate). This is just the query portion of the URL - what follows the \"?\" (not including the \"?\").",
          "$ref": "#/definitions/string"
        },
        "_ifNoneExist": {
          "description": "Extensions for ifNoneExist",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Bundle_Response": {
      "description": "A container for a collection of resources.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "status": {
          "description": "The status code returned by processing this entry. The status SHALL start with a 3 digit HTTP code (e.g. 404) and may contain the standard HTTP description associated with the status code.",
          "$ref": "#/definitions/string"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "location": {
          "description": "The location header created by processing this operation, populated if the operation returns a location.",
          "$ref": "#/definitions/uri"
        },
        "_location": {
          "description": "Extensions for location",
          "$ref": "#/definitions/Element"
        },
        "etag": {
          "description": "The Etag for the resource, if the operation for the entry produced a versioned resource (see [Resource Metadata and Versioning](http.html#versioning) and [Managing Resource Contention](http.html#concurrency)).",
          "$ref": "#/definitions/string"
        },
        "_etag": {
          "description": "Extensions for etag",
          "$ref": "#/definitions/Element"
        },
        "lastModified": {
          "description": "The date/time that the resource was modified on the server.",
          "$ref": "#/definitions/instant"
        },
        "_lastModified": {
          "description": "Extensions for lastModified",
          "$ref": "#/definitions/Element"
        },
        "outcome": {
          "description": "An OperationOutcome containing hints and warnings produced as part of processing this entry in a batch or transaction.",
          "$ref": "#/definitions/ResourceList"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "CapabilityStatement": {
      "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server or Client for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "resourceType": {
          "description": "This is a CapabilityStatement resource",
          "const": "CapabilityStatement"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this capability statement when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this capability statement is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the capability statement is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this {{title}} when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the capability statement when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the capability statement author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the capability statement. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the capability statement.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this capability statement. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this capability statement is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the capability statement was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the capability statement changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the capability statement.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the capability statement from a consumer\u0027s perspective. Typically, this is used when the capability statement describes a desired rather than an actual solution, for example as a formal expression of requirements as part of an RFP.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate capability statement instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the capability statement is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this capability statement is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the capability statement and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the capability statement.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "kind": {
          "description": "The way that this statement is intended to be used, to describe an actual running instance of software, a particular product (kind, not instance of software) or a class of implementation (e.g. a desired purchase).",
          "$ref": "#/definitions/code"
        },
        "_kind": {
          "description": "Extensions for kind",
          "$ref": "#/definitions/Element"
        },
        "instantiates": {
          "description": "Reference to a canonical URL of another CapabilityStatement that this software implements. This capability statement is a published API description that corresponds to a business service. The server may actually implement a subset of the capability statement it claims to implement, so the capability statement must specify the full capability details.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "imports": {
          "description": "Reference to a canonical URL of another CapabilityStatement that this software adds to. The capability statement automatically includes everything in the other statement, and it is not duplicated, though the server may repeat the same resources, interactions and operations to add additional details to them.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "software": {
          "description": "Software that is covered by this capability statement.  It is used when the capability statement describes the capabilities of a particular software version, independent of an installation.",
          "$ref": "#/definitions/CapabilityStatement_Software"
        },
        "implementation": {
          "description": "Identifies a specific implementation instance that is described by the capability statement - i.e. a particular installation, rather than the capabilities of a software program.",
          "$ref": "#/definitions/CapabilityStatement_Implementation"
        },
        "fhirVersion": {
          "description": "The version of the FHIR specification that this CapabilityStatement describes (which SHALL be the same as the FHIR version of the CapabilityStatement itself). There is no default value.",
          "$ref": "#/definitions/code"
        },
        "_fhirVersion": {
          "description": "Extensions for fhirVersion",
          "$ref": "#/definitions/Element"
        },
        "format": {
          "description": "A list of the formats supported by this implementation using their content types.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_format": {
          "description": "Extensions for format",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "patchFormat": {
          "description": "A list of the patch formats supported by this implementation using their content types.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_patchFormat": {
          "description": "Extensions for patchFormat",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "acceptLanguage": {
          "description": "A list of the languages supported by this implementation that are usefully supported in the ```Accept-Language``` header.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_acceptLanguage": {
          "description": "Extensions for acceptLanguage",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "implementationGuide": {
          "description": "A list of implementation guides that the server does (or should) support in their entirety.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "rest": {
          "description": "A definition of the restful capabilities of the solution, if any.",
          "items": {
            "$ref": "#/definitions/CapabilityStatement_Rest"
          },
          "type": "array"
        },
        "messaging": {
          "description": "A description of the messaging capabilities of the solution.",
          "items": {
            "$ref": "#/definitions/CapabilityStatement_Messaging"
          },
          "type": "array"
        },
        "document": {
          "description": "A document definition.",
          "items": {
            "$ref": "#/definitions/CapabilityStatement_Document"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "CapabilityStatement_Software": {
      "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server or Client for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "Name the software is known by.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "version": {
          "description": "The version identifier for the software covered by this statement.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "releaseDate": {
          "description": "Date this version of the software was released.",
          "$ref": "#/definitions/dateTime"
        },
        "_releaseDate": {
          "description": "Extensions for releaseDate",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "CapabilityStatement_Implementation": {
      "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server or Client for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "description": {
          "description": "Information about the specific installation that this capability statement relates to.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "url": {
          "description": "An absolute base URL for the implementation.  This forms the base for REST interfaces as well as the mailbox and document interfaces.",
          "$ref": "#/definitions/url"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "custodian": {
          "description": "The organization responsible for the management of the instance and oversight of the data on the server at the specified URL.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "CapabilityStatement_Rest": {
      "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server or Client for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "mode": {
          "description": "Identifies whether this portion of the statement is describing the ability to initiate or receive restful operations.",
          "$ref": "#/definitions/code"
        },
        "_mode": {
          "description": "Extensions for mode",
          "$ref": "#/definitions/Element"
        },
        "documentation": {
          "description": "Information about the system\u0027s restful capabilities that apply across all applications, such as security.",
          "$ref": "#/definitions/markdown"
        },
        "_documentation": {
          "description": "Extensions for documentation",
          "$ref": "#/definitions/Element"
        },
        "security": {
          "description": "Information about security implementation from an interface perspective - what a client needs to know.",
          "$ref": "#/definitions/CapabilityStatement_Security"
        },
        "resource": {
          "description": "A specification of the restful capabilities of the solution for a specific resource type.",
          "items": {
            "$ref": "#/definitions/CapabilityStatement_Resource"
          },
          "type": "array"
        },
        "interaction": {
          "description": "A specification of restful operations supported by the system.",
          "items": {
            "$ref": "#/definitions/CapabilityStatement_Interaction1"
          },
          "type": "array"
        },
        "searchParam": {
          "description": "Search parameters that are supported for searching all resources for implementations to support and/or make use of - either references to ones defined in the specification, or additional ones defined for/by the implementation. This is only for searches executed against the system-level endpoint.",
          "items": {
            "$ref": "#/definitions/CapabilityStatement_SearchParam"
          },
          "type": "array"
        },
        "operation": {
          "description": "Definition of an operation or a named query together with its parameters and their meaning and type.",
          "items": {
            "$ref": "#/definitions/CapabilityStatement_Operation"
          },
          "type": "array"
        },
        "compartment": {
          "description": "An absolute URI which is a reference to the definition of a compartment that the system supports. The reference is to a CompartmentDefinition resource by its canonical URL .",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "CapabilityStatement_Security": {
      "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server or Client for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "cors": {
          "description": "Server adds CORS headers when responding to requests - this enables Javascript applications to use the server.",
          "$ref": "#/definitions/boolean"
        },
        "_cors": {
          "description": "Extensions for cors",
          "$ref": "#/definitions/Element"
        },
        "service": {
          "description": "Types of security services that are supported/required by the system.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "description": {
          "description": "General description of how security works.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "CapabilityStatement_Resource": {
      "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server or Client for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "A type of resource exposed via the restful interface.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "profile": {
          "description": "A system-wide profile that is applied across *all* instances of the resource supported by the system. For example, if declared on Observation, this profile is the \"superset\" of capabilities for laboratory *and* vitals *and* other domains. See further discussion in [Using Profiles](profiling.html#profile-uses).",
          "$ref": "#/definitions/canonical"
        },
        "supportedProfile": {
          "description": "A list of profiles representing different use cases the system hosts/produces. A supported profile is a statement about the functionality of the data and services provided by the server (or the client) for supported use cases. For example, a system can define and declare multiple Observation profiles for laboratory observations, vital sign observations, etc. By declaring supported profiles, systems provide a way to determine whether individual resources are conformant. See further discussion in [Using Profiles](profiling.html#profile-uses).",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "documentation": {
          "description": "Additional information about the resource type used by the system.",
          "$ref": "#/definitions/markdown"
        },
        "_documentation": {
          "description": "Extensions for documentation",
          "$ref": "#/definitions/Element"
        },
        "interaction": {
          "description": "Identifies a restful operation supported by the solution.",
          "items": {
            "$ref": "#/definitions/CapabilityStatement_Interaction"
          },
          "type": "array"
        },
        "versioning": {
          "description": "This field is set to no-version to specify that the system does not support (server) or use (client) versioning for this resource type. If this has some other value, the server must at least correctly track and populate the versionId meta-property on resources. If the value is \u0027versioned-update\u0027, then the server supports all the versioning features, including using e-tags for version integrity in the API.",
          "$ref": "#/definitions/code"
        },
        "_versioning": {
          "description": "Extensions for versioning",
          "$ref": "#/definitions/Element"
        },
        "readHistory": {
          "description": "A flag for whether the server is able to return past versions as part of the vRead operation.",
          "$ref": "#/definitions/boolean"
        },
        "_readHistory": {
          "description": "Extensions for readHistory",
          "$ref": "#/definitions/Element"
        },
        "updateCreate": {
          "description": "A flag to indicate that the server allows or needs to allow the client to create new identities on the server (that is, the client PUTs to a location where there is no existing resource). Allowing this operation means that the server allows the client to create new identities on the server.",
          "$ref": "#/definitions/boolean"
        },
        "_updateCreate": {
          "description": "Extensions for updateCreate",
          "$ref": "#/definitions/Element"
        },
        "conditionalCreate": {
          "description": "A flag that indicates that the server supports conditional create.",
          "$ref": "#/definitions/boolean"
        },
        "_conditionalCreate": {
          "description": "Extensions for conditionalCreate",
          "$ref": "#/definitions/Element"
        },
        "conditionalRead": {
          "description": "A code that indicates how the server supports conditional read.",
          "$ref": "#/definitions/code"
        },
        "_conditionalRead": {
          "description": "Extensions for conditionalRead",
          "$ref": "#/definitions/Element"
        },
        "conditionalUpdate": {
          "description": "A flag that indicates that the server supports conditional update.",
          "$ref": "#/definitions/boolean"
        },
        "_conditionalUpdate": {
          "description": "Extensions for conditionalUpdate",
          "$ref": "#/definitions/Element"
        },
        "conditionalPatch": {
          "description": "A flag that indicates that the server supports conditional patch.",
          "$ref": "#/definitions/boolean"
        },
        "_conditionalPatch": {
          "description": "Extensions for conditionalPatch",
          "$ref": "#/definitions/Element"
        },
        "conditionalDelete": {
          "description": "A code that indicates how the server supports conditional delete.",
          "$ref": "#/definitions/code"
        },
        "_conditionalDelete": {
          "description": "Extensions for conditionalDelete",
          "$ref": "#/definitions/Element"
        },
        "referencePolicy": {
          "description": "A set of flags that defines how references are supported.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_referencePolicy": {
          "description": "Extensions for referencePolicy",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "searchInclude": {
          "description": "A list of _include values supported by the server.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_searchInclude": {
          "description": "Extensions for searchInclude",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "searchRevInclude": {
          "description": "A list of _revinclude (reverse include) values supported by the server.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_searchRevInclude": {
          "description": "Extensions for searchRevInclude",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "searchParam": {
          "description": "Search parameters for implementations to support and/or make use of - either references to ones defined in the specification, or additional ones defined for/by the implementation.",
          "items": {
            "$ref": "#/definitions/CapabilityStatement_SearchParam"
          },
          "type": "array"
        },
        "operation": {
          "description": "Definition of an operation or a named query together with its parameters and their meaning and type. Consult the definition of the operation for details about how to invoke the operation, and the parameters.",
          "items": {
            "$ref": "#/definitions/CapabilityStatement_Operation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "CapabilityStatement_Interaction": {
      "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server or Client for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "Coded identifier of the operation, supported by the system resource.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "documentation": {
          "description": "Guidance specific to the implementation of this operation, such as \u0027delete is a logical delete\u0027 or \u0027updates are only allowed with version id\u0027 or \u0027creates permitted from pre-authorized certificates only\u0027.",
          "$ref": "#/definitions/markdown"
        },
        "_documentation": {
          "description": "Extensions for documentation",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "CapabilityStatement_SearchParam": {
      "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server or Client for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "The label used for the search parameter in this particular system\u0027s API - i.e. the \u0027name\u0027 portion of the name-value pair that will appear as part of the search URL.  This SHOULD be the same as the SearchParameter.code of the defining SearchParameter.  However, it can sometimes differ if necessary to disambiguate when a server supports multiple SearchParameters that happen to share the same code.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "definition": {
          "description": "An absolute URI that is a formal reference to where this parameter was first defined, so that a client can be confident of the meaning of the search parameter (a reference to [SearchParameter.url](searchparameter-definitions.html#SearchParameter.url)). This element SHALL be populated if the search parameter refers to a SearchParameter defined by the FHIR core specification or externally defined IGs.",
          "$ref": "#/definitions/canonical"
        },
        "type": {
          "description": "The type of value a search parameter refers to, and how the content is interpreted.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "documentation": {
          "description": "This allows documentation of any distinct behaviors about how the search parameter is used.  For example, text matching algorithms.",
          "$ref": "#/definitions/markdown"
        },
        "_documentation": {
          "description": "Extensions for documentation",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "CapabilityStatement_Operation": {
      "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server or Client for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "The name of the operation or query. For an operation, this name is prefixed with $ and used in the URL. For a query, this is the name used in the _query parameter when the query is called. This SHOULD be the same as the OperationDefinition.code of the defining OperationDefinition.  However, it can sometimes differ if necessary to disambiguate when a server supports multiple OperationDefinition that happen to share the same code.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "definition": {
          "description": "Where the formal definition can be found. If a server references the base definition of an Operation (i.e. from the specification itself such as ```http://hl7.org/fhir/OperationDefinition/ValueSet-expand```), that means it supports the full capabilities of the operation - e.g. both GET and POST invocation.  If it only supports a subset, it must define its own custom [OperationDefinition](operationdefinition.html#) with a \u0027base\u0027 of the original OperationDefinition.  The custom definition would describe the specific subset of functionality supported.",
          "$ref": "#/definitions/canonical"
        },
        "documentation": {
          "description": "Documentation that describes anything special about the operation behavior, possibly detailing different behavior for system, type and instance-level invocation of the operation.",
          "$ref": "#/definitions/markdown"
        },
        "_documentation": {
          "description": "Extensions for documentation",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "definition"
      ]
    },
    "CapabilityStatement_Interaction1": {
      "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server or Client for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "A coded identifier of the operation, supported by the system.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "documentation": {
          "description": "Guidance specific to the implementation of this operation, such as limitations on the kind of transactions allowed, or information about system wide search is implemented.",
          "$ref": "#/definitions/markdown"
        },
        "_documentation": {
          "description": "Extensions for documentation",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "CapabilityStatement_Messaging": {
      "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server or Client for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "endpoint": {
          "description": "An endpoint (network accessible address) to which messages and/or replies are to be sent.",
          "items": {
            "$ref": "#/definitions/CapabilityStatement_Endpoint"
          },
          "type": "array"
        },
        "reliableCache": {
          "description": "Length if the receiver\u0027s reliable messaging cache in minutes (if a receiver) or how long the cache length on the receiver should be (if a sender).",
          "$ref": "#/definitions/unsignedInt"
        },
        "_reliableCache": {
          "description": "Extensions for reliableCache",
          "$ref": "#/definitions/Element"
        },
        "documentation": {
          "description": "Documentation about the system\u0027s messaging capabilities for this endpoint not otherwise documented by the capability statement.  For example, the process for becoming an authorized messaging exchange partner.",
          "$ref": "#/definitions/markdown"
        },
        "_documentation": {
          "description": "Extensions for documentation",
          "$ref": "#/definitions/Element"
        },
        "supportedMessage": {
          "description": "References to message definitions for messages this system can send or receive.",
          "items": {
            "$ref": "#/definitions/CapabilityStatement_SupportedMessage"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "CapabilityStatement_Endpoint": {
      "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server or Client for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "protocol": {
          "description": "A list of the messaging transport protocol(s) identifiers, supported by this endpoint.",
          "$ref": "#/definitions/Coding"
        },
        "address": {
          "description": "The network address of the endpoint. For solutions that do not use network addresses for routing, it can be just an identifier.",
          "$ref": "#/definitions/url"
        },
        "_address": {
          "description": "Extensions for address",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "protocol"
      ]
    },
    "CapabilityStatement_SupportedMessage": {
      "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server or Client for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "mode": {
          "description": "The mode of this event declaration - whether application is sender or receiver.",
          "$ref": "#/definitions/code"
        },
        "_mode": {
          "description": "Extensions for mode",
          "$ref": "#/definitions/Element"
        },
        "definition": {
          "description": "Points to a message definition that identifies the messaging event, message structure, allowed responses, etc.",
          "$ref": "#/definitions/canonical"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "definition"
      ]
    },
    "CapabilityStatement_Document": {
      "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server or Client for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "mode": {
          "description": "Mode of this document declaration - whether an application is a producer or consumer.",
          "$ref": "#/definitions/code"
        },
        "_mode": {
          "description": "Extensions for mode",
          "$ref": "#/definitions/Element"
        },
        "documentation": {
          "description": "A description of how the application supports or uses the specified document profile.  For example, when documents are created, what action is taken with consumed documents, etc.",
          "$ref": "#/definitions/markdown"
        },
        "_documentation": {
          "description": "Extensions for documentation",
          "$ref": "#/definitions/Element"
        },
        "profile": {
          "description": "A profile on the document Bundle that constrains which resources are present, and their contents.",
          "$ref": "#/definitions/canonical"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "profile"
      ]
    },
    "CarePlan": {
      "description": "Describes the intention of how one or more practitioners intend to deliver care for a particular patient, group or community for a period of time, possibly limited to care for a specific condition or set of conditions.",
      "properties": {
        "resourceType": {
          "description": "This is a CarePlan resource",
          "const": "CarePlan"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Business identifiers assigned to this care plan by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "instantiatesCanonical": {
          "description": "The URL pointing to a FHIR-defined protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "instantiatesUri": {
          "description": "The URL pointing to an externally maintained protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan.",
          "items": {
            "$ref": "#/definitions/uri"
          },
          "type": "array"
        },
        "_instantiatesUri": {
          "description": "Extensions for instantiatesUri",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "basedOn": {
          "description": "A higher-level request resource (i.e. a plan, proposal or order) that is fulfilled in whole or in part by this care plan.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "replaces": {
          "description": "Completed or terminated care plan whose function is taken by this new care plan.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "partOf": {
          "description": "A larger care plan of which this particular care plan is a component or step.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "status": {
          "description": "Indicates whether the plan is currently being acted upon, represents future intentions or is now a historical record.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "intent": {
          "description": "Indicates the level of authority/intentionality associated with the care plan and where the care plan fits into the workflow chain.",
          "$ref": "#/definitions/code"
        },
        "_intent": {
          "description": "Extensions for intent",
          "$ref": "#/definitions/Element"
        },
        "category": {
          "description": "Identifies what \"kind\" of plan this is to support differentiation between multiple co-existing plans; e.g. \"Home health\", \"psychiatric\", \"asthma\", \"disease management\", \"wellness plan\", etc.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "title": {
          "description": "Human-friendly name for the care plan.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "A description of the scope and nature of the plan.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "subject": {
          "description": "Identifies the patient or group whose intended care is described by the plan.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "The Encounter during which this CarePlan was created or to which the creation of this record is tightly associated.",
          "$ref": "#/definitions/Reference"
        },
        "period": {
          "description": "Indicates when the plan did (or is intended to) come into effect and end.",
          "$ref": "#/definitions/Period"
        },
        "created": {
          "description": "Represents when this particular CarePlan record was created in the system, which is often a system-generated date.",
          "$ref": "#/definitions/dateTime"
        },
        "_created": {
          "description": "Extensions for created",
          "$ref": "#/definitions/Element"
        },
        "custodian": {
          "description": "When populated, the custodian is responsible for the care plan. The care plan is attributed to the custodian.",
          "$ref": "#/definitions/Reference"
        },
        "contributor": {
          "description": "Identifies the individual(s), organization or device who provided the contents of the care plan.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "careTeam": {
          "description": "Identifies all people and organizations who are expected to be involved in the care envisioned by this plan.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "addresses": {
          "description": "Identifies the conditions/problems/concerns/diagnoses/etc. whose management and/or mitigation are handled by this plan.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "supportingInfo": {
          "description": "Identifies portions of the patient\u0027s record that specifically influenced the formation of the plan.  These might include comorbidities, recent procedures, limitations, recent assessments, etc.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "goal": {
          "description": "Describes the intended objective(s) of carrying out the care plan.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "activity": {
          "description": "Identifies an action that has occurred or is a planned action to occur as part of the plan. For example, a medication to be used, lab tests to perform, self-monitoring that has occurred, education etc.",
          "items": {
            "$ref": "#/definitions/CarePlan_Activity"
          },
          "type": "array"
        },
        "note": {
          "description": "General notes about the care plan not covered elsewhere.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "subject",
        "resourceType"
      ]
    },
    "CarePlan_Activity": {
      "description": "Describes the intention of how one or more practitioners intend to deliver care for a particular patient, group or community for a period of time, possibly limited to care for a specific condition or set of conditions.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "performedActivity": {
          "description": "Identifies the activity that was performed. For example, an activity could be patient education, exercise, or a medication administration. The reference to an \"event\" resource, such as Procedure or Encounter or Observation, represents the activity that was performed. The requested activity can be conveyed using CarePlan.activity.plannedActivityDetail OR using the CarePlan.activity.plannedActivityReference (a reference to a “request” resource).",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "progress": {
          "description": "Notes about the adherence/status/progress of the activity.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "plannedActivityReference": {
          "description": "The details of the proposed activity represented in a specific resource.",
          "$ref": "#/definitions/Reference"
        },
        "plannedActivityDetail": {
          "description": "A simple summary of a planned activity suitable for a general care plan system (e.g. form driven) that doesn\u0027t know about specific resources such as procedure etc.",
          "$ref": "#/definitions/CarePlan_PlannedActivityDetail"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "CarePlan_PlannedActivityDetail": {
      "description": "Describes the intention of how one or more practitioners intend to deliver care for a particular patient, group or community for a period of time, possibly limited to care for a specific condition or set of conditions.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "kind": {
          "description": "A description of the kind of resource the in-line definition of a care plan activity is representing.  The CarePlan.activity.detail is an in-line definition when a resource is not referenced using CarePlan.activity.reference.  For example, a MedicationRequest, a ServiceRequest, or a CommunicationRequest.",
          "$ref": "#/definitions/code"
        },
        "_kind": {
          "description": "Extensions for kind",
          "$ref": "#/definitions/Element"
        },
        "instantiatesCanonical": {
          "description": "The URL pointing to a FHIR-defined protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan activity.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "instantiatesUri": {
          "description": "The URL pointing to an externally maintained protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan activity.",
          "items": {
            "$ref": "#/definitions/uri"
          },
          "type": "array"
        },
        "_instantiatesUri": {
          "description": "Extensions for instantiatesUri",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "code": {
          "description": "Detailed description of the type of planned activity; e.g. what lab test, what procedure, what kind of encounter.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "reason": {
          "description": "Provides the rationale that drove the inclusion of this particular activity as part of the plan or the reason why the activity was prohibited - either a coded concept, or another resource, such as the health condition(s), whose existence justifies this request and drove the inclusion of this particular activity as part of the plan.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "goal": {
          "description": "Internal reference that identifies the goals that this activity is intended to contribute towards meeting.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "status": {
          "description": "Identifies what progress is being made for the specific activity.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "statusReason": {
          "description": "Provides reason why the activity isn\u0027t yet started, is on hold, was cancelled, etc.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "doNotPerform": {
          "description": "If true, indicates that the described activity is one that must NOT be engaged in when following the plan.  If false, or missing, indicates that the described activity is one that should be engaged in when following the plan.",
          "$ref": "#/definitions/boolean"
        },
        "_doNotPerform": {
          "description": "Extensions for doNotPerform",
          "$ref": "#/definitions/Element"
        },
        "scheduledTiming": {
          "description": "The period, timing or frequency upon which the described activity is to occur.",
          "$ref": "#/definitions/Timing"
        },
        "scheduledPeriod": {
          "description": "The period, timing or frequency upon which the described activity is to occur.",
          "$ref": "#/definitions/Period"
        },
        "scheduledString": {
          "description": "The period, timing or frequency upon which the described activity is to occur.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_scheduledString": {
          "description": "Extensions for scheduledString",
          "$ref": "#/definitions/Element"
        },
        "location": {
          "description": "Identifies the facility where the activity will occur; e.g. home, hospital, specific clinic, etc.",
          "$ref": "#/definitions/CodeableReference"
        },
        "reportedBoolean": {
          "description": "Indicates if this record was captured as a secondary \u0027reported\u0027 record rather than as an original primary source-of-truth record.  It may also indicate the source of the report.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_reportedBoolean": {
          "description": "Extensions for reportedBoolean",
          "$ref": "#/definitions/Element"
        },
        "reportedReference": {
          "description": "Indicates if this record was captured as a secondary \u0027reported\u0027 record rather than as an original primary source-of-truth record.  It may also indicate the source of the report.",
          "$ref": "#/definitions/Reference"
        },
        "performer": {
          "description": "Identifies who\u0027s expected to be involved in the activity.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "productCodeableConcept": {
          "description": "Identifies the food, drug or other product to be consumed or supplied in the activity.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "productReference": {
          "description": "Identifies the food, drug or other product to be consumed or supplied in the activity.",
          "$ref": "#/definitions/Reference"
        },
        "dailyAmount": {
          "description": "Identifies the quantity expected to be consumed in a given day.",
          "$ref": "#/definitions/Quantity"
        },
        "quantity": {
          "description": "Identifies the quantity expected to be supplied, administered or consumed by the subject.",
          "$ref": "#/definitions/Quantity"
        },
        "description": {
          "description": "This provides a textual description of constraints on the intended activity occurrence, including relation to other activities.  It may also include objectives, pre-conditions and end-conditions.  Finally, it may convey specifics about the activity such as body site, method, route, etc.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "CareTeam": {
      "description": "The Care Team includes all the people and organizations who plan to participate in the coordination and delivery of care.",
      "properties": {
        "resourceType": {
          "description": "This is a CareTeam resource",
          "const": "CareTeam"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Business identifiers assigned to this care team by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "Indicates the current state of the care team.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "category": {
          "description": "Identifies what kind of team.  This is to support differentiation between multiple co-existing teams, such as care plan team, episode of care team, longitudinal care team.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "name": {
          "description": "A label for human use intended to distinguish like teams.  E.g. the \"red\" vs. \"green\" trauma teams.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "subject": {
          "description": "Identifies the patient or group whose intended care is handled by the team.",
          "$ref": "#/definitions/Reference"
        },
        "period": {
          "description": "Indicates when the team did (or is intended to) come into effect and end.",
          "$ref": "#/definitions/Period"
        },
        "participant": {
          "description": "Identifies all people and organizations who are expected to be involved in the care team.",
          "items": {
            "$ref": "#/definitions/CareTeam_Participant"
          },
          "type": "array"
        },
        "reason": {
          "description": "Describes why the care team exists.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "managingOrganization": {
          "description": "The organization responsible for the care team.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "telecom": {
          "description": "A central contact detail for the care team (that applies to all members).",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          },
          "type": "array"
        },
        "note": {
          "description": "Comments made about the CareTeam.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "CareTeam_Participant": {
      "description": "The Care Team includes all the people and organizations who plan to participate in the coordination and delivery of care.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "role": {
          "description": "Indicates specific responsibility of an individual within the care team, such as \"Primary care physician\", \"Trained social worker counselor\", \"Caregiver\", etc.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "member": {
          "description": "The specific person or organization who is participating/expected to participate in the care team.",
          "$ref": "#/definitions/Reference"
        },
        "onBehalfOf": {
          "description": "The organization of the practitioner.",
          "$ref": "#/definitions/Reference"
        },
        "coveragePeriod": {
          "description": "When the member is generally available within this care team.",
          "$ref": "#/definitions/Period"
        },
        "coverageTiming": {
          "description": "When the member is generally available within this care team.",
          "$ref": "#/definitions/Timing"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ChargeItem": {
      "description": "The resource ChargeItem describes the provision of healthcare provider products for a certain patient, therefore referring not only to the product, but containing in addition details of the provision, like date, time, amounts and participating organizations and persons. Main Usage of the ChargeItem is to enable the billing process and internal cost allocation.",
      "properties": {
        "resourceType": {
          "description": "This is a ChargeItem resource",
          "const": "ChargeItem"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifiers assigned to this event performer or other systems.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "definitionUri": {
          "description": "References the (external) source of pricing information, rules of application for the code this ChargeItem uses.",
          "items": {
            "$ref": "#/definitions/uri"
          },
          "type": "array"
        },
        "_definitionUri": {
          "description": "Extensions for definitionUri",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "definitionCanonical": {
          "description": "References the source of pricing information, rules of application for the code this ChargeItem uses.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "status": {
          "description": "The current state of the ChargeItem.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "partOf": {
          "description": "ChargeItems can be grouped to larger ChargeItems covering the whole set.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "code": {
          "description": "A code that identifies the charge, like a billing code.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subject": {
          "description": "The individual or set of individuals the action is being or was performed on.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "This ChargeItem has the details of how the associated Encounter should be billed or otherwise be handled by finance systems.",
          "$ref": "#/definitions/Reference"
        },
        "occurrenceDateTime": {
          "description": "Date/time(s) or duration when the charged service was applied.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_occurrenceDateTime": {
          "description": "Extensions for occurrenceDateTime",
          "$ref": "#/definitions/Element"
        },
        "occurrencePeriod": {
          "description": "Date/time(s) or duration when the charged service was applied.",
          "$ref": "#/definitions/Period"
        },
        "occurrenceTiming": {
          "description": "Date/time(s) or duration when the charged service was applied.",
          "$ref": "#/definitions/Timing"
        },
        "performer": {
          "description": "Indicates who or what performed or participated in the charged service.",
          "items": {
            "$ref": "#/definitions/ChargeItem_Performer"
          },
          "type": "array"
        },
        "performingOrganization": {
          "description": "The organization performing the service.",
          "$ref": "#/definitions/Reference"
        },
        "requestingOrganization": {
          "description": "The organization requesting the service.",
          "$ref": "#/definitions/Reference"
        },
        "costCenter": {
          "description": "The financial cost center permits the tracking of charge attribution.",
          "$ref": "#/definitions/Reference"
        },
        "quantity": {
          "description": "Quantity of which the charge item has been serviced.",
          "$ref": "#/definitions/Quantity"
        },
        "bodysite": {
          "description": "The anatomical location where the related service has been applied.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "unitPriceComponent": {
          "description": "The unit price of the chargable item.",
          "$ref": "#/definitions/MonetaryComponent"
        },
        "totalPriceComponent": {
          "description": "The total price for the chargable item, accounting for the quantity.",
          "$ref": "#/definitions/MonetaryComponent"
        },
        "overrideReason": {
          "description": "If the list price or the rule-based factor associated with the code is overridden, this attribute can capture a text to indicate the  reason for this action.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "enterer": {
          "description": "The device, practitioner, etc. who entered the charge item.",
          "$ref": "#/definitions/Reference"
        },
        "enteredDate": {
          "description": "Date the charge item was entered.",
          "$ref": "#/definitions/dateTime"
        },
        "_enteredDate": {
          "description": "Extensions for enteredDate",
          "$ref": "#/definitions/Element"
        },
        "reason": {
          "description": "Describes why the event occurred in coded or textual form.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "service": {
          "description": "Indicated the rendered service that caused this charge.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "product": {
          "description": "Identifies the device, food, drug or other product being charged either by type code or reference to an instance.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "account": {
          "description": "Account into which this ChargeItems belongs.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "note": {
          "description": "Comments made about the event by the performer, subject or other participants.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "supportingInformation": {
          "description": "Further information supporting this charge.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code",
        "subject",
        "resourceType"
      ]
    },
    "ChargeItem_Performer": {
      "description": "The resource ChargeItem describes the provision of healthcare provider products for a certain patient, therefore referring not only to the product, but containing in addition details of the provision, like date, time, amounts and participating organizations and persons. Main Usage of the ChargeItem is to enable the billing process and internal cost allocation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "function": {
          "description": "Describes the type of performance or participation(e.g. primary surgeon, anesthesiologiest, etc.).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "actor": {
          "description": "The device, practitioner, etc. who performed or participated in the service.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "actor"
      ]
    },
    "ChargeItemDefinition": {
      "description": "The ChargeItemDefinition resource provides the properties that apply to the (billing) codes necessary to calculate costs and prices. The properties may differ largely depending on type and realm, therefore this resource gives only a rough structure and requires profiling for each type of billing code system.",
      "properties": {
        "resourceType": {
          "description": "This is a ChargeItemDefinition resource",
          "const": "ChargeItemDefinition"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this charge item definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this charge item definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the charge item definition is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this charge item definition when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the charge item definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the charge item definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active assets.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the ChargeItemDefinition. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the charge item definition.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The current state of the ChargeItemDefinition.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this charge item definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the charge item definition was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the charge item definition changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the charge item definition.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the charge item definition from a consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate charge item definition instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the charge item definition is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this charge item definition is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the charge item definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the charge item definition.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "approvalDate": {
          "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
          "$ref": "#/definitions/date"
        },
        "_approvalDate": {
          "description": "Extensions for approvalDate",
          "$ref": "#/definitions/Element"
        },
        "lastReviewDate": {
          "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
          "$ref": "#/definitions/date"
        },
        "_lastReviewDate": {
          "description": "Extensions for lastReviewDate",
          "$ref": "#/definitions/Element"
        },
        "effectivePeriod": {
          "description": "The period during which the {{title}} content was or is planned to be in active use.",
          "$ref": "#/definitions/Period"
        },
        "topic": {
          "description": "Descriptive topics related to the content of the {{title}}. Topics provide a high-level categorization as well as keywords for the {{title}} that can be useful for filtering and searching.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "author": {
          "description": "An individiual or organization primarily involved in the creation and maintenance of the {{title}}.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "editor": {
          "description": "An individual or organization primarily responsible for internal coherence of the {{title}}.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "reviewer": {
          "description": "An individual or organization primarily responsible for review of some aspect of the {{title}}.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "endorser": {
          "description": "An individual or organization responsible for officially endorsing the {{title}} for use in some setting.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "relatedArtifact": {
          "description": "Related artifacts such as additional documentation, justification, dependencies, bibliographic references, and predecessor and successor artifacts.",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          },
          "type": "array"
        },
        "derivedFromUri": {
          "description": "The URL pointing to an externally-defined charge item definition that is adhered to in whole or in part by this definition.",
          "items": {
            "$ref": "#/definitions/uri"
          },
          "type": "array"
        },
        "_derivedFromUri": {
          "description": "Extensions for derivedFromUri",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "partOf": {
          "description": "A larger definition of which this particular definition is a component or step.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "replaces": {
          "description": "As new versions of a protocol or guideline are defined, allows identification of what versions are replaced by a new instance.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "code": {
          "description": "The defined billing details in this resource pertain to the given billing code.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "instance": {
          "description": "The defined billing details in this resource pertain to the given product instance(s).",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "applicability": {
          "description": "Expressions that describe applicability criteria for the billing code.",
          "items": {
            "$ref": "#/definitions/ChargeItemDefinition_Applicability"
          },
          "type": "array"
        },
        "propertyGroup": {
          "description": "Group of properties which are applicable under the same conditions. If no applicability rules are established for the group, then all properties always apply.",
          "items": {
            "$ref": "#/definitions/ChargeItemDefinition_PropertyGroup"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "ChargeItemDefinition_Applicability": {
      "description": "The ChargeItemDefinition resource provides the properties that apply to the (billing) codes necessary to calculate costs and prices. The properties may differ largely depending on type and realm, therefore this resource gives only a rough structure and requires profiling for each type of billing code system.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "condition": {
          "description": "An expression that returns true or false, indicating whether the condition is satisfied. When using FHIRPath expressions, the %context environment variable must be replaced at runtime with the ChargeItem resource to which this definition is applied.",
          "$ref": "#/definitions/Expression"
        },
        "effectivePeriod": {
          "description": "The period during which the charge item definition content was or is planned to be in active use.",
          "$ref": "#/definitions/Period"
        },
        "relatedArtifact": {
          "description": "Reference to / quotation of the external source of the group of properties.",
          "$ref": "#/definitions/RelatedArtifact"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ChargeItemDefinition_PropertyGroup": {
      "description": "The ChargeItemDefinition resource provides the properties that apply to the (billing) codes necessary to calculate costs and prices. The properties may differ largely depending on type and realm, therefore this resource gives only a rough structure and requires profiling for each type of billing code system.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "applicability": {
          "description": "Expressions that describe applicability criteria for the priceComponent.",
          "items": {
            "$ref": "#/definitions/ChargeItemDefinition_Applicability"
          },
          "type": "array"
        },
        "priceComponent": {
          "description": "The price for a ChargeItem may be calculated as a base price with surcharges/deductions that apply in certain conditions. A ChargeItemDefinition resource that defines the prices, factors and conditions that apply to a billing code is currently under development. The priceComponent element can be used to offer transparency to the recipient of the Invoice of how the prices have been calculated.",
          "items": {
            "$ref": "#/definitions/MonetaryComponent"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Citation": {
      "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.",
      "properties": {
        "resourceType": {
          "description": "This is a Citation resource",
          "const": "Citation"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this citation record when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this summary is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the summary is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this citation record when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the citation record when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the citation record author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the citation record. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the citation record.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this summary. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this citation record is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date (and optionally time) when the citation record was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the citation record changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual that published the citation record.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the citation from a consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate citation record instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the citation record is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this citation is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "Use and/or publishing restrictions for the citation record, not for the cited artifact.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "approvalDate": {
          "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
          "$ref": "#/definitions/date"
        },
        "_approvalDate": {
          "description": "Extensions for approvalDate",
          "$ref": "#/definitions/Element"
        },
        "lastReviewDate": {
          "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
          "$ref": "#/definitions/date"
        },
        "_lastReviewDate": {
          "description": "Extensions for lastReviewDate",
          "$ref": "#/definitions/Element"
        },
        "effectivePeriod": {
          "description": "The period during which the citation record content was or is planned to be in active use.",
          "$ref": "#/definitions/Period"
        },
        "topic": {
          "description": "Descriptive topics related to the content of the {{title}}. Topics provide a high-level categorization as well as keywords for the {{title}} that can be useful for filtering and searching.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "author": {
          "description": "Who authored or created the citation record.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "editor": {
          "description": "Who edited or revised the citation record.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "reviewer": {
          "description": "Who reviewed the citation record.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "endorser": {
          "description": "Who endorsed the citation record.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "relatedArtifact": {
          "description": "Artifact related to the citation record.",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          },
          "type": "array"
        },
        "summary": {
          "description": "A human-readable display of key concepts to represent the citation.",
          "items": {
            "$ref": "#/definitions/Citation_Summary"
          },
          "type": "array"
        },
        "classification": {
          "description": "The assignment to an organizing scheme.",
          "items": {
            "$ref": "#/definitions/Citation_Classification"
          },
          "type": "array"
        },
        "note": {
          "description": "Used for general notes and annotations not coded elsewhere.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "currentState": {
          "description": "The status of the citation record.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "statusDate": {
          "description": "The state or status of the citation record paired with an effective date or period for that state.",
          "items": {
            "$ref": "#/definitions/Citation_StatusDate"
          },
          "type": "array"
        },
        "citedArtifact": {
          "description": "The article or artifact being described.",
          "$ref": "#/definitions/Citation_CitedArtifact"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Citation_Summary": {
      "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "style": {
          "description": "Format for display of the citation summary.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "text": {
          "description": "The human-readable display of the citation summary.",
          "$ref": "#/definitions/markdown"
        },
        "_text": {
          "description": "Extensions for text",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Citation_Classification": {
      "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The kind of classifier (e.g. publication type, keyword).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "classifier": {
          "description": "The specific classification value.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Citation_StatusDate": {
      "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "activity": {
          "description": "The state or status of the citation record (that will be paired with the period).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "actual": {
          "description": "Whether the status date is actual (has occurred) or expected (estimated or anticipated).",
          "$ref": "#/definitions/boolean"
        },
        "_actual": {
          "description": "Extensions for actual",
          "$ref": "#/definitions/Element"
        },
        "period": {
          "description": "When the status started and/or ended.",
          "$ref": "#/definitions/Period"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "period",
        "activity"
      ]
    },
    "Citation_CitedArtifact": {
      "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify the cited artifact when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "relatedIdentifier": {
          "description": "A formal identifier that is used to identify things closely related to the cited artifact.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "dateAccessed": {
          "description": "When the cited artifact was accessed.",
          "$ref": "#/definitions/dateTime"
        },
        "_dateAccessed": {
          "description": "Extensions for dateAccessed",
          "$ref": "#/definitions/Element"
        },
        "version": {
          "description": "The defined version of the cited artifact.",
          "$ref": "#/definitions/Citation_Version"
        },
        "currentState": {
          "description": "The status of the cited artifact.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "statusDate": {
          "description": "An effective date or period, historical or future, actual or expected, for a status of the cited artifact.",
          "items": {
            "$ref": "#/definitions/Citation_StatusDate1"
          },
          "type": "array"
        },
        "title": {
          "description": "The title details of the article or artifact.",
          "items": {
            "$ref": "#/definitions/Citation_Title"
          },
          "type": "array"
        },
        "abstract": {
          "description": "The abstract may be used to convey article-contained abstracts, externally-created abstracts, or other descriptive summaries.",
          "items": {
            "$ref": "#/definitions/Citation_Abstract"
          },
          "type": "array"
        },
        "part": {
          "description": "The component of the article or artifact.",
          "$ref": "#/definitions/Citation_Part"
        },
        "relatesTo": {
          "description": "The artifact related to the cited artifact.",
          "items": {
            "$ref": "#/definitions/Citation_RelatesTo"
          },
          "type": "array"
        },
        "publicationForm": {
          "description": "If multiple, used to represent alternative forms of the article that are not separate citations.",
          "items": {
            "$ref": "#/definitions/Citation_PublicationForm"
          },
          "type": "array"
        },
        "webLocation": {
          "description": "Used for any URL for the article or artifact cited.",
          "items": {
            "$ref": "#/definitions/Citation_WebLocation"
          },
          "type": "array"
        },
        "classification": {
          "description": "The assignment to an organizing scheme.",
          "items": {
            "$ref": "#/definitions/Citation_Classification1"
          },
          "type": "array"
        },
        "contributorship": {
          "description": "This element is used to list authors and other contributors, their contact information, specific contributions, and summary statements.",
          "$ref": "#/definitions/Citation_Contributorship"
        },
        "note": {
          "description": "Any additional information or content for the article or artifact.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Citation_Version": {
      "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "value": {
          "description": "The version number or other version identifier.",
          "$ref": "#/definitions/string"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        },
        "baseCitation": {
          "description": "Citation for the main version of the cited artifact.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Citation_StatusDate1": {
      "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "activity": {
          "description": "A definition of the status associated with a date or period.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "actual": {
          "description": "Either occurred or expected.",
          "$ref": "#/definitions/boolean"
        },
        "_actual": {
          "description": "Extensions for actual",
          "$ref": "#/definitions/Element"
        },
        "period": {
          "description": "When the status started and/or ended.",
          "$ref": "#/definitions/Period"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "period",
        "activity"
      ]
    },
    "Citation_Title": {
      "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Used to express the reason for or classification of the title.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "language": {
          "description": "Used to express the specific language of the title.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "text": {
          "description": "The title of the article or artifact.",
          "$ref": "#/definitions/markdown"
        },
        "_text": {
          "description": "Extensions for text",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Citation_Abstract": {
      "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Used to express the reason for or classification of the abstract.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "language": {
          "description": "Used to express the specific language of the abstract.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "text": {
          "description": "Abstract content.",
          "$ref": "#/definitions/markdown"
        },
        "_text": {
          "description": "Extensions for text",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "Copyright notice for the abstract.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Citation_Part": {
      "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The kind of component.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "value": {
          "description": "The specification of the component.",
          "$ref": "#/definitions/string"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        },
        "baseCitation": {
          "description": "The citation for the full article or artifact.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Citation_RelatesTo": {
      "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of relationship to the related artifact.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "classifier": {
          "description": "Provides additional classifiers of the related artifact.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "label": {
          "description": "A short label that can be used to reference the related artifact from elsewhere in the containing artifact, such as a footnote index.",
          "$ref": "#/definitions/string"
        },
        "_label": {
          "description": "Extensions for label",
          "$ref": "#/definitions/Element"
        },
        "display": {
          "description": "A brief description of the document or knowledge resource being referenced, suitable for display to a consumer.",
          "$ref": "#/definitions/string"
        },
        "_display": {
          "description": "Extensions for display",
          "$ref": "#/definitions/Element"
        },
        "citation": {
          "description": "A bibliographic citation for the related artifact. This text SHOULD be formatted according to an accepted citation format.",
          "$ref": "#/definitions/markdown"
        },
        "_citation": {
          "description": "Extensions for citation",
          "$ref": "#/definitions/Element"
        },
        "document": {
          "description": "The document being referenced, represented as an attachment. Do not use this element if using the resource element to provide the canonical to the related artifact.",
          "$ref": "#/definitions/Attachment"
        },
        "resource": {
          "description": "The related artifact, such as a library, value set, profile, or other knowledge resource.",
          "$ref": "#/definitions/canonical"
        },
        "_resource": {
          "description": "Extensions for resource",
          "$ref": "#/definitions/Element"
        },
        "resourceReference": {
          "description": "The related artifact, if the artifact is not a canonical resource, or a resource reference to a canonical resource.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Citation_PublicationForm": {
      "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "publishedIn": {
          "description": "The collection the cited article or artifact is published in.",
          "$ref": "#/definitions/Citation_PublishedIn"
        },
        "citedMedium": {
          "description": "Describes the form of the medium cited. Common codes are \"Internet\" or \"Print\".",
          "$ref": "#/definitions/CodeableConcept"
        },
        "volume": {
          "description": "Volume number of journal in which the article is published.",
          "$ref": "#/definitions/string"
        },
        "_volume": {
          "description": "Extensions for volume",
          "$ref": "#/definitions/Element"
        },
        "issue": {
          "description": "Issue, part or supplement of journal in which the article is published.",
          "$ref": "#/definitions/string"
        },
        "_issue": {
          "description": "Extensions for issue",
          "$ref": "#/definitions/Element"
        },
        "publicationDateYear": {
          "description": "Year on which the issue of the journal was published.",
          "$ref": "#/definitions/string"
        },
        "_publicationDateYear": {
          "description": "Extensions for publicationDateYear",
          "$ref": "#/definitions/Element"
        },
        "publicationDateMonth": {
          "description": "Month on which the issue of the journal was published.",
          "$ref": "#/definitions/string"
        },
        "_publicationDateMonth": {
          "description": "Extensions for publicationDateMonth",
          "$ref": "#/definitions/Element"
        },
        "publicationDateDay": {
          "description": "Day on which the issue of the journal was published.",
          "$ref": "#/definitions/string"
        },
        "_publicationDateDay": {
          "description": "Extensions for publicationDateDay",
          "$ref": "#/definitions/Element"
        },
        "publicationDateSeason": {
          "description": "Spring, Summer, Fall/Autumn, Winter.",
          "$ref": "#/definitions/string"
        },
        "_publicationDateSeason": {
          "description": "Extensions for publicationDateSeason",
          "$ref": "#/definitions/Element"
        },
        "publicationDateText": {
          "description": "Text representation of the date of which the issue of the journal was published.",
          "$ref": "#/definitions/string"
        },
        "_publicationDateText": {
          "description": "Extensions for publicationDateText",
          "$ref": "#/definitions/Element"
        },
        "articleDate": {
          "description": "The date the article was added to the database, or the date the article was released (which may differ from the journal issue publication date).",
          "$ref": "#/definitions/dateTime"
        },
        "_articleDate": {
          "description": "Extensions for articleDate",
          "$ref": "#/definitions/Element"
        },
        "lastRevisionDate": {
          "description": "The date the article was last revised or updated in the database.",
          "$ref": "#/definitions/dateTime"
        },
        "_lastRevisionDate": {
          "description": "Extensions for lastRevisionDate",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "Language in which this form of the article is published.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "accessionNumber": {
          "description": "Entry number or identifier for inclusion in a database.",
          "$ref": "#/definitions/string"
        },
        "_accessionNumber": {
          "description": "Extensions for accessionNumber",
          "$ref": "#/definitions/Element"
        },
        "pageString": {
          "description": "Used for full display of pagination.",
          "$ref": "#/definitions/string"
        },
        "_pageString": {
          "description": "Extensions for pageString",
          "$ref": "#/definitions/Element"
        },
        "firstPage": {
          "description": "Used for isolated representation of first page.",
          "$ref": "#/definitions/string"
        },
        "_firstPage": {
          "description": "Extensions for firstPage",
          "$ref": "#/definitions/Element"
        },
        "lastPage": {
          "description": "Used for isolated representation of last page.",
          "$ref": "#/definitions/string"
        },
        "_lastPage": {
          "description": "Extensions for lastPage",
          "$ref": "#/definitions/Element"
        },
        "pageCount": {
          "description": "Actual or approximate number of pages or screens.",
          "$ref": "#/definitions/string"
        },
        "_pageCount": {
          "description": "Extensions for pageCount",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "Copyright notice for the full article or artifact.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Citation_PublishedIn": {
      "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Kind of container (e.g. Periodical, database, or book).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "identifier": {
          "description": "Journal identifiers include ISSN, ISO Abbreviation and NLMuniqueID; Book identifiers include ISBN.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "title": {
          "description": "Name of the database or title of the book or journal.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "Name of the publisher.",
          "$ref": "#/definitions/Reference"
        },
        "publisherLocation": {
          "description": "Geographic location of the publisher.",
          "$ref": "#/definitions/string"
        },
        "_publisherLocation": {
          "description": "Extensions for publisherLocation",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Citation_WebLocation": {
      "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "classifier": {
          "description": "Code the reason for different URLs, e.g. abstract and full-text.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "url": {
          "description": "The specific URL.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Citation_Classification1": {
      "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The kind of classifier (e.g. publication type, keyword).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "classifier": {
          "description": "The specific classification value.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "artifactAssessment": {
          "description": "Complex or externally created classification.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Citation_Contributorship": {
      "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "complete": {
          "description": "Indicates if the list includes all authors and/or contributors.",
          "$ref": "#/definitions/boolean"
        },
        "_complete": {
          "description": "Extensions for complete",
          "$ref": "#/definitions/Element"
        },
        "entry": {
          "description": "An individual entity named in the author list or contributor list.",
          "items": {
            "$ref": "#/definitions/Citation_Entry"
          },
          "type": "array"
        },
        "summary": {
          "description": "Used to record a display of the author/contributor list without separate coding for each list member.",
          "items": {
            "$ref": "#/definitions/Citation_Summary1"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Citation_Entry": {
      "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "contributor": {
          "description": "The identity of the individual entity.",
          "$ref": "#/definitions/Reference"
        },
        "forenameInitials": {
          "description": "Initials for forename.",
          "$ref": "#/definitions/string"
        },
        "_forenameInitials": {
          "description": "Extensions for forenameInitials",
          "$ref": "#/definitions/Element"
        },
        "affiliation": {
          "description": "Organization affiliated with the entity.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "contributionType": {
          "description": "This element identifies the specific nature of an individual’s contribution with respect to the cited work.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "role": {
          "description": "The role of the contributor (e.g. author, editor, reviewer).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "contributionInstance": {
          "description": "Contributions with accounting for time or number.",
          "items": {
            "$ref": "#/definitions/Citation_ContributionInstance"
          },
          "type": "array"
        },
        "correspondingContact": {
          "description": "Indication of which contributor is the corresponding contributor for the role.",
          "$ref": "#/definitions/boolean"
        },
        "_correspondingContact": {
          "description": "Extensions for correspondingContact",
          "$ref": "#/definitions/Element"
        },
        "rankingOrder": {
          "description": "Provides a numerical ranking to represent the degree of contributorship relative to other contributors, such as 1 for first author and 2 for second author.",
          "$ref": "#/definitions/positiveInt"
        },
        "_rankingOrder": {
          "description": "Extensions for rankingOrder",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "contributor"
      ]
    },
    "Citation_ContributionInstance": {
      "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The specific contribution.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "time": {
          "description": "The time that the contribution was made.",
          "$ref": "#/definitions/dateTime"
        },
        "_time": {
          "description": "Extensions for time",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "Citation_Summary1": {
      "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Used most commonly to express an author list or a contributorship statement.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "style": {
          "description": "The format for the display string.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "source": {
          "description": "Used to code the producer or rule for creating the display string.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "value": {
          "description": "The display string for the author list, contributor list, or contributorship statement.",
          "$ref": "#/definitions/markdown"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Claim": {
      "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
      "properties": {
        "resourceType": {
          "description": "This is a Claim resource",
          "const": "Claim"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "A unique identifier assigned to this claim.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of the resource instance.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "The category of claim, e.g. oral, pharmacy, vision, institutional, professional.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subType": {
          "description": "A finer grained suite of claim type codes which may convey additional information such as Inpatient vs Outpatient and/or a specialty service.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "use": {
          "description": "A code to indicate whether the nature of the request is: Claim - A request to an Insurer to adjudicate the supplied charges for health care goods and services under the identified policy and to pay the determined Benefit amount, if any; Preauthorization - A request to an Insurer to adjudicate the supplied proposed future charges for health care goods and services under the identified policy and to approve the services and provide the expected benefit amounts and potentially to reserve funds to pay the benefits when Claims for the indicated services are later submitted; or, Pre-determination - A request to an Insurer to adjudicate the supplied \u0027what if\u0027 charges for health care goods and services under the identified policy and report back what the Benefit payable would be had the services actually been provided.",
          "$ref": "#/definitions/code"
        },
        "_use": {
          "description": "Extensions for use",
          "$ref": "#/definitions/Element"
        },
        "patient": {
          "description": "The party to whom the professional services and/or products have been supplied or are being considered and for whom actual or forecast reimbursement is sought.",
          "$ref": "#/definitions/Reference"
        },
        "billablePeriod": {
          "description": "The period for which charges are being submitted.",
          "$ref": "#/definitions/Period"
        },
        "created": {
          "description": "The date this resource was created.",
          "$ref": "#/definitions/dateTime"
        },
        "_created": {
          "description": "Extensions for created",
          "$ref": "#/definitions/Element"
        },
        "enterer": {
          "description": "Individual who created the claim, predetermination or preauthorization.",
          "$ref": "#/definitions/Reference"
        },
        "insurer": {
          "description": "The Insurer who is target of the request.",
          "$ref": "#/definitions/Reference"
        },
        "provider": {
          "description": "The provider which is responsible for the claim, predetermination or preauthorization.",
          "$ref": "#/definitions/Reference"
        },
        "priority": {
          "description": "The provider-required urgency of processing the request. Typical values include: stat, normal, deferred.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "fundsReserve": {
          "description": "A code to indicate whether and for whom funds are to be reserved for future claims.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "related": {
          "description": "Other claims which are related to this claim such as prior submissions or claims for related services or for the same event.",
          "items": {
            "$ref": "#/definitions/Claim_Related"
          },
          "type": "array"
        },
        "prescription": {
          "description": "Prescription is the document/authorization given to the claim author for them to provide products and services for which consideration (reimbursement) is sought. Could be a RX for medications, an \u0027order\u0027 for oxygen or wheelchair or physiotherapy treatments.",
          "$ref": "#/definitions/Reference"
        },
        "originalPrescription": {
          "description": "Original prescription which has been superseded by this prescription to support the dispensing of pharmacy services, medications or products.",
          "$ref": "#/definitions/Reference"
        },
        "payee": {
          "description": "The party to be reimbursed for cost of the products and services according to the terms of the policy.",
          "$ref": "#/definitions/Claim_Payee"
        },
        "referral": {
          "description": "The referral information received by the claim author, it is not to be used when the author generates a referral for a patient. A copy of that referral may be provided as supporting information. Some insurers require proof of referral to pay for services or to pay specialist rates for services.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "The Encounters during which this Claim was created or to which the creation of this record is tightly associated.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "facility": {
          "description": "Facility where the services were provided.",
          "$ref": "#/definitions/Reference"
        },
        "diagnosisRelatedGroup": {
          "description": "A package billing code or bundle code used to group products and services to a particular health condition (such as heart attack) which is based on a predetermined grouping code system.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "careTeam": {
          "description": "The members of the team who provided the products and services.",
          "items": {
            "$ref": "#/definitions/Claim_CareTeam"
          },
          "type": "array"
        },
        "supportingInfo": {
          "description": "Additional information codes regarding exceptions, special considerations, the condition, situation, prior or concurrent issues.",
          "items": {
            "$ref": "#/definitions/Claim_SupportingInfo"
          },
          "type": "array"
        },
        "diagnosis": {
          "description": "Information about diagnoses relevant to the claim items.",
          "items": {
            "$ref": "#/definitions/Claim_Diagnosis"
          },
          "type": "array"
        },
        "procedure": {
          "description": "Procedures performed on the patient relevant to the billing items with the claim.",
          "items": {
            "$ref": "#/definitions/Claim_Procedure"
          },
          "type": "array"
        },
        "insurance": {
          "description": "Financial instruments for reimbursement for the health care products and services specified on the claim.",
          "items": {
            "$ref": "#/definitions/Claim_Insurance"
          },
          "type": "array"
        },
        "accident": {
          "description": "Details of an accident which resulted in injuries which required the products and services listed in the claim.",
          "$ref": "#/definitions/Claim_Accident"
        },
        "patientPaid": {
          "description": "The amount paid by the patient, in total at the claim claim level or specifically for the item and detail level, to the provider for goods and services.",
          "$ref": "#/definitions/Money"
        },
        "item": {
          "description": "A claim line. Either a simple  product or service or a \u0027group\u0027 of details which can each be a simple items or groups of sub-details.",
          "items": {
            "$ref": "#/definitions/Claim_Item"
          },
          "type": "array"
        },
        "total": {
          "description": "The total value of the all the items in the claim.",
          "$ref": "#/definitions/Money"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "patient",
        "type",
        "resourceType"
      ]
    },
    "Claim_Related": {
      "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "claim": {
          "description": "Reference to a related claim.",
          "$ref": "#/definitions/Reference"
        },
        "relationship": {
          "description": "A code to convey how the claims are related.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "reference": {
          "description": "An alternate organizational reference to the case or file to which this particular claim pertains.",
          "$ref": "#/definitions/Identifier"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Claim_Payee": {
      "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Type of Party to be reimbursed: subscriber, provider, other.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "party": {
          "description": "Reference to the individual or organization to whom any payment will be made.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "Claim_CareTeam": {
      "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "sequence": {
          "description": "A number to uniquely identify care team entries.",
          "$ref": "#/definitions/positiveInt"
        },
        "_sequence": {
          "description": "Extensions for sequence",
          "$ref": "#/definitions/Element"
        },
        "provider": {
          "description": "Member of the team who provided the product or service.",
          "$ref": "#/definitions/Reference"
        },
        "responsible": {
          "description": "The party who is billing and/or responsible for the claimed products or services.",
          "$ref": "#/definitions/boolean"
        },
        "_responsible": {
          "description": "Extensions for responsible",
          "$ref": "#/definitions/Element"
        },
        "role": {
          "description": "The lead, assisting or supervising practitioner and their discipline if a multidisciplinary team.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "specialty": {
          "description": "The specialization of the practitioner or provider which is applicable for this service.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "provider"
      ]
    },
    "Claim_SupportingInfo": {
      "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "sequence": {
          "description": "A number to uniquely identify supporting information entries.",
          "$ref": "#/definitions/positiveInt"
        },
        "_sequence": {
          "description": "Extensions for sequence",
          "$ref": "#/definitions/Element"
        },
        "category": {
          "description": "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "code": {
          "description": "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient  for which care is sought.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "timingDate": {
          "description": "The date when or period to which this information refers.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_timingDate": {
          "description": "Extensions for timingDate",
          "$ref": "#/definitions/Element"
        },
        "timingPeriod": {
          "description": "The date when or period to which this information refers.",
          "$ref": "#/definitions/Period"
        },
        "valueBoolean": {
          "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueString": {
          "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueQuantity": {
          "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
          "$ref": "#/definitions/Quantity"
        },
        "valueAttachment": {
          "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
          "$ref": "#/definitions/Attachment"
        },
        "valueReference": {
          "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
          "$ref": "#/definitions/Reference"
        },
        "valueIdentifier": {
          "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
          "$ref": "#/definitions/Identifier"
        },
        "reason": {
          "description": "Provides the reason in the situation where a reason code is required in addition to the content.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "category"
      ]
    },
    "Claim_Diagnosis": {
      "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "sequence": {
          "description": "A number to uniquely identify diagnosis entries.",
          "$ref": "#/definitions/positiveInt"
        },
        "_sequence": {
          "description": "Extensions for sequence",
          "$ref": "#/definitions/Element"
        },
        "diagnosisCodeableConcept": {
          "description": "The nature of illness or problem in a coded form or as a reference to an external defined Condition.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "diagnosisReference": {
          "description": "The nature of illness or problem in a coded form or as a reference to an external defined Condition.",
          "$ref": "#/definitions/Reference"
        },
        "type": {
          "description": "When the condition was observed or the relative ranking.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "onAdmission": {
          "description": "Indication of whether the diagnosis was present on admission to a facility.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Claim_Procedure": {
      "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "sequence": {
          "description": "A number to uniquely identify procedure entries.",
          "$ref": "#/definitions/positiveInt"
        },
        "_sequence": {
          "description": "Extensions for sequence",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "When the condition was observed or the relative ranking.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "date": {
          "description": "Date and optionally time the procedure was performed.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "procedureCodeableConcept": {
          "description": "The code or reference to a Procedure resource which identifies the clinical intervention performed.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "procedureReference": {
          "description": "The code or reference to a Procedure resource which identifies the clinical intervention performed.",
          "$ref": "#/definitions/Reference"
        },
        "udi": {
          "description": "Unique Device Identifiers associated with this line item.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Claim_Insurance": {
      "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "sequence": {
          "description": "A number to uniquely identify insurance entries and provide a sequence of coverages to convey coordination of benefit order.",
          "$ref": "#/definitions/positiveInt"
        },
        "_sequence": {
          "description": "Extensions for sequence",
          "$ref": "#/definitions/Element"
        },
        "focal": {
          "description": "A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true.",
          "$ref": "#/definitions/boolean"
        },
        "_focal": {
          "description": "Extensions for focal",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "The business identifier to be used when the claim is sent for adjudication against this insurance policy.",
          "$ref": "#/definitions/Identifier"
        },
        "coverage": {
          "description": "Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient\u0027s actual coverage within the insurer\u0027s information system.",
          "$ref": "#/definitions/Reference"
        },
        "businessArrangement": {
          "description": "A business agreement number established between the provider and the insurer for special business processing purposes.",
          "$ref": "#/definitions/string"
        },
        "_businessArrangement": {
          "description": "Extensions for businessArrangement",
          "$ref": "#/definitions/Element"
        },
        "preAuthRef": {
          "description": "Reference numbers previously provided by the insurer to the provider to be quoted on subsequent claims containing services or products related to the prior authorization.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_preAuthRef": {
          "description": "Extensions for preAuthRef",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "claimResponse": {
          "description": "The result of the adjudication of the line items for the Coverage specified in this insurance.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "coverage"
      ]
    },
    "Claim_Accident": {
      "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "date": {
          "description": "Date of an accident event  related to the products and services contained in the claim.",
          "$ref": "#/definitions/date"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "The type or context of the accident event for the purposes of selection of potential insurance coverages and determination of coordination between insurers.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "locationAddress": {
          "description": "The physical location of the accident event.",
          "$ref": "#/definitions/Address"
        },
        "locationReference": {
          "description": "The physical location of the accident event.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Claim_Item": {
      "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "sequence": {
          "description": "A number to uniquely identify item entries.",
          "$ref": "#/definitions/positiveInt"
        },
        "_sequence": {
          "description": "Extensions for sequence",
          "$ref": "#/definitions/Element"
        },
        "careTeamSequence": {
          "description": "CareTeam members related to this service or product.",
          "items": {
            "$ref": "#/definitions/positiveInt"
          },
          "type": "array"
        },
        "_careTeamSequence": {
          "description": "Extensions for careTeamSequence",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "diagnosisSequence": {
          "description": "Diagnosis applicable for this service or product.",
          "items": {
            "$ref": "#/definitions/positiveInt"
          },
          "type": "array"
        },
        "_diagnosisSequence": {
          "description": "Extensions for diagnosisSequence",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "procedureSequence": {
          "description": "Procedures applicable for this service or product.",
          "items": {
            "$ref": "#/definitions/positiveInt"
          },
          "type": "array"
        },
        "_procedureSequence": {
          "description": "Extensions for procedureSequence",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "informationSequence": {
          "description": "Exceptions, special conditions and supporting information applicable for this service or product.",
          "items": {
            "$ref": "#/definitions/positiveInt"
          },
          "type": "array"
        },
        "_informationSequence": {
          "description": "Extensions for informationSequence",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "revenue": {
          "description": "The type of revenue or cost center providing the product and/or service.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "category": {
          "description": "Code to identify the general type of benefits under which products and services are provided.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "productOrService": {
          "description": "When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "productOrServiceEnd": {
          "description": "This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifier": {
          "description": "Item typification or modifiers codes to convey additional context for the product or service.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "programCode": {
          "description": "Identifies the program under which this may be recovered.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "servicedDate": {
          "description": "The date or dates when the service or product was supplied, performed or completed.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_servicedDate": {
          "description": "Extensions for servicedDate",
          "$ref": "#/definitions/Element"
        },
        "servicedPeriod": {
          "description": "The date or dates when the service or product was supplied, performed or completed.",
          "$ref": "#/definitions/Period"
        },
        "locationCodeableConcept": {
          "description": "Where the product or service was provided.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "locationAddress": {
          "description": "Where the product or service was provided.",
          "$ref": "#/definitions/Address"
        },
        "locationReference": {
          "description": "Where the product or service was provided.",
          "$ref": "#/definitions/Reference"
        },
        "patientPaid": {
          "description": "The amount paid by the patient, in total at the claim claim level or specifically for the item and detail level, to the provider for goods and services.",
          "$ref": "#/definitions/Money"
        },
        "quantity": {
          "description": "The number of repetitions of a service or product.",
          "$ref": "#/definitions/Quantity"
        },
        "unitPrice": {
          "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
          "$ref": "#/definitions/Money"
        },
        "factor": {
          "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
          "$ref": "#/definitions/decimal"
        },
        "_factor": {
          "description": "Extensions for factor",
          "$ref": "#/definitions/Element"
        },
        "tax": {
          "description": "The total of taxes applicable for this product or service.",
          "$ref": "#/definitions/Money"
        },
        "net": {
          "description": "The quantity times the unit price for an additional service or product or charge.",
          "$ref": "#/definitions/Money"
        },
        "udi": {
          "description": "Unique Device Identifiers associated with this line item.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "bodySite": {
          "description": "Physical location where the service is performed or applies.",
          "items": {
            "$ref": "#/definitions/Claim_BodySite"
          },
          "type": "array"
        },
        "encounter": {
          "description": "The Encounters during which this Claim was created or to which the creation of this record is tightly associated.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "detail": {
          "description": "A claim detail line. Either a simple (a product or service) or a \u0027group\u0027 of sub-details which are simple items.",
          "items": {
            "$ref": "#/definitions/Claim_Detail"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Claim_BodySite": {
      "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "site": {
          "description": "Physical service site on the patient (limb, tooth, etc.).",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "subSite": {
          "description": "A region or surface of the bodySite, e.g. limb region or tooth surface(s).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "site"
      ]
    },
    "Claim_Detail": {
      "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "sequence": {
          "description": "A number to uniquely identify item entries.",
          "$ref": "#/definitions/positiveInt"
        },
        "_sequence": {
          "description": "Extensions for sequence",
          "$ref": "#/definitions/Element"
        },
        "revenue": {
          "description": "The type of revenue or cost center providing the product and/or service.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "category": {
          "description": "Code to identify the general type of benefits under which products and services are provided.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "productOrService": {
          "description": "When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "productOrServiceEnd": {
          "description": "This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifier": {
          "description": "Item typification or modifiers codes to convey additional context for the product or service.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "programCode": {
          "description": "Identifies the program under which this may be recovered.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "patientPaid": {
          "description": "The amount paid by the patient, in total at the claim claim level or specifically for the item and detail level, to the provider for goods and services.",
          "$ref": "#/definitions/Money"
        },
        "quantity": {
          "description": "The number of repetitions of a service or product.",
          "$ref": "#/definitions/Quantity"
        },
        "unitPrice": {
          "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
          "$ref": "#/definitions/Money"
        },
        "factor": {
          "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
          "$ref": "#/definitions/decimal"
        },
        "_factor": {
          "description": "Extensions for factor",
          "$ref": "#/definitions/Element"
        },
        "tax": {
          "description": "The total of taxes applicable for this product or service.",
          "$ref": "#/definitions/Money"
        },
        "net": {
          "description": "The quantity times the unit price for an additional service or product or charge.",
          "$ref": "#/definitions/Money"
        },
        "udi": {
          "description": "Unique Device Identifiers associated with this line item.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "subDetail": {
          "description": "A claim detail line. Either a simple (a product or service) or a \u0027group\u0027 of sub-details which are simple items.",
          "items": {
            "$ref": "#/definitions/Claim_SubDetail"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Claim_SubDetail": {
      "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "sequence": {
          "description": "A number to uniquely identify item entries.",
          "$ref": "#/definitions/positiveInt"
        },
        "_sequence": {
          "description": "Extensions for sequence",
          "$ref": "#/definitions/Element"
        },
        "revenue": {
          "description": "The type of revenue or cost center providing the product and/or service.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "category": {
          "description": "Code to identify the general type of benefits under which products and services are provided.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "productOrService": {
          "description": "When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "productOrServiceEnd": {
          "description": "This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifier": {
          "description": "Item typification or modifiers codes to convey additional context for the product or service.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "programCode": {
          "description": "Identifies the program under which this may be recovered.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "patientPaid": {
          "description": "The amount paid by the patient, in total at the claim claim level or specifically for the item and detail level, to the provider for goods and services.",
          "$ref": "#/definitions/Money"
        },
        "quantity": {
          "description": "The number of repetitions of a service or product.",
          "$ref": "#/definitions/Quantity"
        },
        "unitPrice": {
          "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
          "$ref": "#/definitions/Money"
        },
        "factor": {
          "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
          "$ref": "#/definitions/decimal"
        },
        "_factor": {
          "description": "Extensions for factor",
          "$ref": "#/definitions/Element"
        },
        "tax": {
          "description": "The total of taxes applicable for this product or service.",
          "$ref": "#/definitions/Money"
        },
        "net": {
          "description": "The quantity times the unit price for an additional service or product or charge.",
          "$ref": "#/definitions/Money"
        },
        "udi": {
          "description": "Unique Device Identifiers associated with this line item.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ClaimResponse": {
      "description": "This resource provides the adjudication details from the processing of a Claim resource.",
      "properties": {
        "resourceType": {
          "description": "This is a ClaimResponse resource",
          "const": "ClaimResponse"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "A unique identifier assigned to this claim response.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of the resource instance.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "A finer grained suite of claim type codes which may convey additional information such as Inpatient vs Outpatient and/or a specialty service.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subType": {
          "description": "A finer grained suite of claim type codes which may convey additional information such as Inpatient vs Outpatient and/or a specialty service.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "use": {
          "description": "A code to indicate whether the nature of the request is: Claim - A request to an Insurer to adjudicate the supplied charges for health care goods and services under the identified policy and to pay the determined Benefit amount, if any; Preauthorization - A request to an Insurer to adjudicate the supplied proposed future charges for health care goods and services under the identified policy and to approve the services and provide the expected benefit amounts and potentially to reserve funds to pay the benefits when Claims for the indicated services are later submitted; or, Pre-determination - A request to an Insurer to adjudicate the supplied \u0027what if\u0027 charges for health care goods and services under the identified policy and report back what the Benefit payable would be had the services actually been provided.",
          "$ref": "#/definitions/code"
        },
        "_use": {
          "description": "Extensions for use",
          "$ref": "#/definitions/Element"
        },
        "patient": {
          "description": "The party to whom the professional services and/or products have been supplied or are being considered and for whom actual for facast reimbursement is sought.",
          "$ref": "#/definitions/Reference"
        },
        "created": {
          "description": "The date this resource was created.",
          "$ref": "#/definitions/dateTime"
        },
        "_created": {
          "description": "Extensions for created",
          "$ref": "#/definitions/Element"
        },
        "insurer": {
          "description": "The party responsible for authorization, adjudication and reimbursement.",
          "$ref": "#/definitions/Reference"
        },
        "requestor": {
          "description": "The provider which is responsible for the claim, predetermination or preauthorization.",
          "$ref": "#/definitions/Reference"
        },
        "request": {
          "description": "Original request resource reference.",
          "$ref": "#/definitions/Reference"
        },
        "outcome": {
          "description": "The outcome of the claim, predetermination, or preauthorization processing.",
          "$ref": "#/definitions/code"
        },
        "_outcome": {
          "description": "Extensions for outcome",
          "$ref": "#/definitions/Element"
        },
        "decision": {
          "description": "The result of the claim, predetermination, or preauthorization adjudication.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "disposition": {
          "description": "A human readable description of the status of the adjudication.",
          "$ref": "#/definitions/string"
        },
        "_disposition": {
          "description": "Extensions for disposition",
          "$ref": "#/definitions/Element"
        },
        "preAuthRef": {
          "description": "Reference from the Insurer which is used in later communications which refers to this adjudication.",
          "$ref": "#/definitions/string"
        },
        "_preAuthRef": {
          "description": "Extensions for preAuthRef",
          "$ref": "#/definitions/Element"
        },
        "preAuthPeriod": {
          "description": "The time frame during which this authorization is effective.",
          "$ref": "#/definitions/Period"
        },
        "payeeType": {
          "description": "Type of Party to be reimbursed: subscriber, provider, other.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "encounter": {
          "description": "The Encounters during which this Claim was created or to which the creation of this record is tightly associated.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "diagnosisRelatedGroup": {
          "description": "A package billing code or bundle code used to group products and services to a particular health condition (such as heart attack) which is based on a predetermined grouping code system.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "item": {
          "description": "A claim line. Either a simple (a product or service) or a \u0027group\u0027 of details which can also be a simple items or groups of sub-details.",
          "items": {
            "$ref": "#/definitions/ClaimResponse_Item"
          },
          "type": "array"
        },
        "addItem": {
          "description": "The first-tier service adjudications for payor added product or service lines.",
          "items": {
            "$ref": "#/definitions/ClaimResponse_AddItem"
          },
          "type": "array"
        },
        "adjudication": {
          "description": "The adjudication results which are presented at the header level rather than at the line-item or add-item levels.",
          "items": {
            "$ref": "#/definitions/ClaimResponse_Adjudication"
          },
          "type": "array"
        },
        "total": {
          "description": "Categorized monetary totals for the adjudication.",
          "items": {
            "$ref": "#/definitions/ClaimResponse_Total"
          },
          "type": "array"
        },
        "payment": {
          "description": "Payment details for the adjudication of the claim.",
          "$ref": "#/definitions/ClaimResponse_Payment"
        },
        "fundsReserve": {
          "description": "A code, used only on a response to a preauthorization, to indicate whether the benefits payable have been reserved and for whom.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "formCode": {
          "description": "A code for the form to be used for printing the content.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "form": {
          "description": "The actual form, by reference or inclusion, for printing the content or an EOB.",
          "$ref": "#/definitions/Attachment"
        },
        "processNote": {
          "description": "A note that describes or explains adjudication results in a human readable form.",
          "items": {
            "$ref": "#/definitions/ClaimResponse_ProcessNote"
          },
          "type": "array"
        },
        "communicationRequest": {
          "description": "Request for additional supporting or authorizing information.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "insurance": {
          "description": "Financial instruments for reimbursement for the health care products and services specified on the claim.",
          "items": {
            "$ref": "#/definitions/ClaimResponse_Insurance"
          },
          "type": "array"
        },
        "error": {
          "description": "Errors encountered during the processing of the adjudication.",
          "items": {
            "$ref": "#/definitions/ClaimResponse_Error"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "patient",
        "type",
        "resourceType"
      ]
    },
    "ClaimResponse_Item": {
      "description": "This resource provides the adjudication details from the processing of a Claim resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "itemSequence": {
          "description": "A number to uniquely reference the claim item entries.",
          "$ref": "#/definitions/positiveInt"
        },
        "_itemSequence": {
          "description": "Extensions for itemSequence",
          "$ref": "#/definitions/Element"
        },
        "noteNumber": {
          "description": "The numbers associated with notes below which apply to the adjudication of this item.",
          "items": {
            "$ref": "#/definitions/positiveInt"
          },
          "type": "array"
        },
        "_noteNumber": {
          "description": "Extensions for noteNumber",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "decision": {
          "description": "The result of the claim, predetermination, or preauthorization adjudication.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "adjudication": {
          "description": "If this item is a group then the values here are a summary of the adjudication of the detail items. If this item is a simple product or service then this is the result of the adjudication of this item.",
          "items": {
            "$ref": "#/definitions/ClaimResponse_Adjudication"
          },
          "type": "array"
        },
        "detail": {
          "description": "A claim detail. Either a simple (a product or service) or a \u0027group\u0027 of sub-details which are simple items.",
          "items": {
            "$ref": "#/definitions/ClaimResponse_Detail"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ClaimResponse_Adjudication": {
      "description": "This resource provides the adjudication details from the processing of a Claim resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "category": {
          "description": "A code to indicate the information type of this adjudication record. Information types may include the value submitted, maximum values or percentages allowed or payable under the plan, amounts that: the patient is responsible for in aggregate or pertaining to this item; amounts paid by other coverages; and, the benefit payable for this item.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "reason": {
          "description": "A code supporting the understanding of the adjudication result and explaining variance from expected amount.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "amount": {
          "description": "Monetary amount associated with the category.",
          "$ref": "#/definitions/Money"
        },
        "value": {
          "description": "A non-monetary value associated with the category. Mutually exclusive to the amount element above.",
          "$ref": "#/definitions/decimal"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "category"
      ]
    },
    "ClaimResponse_Detail": {
      "description": "This resource provides the adjudication details from the processing of a Claim resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "detailSequence": {
          "description": "A number to uniquely reference the claim detail entry.",
          "$ref": "#/definitions/positiveInt"
        },
        "_detailSequence": {
          "description": "Extensions for detailSequence",
          "$ref": "#/definitions/Element"
        },
        "noteNumber": {
          "description": "The numbers associated with notes below which apply to the adjudication of this item.",
          "items": {
            "$ref": "#/definitions/positiveInt"
          },
          "type": "array"
        },
        "_noteNumber": {
          "description": "Extensions for noteNumber",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "decision": {
          "description": "The result of the claim, predetermination, or preauthorization adjudication.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "adjudication": {
          "description": "The adjudication results.",
          "items": {
            "$ref": "#/definitions/ClaimResponse_Adjudication"
          },
          "type": "array"
        },
        "subDetail": {
          "description": "A sub-detail adjudication of a simple product or service.",
          "items": {
            "$ref": "#/definitions/ClaimResponse_SubDetail"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ClaimResponse_SubDetail": {
      "description": "This resource provides the adjudication details from the processing of a Claim resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "subDetailSequence": {
          "description": "A number to uniquely reference the claim sub-detail entry.",
          "$ref": "#/definitions/positiveInt"
        },
        "_subDetailSequence": {
          "description": "Extensions for subDetailSequence",
          "$ref": "#/definitions/Element"
        },
        "noteNumber": {
          "description": "The numbers associated with notes below which apply to the adjudication of this item.",
          "items": {
            "$ref": "#/definitions/positiveInt"
          },
          "type": "array"
        },
        "_noteNumber": {
          "description": "Extensions for noteNumber",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "decision": {
          "description": "The result of the claim, predetermination, or preauthorization adjudication.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "adjudication": {
          "description": "The adjudication results.",
          "items": {
            "$ref": "#/definitions/ClaimResponse_Adjudication"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ClaimResponse_AddItem": {
      "description": "This resource provides the adjudication details from the processing of a Claim resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "itemSequence": {
          "description": "Claim items which this service line is intended to replace.",
          "items": {
            "$ref": "#/definitions/positiveInt"
          },
          "type": "array"
        },
        "_itemSequence": {
          "description": "Extensions for itemSequence",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "detailSequence": {
          "description": "The sequence number of the details within the claim item which this line is intended to replace.",
          "items": {
            "$ref": "#/definitions/positiveInt"
          },
          "type": "array"
        },
        "_detailSequence": {
          "description": "Extensions for detailSequence",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "subdetailSequence": {
          "description": "The sequence number of the sub-details within the details within the claim item which this line is intended to replace.",
          "items": {
            "$ref": "#/definitions/positiveInt"
          },
          "type": "array"
        },
        "_subdetailSequence": {
          "description": "Extensions for subdetailSequence",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "provider": {
          "description": "The providers who are authorized for the services rendered to the patient.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "revenue": {
          "description": "The type of revenue or cost center providing the product and/or service.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "productOrService": {
          "description": "When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "productOrServiceEnd": {
          "description": "This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifier": {
          "description": "Item typification or modifiers codes to convey additional context for the product or service.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "programCode": {
          "description": "Identifies the program under which this may be recovered.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "servicedDate": {
          "description": "The date or dates when the service or product was supplied, performed or completed.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_servicedDate": {
          "description": "Extensions for servicedDate",
          "$ref": "#/definitions/Element"
        },
        "servicedPeriod": {
          "description": "The date or dates when the service or product was supplied, performed or completed.",
          "$ref": "#/definitions/Period"
        },
        "locationCodeableConcept": {
          "description": "Where the product or service was provided.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "locationAddress": {
          "description": "Where the product or service was provided.",
          "$ref": "#/definitions/Address"
        },
        "locationReference": {
          "description": "Where the product or service was provided.",
          "$ref": "#/definitions/Reference"
        },
        "quantity": {
          "description": "The number of repetitions of a service or product.",
          "$ref": "#/definitions/Quantity"
        },
        "unitPrice": {
          "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
          "$ref": "#/definitions/Money"
        },
        "factor": {
          "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
          "$ref": "#/definitions/decimal"
        },
        "_factor": {
          "description": "Extensions for factor",
          "$ref": "#/definitions/Element"
        },
        "tax": {
          "description": "The total of taxes applicable for this product or service.",
          "$ref": "#/definitions/Money"
        },
        "net": {
          "description": "The quantity times the unit price for an additional service or product or charge.",
          "$ref": "#/definitions/Money"
        },
        "bodySite": {
          "description": "Physical location where the service is performed or applies.",
          "items": {
            "$ref": "#/definitions/ClaimResponse_BodySite"
          },
          "type": "array"
        },
        "noteNumber": {
          "description": "The numbers associated with notes below which apply to the adjudication of this item.",
          "items": {
            "$ref": "#/definitions/positiveInt"
          },
          "type": "array"
        },
        "_noteNumber": {
          "description": "Extensions for noteNumber",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "decision": {
          "description": "The result of the claim, predetermination, or preauthorization adjudication.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "adjudication": {
          "description": "The adjudication results.",
          "items": {
            "$ref": "#/definitions/ClaimResponse_Adjudication"
          },
          "type": "array"
        },
        "detail": {
          "description": "The second-tier service adjudications for payor added services.",
          "items": {
            "$ref": "#/definitions/ClaimResponse_Detail1"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ClaimResponse_BodySite": {
      "description": "This resource provides the adjudication details from the processing of a Claim resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "site": {
          "description": "Physical service site on the patient (limb, tooth, etc.).",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "subSite": {
          "description": "A region or surface of the bodySite, e.g. limb region or tooth surface(s).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "site"
      ]
    },
    "ClaimResponse_Detail1": {
      "description": "This resource provides the adjudication details from the processing of a Claim resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "revenue": {
          "description": "The type of revenue or cost center providing the product and/or service.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "productOrService": {
          "description": "When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "productOrServiceEnd": {
          "description": "This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifier": {
          "description": "Item typification or modifiers codes to convey additional context for the product or service.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "quantity": {
          "description": "The number of repetitions of a service or product.",
          "$ref": "#/definitions/Quantity"
        },
        "unitPrice": {
          "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
          "$ref": "#/definitions/Money"
        },
        "factor": {
          "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
          "$ref": "#/definitions/decimal"
        },
        "_factor": {
          "description": "Extensions for factor",
          "$ref": "#/definitions/Element"
        },
        "tax": {
          "description": "The total of taxes applicable for this product or service.",
          "$ref": "#/definitions/Money"
        },
        "net": {
          "description": "The quantity times the unit price for an additional service or product or charge.",
          "$ref": "#/definitions/Money"
        },
        "noteNumber": {
          "description": "The numbers associated with notes below which apply to the adjudication of this item.",
          "items": {
            "$ref": "#/definitions/positiveInt"
          },
          "type": "array"
        },
        "_noteNumber": {
          "description": "Extensions for noteNumber",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "decision": {
          "description": "The result of the claim, predetermination, or preauthorization adjudication.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "adjudication": {
          "description": "The adjudication results.",
          "items": {
            "$ref": "#/definitions/ClaimResponse_Adjudication"
          },
          "type": "array"
        },
        "subDetail": {
          "description": "The third-tier service adjudications for payor added services.",
          "items": {
            "$ref": "#/definitions/ClaimResponse_SubDetail1"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ClaimResponse_SubDetail1": {
      "description": "This resource provides the adjudication details from the processing of a Claim resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "revenue": {
          "description": "The type of revenue or cost center providing the product and/or service.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "productOrService": {
          "description": "When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "productOrServiceEnd": {
          "description": "This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifier": {
          "description": "Item typification or modifiers codes to convey additional context for the product or service.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "quantity": {
          "description": "The number of repetitions of a service or product.",
          "$ref": "#/definitions/Quantity"
        },
        "unitPrice": {
          "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
          "$ref": "#/definitions/Money"
        },
        "factor": {
          "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
          "$ref": "#/definitions/decimal"
        },
        "_factor": {
          "description": "Extensions for factor",
          "$ref": "#/definitions/Element"
        },
        "tax": {
          "description": "The total of taxes applicable for this product or service.",
          "$ref": "#/definitions/Money"
        },
        "net": {
          "description": "The quantity times the unit price for an additional service or product or charge.",
          "$ref": "#/definitions/Money"
        },
        "noteNumber": {
          "description": "The numbers associated with notes below which apply to the adjudication of this item.",
          "items": {
            "$ref": "#/definitions/positiveInt"
          },
          "type": "array"
        },
        "_noteNumber": {
          "description": "Extensions for noteNumber",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "decision": {
          "description": "The result of the claim, predetermination, or preauthorization adjudication.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "adjudication": {
          "description": "The adjudication results.",
          "items": {
            "$ref": "#/definitions/ClaimResponse_Adjudication"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ClaimResponse_Total": {
      "description": "This resource provides the adjudication details from the processing of a Claim resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "category": {
          "description": "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "amount": {
          "description": "Monetary total amount associated with the category.",
          "$ref": "#/definitions/Money"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "amount",
        "category"
      ]
    },
    "ClaimResponse_Payment": {
      "description": "This resource provides the adjudication details from the processing of a Claim resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Whether this represents partial or complete payment of the benefits payable.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "adjustment": {
          "description": "Total amount of all adjustments to this payment included in this transaction which are not related to this claim\u0027s adjudication.",
          "$ref": "#/definitions/Money"
        },
        "adjustmentReason": {
          "description": "Reason for the payment adjustment.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "date": {
          "description": "Estimated date the payment will be issued or the actual issue date of payment.",
          "$ref": "#/definitions/date"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "amount": {
          "description": "Benefits payable less any payment adjustment.",
          "$ref": "#/definitions/Money"
        },
        "identifier": {
          "description": "Issuer\u0027s unique identifier for the payment instrument.",
          "$ref": "#/definitions/Identifier"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "amount",
        "type"
      ]
    },
    "ClaimResponse_ProcessNote": {
      "description": "This resource provides the adjudication details from the processing of a Claim resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "number": {
          "description": "A number to uniquely identify a note entry.",
          "$ref": "#/definitions/positiveInt"
        },
        "_number": {
          "description": "Extensions for number",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "The business purpose of the note text.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "The explanation or description associated with the processing.",
          "$ref": "#/definitions/string"
        },
        "_text": {
          "description": "Extensions for text",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "A code to define the language used in the text of the note.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ClaimResponse_Insurance": {
      "description": "This resource provides the adjudication details from the processing of a Claim resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "sequence": {
          "description": "A number to uniquely identify insurance entries and provide a sequence of coverages to convey coordination of benefit order.",
          "$ref": "#/definitions/positiveInt"
        },
        "_sequence": {
          "description": "Extensions for sequence",
          "$ref": "#/definitions/Element"
        },
        "focal": {
          "description": "A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true.",
          "$ref": "#/definitions/boolean"
        },
        "_focal": {
          "description": "Extensions for focal",
          "$ref": "#/definitions/Element"
        },
        "coverage": {
          "description": "Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient\u0027s actual coverage within the insurer\u0027s information system.",
          "$ref": "#/definitions/Reference"
        },
        "businessArrangement": {
          "description": "A business agreement number established between the provider and the insurer for special business processing purposes.",
          "$ref": "#/definitions/string"
        },
        "_businessArrangement": {
          "description": "Extensions for businessArrangement",
          "$ref": "#/definitions/Element"
        },
        "claimResponse": {
          "description": "The result of the adjudication of the line items for the Coverage specified in this insurance.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "coverage"
      ]
    },
    "ClaimResponse_Error": {
      "description": "This resource provides the adjudication details from the processing of a Claim resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "itemSequence": {
          "description": "The sequence number of the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure.",
          "$ref": "#/definitions/positiveInt"
        },
        "_itemSequence": {
          "description": "Extensions for itemSequence",
          "$ref": "#/definitions/Element"
        },
        "detailSequence": {
          "description": "The sequence number of the detail within the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure.",
          "$ref": "#/definitions/positiveInt"
        },
        "_detailSequence": {
          "description": "Extensions for detailSequence",
          "$ref": "#/definitions/Element"
        },
        "subDetailSequence": {
          "description": "The sequence number of the sub-detail within the detail within the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure.",
          "$ref": "#/definitions/positiveInt"
        },
        "_subDetailSequence": {
          "description": "Extensions for subDetailSequence",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "An error code, from a specified code system, which details why the claim could not be adjudicated.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "ClinicalImpression": {
      "description": "A record of a clinical assessment performed to determine what problem(s) may affect the patient and before planning the treatments or management strategies that are best to manage a patient\u0027s condition. Assessments are often 1:1 with a clinical consultation / encounter,  but this varies greatly depending on the clinical workflow. This resource is called \"ClinicalImpression\" rather than \"ClinicalAssessment\" to avoid confusion with the recording of assessment tools such as Apgar score.",
      "properties": {
        "resourceType": {
          "description": "This is a ClinicalImpression resource",
          "const": "ClinicalImpression"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Business identifiers assigned to this clinical impression by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "Identifies the workflow status of the assessment.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "statusReason": {
          "description": "Captures the reason for the current state of the ClinicalImpression.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "description": {
          "description": "A summary of the context and/or cause of the assessment - why / where it was performed, and what patient events/status prompted it.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "subject": {
          "description": "The patient or group of individuals assessed as part of this record.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "The Encounter during which this ClinicalImpression was created or to which the creation of this record is tightly associated.",
          "$ref": "#/definitions/Reference"
        },
        "effectiveDateTime": {
          "description": "The point in time or period over which the subject was assessed.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_effectiveDateTime": {
          "description": "Extensions for effectiveDateTime",
          "$ref": "#/definitions/Element"
        },
        "effectivePeriod": {
          "description": "The point in time or period over which the subject was assessed.",
          "$ref": "#/definitions/Period"
        },
        "date": {
          "description": "Indicates when the documentation of the assessment was complete.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "performer": {
          "description": "The clinician performing the assessment.",
          "$ref": "#/definitions/Reference"
        },
        "previous": {
          "description": "A reference to the last assessment that was conducted on this patient. Assessments are often/usually ongoing in nature; a care provider (practitioner or team) will make new assessments on an ongoing basis as new data arises or the patient\u0027s conditions changes.",
          "$ref": "#/definitions/Reference"
        },
        "problem": {
          "description": "A list of the relevant problems/conditions for a patient.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "changePattern": {
          "description": "Change in the status/pattern of a subject\u0027s condition since previously assessed, such as worsening, improving, or no change.  It is a subjective assessment of the direction of the change.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "protocol": {
          "description": "Reference to a specific published clinical protocol that was followed during this assessment, and/or that provides evidence in support of the diagnosis.",
          "items": {
            "$ref": "#/definitions/uri"
          },
          "type": "array"
        },
        "_protocol": {
          "description": "Extensions for protocol",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "summary": {
          "description": "A text summary of the investigations and the diagnosis.",
          "$ref": "#/definitions/string"
        },
        "_summary": {
          "description": "Extensions for summary",
          "$ref": "#/definitions/Element"
        },
        "finding": {
          "description": "Specific findings or diagnoses that were considered likely or relevant to ongoing treatment.",
          "items": {
            "$ref": "#/definitions/ClinicalImpression_Finding"
          },
          "type": "array"
        },
        "prognosisCodeableConcept": {
          "description": "Estimate of likely outcome.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "prognosisReference": {
          "description": "RiskAssessment expressing likely outcome.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "supportingInfo": {
          "description": "Information supporting the clinical impression, which can contain investigation results.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "note": {
          "description": "Commentary about the impression, typically recorded after the impression itself was made, though supplemental notes by the original author could also appear.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "subject",
        "resourceType"
      ]
    },
    "ClinicalImpression_Finding": {
      "description": "A record of a clinical assessment performed to determine what problem(s) may affect the patient and before planning the treatments or management strategies that are best to manage a patient\u0027s condition. Assessments are often 1:1 with a clinical consultation / encounter,  but this varies greatly depending on the clinical workflow. This resource is called \"ClinicalImpression\" rather than \"ClinicalAssessment\" to avoid confusion with the recording of assessment tools such as Apgar score.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "item": {
          "description": "Specific text, code or reference for finding or diagnosis, which may include ruled-out or resolved conditions.",
          "$ref": "#/definitions/CodeableReference"
        },
        "basis": {
          "description": "Which investigations support finding or diagnosis.",
          "$ref": "#/definitions/string"
        },
        "_basis": {
          "description": "Extensions for basis",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ClinicalUseDefinition": {
      "description": "A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure.",
      "properties": {
        "resourceType": {
          "description": "This is a ClinicalUseDefinition resource",
          "const": "ClinicalUseDefinition"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Business identifier for this issue.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "type": {
          "description": "indication | contraindication | interaction | undesirable-effect | warning.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "category": {
          "description": "A categorisation of the issue, primarily for dividing warnings into subject heading areas such as \"Pregnancy and Lactation\", \"Overdose\", \"Effects on Ability to Drive and Use Machines\".",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "subject": {
          "description": "The medication or procedure for which this is an indication.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "status": {
          "description": "Whether this is a current issue or one that has been retired etc.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "contraindication": {
          "description": "Specifics for when this is a contraindication.",
          "$ref": "#/definitions/ClinicalUseDefinition_Contraindication"
        },
        "indication": {
          "description": "Specifics for when this is an indication.",
          "$ref": "#/definitions/ClinicalUseDefinition_Indication"
        },
        "interaction": {
          "description": "Specifics for when this is an interaction.",
          "$ref": "#/definitions/ClinicalUseDefinition_Interaction"
        },
        "population": {
          "description": "The population group to which this applies.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "library": {
          "description": "Logic used by the clinical use definition.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "undesirableEffect": {
          "description": "Describe the possible undesirable effects (negative outcomes) from the use of the medicinal product as treatment.",
          "$ref": "#/definitions/ClinicalUseDefinition_UndesirableEffect"
        },
        "warning": {
          "description": "A critical piece of information about environmental, health or physical risks or hazards that serve as caution to the user. For example \u0027Do not operate heavy machinery\u0027, \u0027May cause drowsiness\u0027, or \u0027Get medical advice/attention if you feel unwell\u0027.",
          "$ref": "#/definitions/ClinicalUseDefinition_Warning"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "ClinicalUseDefinition_Contraindication": {
      "description": "A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "diseaseSymptomProcedure": {
          "description": "The situation that is being documented as contraindicating against this item.",
          "$ref": "#/definitions/CodeableReference"
        },
        "diseaseStatus": {
          "description": "The status of the disease or symptom for the contraindication, for example \"chronic\" or \"metastatic\".",
          "$ref": "#/definitions/CodeableReference"
        },
        "comorbidity": {
          "description": "A comorbidity (concurrent condition) or coinfection.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "indication": {
          "description": "The indication which this is a contraidication for.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "applicability": {
          "description": "An expression that returns true or false, indicating whether the indication is applicable or not, after having applied its other elements.",
          "$ref": "#/definitions/Expression"
        },
        "otherTherapy": {
          "description": "Information about the use of the medicinal product in relation to other therapies described as part of the contraindication.",
          "items": {
            "$ref": "#/definitions/ClinicalUseDefinition_OtherTherapy"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ClinicalUseDefinition_OtherTherapy": {
      "description": "A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "relationshipType": {
          "description": "The type of relationship between the medicinal product indication or contraindication and another therapy.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "treatment": {
          "description": "Reference to a specific medication (active substance, medicinal product or class of products) as part of an indication or contraindication.",
          "$ref": "#/definitions/CodeableReference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "treatment",
        "relationshipType"
      ]
    },
    "ClinicalUseDefinition_Indication": {
      "description": "A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "diseaseSymptomProcedure": {
          "description": "The situation that is being documented as an indicaton for this item.",
          "$ref": "#/definitions/CodeableReference"
        },
        "diseaseStatus": {
          "description": "The status of the disease or symptom for the indication, for example \"chronic\" or \"metastatic\".",
          "$ref": "#/definitions/CodeableReference"
        },
        "comorbidity": {
          "description": "A comorbidity (concurrent condition) or coinfection as part of the indication.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "intendedEffect": {
          "description": "The intended effect, aim or strategy to be achieved.",
          "$ref": "#/definitions/CodeableReference"
        },
        "durationRange": {
          "description": "Timing or duration information, that may be associated with use with the indicated condition e.g. Adult patients suffering from myocardial infarction (from a few days until less than 35 days), ischaemic stroke (from 7 days until less than 6 months).",
          "$ref": "#/definitions/Range"
        },
        "durationString": {
          "description": "Timing or duration information, that may be associated with use with the indicated condition e.g. Adult patients suffering from myocardial infarction (from a few days until less than 35 days), ischaemic stroke (from 7 days until less than 6 months).",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_durationString": {
          "description": "Extensions for durationString",
          "$ref": "#/definitions/Element"
        },
        "undesirableEffect": {
          "description": "An unwanted side effect or negative outcome that may happen if you use the drug (or other subject of this resource) for this indication.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "applicability": {
          "description": "An expression that returns true or false, indicating whether the indication is applicable or not, after having applied its other elements.",
          "$ref": "#/definitions/Expression"
        },
        "otherTherapy": {
          "description": "Information about the use of the medicinal product in relation to other therapies described as part of the indication.",
          "items": {
            "$ref": "#/definitions/ClinicalUseDefinition_OtherTherapy"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ClinicalUseDefinition_Interaction": {
      "description": "A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "interactant": {
          "description": "The specific medication, food, substance or laboratory test that interacts.",
          "items": {
            "$ref": "#/definitions/ClinicalUseDefinition_Interactant"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of the interaction e.g. drug-drug interaction, drug-food interaction, drug-lab test interaction.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "effect": {
          "description": "The effect of the interaction, for example \"reduced gastric absorption of primary medication\".",
          "$ref": "#/definitions/CodeableReference"
        },
        "incidence": {
          "description": "The incidence of the interaction, e.g. theoretical, observed.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "management": {
          "description": "Actions for managing the interaction.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ClinicalUseDefinition_Interactant": {
      "description": "A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "itemReference": {
          "description": "The specific medication, food or laboratory test that interacts.",
          "$ref": "#/definitions/Reference"
        },
        "itemCodeableConcept": {
          "description": "The specific medication, food or laboratory test that interacts.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ClinicalUseDefinition_UndesirableEffect": {
      "description": "A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "symptomConditionEffect": {
          "description": "The situation in which the undesirable effect may manifest.",
          "$ref": "#/definitions/CodeableReference"
        },
        "classification": {
          "description": "High level classification of the effect.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "frequencyOfOccurrence": {
          "description": "How often the effect is seen.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ClinicalUseDefinition_Warning": {
      "description": "A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "description": {
          "description": "A textual definition of this warning, with formatting.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "A coded or unformatted textual definition of this warning.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "CodeSystem": {
      "description": "The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.",
      "properties": {
        "resourceType": {
          "description": "This is a CodeSystem resource",
          "const": "CodeSystem"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this code system when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this code system is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the code system is stored on different servers. This is used in [Coding](datatypes.html#Coding).system.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this code system when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the code system when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the code system author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. This is used in [Coding](datatypes.html#Coding).version.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the code system. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the code system.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this code system. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this code system is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the code system was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the code system changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the code system.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the code system from a consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate code system instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the code system is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this code system is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the code system and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the code system.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "approvalDate": {
          "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
          "$ref": "#/definitions/date"
        },
        "_approvalDate": {
          "description": "Extensions for approvalDate",
          "$ref": "#/definitions/Element"
        },
        "lastReviewDate": {
          "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
          "$ref": "#/definitions/date"
        },
        "_lastReviewDate": {
          "description": "Extensions for lastReviewDate",
          "$ref": "#/definitions/Element"
        },
        "effectivePeriod": {
          "description": "The period during which the CodeSystem content was or is planned to be in active use.",
          "$ref": "#/definitions/Period"
        },
        "topic": {
          "description": "Descriptions related to the content of the CodeSystem. Topics provide a high-level categorization as well as keywords for the CodeSystem that can be useful for filtering and searching.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "author": {
          "description": "An individiual or organization primarily involved in the creation and maintenance of the CodeSystem.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "editor": {
          "description": "An individual or organization primarily responsible for internal coherence of the CodeSystem.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "reviewer": {
          "description": "An individual or organization primarily responsible for review of some aspect of the CodeSystem.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "endorser": {
          "description": "An individual or organization responsible for officially endorsing the CodeSystem for use in some setting.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "relatedArtifact": {
          "description": "Related artifacts such as additional documentation, justification, dependencies, bibliographic references, and predecessor and successor artifacts.",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          },
          "type": "array"
        },
        "caseSensitive": {
          "description": "If code comparison is case sensitive when codes within this system are compared to each other.",
          "$ref": "#/definitions/boolean"
        },
        "_caseSensitive": {
          "description": "Extensions for caseSensitive",
          "$ref": "#/definitions/Element"
        },
        "valueSet": {
          "description": "Canonical reference to the value set that contains all codes in the code system independent of code status.",
          "$ref": "#/definitions/canonical"
        },
        "hierarchyMeaning": {
          "description": "The meaning of the hierarchy of concepts as represented in this resource.",
          "$ref": "#/definitions/code"
        },
        "_hierarchyMeaning": {
          "description": "Extensions for hierarchyMeaning",
          "$ref": "#/definitions/Element"
        },
        "compositional": {
          "description": "The code system defines a compositional (post-coordination) grammar.",
          "$ref": "#/definitions/boolean"
        },
        "_compositional": {
          "description": "Extensions for compositional",
          "$ref": "#/definitions/Element"
        },
        "versionNeeded": {
          "description": "This flag is used to signify that the code system does not commit to concept permanence across versions. If true, a version must be specified when referencing this code system.",
          "$ref": "#/definitions/boolean"
        },
        "_versionNeeded": {
          "description": "Extensions for versionNeeded",
          "$ref": "#/definitions/Element"
        },
        "content": {
          "description": "The extent of the content of the code system (the concepts and codes it defines) are represented in this resource instance.",
          "$ref": "#/definitions/code"
        },
        "_content": {
          "description": "Extensions for content",
          "$ref": "#/definitions/Element"
        },
        "supplements": {
          "description": "The canonical URL of the code system that this code system supplement is adding designations and properties to.",
          "$ref": "#/definitions/canonical"
        },
        "count": {
          "description": "The total number of concepts defined by the code system. Where the code system has a compositional grammar, the basis of this count is defined by the system steward.",
          "$ref": "#/definitions/unsignedInt"
        },
        "_count": {
          "description": "Extensions for count",
          "$ref": "#/definitions/Element"
        },
        "filter": {
          "description": "A filter that can be used in a value set compose statement when selecting concepts using a filter.",
          "items": {
            "$ref": "#/definitions/CodeSystem_Filter"
          },
          "type": "array"
        },
        "property": {
          "description": "A property defines an additional slot through which additional information can be provided about a concept.",
          "items": {
            "$ref": "#/definitions/CodeSystem_Property"
          },
          "type": "array"
        },
        "concept": {
          "description": "Concepts that are in the code system. The concept definitions are inherently hierarchical, but the definitions must be consulted to determine what the meanings of the hierarchical relationships are.",
          "items": {
            "$ref": "#/definitions/CodeSystem_Concept"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "CodeSystem_Filter": {
      "description": "The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "The code that identifies this filter when it is used as a filter in [ValueSet](valueset.html#).compose.include.filter.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "A description of how or why the filter is used.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "operator": {
          "description": "A list of operators that can be used with the filter.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_operator": {
          "description": "Extensions for operator",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "value": {
          "description": "A description of what the value for the filter should be.",
          "$ref": "#/definitions/string"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "CodeSystem_Property": {
      "description": "The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "A code that is used to identify the property. The code is used internally (in CodeSystem.concept.property.code) and also externally, such as in property filters.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "uri": {
          "description": "Reference to the formal meaning of the property. One possible source of meaning is the [Concept Properties](codesystem-concept-properties.html) code system.",
          "$ref": "#/definitions/uri"
        },
        "_uri": {
          "description": "Extensions for uri",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "A description of the property- why it is defined, and how its value might be used.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "The type of the property value. Properties of type \"code\" contain a code defined by the code system (e.g. a reference to another defined concept).",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "CodeSystem_Concept": {
      "description": "The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "A code - a text symbol - that uniquely identifies the concept within the code system.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "display": {
          "description": "A human readable string that is the recommended default way to present this concept to a user.",
          "$ref": "#/definitions/string"
        },
        "_display": {
          "description": "Extensions for display",
          "$ref": "#/definitions/Element"
        },
        "definition": {
          "description": "The formal definition of the concept. The code system resource does not make formal definitions required, because of the prevalence of legacy systems. However, they are highly recommended, as without them there is no formal meaning associated with the concept.",
          "$ref": "#/definitions/string"
        },
        "_definition": {
          "description": "Extensions for definition",
          "$ref": "#/definitions/Element"
        },
        "designation": {
          "description": "Additional representations for the concept - other languages, aliases, specialized purposes, used for particular purposes, etc.",
          "items": {
            "$ref": "#/definitions/CodeSystem_Designation"
          },
          "type": "array"
        },
        "property": {
          "description": "A property value for this concept.",
          "items": {
            "$ref": "#/definitions/CodeSystem_Property1"
          },
          "type": "array"
        },
        "concept": {
          "description": "Defines children of a concept to produce a hierarchy of concepts. The nature of the relationships is variable (is-a/contains/categorizes) - see hierarchyMeaning.",
          "items": {
            "$ref": "#/definitions/CodeSystem_Concept"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "CodeSystem_Designation": {
      "description": "The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "language": {
          "description": "The language this designation is defined for.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "use": {
          "description": "A code that details how this designation would be used.",
          "$ref": "#/definitions/Coding"
        },
        "additionalUse": {
          "description": "Additional codes that detail how this designation would be used, if there is more than one use.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        },
        "value": {
          "description": "The text value for this designation.",
          "$ref": "#/definitions/string"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "CodeSystem_Property1": {
      "description": "The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "A code that is a reference to CodeSystem.property.code.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "valueCode": {
          "description": "The value of this property.",
          "pattern": "^[^\\s]+( [^\\s]+)*$",
          "type": "string"
        },
        "_valueCode": {
          "description": "Extensions for valueCode",
          "$ref": "#/definitions/Element"
        },
        "valueCoding": {
          "description": "The value of this property.",
          "$ref": "#/definitions/Coding"
        },
        "valueString": {
          "description": "The value of this property.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "description": "The value of this property.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": {
          "description": "Extensions for valueInteger",
          "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "description": "The value of this property.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "description": "The value of this property.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_valueDateTime": {
          "description": "Extensions for valueDateTime",
          "$ref": "#/definitions/Element"
        },
        "valueDecimal": {
          "description": "The value of this property.",
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_valueDecimal": {
          "description": "Extensions for valueDecimal",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Communication": {
      "description": "A clinical or business level record of information being transmitted or shared; e.g. an alert that was sent to a responsible provider, a public health agency communication to a provider/reporter in response to a case report for a reportable condition.",
      "properties": {
        "resourceType": {
          "description": "This is a Communication resource",
          "const": "Communication"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Business identifiers assigned to this communication by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "instantiatesCanonical": {
          "description": "The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Communication.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "instantiatesUri": {
          "description": "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Communication.",
          "items": {
            "$ref": "#/definitions/uri"
          },
          "type": "array"
        },
        "_instantiatesUri": {
          "description": "Extensions for instantiatesUri",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "basedOn": {
          "description": "An order, proposal or plan fulfilled in whole or in part by this Communication.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "partOf": {
          "description": "A larger event (e.g. Communication, Procedure) of which this particular communication is a component or step.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "inResponseTo": {
          "description": "Prior communication that this communication is in response to.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of the transmission.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "statusReason": {
          "description": "Captures the reason for the current state of the Communication.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "category": {
          "description": "The type of message conveyed such as alert, notification, reminder, instruction, etc.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "priority": {
          "description": "Characterizes how quickly the planned or in progress communication must be addressed. Includes concepts such as stat, urgent, routine.",
          "$ref": "#/definitions/code"
        },
        "_priority": {
          "description": "Extensions for priority",
          "$ref": "#/definitions/Element"
        },
        "medium": {
          "description": "A channel that was used for this communication (e.g. email, fax).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "subject": {
          "description": "The patient or group that was the focus of this communication.",
          "$ref": "#/definitions/Reference"
        },
        "topic": {
          "description": "Description of the purpose/content, similar to a subject line in an email.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "about": {
          "description": "Other resources that pertain to this communication and to which this communication should be associated.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "encounter": {
          "description": "The Encounter during which this Communication was created or to which the creation of this record is tightly associated.",
          "$ref": "#/definitions/Reference"
        },
        "sent": {
          "description": "The time when this communication was sent.",
          "$ref": "#/definitions/dateTime"
        },
        "_sent": {
          "description": "Extensions for sent",
          "$ref": "#/definitions/Element"
        },
        "received": {
          "description": "The time when this communication arrived at the destination.",
          "$ref": "#/definitions/dateTime"
        },
        "_received": {
          "description": "Extensions for received",
          "$ref": "#/definitions/Element"
        },
        "recipient": {
          "description": "The entity (e.g. person, organization, clinical information system, care team or device) which is the target of the communication.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "sender": {
          "description": "The entity (e.g. person, organization, clinical information system, or device) which is the source of the communication.",
          "$ref": "#/definitions/Reference"
        },
        "reason": {
          "description": "The reason or justification for the communication.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "payload": {
          "description": "Text, attachment(s), or resource(s) that was communicated to the recipient.",
          "items": {
            "$ref": "#/definitions/Communication_Payload"
          },
          "type": "array"
        },
        "note": {
          "description": "Additional notes or commentary about the communication by the sender, receiver or other interested parties.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Communication_Payload": {
      "description": "A clinical or business level record of information being transmitted or shared; e.g. an alert that was sent to a responsible provider, a public health agency communication to a provider/reporter in response to a case report for a reportable condition.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "contentAttachment": {
          "description": "A communicated content (or for multi-part communications, one portion of the communication).",
          "$ref": "#/definitions/Attachment"
        },
        "contentReference": {
          "description": "A communicated content (or for multi-part communications, one portion of the communication).",
          "$ref": "#/definitions/Reference"
        },
        "contentCodeableConcept": {
          "description": "A communicated content (or for multi-part communications, one portion of the communication).",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "CommunicationRequest": {
      "description": "A request to convey information; e.g. the CDS system proposes that an alert be sent to a responsible provider, the CDS system proposes that the public health agency be notified about a reportable condition.",
      "properties": {
        "resourceType": {
          "description": "This is a CommunicationRequest resource",
          "const": "CommunicationRequest"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Business identifiers assigned to this communication request by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "basedOn": {
          "description": "A plan or proposal that is fulfilled in whole or in part by this request.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "replaces": {
          "description": "Completed or terminated request(s) whose function is taken by this new request.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "groupIdentifier": {
          "description": "A shared identifier common to all requests that were authorized more or less simultaneously by a single author, representing the identifier of the requisition, prescription or similar form.",
          "$ref": "#/definitions/Identifier"
        },
        "status": {
          "description": "The status of the proposal or order.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "statusReason": {
          "description": "Captures the reason for the current state of the CommunicationRequest.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "intent": {
          "description": "Indicates the level of authority/intentionality associated with the CommunicationRequest and where the request fits into the workflow chain.",
          "$ref": "#/definitions/code"
        },
        "_intent": {
          "description": "Extensions for intent",
          "$ref": "#/definitions/Element"
        },
        "category": {
          "description": "The type of message to be sent such as alert, notification, reminder, instruction, etc.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "priority": {
          "description": "Characterizes how quickly the proposed act must be initiated. Includes concepts such as stat, urgent, routine.",
          "$ref": "#/definitions/code"
        },
        "_priority": {
          "description": "Extensions for priority",
          "$ref": "#/definitions/Element"
        },
        "doNotPerform": {
          "description": "If true indicates that the CommunicationRequest is asking for the specified action to *not* occur.",
          "$ref": "#/definitions/boolean"
        },
        "_doNotPerform": {
          "description": "Extensions for doNotPerform",
          "$ref": "#/definitions/Element"
        },
        "medium": {
          "description": "A channel that was used for this communication (e.g. email, fax).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "subject": {
          "description": "The patient or group that is the focus of this communication request.",
          "$ref": "#/definitions/Reference"
        },
        "about": {
          "description": "Other resources that pertain to this communication request and to which this communication request should be associated.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "encounter": {
          "description": "The Encounter during which this CommunicationRequest was created or to which the creation of this record is tightly associated.",
          "$ref": "#/definitions/Reference"
        },
        "payload": {
          "description": "Text, attachment(s), or resource(s) to be communicated to the recipient.",
          "items": {
            "$ref": "#/definitions/CommunicationRequest_Payload"
          },
          "type": "array"
        },
        "occurrenceDateTime": {
          "description": "The time when this communication is to occur.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_occurrenceDateTime": {
          "description": "Extensions for occurrenceDateTime",
          "$ref": "#/definitions/Element"
        },
        "occurrencePeriod": {
          "description": "The time when this communication is to occur.",
          "$ref": "#/definitions/Period"
        },
        "authoredOn": {
          "description": "For draft requests, indicates the date of initial creation.  For requests with other statuses, indicates the date of activation.",
          "$ref": "#/definitions/dateTime"
        },
        "_authoredOn": {
          "description": "Extensions for authoredOn",
          "$ref": "#/definitions/Element"
        },
        "requester": {
          "description": "The device, individual, or organization who asks for the information to be shared.",
          "$ref": "#/definitions/Reference"
        },
        "recipient": {
          "description": "The entity (e.g. person, organization, clinical information system, device, group, or care team) which is the intended target of the communication.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "informationProvider": {
          "description": "The entity (e.g. person, organization, clinical information system, or device) which is to be the source of the communication.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "reason": {
          "description": "Describes why the request is being made in coded or textual form.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "note": {
          "description": "Comments made about the request by the requester, sender, recipient, subject or other participants.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "CommunicationRequest_Payload": {
      "description": "A request to convey information; e.g. the CDS system proposes that an alert be sent to a responsible provider, the CDS system proposes that the public health agency be notified about a reportable condition.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "contentAttachment": {
          "description": "The communicated content (or for multi-part communications, one portion of the communication).",
          "$ref": "#/definitions/Attachment"
        },
        "contentReference": {
          "description": "The communicated content (or for multi-part communications, one portion of the communication).",
          "$ref": "#/definitions/Reference"
        },
        "contentCodeableConcept": {
          "description": "The communicated content (or for multi-part communications, one portion of the communication).",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "CompartmentDefinition": {
      "description": "A compartment definition that defines how resources are accessed on a server.",
      "properties": {
        "resourceType": {
          "description": "This is a CompartmentDefinition resource",
          "const": "CompartmentDefinition"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this compartment definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this compartment definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the compartment definition is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this {{title}} when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the compartment definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the compartment definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the compartment definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the capability statement.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this compartment definition. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this compartment definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the compartment definition was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the compartment definition changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the compartment definition.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the compartment definition from a consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate compartment definition instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the {{title}} is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this compartment definition is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the {{title}} and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the {{title}}.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "Which compartment this definition describes.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "search": {
          "description": "Whether the search syntax is supported,.",
          "$ref": "#/definitions/boolean"
        },
        "_search": {
          "description": "Extensions for search",
          "$ref": "#/definitions/Element"
        },
        "resource": {
          "description": "Information about how a resource is related to the compartment.",
          "items": {
            "$ref": "#/definitions/CompartmentDefinition_Resource"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "CompartmentDefinition_Resource": {
      "description": "A compartment definition that defines how resources are accessed on a server.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "The name of a resource supported by the server.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "param": {
          "description": "The name of a search parameter that represents the link to the compartment. More than one may be listed because a resource may be linked to a compartment in more than one way,.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_param": {
          "description": "Extensions for param",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "documentation": {
          "description": "Additional documentation about the resource and compartment.",
          "$ref": "#/definitions/string"
        },
        "_documentation": {
          "description": "Extensions for documentation",
          "$ref": "#/definitions/Element"
        },
        "startParam": {
          "description": "Search Parameter for mapping requests made with $everything.start (e.g. on [Patient.$everything](patient-operation-everything.html)).",
          "$ref": "#/definitions/uri"
        },
        "_startParam": {
          "description": "Extensions for startParam",
          "$ref": "#/definitions/Element"
        },
        "endParam": {
          "description": "Search Parameter for mapping requests made with $everything.end (e.g. on [Patient.$everything](patient-operation-everything.html)).",
          "$ref": "#/definitions/uri"
        },
        "_endParam": {
          "description": "Extensions for endParam",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Composition": {
      "description": "A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type\u003ddocument, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).",
      "properties": {
        "resourceType": {
          "description": "This is a Composition resource",
          "const": "Composition"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this Composition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this Composition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the Composition is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A version-independent identifier for the Composition. This identifier stays constant as the composition is changed over time.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "An explicitly assigned identifer of a variation of the content in the Composition.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The workflow/clinical status of this composition. The status is a marker for the clinical standing of the document.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "Specifies the particular kind of composition (e.g. History and Physical, Discharge Summary, Progress Note). This usually equates to the purpose of making the composition.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "category": {
          "description": "A categorization for the type of the composition - helps for indexing and searching. This may be implied by or derived from the code specified in the Composition Type.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "subject": {
          "description": "Who or what the composition is about. The composition can be about a person, (patient or healthcare practitioner), a device (e.g. a machine) or even a group of subjects (such as a document about a herd of livestock, or a set of patients that share a common exposure).",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "encounter": {
          "description": "Describes the clinical encounter or type of care this documentation is associated with.",
          "$ref": "#/definitions/Reference"
        },
        "date": {
          "description": "The composition editing time, when the composition was last logically changed by the author.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate Composition instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "author": {
          "description": "Identifies who is responsible for the information in the composition, not necessarily who typed it in.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "name": {
          "description": "A natural language name identifying the {{title}}. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "Official human-readable label for the composition.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "note": {
          "description": "For any additional notes.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "attester": {
          "description": "A participant who has attested to the accuracy of the composition/document.",
          "items": {
            "$ref": "#/definitions/Composition_Attester"
          },
          "type": "array"
        },
        "custodian": {
          "description": "Identifies the organization or group who is responsible for ongoing maintenance of and access to the composition/document information.",
          "$ref": "#/definitions/Reference"
        },
        "relatesTo": {
          "description": "Relationships that this composition has with other compositions or documents that already exist.",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          },
          "type": "array"
        },
        "event": {
          "description": "The clinical service, such as a colonoscopy or an appendectomy, being documented.",
          "items": {
            "$ref": "#/definitions/Composition_Event"
          },
          "type": "array"
        },
        "section": {
          "description": "The root of the sections that make up the composition.",
          "items": {
            "$ref": "#/definitions/Composition_Section"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "author",
        "type",
        "resourceType"
      ]
    },
    "Composition_Attester": {
      "description": "A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type\u003ddocument, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "mode": {
          "description": "The type of attestation the authenticator offers.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "time": {
          "description": "When the composition was attested by the party.",
          "$ref": "#/definitions/dateTime"
        },
        "_time": {
          "description": "Extensions for time",
          "$ref": "#/definitions/Element"
        },
        "party": {
          "description": "Who attested the composition in the specified way.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "mode"
      ]
    },
    "Composition_Event": {
      "description": "A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type\u003ddocument, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "This list of codes represents the main clinical acts, such as a colonoscopy or an appendectomy, being documented. In some cases, the event is inherent in the typeCode, such as a \"History and Physical Report\" in which the procedure being documented is necessarily a \"History and Physical\" act.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "period": {
          "description": "The period of time covered by the documentation. There is no assertion that the documentation is a complete representation for this period, only that it documents events during this time.",
          "$ref": "#/definitions/Period"
        },
        "detail": {
          "description": "The description and/or reference of the event(s) being documented. For example, this could be used to document such a colonoscopy or an appendectomy.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Composition_Section": {
      "description": "A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type\u003ddocument, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "title": {
          "description": "The label for this particular section.  This will be part of the rendered content for the document, and is often used to build a table of contents.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "A code identifying the kind of content contained within the section. This must be consistent with the section title.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "author": {
          "description": "Identifies who is responsible for the information in this section, not necessarily who typed it in.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "focus": {
          "description": "The actual focus of the section when it is not the subject of the composition, but instead represents something or someone associated with the subject such as (for a patient subject) a spouse, parent, fetus, or donor. If not focus is specified, the focus is assumed to be focus of the parent section, or, for a section in the Composition itself, the subject of the composition. Sections with a focus SHALL only include resources where the logical subject (patient, subject, focus, etc.) matches the section focus, or the resources have no logical subject (few resources).",
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "description": "A human-readable narrative that contains the attested content of the section, used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative.",
          "$ref": "#/definitions/Narrative"
        },
        "mode": {
          "description": "How the entry list was prepared - whether it is a working list that is suitable for being maintained on an ongoing basis, or if it represents a snapshot of a list of items from another source, or whether it is a prepared list where items may be marked as added, modified or deleted.",
          "$ref": "#/definitions/code"
        },
        "_mode": {
          "description": "Extensions for mode",
          "$ref": "#/definitions/Element"
        },
        "orderedBy": {
          "description": "Specifies the order applied to the items in the section entries.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "entry": {
          "description": "A reference to the actual resource from which the narrative in the section is derived.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "emptyReason": {
          "description": "If the section is empty, why the list is empty. An empty section typically has some text explaining the empty reason.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "section": {
          "description": "A nested sub-section within this section.",
          "items": {
            "$ref": "#/definitions/Composition_Section"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ConceptMap": {
      "description": "A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.",
      "properties": {
        "resourceType": {
          "description": "This is a ConceptMap resource",
          "const": "ConceptMap"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this concept map when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this concept map is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the concept map is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this concept map when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the concept map when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the concept map author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the concept map. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the concept map.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this concept map. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this concept map is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the concept map was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the concept map changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the concept map.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the concept map from a consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate concept map instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the concept map is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this concept map is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the concept map and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the concept map.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "approvalDate": {
          "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
          "$ref": "#/definitions/date"
        },
        "_approvalDate": {
          "description": "Extensions for approvalDate",
          "$ref": "#/definitions/Element"
        },
        "lastReviewDate": {
          "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
          "$ref": "#/definitions/date"
        },
        "_lastReviewDate": {
          "description": "Extensions for lastReviewDate",
          "$ref": "#/definitions/Element"
        },
        "effectivePeriod": {
          "description": "The period during which the ConceptMap content was or is planned to be in active use.",
          "$ref": "#/definitions/Period"
        },
        "topic": {
          "description": "Descriptions related to the content of the ConceptMap. Topics provide a high-level categorization as well as keywords for the ConceptMap that can be useful for filtering and searching.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "author": {
          "description": "An individiual or organization primarily involved in the creation and maintenance of the ConceptMap.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "editor": {
          "description": "An individual or organization primarily responsible for internal coherence of the ConceptMap.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "reviewer": {
          "description": "An individual or organization primarily responsible for review of some aspect of the ConceptMap.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "endorser": {
          "description": "An individual or organization responsible for officially endorsing the ConceptMap for use in some setting.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "relatedArtifact": {
          "description": "Related artifacts such as additional documentation, justification, dependencies, bibliographic references, and predecessor and successor artifacts.",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          },
          "type": "array"
        },
        "sourceScopeUri": {
          "description": "Identifier for the source value set that contains the concepts that are being mapped and provides context for the mappings.  Limits the scope of the map to source codes (ConceptMap.group.element code or valueSet) that are members of this value set.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_sourceScopeUri": {
          "description": "Extensions for sourceScopeUri",
          "$ref": "#/definitions/Element"
        },
        "sourceScopeCanonical": {
          "description": "Identifier for the source value set that contains the concepts that are being mapped and provides context for the mappings.  Limits the scope of the map to source codes (ConceptMap.group.element code or valueSet) that are members of this value set.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_sourceScopeCanonical": {
          "description": "Extensions for sourceScopeCanonical",
          "$ref": "#/definitions/Element"
        },
        "targetScopeUri": {
          "description": "Identifier for the target value set that provides important context about how the mapping choices are made.  Limits the scope of the map to target codes (ConceptMap.group.element.target code or valueSet) that are members of this value set.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_targetScopeUri": {
          "description": "Extensions for targetScopeUri",
          "$ref": "#/definitions/Element"
        },
        "targetScopeCanonical": {
          "description": "Identifier for the target value set that provides important context about how the mapping choices are made.  Limits the scope of the map to target codes (ConceptMap.group.element.target code or valueSet) that are members of this value set.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_targetScopeCanonical": {
          "description": "Extensions for targetScopeCanonical",
          "$ref": "#/definitions/Element"
        },
        "group": {
          "description": "A group of mappings that all have the same source and target system.",
          "items": {
            "$ref": "#/definitions/ConceptMap_Group"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "ConceptMap_Group": {
      "description": "A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "source": {
          "description": "An absolute URI that identifies the source system where the concepts to be mapped are defined.",
          "$ref": "#/definitions/canonical"
        },
        "target": {
          "description": "An absolute URI that identifies the target system that the concepts will be mapped to.",
          "$ref": "#/definitions/canonical"
        },
        "element": {
          "description": "Mappings for an individual concept in the source to one or more concepts in the target.",
          "items": {
            "$ref": "#/definitions/ConceptMap_Element"
          },
          "type": "array"
        },
        "unmapped": {
          "description": "What to do when there is no mapping to a target concept from the source concept.  This provides the \"default\" to be applied when there is no target concept mapping specified.  The \u0027unmapped\u0027 element is ignored if a code is specified to have relationship \u003d not-related-to.",
          "$ref": "#/definitions/ConceptMap_Unmapped"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "element"
      ]
    },
    "ConceptMap_Element": {
      "description": "A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "Identity (code or path) or the element/item being mapped.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "display": {
          "description": "The display for the code. The display is only provided to help editors when editing the concept map.",
          "$ref": "#/definitions/string"
        },
        "_display": {
          "description": "Extensions for display",
          "$ref": "#/definitions/Element"
        },
        "valueSet": {
          "description": "The set of codes being mapped.",
          "$ref": "#/definitions/canonical"
        },
        "noMap": {
          "description": "If noMap \u003d true this indicates that no mapping to a target concept exists for this source concept.",
          "$ref": "#/definitions/boolean"
        },
        "_noMap": {
          "description": "Extensions for noMap",
          "$ref": "#/definitions/Element"
        },
        "target": {
          "description": "A concept from the target value set that this concept maps to.",
          "items": {
            "$ref": "#/definitions/ConceptMap_Target"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ConceptMap_Target": {
      "description": "A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "Identity (code or path) or the element/item that the map refers to.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "display": {
          "description": "The display for the code. The display is only provided to help editors when editing the concept map.",
          "$ref": "#/definitions/string"
        },
        "_display": {
          "description": "Extensions for display",
          "$ref": "#/definitions/Element"
        },
        "valueSet": {
          "description": "The set of codes that the map refers to.",
          "$ref": "#/definitions/canonical"
        },
        "relationship": {
          "description": "The relationship between the source and target concepts. The relationship is read from source to target (e.g. source-is-narrower-than-target).",
          "$ref": "#/definitions/code"
        },
        "_relationship": {
          "description": "Extensions for relationship",
          "$ref": "#/definitions/Element"
        },
        "comment": {
          "description": "A description of status/issues in mapping that conveys additional information not represented in  the structured data.",
          "$ref": "#/definitions/string"
        },
        "_comment": {
          "description": "Extensions for comment",
          "$ref": "#/definitions/Element"
        },
        "dependsOn": {
          "description": "A set of additional dependencies for this mapping to hold. This mapping is only applicable if the specified property can be resolved, and it has the specified value.",
          "items": {
            "$ref": "#/definitions/ConceptMap_DependsOn"
          },
          "type": "array"
        },
        "product": {
          "description": "Product is the output of a ConceptMap that provides additional values relevant to the interpretation of the mapping target.",
          "items": {
            "$ref": "#/definitions/ConceptMap_DependsOn"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ConceptMap_DependsOn": {
      "description": "A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "property": {
          "description": "A reference to a property that holds a value the map depends on. This value can be supplied to the $translate operation to select the appropriate targets.",
          "$ref": "#/definitions/uri"
        },
        "_property": {
          "description": "Extensions for property",
          "$ref": "#/definitions/Element"
        },
        "valueCode": {
          "description": "Property value that the map depends on.",
          "pattern": "^[^\\s]+( [^\\s]+)*$",
          "type": "string"
        },
        "_valueCode": {
          "description": "Extensions for valueCode",
          "$ref": "#/definitions/Element"
        },
        "valueCoding": {
          "description": "Property value that the map depends on.",
          "$ref": "#/definitions/Coding"
        },
        "valueString": {
          "description": "Property value that the map depends on.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "description": "Property value that the map depends on.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": {
          "description": "Extensions for valueInteger",
          "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "description": "Property value that the map depends on.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "description": "Property value that the map depends on.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_valueDateTime": {
          "description": "Extensions for valueDateTime",
          "$ref": "#/definitions/Element"
        },
        "valueDecimal": {
          "description": "Property value that the map depends on.",
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_valueDecimal": {
          "description": "Extensions for valueDecimal",
          "$ref": "#/definitions/Element"
        },
        "valueUri": {
          "description": "Property value that the map depends on.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUri": {
          "description": "Extensions for valueUri",
          "$ref": "#/definitions/Element"
        },
        "valueId": {
          "description": "Property value that the map depends on.",
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string"
        },
        "_valueId": {
          "description": "Extensions for valueId",
          "$ref": "#/definitions/Element"
        },
        "valueSet": {
          "description": "This mapping applies if the property value is a code from this value set.",
          "$ref": "#/definitions/canonical"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ConceptMap_Unmapped": {
      "description": "A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "mode": {
          "description": "Defines which action to take if there is no match for the source concept in the target system designated for the group. One of 3 actions are possible: use the unmapped source code (this is useful when doing a mapping between versions, and only a few codes have changed), use a fixed code (a default code), or alternatively, a reference to a different concept map can be provided (by canonical URL).",
          "$ref": "#/definitions/code"
        },
        "_mode": {
          "description": "Extensions for mode",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "The fixed code to use when the mode \u003d \u0027fixed\u0027  - all unmapped codes are mapped to a single fixed code.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "display": {
          "description": "The display for the code. The display is only provided to help editors when editing the concept map.",
          "$ref": "#/definitions/string"
        },
        "_display": {
          "description": "Extensions for display",
          "$ref": "#/definitions/Element"
        },
        "valueSet": {
          "description": "The set of fixed codes to use when the mode \u003d \u0027fixed\u0027  - all unmapped codes are mapped to each of the fixed codes.",
          "$ref": "#/definitions/canonical"
        },
        "relationship": {
          "description": "The default relationship value to apply between the source and target concepts when the source code is unmapped and the mode is \u0027fixed\u0027 or \u0027use-source-code\u0027.",
          "$ref": "#/definitions/code"
        },
        "_relationship": {
          "description": "Extensions for relationship",
          "$ref": "#/definitions/Element"
        },
        "otherMap": {
          "description": "The canonical reference to an additional ConceptMap resource instance to use for mapping if this ConceptMap resource contains no matching mapping for the source concept.",
          "$ref": "#/definitions/canonical"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Condition": {
      "description": "A clinical condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern.",
      "properties": {
        "resourceType": {
          "description": "This is a Condition resource",
          "const": "Condition"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Business identifiers assigned to this condition by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "clinicalStatus": {
          "description": "The clinical status of the condition.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "verificationStatus": {
          "description": "The verification status to support the clinical status of the condition.  The verification status pertains to the condition, itself, not to any specific condition attribute.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "category": {
          "description": "A category assigned to the condition.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "severity": {
          "description": "A subjective assessment of the severity of the condition as evaluated by the clinician.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "code": {
          "description": "Identification of the condition, problem or diagnosis.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "bodySite": {
          "description": "The anatomical location where this condition manifests itself.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "subject": {
          "description": "Indicates the patient or group who the condition record is associated with.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "The Encounter during which this Condition was created or to which the creation of this record is tightly associated.",
          "$ref": "#/definitions/Reference"
        },
        "onsetDateTime": {
          "description": "Estimated or actual date or date-time  the condition began, in the opinion of the clinician.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_onsetDateTime": {
          "description": "Extensions for onsetDateTime",
          "$ref": "#/definitions/Element"
        },
        "onsetAge": {
          "description": "Estimated or actual date or date-time  the condition began, in the opinion of the clinician.",
          "$ref": "#/definitions/Age"
        },
        "onsetPeriod": {
          "description": "Estimated or actual date or date-time  the condition began, in the opinion of the clinician.",
          "$ref": "#/definitions/Period"
        },
        "onsetRange": {
          "description": "Estimated or actual date or date-time  the condition began, in the opinion of the clinician.",
          "$ref": "#/definitions/Range"
        },
        "onsetString": {
          "description": "Estimated or actual date or date-time  the condition began, in the opinion of the clinician.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_onsetString": {
          "description": "Extensions for onsetString",
          "$ref": "#/definitions/Element"
        },
        "abatementDateTime": {
          "description": "The date or estimated date that the condition resolved or went into remission. This is called \"abatement\" because of the many overloaded connotations associated with \"remission\" or \"resolution\" - Some conditions, such as chronic conditions, are never really resolved, but they can abate.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_abatementDateTime": {
          "description": "Extensions for abatementDateTime",
          "$ref": "#/definitions/Element"
        },
        "abatementAge": {
          "description": "The date or estimated date that the condition resolved or went into remission. This is called \"abatement\" because of the many overloaded connotations associated with \"remission\" or \"resolution\" - Some conditions, such as chronic conditions, are never really resolved, but they can abate.",
          "$ref": "#/definitions/Age"
        },
        "abatementPeriod": {
          "description": "The date or estimated date that the condition resolved or went into remission. This is called \"abatement\" because of the many overloaded connotations associated with \"remission\" or \"resolution\" - Some conditions, such as chronic conditions, are never really resolved, but they can abate.",
          "$ref": "#/definitions/Period"
        },
        "abatementRange": {
          "description": "The date or estimated date that the condition resolved or went into remission. This is called \"abatement\" because of the many overloaded connotations associated with \"remission\" or \"resolution\" - Some conditions, such as chronic conditions, are never really resolved, but they can abate.",
          "$ref": "#/definitions/Range"
        },
        "abatementString": {
          "description": "The date or estimated date that the condition resolved or went into remission. This is called \"abatement\" because of the many overloaded connotations associated with \"remission\" or \"resolution\" - Some conditions, such as chronic conditions, are never really resolved, but they can abate.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_abatementString": {
          "description": "Extensions for abatementString",
          "$ref": "#/definitions/Element"
        },
        "recordedDate": {
          "description": "The recordedDate represents when this particular Condition record was created in the system, which is often a system-generated date.",
          "$ref": "#/definitions/dateTime"
        },
        "_recordedDate": {
          "description": "Extensions for recordedDate",
          "$ref": "#/definitions/Element"
        },
        "participant": {
          "description": "Indicates who or what participated in the activities related to the condition and how they were involved.",
          "items": {
            "$ref": "#/definitions/Condition_Participant"
          },
          "type": "array"
        },
        "stage": {
          "description": "A simple summary of the stage such as \"Stage 3\" or \"Early Onset\". The determination of the stage is disease-specific, such as cancer, retinopathy of prematurity, kidney diseases, Alzheimer\u0027s, or Parkinson disease.",
          "items": {
            "$ref": "#/definitions/Condition_Stage"
          },
          "type": "array"
        },
        "evidence": {
          "description": "Supporting evidence / manifestations that are the basis of the Condition\u0027s verification status, such as evidence that confirmed or refuted the condition.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "note": {
          "description": "Additional information about the Condition. This is a general notes/comments entry  for description of the Condition, its diagnosis and prognosis.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "subject",
        "clinicalStatus",
        "resourceType"
      ]
    },
    "Condition_Participant": {
      "description": "A clinical condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "function": {
          "description": "Distinguishes the type of involvement of the actor in the activities related to the condition.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "actor": {
          "description": "Indicates who or what participated in the activities related to the condition.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "actor"
      ]
    },
    "Condition_Stage": {
      "description": "A clinical condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "summary": {
          "description": "A simple summary of the stage such as \"Stage 3\" or \"Early Onset\". The determination of the stage is disease-specific, such as cancer, retinopathy of prematurity, kidney diseases, Alzheimer\u0027s, or Parkinson disease.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "assessment": {
          "description": "Reference to a formal record of the evidence on which the staging assessment is based.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "type": {
          "description": "The kind of staging, such as pathological or clinical staging.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ConditionDefinition": {
      "description": "A definition of a condition and information relevant to managing it.",
      "properties": {
        "resourceType": {
          "description": "This is a ConditionDefinition resource",
          "const": "ConditionDefinition"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this condition definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this condition definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the condition definition is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this condition definition when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the condition definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the condition definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the condition definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the condition definition.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this condition definition. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this condition definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the condition definition was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the condition definition changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the condition definition.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the condition definition from a consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate condition definition instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the condition definition is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this {{title}} is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the {{title}} and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the {{title}}.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "approvalDate": {
          "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
          "$ref": "#/definitions/date"
        },
        "_approvalDate": {
          "description": "Extensions for approvalDate",
          "$ref": "#/definitions/Element"
        },
        "lastReviewDate": {
          "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
          "$ref": "#/definitions/date"
        },
        "_lastReviewDate": {
          "description": "Extensions for lastReviewDate",
          "$ref": "#/definitions/Element"
        },
        "effectivePeriod": {
          "description": "The period during which the {{title}} content was or is planned to be in active use.",
          "$ref": "#/definitions/Period"
        },
        "topic": {
          "description": "Descriptive topics related to the content of the {{title}}. Topics provide a high-level categorization as well as keywords for the {{title}} that can be useful for filtering and searching.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "author": {
          "description": "An individiual or organization primarily involved in the creation and maintenance of the {{title}}.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "editor": {
          "description": "An individual or organization primarily responsible for internal coherence of the {{title}}.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "reviewer": {
          "description": "An individual or organization primarily responsible for review of some aspect of the {{title}}.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "endorser": {
          "description": "An individual or organization responsible for officially endorsing the {{title}} for use in some setting.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "relatedArtifact": {
          "description": "Related artifacts such as additional documentation, justification, dependencies, bibliographic references, and predecessor and successor artifacts.",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          },
          "type": "array"
        },
        "subtitle": {
          "description": "An explanatory or alternate title for the event definition giving additional information about its content.",
          "$ref": "#/definitions/string"
        },
        "_subtitle": {
          "description": "Extensions for subtitle",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "Identification of the condition, problem or diagnosis.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "severity": {
          "description": "A subjective assessment of the severity of the condition as evaluated by the clinician.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "bodySite": {
          "description": "The anatomical location where this condition manifests itself.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "stage": {
          "description": "Clinical stage or grade of a condition. May include formal severity assessments.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "hasSeverity": {
          "description": "Whether Severity is appropriate to collect for this condition.",
          "$ref": "#/definitions/boolean"
        },
        "_hasSeverity": {
          "description": "Extensions for hasSeverity",
          "$ref": "#/definitions/Element"
        },
        "hasBodySite": {
          "description": "Whether bodySite is appropriate to collect for this condition.",
          "$ref": "#/definitions/boolean"
        },
        "_hasBodySite": {
          "description": "Extensions for hasBodySite",
          "$ref": "#/definitions/Element"
        },
        "hasStage": {
          "description": "Whether stage is appropriate to collect for this condition.",
          "$ref": "#/definitions/boolean"
        },
        "_hasStage": {
          "description": "Extensions for hasStage",
          "$ref": "#/definitions/Element"
        },
        "definition": {
          "description": "Formal definitions of the condition. These may be references to ontologies, published clinical protocols or research papers.",
          "items": {
            "$ref": "#/definitions/uri"
          },
          "type": "array"
        },
        "_definition": {
          "description": "Extensions for definition",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "observation": {
          "description": "Observations particularly relevant to this condition.",
          "items": {
            "$ref": "#/definitions/ConditionDefinition_Observation"
          },
          "type": "array"
        },
        "medication": {
          "description": "Medications particularly relevant for this condition.",
          "items": {
            "$ref": "#/definitions/ConditionDefinition_Medication"
          },
          "type": "array"
        },
        "precondition": {
          "description": "An observation that suggests that this condition applies.",
          "items": {
            "$ref": "#/definitions/ConditionDefinition_Precondition"
          },
          "type": "array"
        },
        "team": {
          "description": "Appropriate team for this condition.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "questionnaire": {
          "description": "Questionnaire for this condition.",
          "items": {
            "$ref": "#/definitions/ConditionDefinition_Questionnaire"
          },
          "type": "array"
        },
        "plan": {
          "description": "Plan that is appropriate.",
          "items": {
            "$ref": "#/definitions/ConditionDefinition_Plan"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code",
        "resourceType"
      ]
    },
    "ConditionDefinition_Observation": {
      "description": "A definition of a condition and information relevant to managing it.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "category": {
          "description": "Category that is relevant.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "code": {
          "description": "Code for relevant Observation.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ConditionDefinition_Medication": {
      "description": "A definition of a condition and information relevant to managing it.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "category": {
          "description": "Category that is relevant.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "code": {
          "description": "Code for relevant Medication.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ConditionDefinition_Precondition": {
      "description": "A definition of a condition and information relevant to managing it.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Kind of pre-condition.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "Code for relevant Observation.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCodeableConcept": {
          "description": "Value of Observation.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": {
          "description": "Value of Observation.",
          "$ref": "#/definitions/Quantity"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "ConditionDefinition_Questionnaire": {
      "description": "A definition of a condition and information relevant to managing it.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Use of the questionnaire.",
          "$ref": "#/definitions/code"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "reference": {
          "description": "Specific Questionnaire.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "reference"
      ]
    },
    "ConditionDefinition_Plan": {
      "description": "A definition of a condition and information relevant to managing it.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "role": {
          "description": "Use for the plan.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "reference": {
          "description": "The actual plan.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "reference"
      ]
    },
    "Consent": {
      "description": "A record of a healthcare consumer’s  choices  or choices made on their behalf by a third party, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.",
      "properties": {
        "resourceType": {
          "description": "This is a Consent resource",
          "const": "Consent"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Unique identifier for this copy of the Consent Statement.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "Indicates the current state of this Consent resource.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "category": {
          "description": "A classification of the type of consents found in the statement. This element supports indexing and retrieval of consent statements.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "subject": {
          "description": "The patient/healthcare practitioner or group of persons to whom this consent applies.",
          "$ref": "#/definitions/Reference"
        },
        "date": {
          "description": "Date the consent instance was agreed to.",
          "$ref": "#/definitions/date"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "period": {
          "description": "Effective period for this Consent Resource and all provisions unless specified in that provision.",
          "$ref": "#/definitions/Period"
        },
        "grantor": {
          "description": "The entity responsible for granting the rights listed in a Consent Directive.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "grantee": {
          "description": "The entity responsible for complying with the Consent Directive, including any obligations or limitations on authorizations and enforcement of prohibitions.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "manager": {
          "description": "The actor that manages the consent through its lifecycle.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "controller": {
          "description": "The actor that controls/enforces the access according to the consent.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "sourceAttachment": {
          "description": "The source on which this consent statement is based. The source might be a scanned original paper form.",
          "items": {
            "$ref": "#/definitions/Attachment"
          },
          "type": "array"
        },
        "sourceReference": {
          "description": "A reference to a consent that links back to such a source, a reference to a document repository (e.g. XDS) that stores the original consent document.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "regulatoryBasis": {
          "description": "A set of codes that indicate the regulatory basis (if any) that this consent supports.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "policyBasis": {
          "description": "A Reference or URL used to uniquely identify the policy the organization will enforce for this Consent. This Reference or URL should be specific to the version of the policy and should be dereferencable to a computable policy of some form.",
          "$ref": "#/definitions/Consent_PolicyBasis"
        },
        "policyText": {
          "description": "A Reference to the human readable policy explaining the basis for the Consent.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "verification": {
          "description": "Whether a treatment instruction (e.g. artificial respiration: yes or no) was verified with the patient, his/her family or another authorized person.",
          "items": {
            "$ref": "#/definitions/Consent_Verification"
          },
          "type": "array"
        },
        "provision": {
          "description": "An exception to the base policy of this consent. An exception can be an addition or removal of access permissions.",
          "$ref": "#/definitions/Consent_Provision"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Consent_PolicyBasis": {
      "description": "A record of a healthcare consumer’s  choices  or choices made on their behalf by a third party, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "reference": {
          "description": "A Reference that identifies the policy the organization will enforce for this Consent.",
          "$ref": "#/definitions/Reference"
        },
        "url": {
          "description": "A URL that links to a computable version of the policy the organization will enforce for this Consent.",
          "$ref": "#/definitions/url"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Consent_Verification": {
      "description": "A record of a healthcare consumer’s  choices  or choices made on their behalf by a third party, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "verified": {
          "description": "Has the instruction been verified.",
          "$ref": "#/definitions/boolean"
        },
        "_verified": {
          "description": "Extensions for verified",
          "$ref": "#/definitions/Element"
        },
        "verificationType": {
          "description": "Extensible list of verification type starting with verification and re-validation.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "verifiedBy": {
          "description": "The person who conducted the verification/validation of the Grantor decision.",
          "$ref": "#/definitions/Reference"
        },
        "verifiedWith": {
          "description": "Who verified the instruction (Patient, Relative or other Authorized Person).",
          "$ref": "#/definitions/Reference"
        },
        "verificationDate": {
          "description": "Date(s) verification was collected.",
          "items": {
            "$ref": "#/definitions/dateTime"
          },
          "type": "array"
        },
        "_verificationDate": {
          "description": "Extensions for verificationDate",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Consent_Provision": {
      "description": "A record of a healthcare consumer’s  choices  or choices made on their behalf by a third party, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Action  to take - permit or deny - when the provision conditions are met.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "period": {
          "description": "Timeframe for this provision.",
          "$ref": "#/definitions/Period"
        },
        "actor": {
          "description": "Who or what is controlled by this provision. Use group to identify a set of actors by some property they share (e.g. \u0027admitting officers\u0027).",
          "items": {
            "$ref": "#/definitions/Consent_Actor"
          },
          "type": "array"
        },
        "action": {
          "description": "Actions controlled by this provision.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "securityLabel": {
          "description": "A security label, comprised of 0..* security label fields (Privacy tags), which define which resources are controlled by this exception.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        },
        "purpose": {
          "description": "The context of the activities a user is taking - why the user is accessing the data - that are controlled by this provision.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        },
        "documentType": {
          "description": "The documentType(s) covered by this provision. The type can be a CDA document, or some other type that indicates what sort of information the consent relates to.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        },
        "resourceType": {
          "description": "The resourceType(s) covered by this provision. The type can be a FHIR resource type or a profile on a type that indicates what information the consent relates to.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        },
        "code": {
          "description": "If this code is found in an instance, then the provision applies.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "dataPeriod": {
          "description": "Clinical or Operational Relevant period of time that bounds the data controlled by this provision.",
          "$ref": "#/definitions/Period"
        },
        "data": {
          "description": "The resources controlled by this provision if specific resources are referenced.",
          "items": {
            "$ref": "#/definitions/Consent_Data"
          },
          "type": "array"
        },
        "expression": {
          "description": "A computable (FHIRPath or other) definition of what is controlled by this consent.",
          "$ref": "#/definitions/Expression"
        },
        "provision": {
          "description": "Provisions which provide exceptions to the base provision or subprovisions.",
          "items": {
            "$ref": "#/definitions/Consent_Provision"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Consent_Actor": {
      "description": "A record of a healthcare consumer’s  choices  or choices made on their behalf by a third party, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "role": {
          "description": "How the individual is involved in the resources content that is described in the exception.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "reference": {
          "description": "The resource that identifies the actor. To identify actors by type, use group to identify a set of actors by some property they share (e.g. \u0027admitting officers\u0027).",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Consent_Data": {
      "description": "A record of a healthcare consumer’s  choices  or choices made on their behalf by a third party, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "meaning": {
          "description": "How the resource reference is interpreted when testing consent restrictions.",
          "$ref": "#/definitions/code"
        },
        "_meaning": {
          "description": "Extensions for meaning",
          "$ref": "#/definitions/Element"
        },
        "reference": {
          "description": "A reference to a specific resource that defines which resources are covered by this consent.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "reference"
      ]
    },
    "Contract": {
      "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
      "properties": {
        "resourceType": {
          "description": "This is a Contract resource",
          "const": "Contract"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Unique identifier for this Contract or a derivative that references a Source Contract.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "url": {
          "description": "Canonical identifier for this contract, represented as a URI (globally unique).",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "version": {
          "description": "An edition identifier used for business purposes to label business significant variants.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of the resource instance.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "legalState": {
          "description": "Legal states of the formation of a legal instrument, which is a formally executed written document that can be formally attributed to its author, records and formally expresses a legally enforceable act, process, or contractual duty, obligation, or right, and therefore evidences that act, process, or agreement.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "instantiatesCanonical": {
          "description": "The URL pointing to a FHIR-defined Contract Definition that is adhered to in whole or part by this Contract.",
          "$ref": "#/definitions/Reference"
        },
        "instantiatesUri": {
          "description": "The URL pointing to an externally maintained definition that is adhered to in whole or in part by this Contract.",
          "$ref": "#/definitions/uri"
        },
        "_instantiatesUri": {
          "description": "Extensions for instantiatesUri",
          "$ref": "#/definitions/Element"
        },
        "contentDerivative": {
          "description": "The minimal content derived from the basal information source at a specific stage in its lifecycle.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "issued": {
          "description": "When this  Contract was issued.",
          "$ref": "#/definitions/dateTime"
        },
        "_issued": {
          "description": "Extensions for issued",
          "$ref": "#/definitions/Element"
        },
        "applies": {
          "description": "Relevant time or time-period when this Contract is applicable.",
          "$ref": "#/definitions/Period"
        },
        "expirationType": {
          "description": "Event resulting in discontinuation or termination of this Contract instance by one or more parties to the contract.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subject": {
          "description": "The target entity impacted by or of interest to parties to the agreement.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "authority": {
          "description": "A formally or informally recognized grouping of people, principals, organizations, or jurisdictions formed for the purpose of achieving some form of collective action such as the promulgation, administration and enforcement of contracts and policies.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "domain": {
          "description": "Recognized governance framework or system operating with a circumscribed scope in accordance with specified principles, policies, processes or procedures for managing rights, actions, or behaviors of parties or principals relative to resources.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "site": {
          "description": "Sites in which the contract is complied with,  exercised, or in force.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "name": {
          "description": "A natural language name identifying this Contract definition, derivative, or instance in any legal state. Provides additional information about its content. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for this Contract definition, derivative, or instance in any legal state.t giving additional information about its content.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "subtitle": {
          "description": "An explanatory or alternate user-friendly title for this Contract definition, derivative, or instance in any legal state.t giving additional information about its content.",
          "$ref": "#/definitions/string"
        },
        "_subtitle": {
          "description": "Extensions for subtitle",
          "$ref": "#/definitions/Element"
        },
        "alias": {
          "description": "Alternative representation of the title for this Contract definition, derivative, or instance in any legal state., e.g., a domain specific contract number related to legislation.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_alias": {
          "description": "Extensions for alias",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "author": {
          "description": "The individual or organization that authored the Contract definition, derivative, or instance in any legal state.",
          "$ref": "#/definitions/Reference"
        },
        "scope": {
          "description": "A selector of legal concerns for this Contract definition, derivative, or instance in any legal state.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "topicCodeableConcept": {
          "description": "Narrows the range of legal concerns to focus on the achievement of specific contractual objectives.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "topicReference": {
          "description": "Narrows the range of legal concerns to focus on the achievement of specific contractual objectives.",
          "$ref": "#/definitions/Reference"
        },
        "type": {
          "description": "A high-level category for the legal instrument, whether constructed as a Contract definition, derivative, or instance in any legal state.  Provides additional information about its content within the context of the Contract\u0027s scope to distinguish the kinds of systems that would be interested in the contract.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subType": {
          "description": "Sub-category for the Contract that distinguishes the kinds of systems that would be interested in the Contract within the context of the Contract\u0027s scope.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "contentDefinition": {
          "description": "Precusory content developed with a focus and intent of supporting the formation a Contract instance, which may be associated with and transformable into a Contract.",
          "$ref": "#/definitions/Contract_ContentDefinition"
        },
        "term": {
          "description": "One or more Contract Provisions, which may be related and conveyed as a group, and may contain nested groups.",
          "items": {
            "$ref": "#/definitions/Contract_Term"
          },
          "type": "array"
        },
        "supportingInfo": {
          "description": "Information that may be needed by/relevant to the performer in their execution of this term action.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "relevantHistory": {
          "description": "Links to Provenance records for past versions of this Contract definition, derivative, or instance, which identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the Contract.  The Provence.entity indicates the target that was changed in the update (see [Provenance.entity](provenance-definitions.html#Provenance.entity)).",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "signer": {
          "description": "Parties with legal standing in the Contract, including the principal parties, the grantor(s) and grantee(s), which are any person or organization bound by the contract, and any ancillary parties, which facilitate the execution of the contract such as a notary or witness.",
          "items": {
            "$ref": "#/definitions/Contract_Signer"
          },
          "type": "array"
        },
        "friendly": {
          "description": "The \"patient friendly language\" versionof the Contract in whole or in parts. \"Patient friendly language\" means the representation of the Contract and Contract Provisions in a manner that is readily accessible and understandable by a layperson in accordance with best practices for communication styles that ensure that those agreeing to or signing the Contract understand the roles, actions, obligations, responsibilities, and implication of the agreement.",
          "items": {
            "$ref": "#/definitions/Contract_Friendly"
          },
          "type": "array"
        },
        "legal": {
          "description": "List of Legal expressions or representations of this Contract.",
          "items": {
            "$ref": "#/definitions/Contract_Legal"
          },
          "type": "array"
        },
        "rule": {
          "description": "List of Computable Policy Rule Language Representations of this Contract.",
          "items": {
            "$ref": "#/definitions/Contract_Rule"
          },
          "type": "array"
        },
        "legallyBindingAttachment": {
          "description": "Legally binding Contract: This is the signed and legally recognized representation of the Contract, which is considered the \"source of truth\" and which would be the basis for legal action related to enforcement of this Contract.",
          "$ref": "#/definitions/Attachment"
        },
        "legallyBindingReference": {
          "description": "Legally binding Contract: This is the signed and legally recognized representation of the Contract, which is considered the \"source of truth\" and which would be the basis for legal action related to enforcement of this Contract.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Contract_ContentDefinition": {
      "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Precusory content structure and use, i.e., a boilerplate, template, application for a contract such as an insurance policy or benefits under a program, e.g., workers compensation.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subType": {
          "description": "Detailed Precusory content type.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "publisher": {
          "description": "The  individual or organization that published the Contract precursor content.",
          "$ref": "#/definitions/Reference"
        },
        "publicationDate": {
          "description": "The date (and optionally time) when the contract was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the contract changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_publicationDate": {
          "description": "Extensions for publicationDate",
          "$ref": "#/definitions/Element"
        },
        "publicationStatus": {
          "description": "amended | appended | cancelled | disputed | entered-in-error | executable +.",
          "$ref": "#/definitions/code"
        },
        "_publicationStatus": {
          "description": "Extensions for publicationStatus",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to Contract precursor content. Copyright statements are generally legal restrictions on the use and publishing of the Contract precursor content.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "Contract_Term": {
      "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Unique identifier for this particular Contract Provision.",
          "$ref": "#/definitions/Identifier"
        },
        "issued": {
          "description": "When this Contract Provision was issued.",
          "$ref": "#/definitions/dateTime"
        },
        "_issued": {
          "description": "Extensions for issued",
          "$ref": "#/definitions/Element"
        },
        "applies": {
          "description": "Relevant time or time-period when this Contract Provision is applicable.",
          "$ref": "#/definitions/Period"
        },
        "topicCodeableConcept": {
          "description": "The entity that the term applies to.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "topicReference": {
          "description": "The entity that the term applies to.",
          "$ref": "#/definitions/Reference"
        },
        "type": {
          "description": "A legal clause or condition contained within a contract that requires one or both parties to perform a particular requirement by some specified time or prevents one or both parties from performing a particular requirement by some specified time.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subType": {
          "description": "A specialized legal clause or condition based on overarching contract type.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "text": {
          "description": "Statement of a provision in a policy or a contract.",
          "$ref": "#/definitions/string"
        },
        "_text": {
          "description": "Extensions for text",
          "$ref": "#/definitions/Element"
        },
        "securityLabel": {
          "description": "Security labels that protect the handling of information about the term and its elements, which may be specifically identified..",
          "items": {
            "$ref": "#/definitions/Contract_SecurityLabel"
          },
          "type": "array"
        },
        "offer": {
          "description": "The matter of concern in the context of this provision of the agrement.",
          "$ref": "#/definitions/Contract_Offer"
        },
        "asset": {
          "description": "Contract Term Asset List.",
          "items": {
            "$ref": "#/definitions/Contract_Asset"
          },
          "type": "array"
        },
        "action": {
          "description": "An actor taking a role in an activity for which it can be assigned some degree of responsibility for the activity taking place.",
          "items": {
            "$ref": "#/definitions/Contract_Action"
          },
          "type": "array"
        },
        "group": {
          "description": "Nested group of Contract Provisions.",
          "items": {
            "$ref": "#/definitions/Contract_Term"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "offer"
      ]
    },
    "Contract_SecurityLabel": {
      "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "number": {
          "description": "Number used to link this term or term element to the applicable Security Label.",
          "items": {
            "$ref": "#/definitions/unsignedInt"
          },
          "type": "array"
        },
        "_number": {
          "description": "Extensions for number",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "classification": {
          "description": "Security label privacy tag that species the level of confidentiality protection required for this term and/or term elements.",
          "$ref": "#/definitions/Coding"
        },
        "category": {
          "description": "Security label privacy tag that species the applicable privacy and security policies governing this term and/or term elements.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        },
        "control": {
          "description": "Security label privacy tag that species the manner in which term and/or term elements are to be protected.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "classification"
      ]
    },
    "Contract_Offer": {
      "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Unique identifier for this particular Contract Provision.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "party": {
          "description": "Offer Recipient.",
          "items": {
            "$ref": "#/definitions/Contract_Party"
          },
          "type": "array"
        },
        "topic": {
          "description": "The owner of an asset has the residual control rights over the asset: the right to decide all usages of the asset in any way not inconsistent with a prior contract, custom, or law (Hart, 1995, p. 30).",
          "$ref": "#/definitions/Reference"
        },
        "type": {
          "description": "Type of Contract Provision such as specific requirements, purposes for actions, obligations, prohibitions, e.g. life time maximum benefit.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "decision": {
          "description": "Type of choice made by accepting party with respect to an offer made by an offeror/ grantee.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "decisionMode": {
          "description": "How the decision about a Contract was conveyed.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "answer": {
          "description": "Response to offer text.",
          "items": {
            "$ref": "#/definitions/Contract_Answer"
          },
          "type": "array"
        },
        "text": {
          "description": "Human readable form of this Contract Offer.",
          "$ref": "#/definitions/string"
        },
        "_text": {
          "description": "Extensions for text",
          "$ref": "#/definitions/Element"
        },
        "linkId": {
          "description": "The id of the clause or question text of the offer in the referenced questionnaire/response.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_linkId": {
          "description": "Extensions for linkId",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "securityLabelNumber": {
          "description": "Security labels that protects the offer.",
          "items": {
            "$ref": "#/definitions/unsignedInt"
          },
          "type": "array"
        },
        "_securityLabelNumber": {
          "description": "Extensions for securityLabelNumber",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Contract_Party": {
      "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "reference": {
          "description": "Participant in the offer.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "role": {
          "description": "How the party participates in the offer.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "reference",
        "role"
      ]
    },
    "Contract_Answer": {
      "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "valueBoolean": {
          "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueDecimal": {
          "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.",
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_valueDecimal": {
          "description": "Extensions for valueDecimal",
          "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": {
          "description": "Extensions for valueInteger",
          "$ref": "#/definitions/Element"
        },
        "valueDate": {
          "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_valueDate": {
          "description": "Extensions for valueDate",
          "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_valueDateTime": {
          "description": "Extensions for valueDateTime",
          "$ref": "#/definitions/Element"
        },
        "valueTime": {
          "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?$",
          "type": "string"
        },
        "_valueTime": {
          "description": "Extensions for valueTime",
          "$ref": "#/definitions/Element"
        },
        "valueString": {
          "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueUri": {
          "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUri": {
          "description": "Extensions for valueUri",
          "$ref": "#/definitions/Element"
        },
        "valueAttachment": {
          "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.",
          "$ref": "#/definitions/Attachment"
        },
        "valueCoding": {
          "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.",
          "$ref": "#/definitions/Coding"
        },
        "valueQuantity": {
          "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.",
          "$ref": "#/definitions/Quantity"
        },
        "valueReference": {
          "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Contract_Asset": {
      "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "scope": {
          "description": "Differentiates the kind of the asset .",
          "$ref": "#/definitions/CodeableConcept"
        },
        "type": {
          "description": "Target entity type about which the term may be concerned.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "typeReference": {
          "description": "Associated entities.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "subtype": {
          "description": "May be a subtype or part of an offered asset.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "relationship": {
          "description": "Specifies the applicability of the term to an asset resource instance, and instances it refers to orinstances that refer to it, and/or are owned by the offeree.",
          "$ref": "#/definitions/Coding"
        },
        "context": {
          "description": "Circumstance of the asset.",
          "items": {
            "$ref": "#/definitions/Contract_Context"
          },
          "type": "array"
        },
        "condition": {
          "description": "Description of the quality and completeness of the asset that imay be a factor in its valuation.",
          "$ref": "#/definitions/string"
        },
        "_condition": {
          "description": "Extensions for condition",
          "$ref": "#/definitions/Element"
        },
        "periodType": {
          "description": "Type of Asset availability for use or ownership.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "period": {
          "description": "Asset relevant contractual time period.",
          "items": {
            "$ref": "#/definitions/Period"
          },
          "type": "array"
        },
        "usePeriod": {
          "description": "Time period of asset use.",
          "items": {
            "$ref": "#/definitions/Period"
          },
          "type": "array"
        },
        "text": {
          "description": "Clause or question text (Prose Object) concerning the asset in a linked form, such as a QuestionnaireResponse used in the formation of the contract.",
          "$ref": "#/definitions/string"
        },
        "_text": {
          "description": "Extensions for text",
          "$ref": "#/definitions/Element"
        },
        "linkId": {
          "description": "Id [identifier??] of the clause or question text about the asset in the referenced form or QuestionnaireResponse.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_linkId": {
          "description": "Extensions for linkId",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "answer": {
          "description": "Response to assets.",
          "items": {
            "$ref": "#/definitions/Contract_Answer"
          },
          "type": "array"
        },
        "securityLabelNumber": {
          "description": "Security labels that protects the asset.",
          "items": {
            "$ref": "#/definitions/unsignedInt"
          },
          "type": "array"
        },
        "_securityLabelNumber": {
          "description": "Extensions for securityLabelNumber",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "valuedItem": {
          "description": "Contract Valued Item List.",
          "items": {
            "$ref": "#/definitions/Contract_ValuedItem"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Contract_Context": {
      "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "reference": {
          "description": "Asset context reference may include the creator, custodian, or owning Person or Organization (e.g., bank, repository),  location held, e.g., building,  jurisdiction.",
          "$ref": "#/definitions/Reference"
        },
        "code": {
          "description": "Coded representation of the context generally or of the Referenced entity, such as the asset holder type or location.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "text": {
          "description": "Context description.",
          "$ref": "#/definitions/string"
        },
        "_text": {
          "description": "Extensions for text",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Contract_ValuedItem": {
      "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "entityCodeableConcept": {
          "description": "Specific type of Contract Valued Item that may be priced.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "entityReference": {
          "description": "Specific type of Contract Valued Item that may be priced.",
          "$ref": "#/definitions/Reference"
        },
        "identifier": {
          "description": "Identifies a Contract Valued Item instance.",
          "$ref": "#/definitions/Identifier"
        },
        "effectiveTime": {
          "description": "Indicates the time during which this Contract ValuedItem information is effective.",
          "$ref": "#/definitions/dateTime"
        },
        "_effectiveTime": {
          "description": "Extensions for effectiveTime",
          "$ref": "#/definitions/Element"
        },
        "quantity": {
          "description": "Specifies the units by which the Contract Valued Item is measured or counted, and quantifies the countable or measurable Contract Valued Item instances.",
          "$ref": "#/definitions/Quantity"
        },
        "unitPrice": {
          "description": "A Contract Valued Item unit valuation measure.",
          "$ref": "#/definitions/Money"
        },
        "factor": {
          "description": "A real number that represents a multiplier used in determining the overall value of the Contract Valued Item delivered. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
          "$ref": "#/definitions/decimal"
        },
        "_factor": {
          "description": "Extensions for factor",
          "$ref": "#/definitions/Element"
        },
        "points": {
          "description": "An amount that expresses the weighting (based on difficulty, cost and/or resource intensiveness) associated with the Contract Valued Item delivered. The concept of Points allows for assignment of point values for a Contract Valued Item, such that a monetary amount can be assigned to each point.",
          "$ref": "#/definitions/decimal"
        },
        "_points": {
          "description": "Extensions for points",
          "$ref": "#/definitions/Element"
        },
        "net": {
          "description": "Expresses the product of the Contract Valued Item unitQuantity and the unitPriceAmt. For example, the formula: unit Quantity * unit Price (Cost per Point) * factor Number  * points \u003d net Amount. Quantity, factor and points are assumed to be 1 if not supplied.",
          "$ref": "#/definitions/Money"
        },
        "payment": {
          "description": "Terms of valuation.",
          "$ref": "#/definitions/string"
        },
        "_payment": {
          "description": "Extensions for payment",
          "$ref": "#/definitions/Element"
        },
        "paymentDate": {
          "description": "When payment is due.",
          "$ref": "#/definitions/dateTime"
        },
        "_paymentDate": {
          "description": "Extensions for paymentDate",
          "$ref": "#/definitions/Element"
        },
        "responsible": {
          "description": "Who will make payment.",
          "$ref": "#/definitions/Reference"
        },
        "recipient": {
          "description": "Who will receive payment.",
          "$ref": "#/definitions/Reference"
        },
        "linkId": {
          "description": "Id  of the clause or question text related to the context of this valuedItem in the referenced form or QuestionnaireResponse.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_linkId": {
          "description": "Extensions for linkId",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "securityLabelNumber": {
          "description": "A set of security labels that define which terms are controlled by this condition.",
          "items": {
            "$ref": "#/definitions/unsignedInt"
          },
          "type": "array"
        },
        "_securityLabelNumber": {
          "description": "Extensions for securityLabelNumber",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Contract_Action": {
      "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "doNotPerform": {
          "description": "True if the term prohibits the  action.",
          "$ref": "#/definitions/boolean"
        },
        "_doNotPerform": {
          "description": "Extensions for doNotPerform",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "Activity or service obligation to be done or not done, performed or not performed, effectuated or not by this Contract term.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subject": {
          "description": "Entity of the action.",
          "items": {
            "$ref": "#/definitions/Contract_Subject"
          },
          "type": "array"
        },
        "intent": {
          "description": "Reason or purpose for the action stipulated by this Contract Provision.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "linkId": {
          "description": "Id [identifier??] of the clause or question text related to this action in the referenced form or QuestionnaireResponse.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_linkId": {
          "description": "Extensions for linkId",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "status": {
          "description": "Current state of the term action.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "context": {
          "description": "Encounter or Episode with primary association to specified term activity.",
          "$ref": "#/definitions/Reference"
        },
        "contextLinkId": {
          "description": "Id [identifier??] of the clause or question text related to the requester of this action in the referenced form or QuestionnaireResponse.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_contextLinkId": {
          "description": "Extensions for contextLinkId",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "occurrenceDateTime": {
          "description": "When action happens.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_occurrenceDateTime": {
          "description": "Extensions for occurrenceDateTime",
          "$ref": "#/definitions/Element"
        },
        "occurrencePeriod": {
          "description": "When action happens.",
          "$ref": "#/definitions/Period"
        },
        "occurrenceTiming": {
          "description": "When action happens.",
          "$ref": "#/definitions/Timing"
        },
        "requester": {
          "description": "Who or what initiated the action and has responsibility for its activation.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "requesterLinkId": {
          "description": "Id [identifier??] of the clause or question text related to the requester of this action in the referenced form or QuestionnaireResponse.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_requesterLinkId": {
          "description": "Extensions for requesterLinkId",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "performerType": {
          "description": "The type of individual that is desired or required to perform or not perform the action.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "performerRole": {
          "description": "The type of role or competency of an individual desired or required to perform or not perform the action.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "performer": {
          "description": "Indicates who or what is being asked to perform (or not perform) the ction.",
          "$ref": "#/definitions/Reference"
        },
        "performerLinkId": {
          "description": "Id [identifier??] of the clause or question text related to the reason type or reference of this  action in the referenced form or QuestionnaireResponse.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_performerLinkId": {
          "description": "Extensions for performerLinkId",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "reason": {
          "description": "Rationale for the action to be performed or not performed. Describes why the action is permitted or prohibited. Either a coded concept, or another resource whose existence justifies permitting or not permitting this action.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "reasonLinkId": {
          "description": "Id [identifier??] of the clause or question text related to the reason type or reference of this  action in the referenced form or QuestionnaireResponse.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_reasonLinkId": {
          "description": "Extensions for reasonLinkId",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "note": {
          "description": "Comments made about the term action made by the requester, performer, subject or other participants.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "securityLabelNumber": {
          "description": "Security labels that protects the action.",
          "items": {
            "$ref": "#/definitions/unsignedInt"
          },
          "type": "array"
        },
        "_securityLabelNumber": {
          "description": "Extensions for securityLabelNumber",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type",
        "intent",
        "status"
      ]
    },
    "Contract_Subject": {
      "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "reference": {
          "description": "The entity the action is performed or not performed on or for.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "role": {
          "description": "Role type of agent assigned roles in this Contract.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "reference"
      ]
    },
    "Contract_Signer": {
      "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Role of this Contract signer, e.g. notary, grantee.",
          "$ref": "#/definitions/Coding"
        },
        "party": {
          "description": "Party which is a signator to this Contract.",
          "$ref": "#/definitions/Reference"
        },
        "signature": {
          "description": "Legally binding Contract DSIG signature contents in Base64.",
          "items": {
            "$ref": "#/definitions/Signature"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "signature",
        "type",
        "party"
      ]
    },
    "Contract_Friendly": {
      "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "contentAttachment": {
          "description": "Human readable rendering of this Contract in a format and representation intended to enhance comprehension and ensure understandability.",
          "$ref": "#/definitions/Attachment"
        },
        "contentReference": {
          "description": "Human readable rendering of this Contract in a format and representation intended to enhance comprehension and ensure understandability.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Contract_Legal": {
      "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "contentAttachment": {
          "description": "Contract legal text in human renderable form.",
          "$ref": "#/definitions/Attachment"
        },
        "contentReference": {
          "description": "Contract legal text in human renderable form.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Contract_Rule": {
      "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "contentAttachment": {
          "description": "Computable Contract conveyed using a policy rule language (e.g. XACML, DKAL, SecPal).",
          "$ref": "#/definitions/Attachment"
        },
        "contentReference": {
          "description": "Computable Contract conveyed using a policy rule language (e.g. XACML, DKAL, SecPal).",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Coverage": {
      "description": "Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment.",
      "properties": {
        "resourceType": {
          "description": "This is a Coverage resource",
          "const": "Coverage"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "The identifier of the coverage as issued by the insurer.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of the resource instance.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "kind": {
          "description": "The nature of the coverage be it insurance, or cash payment such as self-pay.",
          "$ref": "#/definitions/code"
        },
        "_kind": {
          "description": "Extensions for kind",
          "$ref": "#/definitions/Element"
        },
        "paymentBy": {
          "description": "Link to the paying party and optionally what specifically they will be responsible to pay.",
          "items": {
            "$ref": "#/definitions/Coverage_PaymentBy"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of coverage: social program, medical plan, accident coverage (workers compensation, auto), group health or payment by an individual or organization.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "policyHolder": {
          "description": "The party who \u0027owns\u0027 the insurance policy.",
          "$ref": "#/definitions/Reference"
        },
        "subscriber": {
          "description": "The party who has signed-up for or \u0027owns\u0027 the contractual relationship to the policy or to whom the benefit of the policy for services rendered to them or their family is due.",
          "$ref": "#/definitions/Reference"
        },
        "subscriberId": {
          "description": "The insurer assigned ID for the Subscriber.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "beneficiary": {
          "description": "The party who benefits from the insurance coverage; the patient when products and/or services are provided.",
          "$ref": "#/definitions/Reference"
        },
        "dependent": {
          "description": "A designator for a dependent under the coverage.",
          "$ref": "#/definitions/string"
        },
        "_dependent": {
          "description": "Extensions for dependent",
          "$ref": "#/definitions/Element"
        },
        "relationship": {
          "description": "The relationship of beneficiary (patient) to the subscriber.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "period": {
          "description": "Time period during which the coverage is in force. A missing start date indicates the start date isn\u0027t known, a missing end date means the coverage is continuing to be in force.",
          "$ref": "#/definitions/Period"
        },
        "insurer": {
          "description": "The program or plan underwriter, payor, insurance company.",
          "$ref": "#/definitions/Reference"
        },
        "class": {
          "description": "A suite of underwriter specific classifiers.",
          "items": {
            "$ref": "#/definitions/Coverage_Class"
          },
          "type": "array"
        },
        "order": {
          "description": "The order of applicability of this coverage relative to other coverages which are currently in force. Note, there may be gaps in the numbering and this does not imply primary, secondary etc. as the specific positioning of coverages depends upon the episode of care. For example; a patient might have (0) auto insurance (1) their own health insurance and (2) spouse\u0027s health insurance. When claiming for treatments which were not the result of an auto accident then only coverages (1) and (2) above would be applicatble and would apply in the order specified in parenthesis.",
          "$ref": "#/definitions/positiveInt"
        },
        "_order": {
          "description": "Extensions for order",
          "$ref": "#/definitions/Element"
        },
        "network": {
          "description": "The insurer-specific identifier for the insurer-defined network of providers to which the beneficiary may seek treatment which will be covered at the \u0027in-network\u0027 rate, otherwise \u0027out of network\u0027 terms and conditions apply.",
          "$ref": "#/definitions/string"
        },
        "_network": {
          "description": "Extensions for network",
          "$ref": "#/definitions/Element"
        },
        "costToBeneficiary": {
          "description": "A suite of codes indicating the cost category and associated amount which have been detailed in the policy and may have been  included on the health card.",
          "items": {
            "$ref": "#/definitions/Coverage_CostToBeneficiary"
          },
          "type": "array"
        },
        "subrogation": {
          "description": "When \u0027subrogation\u003dtrue\u0027 this insurance instance has been included not for adjudication but to provide insurers with the details to recover costs.",
          "$ref": "#/definitions/boolean"
        },
        "_subrogation": {
          "description": "Extensions for subrogation",
          "$ref": "#/definitions/Element"
        },
        "contract": {
          "description": "The policy(s) which constitute this insurance coverage.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "insurancePlan": {
          "description": "The insurance plan details, benefits and costs, which constitute this insurance coverage.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "beneficiary",
        "resourceType"
      ]
    },
    "Coverage_PaymentBy": {
      "description": "Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "party": {
          "description": "The list of parties providing non-insurance payment for the treatment costs.",
          "$ref": "#/definitions/Reference"
        },
        "responsibility": {
          "description": " Description of the financial responsibility.",
          "$ref": "#/definitions/string"
        },
        "_responsibility": {
          "description": "Extensions for responsibility",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "party"
      ]
    },
    "Coverage_Class": {
      "description": "Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of classification for which an insurer-specific class label or number and optional name is provided.  For example, type may be used to identify a class of coverage or employer group, policy, or plan.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "value": {
          "description": "The alphanumeric identifier associated with the insurer issued label.",
          "$ref": "#/definitions/Identifier"
        },
        "name": {
          "description": "A short description for the class.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type",
        "value"
      ]
    },
    "Coverage_CostToBeneficiary": {
      "description": "Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The category of patient centric costs associated with treatment.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "category": {
          "description": "Code to identify the general type of benefits under which products and services are provided.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "network": {
          "description": "Is a flag to indicate whether the benefits refer to in-network providers or out-of-network providers.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "unit": {
          "description": "Indicates if the benefits apply to an individual or to the family.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "term": {
          "description": "The term or period of the values such as \u0027maximum lifetime benefit\u0027 or \u0027maximum annual visits\u0027.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": {
          "description": "The amount due from the patient for the cost category.",
          "$ref": "#/definitions/Quantity"
        },
        "valueMoney": {
          "description": "The amount due from the patient for the cost category.",
          "$ref": "#/definitions/Money"
        },
        "exception": {
          "description": "A suite of codes indicating exceptions or reductions to patient costs and their effective periods.",
          "items": {
            "$ref": "#/definitions/Coverage_Exception"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Coverage_Exception": {
      "description": "Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The code for the specific exception.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "period": {
          "description": "The timeframe the exception is in force.",
          "$ref": "#/definitions/Period"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "CoverageEligibilityRequest": {
      "description": "The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy.",
      "properties": {
        "resourceType": {
          "description": "This is a CoverageEligibilityRequest resource",
          "const": "CoverageEligibilityRequest"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "A unique identifier assigned to this coverage eligiblity request.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of the resource instance.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "priority": {
          "description": "When the requestor expects the processor to complete processing.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "purpose": {
          "description": "Code to specify whether requesting: prior authorization requirements for some service categories or billing codes; benefits for coverages specified or discovered; discovery and return of coverages for the patient; and/or validation that the specified coverage is in-force at the date/period specified or \u0027now\u0027 if not specified.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "patient": {
          "description": "The party who is the beneficiary of the supplied coverage and for whom eligibility is sought.",
          "$ref": "#/definitions/Reference"
        },
        "servicedDate": {
          "description": "The date or dates when the enclosed suite of services were performed or completed.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_servicedDate": {
          "description": "Extensions for servicedDate",
          "$ref": "#/definitions/Element"
        },
        "servicedPeriod": {
          "description": "The date or dates when the enclosed suite of services were performed or completed.",
          "$ref": "#/definitions/Period"
        },
        "created": {
          "description": "The date when this resource was created.",
          "$ref": "#/definitions/dateTime"
        },
        "_created": {
          "description": "Extensions for created",
          "$ref": "#/definitions/Element"
        },
        "enterer": {
          "description": "Person who created the request.",
          "$ref": "#/definitions/Reference"
        },
        "provider": {
          "description": "The provider which is responsible for the request.",
          "$ref": "#/definitions/Reference"
        },
        "insurer": {
          "description": "The Insurer who issued the coverage in question and is the recipient of the request.",
          "$ref": "#/definitions/Reference"
        },
        "facility": {
          "description": "Facility where the services are intended to be provided.",
          "$ref": "#/definitions/Reference"
        },
        "supportingInfo": {
          "description": "Additional information codes regarding exceptions, special considerations, the condition, situation, prior or concurrent issues.",
          "items": {
            "$ref": "#/definitions/CoverageEligibilityRequest_SupportingInfo"
          },
          "type": "array"
        },
        "insurance": {
          "description": "Financial instruments for reimbursement for the health care products and services.",
          "items": {
            "$ref": "#/definitions/CoverageEligibilityRequest_Insurance"
          },
          "type": "array"
        },
        "item": {
          "description": "Service categories or billable services for which benefit details and/or an authorization prior to service delivery may be required by the payor.",
          "items": {
            "$ref": "#/definitions/CoverageEligibilityRequest_Item"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "patient",
        "insurer",
        "resourceType"
      ]
    },
    "CoverageEligibilityRequest_SupportingInfo": {
      "description": "The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "sequence": {
          "description": "A number to uniquely identify supporting information entries.",
          "$ref": "#/definitions/positiveInt"
        },
        "_sequence": {
          "description": "Extensions for sequence",
          "$ref": "#/definitions/Element"
        },
        "information": {
          "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
          "$ref": "#/definitions/Reference"
        },
        "appliesToAll": {
          "description": "The supporting materials are applicable for all detail items, product/servce categories and specific billing codes.",
          "$ref": "#/definitions/boolean"
        },
        "_appliesToAll": {
          "description": "Extensions for appliesToAll",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "information"
      ]
    },
    "CoverageEligibilityRequest_Insurance": {
      "description": "The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "focal": {
          "description": "A flag to indicate that this Coverage is to be used for evaluation of this request when set to true.",
          "$ref": "#/definitions/boolean"
        },
        "_focal": {
          "description": "Extensions for focal",
          "$ref": "#/definitions/Element"
        },
        "coverage": {
          "description": "Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient\u0027s actual coverage within the insurer\u0027s information system.",
          "$ref": "#/definitions/Reference"
        },
        "businessArrangement": {
          "description": "A business agreement number established between the provider and the insurer for special business processing purposes.",
          "$ref": "#/definitions/string"
        },
        "_businessArrangement": {
          "description": "Extensions for businessArrangement",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "coverage"
      ]
    },
    "CoverageEligibilityRequest_Item": {
      "description": "The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "supportingInfoSequence": {
          "description": "Exceptions, special conditions and supporting information applicable for this service or product line.",
          "items": {
            "$ref": "#/definitions/positiveInt"
          },
          "type": "array"
        },
        "_supportingInfoSequence": {
          "description": "Extensions for supportingInfoSequence",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "category": {
          "description": "Code to identify the general type of benefits under which products and services are provided.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "productOrService": {
          "description": "This contains the product, service, drug or other billing code for the item.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifier": {
          "description": "Item typification or modifiers codes to convey additional context for the product or service.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "provider": {
          "description": "The practitioner who is responsible for the product or service to be rendered to the patient.",
          "$ref": "#/definitions/Reference"
        },
        "quantity": {
          "description": "The number of repetitions of a service or product.",
          "$ref": "#/definitions/Quantity"
        },
        "unitPrice": {
          "description": "The amount charged to the patient by the provider for a single unit.",
          "$ref": "#/definitions/Money"
        },
        "facility": {
          "description": "Facility where the services will be provided.",
          "$ref": "#/definitions/Reference"
        },
        "diagnosis": {
          "description": "Patient diagnosis for which care is sought.",
          "items": {
            "$ref": "#/definitions/CoverageEligibilityRequest_Diagnosis"
          },
          "type": "array"
        },
        "detail": {
          "description": "The plan/proposal/order describing the proposed service in detail.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "CoverageEligibilityRequest_Diagnosis": {
      "description": "The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "diagnosisCodeableConcept": {
          "description": "The nature of illness or problem in a coded form or as a reference to an external defined Condition.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "diagnosisReference": {
          "description": "The nature of illness or problem in a coded form or as a reference to an external defined Condition.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "CoverageEligibilityResponse": {
      "description": "This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource.",
      "properties": {
        "resourceType": {
          "description": "This is a CoverageEligibilityResponse resource",
          "const": "CoverageEligibilityResponse"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "A unique identifier assigned to this coverage eligiblity request.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of the resource instance.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "purpose": {
          "description": "Code to specify whether requesting: prior authorization requirements for some service categories or billing codes; benefits for coverages specified or discovered; discovery and return of coverages for the patient; and/or validation that the specified coverage is in-force at the date/period specified or \u0027now\u0027 if not specified.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "patient": {
          "description": "The party who is the beneficiary of the supplied coverage and for whom eligibility is sought.",
          "$ref": "#/definitions/Reference"
        },
        "servicedDate": {
          "description": "The date or dates when the enclosed suite of services were performed or completed.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_servicedDate": {
          "description": "Extensions for servicedDate",
          "$ref": "#/definitions/Element"
        },
        "servicedPeriod": {
          "description": "The date or dates when the enclosed suite of services were performed or completed.",
          "$ref": "#/definitions/Period"
        },
        "created": {
          "description": "The date this resource was created.",
          "$ref": "#/definitions/dateTime"
        },
        "_created": {
          "description": "Extensions for created",
          "$ref": "#/definitions/Element"
        },
        "requestor": {
          "description": "The provider which is responsible for the request.",
          "$ref": "#/definitions/Reference"
        },
        "request": {
          "description": "Reference to the original request resource.",
          "$ref": "#/definitions/Reference"
        },
        "outcome": {
          "description": "The outcome of the request processing.",
          "$ref": "#/definitions/code"
        },
        "_outcome": {
          "description": "Extensions for outcome",
          "$ref": "#/definitions/Element"
        },
        "disposition": {
          "description": "A human readable description of the status of the adjudication.",
          "$ref": "#/definitions/string"
        },
        "_disposition": {
          "description": "Extensions for disposition",
          "$ref": "#/definitions/Element"
        },
        "insurer": {
          "description": "The Insurer who issued the coverage in question and is the author of the response.",
          "$ref": "#/definitions/Reference"
        },
        "insurance": {
          "description": "Financial instruments for reimbursement for the health care products and services.",
          "items": {
            "$ref": "#/definitions/CoverageEligibilityResponse_Insurance"
          },
          "type": "array"
        },
        "preAuthRef": {
          "description": "A reference from the Insurer to which these services pertain to be used on further communication and as proof that the request occurred.",
          "$ref": "#/definitions/string"
        },
        "_preAuthRef": {
          "description": "Extensions for preAuthRef",
          "$ref": "#/definitions/Element"
        },
        "form": {
          "description": "A code for the form to be used for printing the content.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "error": {
          "description": "Errors encountered during the processing of the request.",
          "items": {
            "$ref": "#/definitions/CoverageEligibilityResponse_Error"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "request",
        "patient",
        "insurer",
        "resourceType"
      ]
    },
    "CoverageEligibilityResponse_Insurance": {
      "description": "This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "coverage": {
          "description": "Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient\u0027s actual coverage within the insurer\u0027s information system.",
          "$ref": "#/definitions/Reference"
        },
        "inforce": {
          "description": "Flag indicating if the coverage provided is inforce currently if no service date(s) specified or for the whole duration of the service dates.",
          "$ref": "#/definitions/boolean"
        },
        "_inforce": {
          "description": "Extensions for inforce",
          "$ref": "#/definitions/Element"
        },
        "benefitPeriod": {
          "description": "The term of the benefits documented in this response.",
          "$ref": "#/definitions/Period"
        },
        "item": {
          "description": "Benefits and optionally current balances, and authorization details by category or service.",
          "items": {
            "$ref": "#/definitions/CoverageEligibilityResponse_Item"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "coverage"
      ]
    },
    "CoverageEligibilityResponse_Item": {
      "description": "This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "category": {
          "description": "Code to identify the general type of benefits under which products and services are provided.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "productOrService": {
          "description": "This contains the product, service, drug or other billing code for the item.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifier": {
          "description": "Item typification or modifiers codes to convey additional context for the product or service.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "provider": {
          "description": "The practitioner who is eligible for the provision of the product or service.",
          "$ref": "#/definitions/Reference"
        },
        "excluded": {
          "description": "True if the indicated class of service is excluded from the plan, missing or False indicates the product or service is included in the coverage.",
          "$ref": "#/definitions/boolean"
        },
        "_excluded": {
          "description": "Extensions for excluded",
          "$ref": "#/definitions/Element"
        },
        "name": {
          "description": "A short name or tag for the benefit.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "A richer description of the benefit or services covered.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "network": {
          "description": "Is a flag to indicate whether the benefits refer to in-network providers or out-of-network providers.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "unit": {
          "description": "Indicates if the benefits apply to an individual or to the family.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "term": {
          "description": "The term or period of the values such as \u0027maximum lifetime benefit\u0027 or \u0027maximum annual visits\u0027.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "benefit": {
          "description": "Benefits used to date.",
          "items": {
            "$ref": "#/definitions/CoverageEligibilityResponse_Benefit"
          },
          "type": "array"
        },
        "authorizationRequired": {
          "description": "A boolean flag indicating whether a preauthorization is required prior to actual service delivery.",
          "$ref": "#/definitions/boolean"
        },
        "_authorizationRequired": {
          "description": "Extensions for authorizationRequired",
          "$ref": "#/definitions/Element"
        },
        "authorizationSupporting": {
          "description": "Codes or comments regarding information or actions associated with the preauthorization.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "authorizationUrl": {
          "description": "A web location for obtaining requirements or descriptive information regarding the preauthorization.",
          "$ref": "#/definitions/uri"
        },
        "_authorizationUrl": {
          "description": "Extensions for authorizationUrl",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "CoverageEligibilityResponse_Benefit": {
      "description": "This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Classification of benefit being provided.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "allowedUnsignedInt": {
          "description": "The quantity of the benefit which is permitted under the coverage.",
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_allowedUnsignedInt": {
          "description": "Extensions for allowedUnsignedInt",
          "$ref": "#/definitions/Element"
        },
        "allowedString": {
          "description": "The quantity of the benefit which is permitted under the coverage.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_allowedString": {
          "description": "Extensions for allowedString",
          "$ref": "#/definitions/Element"
        },
        "allowedMoney": {
          "description": "The quantity of the benefit which is permitted under the coverage.",
          "$ref": "#/definitions/Money"
        },
        "usedUnsignedInt": {
          "description": "The quantity of the benefit which have been consumed to date.",
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_usedUnsignedInt": {
          "description": "Extensions for usedUnsignedInt",
          "$ref": "#/definitions/Element"
        },
        "usedString": {
          "description": "The quantity of the benefit which have been consumed to date.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_usedString": {
          "description": "Extensions for usedString",
          "$ref": "#/definitions/Element"
        },
        "usedMoney": {
          "description": "The quantity of the benefit which have been consumed to date.",
          "$ref": "#/definitions/Money"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "CoverageEligibilityResponse_Error": {
      "description": "This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "An error code,from a specified code system, which details why the eligibility check could not be performed.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "DetectedIssue": {
      "description": "Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, Ineffective treatment frequency, Procedure-condition conflict, etc.",
      "properties": {
        "resourceType": {
          "description": "This is a DetectedIssue resource",
          "const": "DetectedIssue"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Business identifier associated with the detected issue record.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "Indicates the status of the detected issue.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "category": {
          "description": "A code that classifies the general type of detected issue.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "code": {
          "description": "Identifies the specific type of issue identified.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "severity": {
          "description": "Indicates the degree of importance associated with the identified issue based on the potential impact on the patient.",
          "$ref": "#/definitions/code"
        },
        "_severity": {
          "description": "Extensions for severity",
          "$ref": "#/definitions/Element"
        },
        "subject": {
          "description": "Indicates the subject whose record the detected issue is associated with.",
          "$ref": "#/definitions/Reference"
        },
        "identifiedDateTime": {
          "description": "The date or period when the detected issue was initially identified.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_identifiedDateTime": {
          "description": "Extensions for identifiedDateTime",
          "$ref": "#/definitions/Element"
        },
        "identifiedPeriod": {
          "description": "The date or period when the detected issue was initially identified.",
          "$ref": "#/definitions/Period"
        },
        "author": {
          "description": "Individual or device responsible for the issue being raised.  For example, a decision support application or a pharmacist conducting a medication review.",
          "$ref": "#/definitions/Reference"
        },
        "implicated": {
          "description": "Indicates the resource representing the current activity or proposed activity that is potentially problematic.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "evidence": {
          "description": "Supporting evidence or manifestations that provide the basis for identifying the detected issue such as a GuidanceResponse or MeasureReport.",
          "items": {
            "$ref": "#/definitions/DetectedIssue_Evidence"
          },
          "type": "array"
        },
        "detail": {
          "description": "A textual explanation of the detected issue.",
          "$ref": "#/definitions/string"
        },
        "_detail": {
          "description": "Extensions for detail",
          "$ref": "#/definitions/Element"
        },
        "reference": {
          "description": "The literature, knowledge-base or similar reference that describes the propensity for the detected issue identified.",
          "$ref": "#/definitions/uri"
        },
        "_reference": {
          "description": "Extensions for reference",
          "$ref": "#/definitions/Element"
        },
        "mitigation": {
          "description": "Indicates an action that has been taken or is committed to reduce or eliminate the likelihood of the risk identified by the detected issue from manifesting.  Can also reflect an observation of known mitigating factors that may reduce/eliminate the need for any action.",
          "items": {
            "$ref": "#/definitions/DetectedIssue_Mitigation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "DetectedIssue_Evidence": {
      "description": "Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, Ineffective treatment frequency, Procedure-condition conflict, etc.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "A manifestation that led to the recording of this detected issue.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "detail": {
          "description": "Links to resources that constitute evidence for the detected issue such as a GuidanceResponse or MeasureReport.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "DetectedIssue_Mitigation": {
      "description": "Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, Ineffective treatment frequency, Procedure-condition conflict, etc.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "action": {
          "description": "Describes the action that was taken or the observation that was made that reduces/eliminates the risk associated with the identified issue.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "date": {
          "description": "Indicates when the mitigating action was documented.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "author": {
          "description": "Identifies the practitioner who determined the mitigation and takes responsibility for the mitigation step occurring.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "action"
      ]
    },
    "Device": {
      "description": "A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.",
      "properties": {
        "resourceType": {
          "description": "This is a Device resource",
          "const": "Device"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Unique instance identifiers assigned to a device by manufacturers other organizations or owners.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "displayName": {
          "description": "The name used to display by default when the device is referenced. Based on intent of use by the resource creator, this may reflect one of the names in Device.deviceName, or may be another simple name.",
          "$ref": "#/definitions/string"
        },
        "_displayName": {
          "description": "Extensions for displayName",
          "$ref": "#/definitions/Element"
        },
        "definition": {
          "description": "The reference to the definition for the device.",
          "$ref": "#/definitions/CodeableReference"
        },
        "udiCarrier": {
          "description": "Unique device identifier (UDI) assigned to device label or package.  Note that the Device may include multiple udiCarriers as it either may include just the udiCarrier for the jurisdiction it is sold, or for multiple jurisdictions it could have been sold.",
          "items": {
            "$ref": "#/definitions/Device_UdiCarrier"
          },
          "type": "array"
        },
        "status": {
          "description": "The Device record status. This is not the status of the device like availability.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "availabilityStatus": {
          "description": "The availability of the device.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "biologicalSourceEvent": {
          "description": "An identifier that supports traceability to the event during which material in this product from one or more biological entities was obtained or pooled.",
          "$ref": "#/definitions/Identifier"
        },
        "manufacturer": {
          "description": "A name of the manufacturer or entity legally responsible for the device.",
          "$ref": "#/definitions/string"
        },
        "_manufacturer": {
          "description": "Extensions for manufacturer",
          "$ref": "#/definitions/Element"
        },
        "manufactureDate": {
          "description": "The date and time when the device was manufactured.",
          "$ref": "#/definitions/dateTime"
        },
        "_manufactureDate": {
          "description": "Extensions for manufactureDate",
          "$ref": "#/definitions/Element"
        },
        "expirationDate": {
          "description": "The date and time beyond which this device is no longer valid or should not be used (if applicable).",
          "$ref": "#/definitions/dateTime"
        },
        "_expirationDate": {
          "description": "Extensions for expirationDate",
          "$ref": "#/definitions/Element"
        },
        "lotNumber": {
          "description": "Lot number assigned by the manufacturer.",
          "$ref": "#/definitions/string"
        },
        "_lotNumber": {
          "description": "Extensions for lotNumber",
          "$ref": "#/definitions/Element"
        },
        "serialNumber": {
          "description": "The serial number assigned by the organization when the device was manufactured.",
          "$ref": "#/definitions/string"
        },
        "_serialNumber": {
          "description": "Extensions for serialNumber",
          "$ref": "#/definitions/Element"
        },
        "deviceName": {
          "description": "This represents the manufacturer\u0027s name of the device as provided by the device, from a UDI label, or by a person describing the Device.  This typically would be used when a person provides the name(s) or when the device represents one of the names available from DeviceDefinition.",
          "items": {
            "$ref": "#/definitions/Device_DeviceName"
          },
          "type": "array"
        },
        "modelNumber": {
          "description": "The manufacturer\u0027s model number for the device.",
          "$ref": "#/definitions/string"
        },
        "_modelNumber": {
          "description": "Extensions for modelNumber",
          "$ref": "#/definitions/Element"
        },
        "partNumber": {
          "description": "The part number or catalog number of the device.",
          "$ref": "#/definitions/string"
        },
        "_partNumber": {
          "description": "Extensions for partNumber",
          "$ref": "#/definitions/Element"
        },
        "category": {
          "description": "Devices may be associated with one or more categories.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "type": {
          "description": "The kind or type of device. A device instance may have more than one type - in which case those are the types that apply to the specific instance of the device.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "version": {
          "description": "The actual design of the device or software version running on the device.",
          "items": {
            "$ref": "#/definitions/Device_Version"
          },
          "type": "array"
        },
        "specialization": {
          "description": "The standards to which the device adheres and may be certified to in support of its capabilities, e.g., communication, performance, process, or measurement standards.",
          "items": {
            "$ref": "#/definitions/Device_Specialization"
          },
          "type": "array"
        },
        "property": {
          "description": "Characteristics or features of the device that are otherwise not captured in available attributes, e.g., actual configuration settings, time or timing attributes, resolution, accuracy, and physical attributes.  The focus is on properties of the device actually in use while DeviceDefinition focuses on properties that are available to be used.",
          "items": {
            "$ref": "#/definitions/Device_Property"
          },
          "type": "array"
        },
        "operation": {
          "description": "The status of the device itself - whether it is switched on, or activated, etc.",
          "items": {
            "$ref": "#/definitions/Device_Operation"
          },
          "type": "array"
        },
        "association": {
          "description": "The details about the device when it is affixed or inside of a patient.",
          "items": {
            "$ref": "#/definitions/Device_Association"
          },
          "type": "array"
        },
        "owner": {
          "description": "An organization that is responsible for the provision and ongoing maintenance of the device.",
          "$ref": "#/definitions/Reference"
        },
        "contact": {
          "description": "Contact details for an organization or a particular human that is responsible for the device.",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          },
          "type": "array"
        },
        "location": {
          "description": "The place where the device can be found.",
          "$ref": "#/definitions/Reference"
        },
        "url": {
          "description": "A network address on which the device may be contacted directly.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "endpoint": {
          "description": "Technical endpoints providing access to services provided by the device defined at this resource.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "gateway": {
          "description": "The linked device acting as a communication/data collector, translator or controller for the current device (e.g., mobile phone application that relays a blood pressure device\u0027s data).",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "note": {
          "description": "Descriptive information, usage information or implantation information that is not captured in an existing element.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "safety": {
          "description": "Provides additional safety characteristics about a medical device.  For example devices containing latex.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "parent": {
          "description": "The higher level or encompassing device that this device is a logical part of.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Device_UdiCarrier": {
      "description": "A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "deviceIdentifier": {
          "description": "The device identifier (DI) is a mandatory, fixed portion of a UDI that identifies the labeler and the specific version or model of a device.",
          "$ref": "#/definitions/string"
        },
        "_deviceIdentifier": {
          "description": "Extensions for deviceIdentifier",
          "$ref": "#/definitions/Element"
        },
        "issuer": {
          "description": "Organization that is charged with issuing UDIs for devices. For example, the US FDA issuers include: \n1) GS1: http://hl7.org/fhir/NamingSystem/gs1-di, \n2) HIBCC: http://hl7.org/fhir/NamingSystem/hibcc-diI, \n3) ICCBBA for blood containers: http://hl7.org/fhir/NamingSystem/iccbba-blood-di, \n4) ICCBA for other devices: http://hl7.org/fhir/NamingSystem/iccbba-other-di # Informationsstelle für Arzneispezialitäten (IFA GmbH) (EU only): http://hl7.org/fhir/NamingSystem/ifa-gmbh-di.",
          "$ref": "#/definitions/uri"
        },
        "_issuer": {
          "description": "Extensions for issuer",
          "$ref": "#/definitions/Element"
        },
        "jurisdiction": {
          "description": "The identity of the authoritative source for UDI generation within a jurisdiction. All UDIs are globally unique within a single namespace with the appropriate repository uri as the system. For example, UDIs of devices managed in the U.S. by the FDA, the value is http://hl7.org/fhir/NamingSystem/us-fda-udi or in the European Union by the European Commission http://hl7.org/fhir/NamingSystem/eu-ec-udi.",
          "$ref": "#/definitions/uri"
        },
        "_jurisdiction": {
          "description": "Extensions for jurisdiction",
          "$ref": "#/definitions/Element"
        },
        "carrierAIDC": {
          "description": "The full UDI carrier of the Automatic Identification and Data Capture (AIDC) technology representation of the barcode string as printed on the packaging of the device - e.g., a barcode or RFID.   Because of limitations on character sets in XML and the need to round-trip JSON data through XML, AIDC Formats *SHALL* be base64 encoded.",
          "$ref": "#/definitions/base64Binary"
        },
        "_carrierAIDC": {
          "description": "Extensions for carrierAIDC",
          "$ref": "#/definitions/Element"
        },
        "carrierHRF": {
          "description": "The full UDI carrier as the human readable form (HRF) representation of the barcode string as printed on the packaging of the device.",
          "$ref": "#/definitions/string"
        },
        "_carrierHRF": {
          "description": "Extensions for carrierHRF",
          "$ref": "#/definitions/Element"
        },
        "entryType": {
          "description": "A coded entry to indicate how the data was entered.",
          "$ref": "#/definitions/code"
        },
        "_entryType": {
          "description": "Extensions for entryType",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Device_DeviceName": {
      "description": "A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "The name that identifies the device.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "The type of deviceName. Note that ManufactureDeviceName means that the name is the name as given by the manufacturer, not the name of the manufacturer.\nRegisteredName | UserFriendlyName | PatientReportedName.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Device_Version": {
      "description": "A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of the device version, e.g. manufacturer, approved, internal.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "component": {
          "description": "The hardware or software module of the device to which the version applies.",
          "$ref": "#/definitions/Identifier"
        },
        "installDate": {
          "description": "The date the version was installed on the device.",
          "$ref": "#/definitions/dateTime"
        },
        "_installDate": {
          "description": "Extensions for installDate",
          "$ref": "#/definitions/Element"
        },
        "value": {
          "description": "The version text.",
          "$ref": "#/definitions/string"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Device_Specialization": {
      "description": "A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "systemType": {
          "description": "Code that specifies the system that identifies the specific standard that the device adheres to.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "version": {
          "description": "The version of the standard that is used to operate and communicate.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "category": {
          "description": "Kind of standards that the device adheres to, e.g., communication, performance or communication.",
          "$ref": "#/definitions/Coding"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "systemType"
      ]
    },
    "Device_Property": {
      "description": "A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Code that specifies the property being represented. No codes are specified but the MDC codes are an example: https://terminology.hl7.org/MDC.html.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": {
          "description": "Property value - can be a code, quantity, boolean, string or attachment.",
          "$ref": "#/definitions/Quantity"
        },
        "valueCodeableConcept": {
          "description": "Property value - can be a code, quantity, boolean, string or attachment.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueString": {
          "description": "Property value - can be a code, quantity, boolean, string or attachment.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "description": "Property value - can be a code, quantity, boolean, string or attachment.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "description": "Property value - can be a code, quantity, boolean, string or attachment.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": {
          "description": "Extensions for valueInteger",
          "$ref": "#/definitions/Element"
        },
        "valueRange": {
          "description": "Property value - can be a code, quantity, boolean, string or attachment.",
          "$ref": "#/definitions/Range"
        },
        "valueAttachment": {
          "description": "Property value - can be a code, quantity, boolean, string or attachment.",
          "$ref": "#/definitions/Attachment"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "Device_Operation": {
      "description": "A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "status": {
          "description": "The state or condition of the device\u0027s operation.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "statusReason": {
          "description": "The reasons given for the current operational status - i.e. why is the device switched on etc.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "operator": {
          "description": "The individual performing the action enabled by the device.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "mode": {
          "description": "The designated condition for performing a task with the device.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "cycle": {
          "description": "The series of occurrences that repeats during the operation of the device.",
          "$ref": "#/definitions/Count"
        },
        "duration": {
          "description": "A measurement of time during the device\u0027s operation (e.g., days, hours, mins, etc).",
          "$ref": "#/definitions/Duration"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "status"
      ]
    },
    "Device_Association": {
      "description": "A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "status": {
          "description": "The state of the usage or application of the device.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "statusReason": {
          "description": "The reasons given for the current association status - i.e. why is the device explanted, or attached to the patient, etc.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "humanSubject": {
          "description": "The individual to whom the device is affixed or inserted in their body.",
          "$ref": "#/definitions/Reference"
        },
        "bodyStructure": {
          "description": "The current anatomical location of the device in/on the humanSubject where it is attached or placed.",
          "$ref": "#/definitions/CodeableReference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "status"
      ]
    },
    "DeviceDefinition": {
      "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.",
      "properties": {
        "resourceType": {
          "description": "This is a DeviceDefinition resource",
          "const": "DeviceDefinition"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "description": {
          "description": "Additional information to describe the device.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "Unique instance identifiers assigned to a device by the software, manufacturers, other organizations or owners. For example: handle ID. The identifier is typically valued if the udiDeviceIdentifier, partNumber or modelNumber is not valued and represents a different type of identifier.  However, it is permissible to still include those identifiers in DeviceDefinition.identifier with the appropriate identifier.type.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "udiDeviceIdentifier": {
          "description": "Unique device identifier (UDI) assigned to device label or package.  Note that the Device may include multiple udiCarriers as it either may include just the udiCarrier for the jurisdiction it is sold, or for multiple jurisdictions it could have been sold.",
          "items": {
            "$ref": "#/definitions/DeviceDefinition_UdiDeviceIdentifier"
          },
          "type": "array"
        },
        "regulatoryIdentifier": {
          "description": "Identifier associated with the regulatory documentation (certificates, technical documentation, post-market surveillance documentation and reports) of a set of device models sharing the same intended purpose, risk class and essential design and manufacturing characteristics. One example is the Basic UDI-DI in Europe.",
          "items": {
            "$ref": "#/definitions/DeviceDefinition_RegulatoryIdentifier"
          },
          "type": "array"
        },
        "partNumber": {
          "description": "The part number or catalog number of the device.",
          "$ref": "#/definitions/string"
        },
        "_partNumber": {
          "description": "Extensions for partNumber",
          "$ref": "#/definitions/Element"
        },
        "manufacturer": {
          "description": "A name of the manufacturer  or legal representative e.g. labeler. Whether this is the actual manufacturer or the labeler or responsible depends on implementation and jurisdiction.",
          "$ref": "#/definitions/Reference"
        },
        "deviceName": {
          "description": "The name or names of the device as given by the manufacturer.",
          "items": {
            "$ref": "#/definitions/DeviceDefinition_DeviceName"
          },
          "type": "array"
        },
        "modelNumber": {
          "description": "The model number for the device for example as defined by the manufacturer or labeler, or other agency.",
          "$ref": "#/definitions/string"
        },
        "_modelNumber": {
          "description": "Extensions for modelNumber",
          "$ref": "#/definitions/Element"
        },
        "classification": {
          "description": "What kind of device or device system this is.",
          "items": {
            "$ref": "#/definitions/DeviceDefinition_Classification"
          },
          "type": "array"
        },
        "specialization": {
          "description": "The capabilities supported on a  device, the standards to which the device conforms for a particular purpose, and used for the communication.",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          },
          "type": "array"
        },
        "hasPart": {
          "description": "A device that is part (for example a component) of the present device.",
          "items": {
            "$ref": "#/definitions/DeviceDefinition_HasPart"
          },
          "type": "array"
        },
        "packaging": {
          "description": "Information about the packaging of the device, i.e. how the device is packaged.",
          "items": {
            "$ref": "#/definitions/DeviceDefinition_Packaging"
          },
          "type": "array"
        },
        "version": {
          "description": "The version of the device or software.",
          "items": {
            "$ref": "#/definitions/DeviceDefinition_Version"
          },
          "type": "array"
        },
        "safety": {
          "description": "Safety characteristics of the device.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "shelfLifeStorage": {
          "description": "Shelf Life and storage information.",
          "items": {
            "$ref": "#/definitions/ProductShelfLife"
          },
          "type": "array"
        },
        "languageCode": {
          "description": "Language code for the human-readable text strings produced by the device (all supported).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "property": {
          "description": "The potential, valid configuration settings of a device, e.g., regulation status, time properties.",
          "items": {
            "$ref": "#/definitions/DeviceDefinition_Property"
          },
          "type": "array"
        },
        "owner": {
          "description": "An organization that is responsible for the provision and ongoing maintenance of the device.",
          "$ref": "#/definitions/Reference"
        },
        "contact": {
          "description": "Contact details for an organization or a particular human that is responsible for the device.",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          },
          "type": "array"
        },
        "link": {
          "description": "An associated device, attached to, used with, communicating with or linking a previous or new device model to the focal device.",
          "items": {
            "$ref": "#/definitions/DeviceDefinition_Link"
          },
          "type": "array"
        },
        "note": {
          "description": "Descriptive information, usage information or implantation information that is not captured in an existing element.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "parentDevice": {
          "description": "The parent device it can be part of.",
          "$ref": "#/definitions/Reference"
        },
        "material": {
          "description": "A substance used to create the material(s) of which the device is made.",
          "items": {
            "$ref": "#/definitions/DeviceDefinition_Material"
          },
          "type": "array"
        },
        "productionIdentifierInUDI": {
          "description": "Indicates the production identifier(s) that are expected to appear in the UDI carrier on the device label.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_productionIdentifierInUDI": {
          "description": "Extensions for productionIdentifierInUDI",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "guideline": {
          "description": "Information aimed at providing directions for the usage of this model of device.",
          "$ref": "#/definitions/DeviceDefinition_Guideline"
        },
        "correctiveAction": {
          "description": "Tracking of latest field safety corrective action.",
          "$ref": "#/definitions/DeviceDefinition_CorrectiveAction"
        },
        "chargeItem": {
          "description": "Billing code or reference associated with the device.",
          "items": {
            "$ref": "#/definitions/DeviceDefinition_ChargeItem"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "DeviceDefinition_UdiDeviceIdentifier": {
      "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "deviceIdentifier": {
          "description": "The identifier that is to be associated with every Device that references this DeviceDefintiion for the issuer and jurisdiction provided in the DeviceDefinition.udiDeviceIdentifier.",
          "$ref": "#/definitions/string"
        },
        "_deviceIdentifier": {
          "description": "Extensions for deviceIdentifier",
          "$ref": "#/definitions/Element"
        },
        "issuer": {
          "description": "The organization that assigns the identifier algorithm.",
          "$ref": "#/definitions/uri"
        },
        "_issuer": {
          "description": "Extensions for issuer",
          "$ref": "#/definitions/Element"
        },
        "jurisdiction": {
          "description": "The jurisdiction to which the deviceIdentifier applies.",
          "$ref": "#/definitions/uri"
        },
        "_jurisdiction": {
          "description": "Extensions for jurisdiction",
          "$ref": "#/definitions/Element"
        },
        "marketDistribution": {
          "description": "Indicates where and when the device is available on the market.",
          "items": {
            "$ref": "#/definitions/DeviceDefinition_MarketDistribution"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "DeviceDefinition_MarketDistribution": {
      "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "marketPeriod": {
          "description": "Begin and end dates for the commercial distribution of the device.",
          "$ref": "#/definitions/Period"
        },
        "subJurisdiction": {
          "description": "National state or territory to which the marketDistribution recers, typically where the device is commercialized.",
          "$ref": "#/definitions/uri"
        },
        "_subJurisdiction": {
          "description": "Extensions for subJurisdiction",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "marketPeriod"
      ]
    },
    "DeviceDefinition_RegulatoryIdentifier": {
      "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of identifier itself.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "deviceIdentifier": {
          "description": "The identifier itself.",
          "$ref": "#/definitions/string"
        },
        "_deviceIdentifier": {
          "description": "Extensions for deviceIdentifier",
          "$ref": "#/definitions/Element"
        },
        "issuer": {
          "description": "The organization that issued this identifier.",
          "$ref": "#/definitions/uri"
        },
        "_issuer": {
          "description": "Extensions for issuer",
          "$ref": "#/definitions/Element"
        },
        "jurisdiction": {
          "description": "The jurisdiction to which the deviceIdentifier applies.",
          "$ref": "#/definitions/uri"
        },
        "_jurisdiction": {
          "description": "Extensions for jurisdiction",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "DeviceDefinition_DeviceName": {
      "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "A human-friendly name that is used to refer to the device - depending on the type, it can be the brand name, the common name or alias, or other.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "The type of deviceName.\nRegisteredName | UserFriendlyName | PatientReportedName.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "DeviceDefinition_Classification": {
      "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "A classification or risk class of the device model.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "justification": {
          "description": "Further information qualifying this classification of the device model.",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "DeviceDefinition_HasPart": {
      "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "reference": {
          "description": "Reference to the device that is part of the current device.",
          "$ref": "#/definitions/Reference"
        },
        "count": {
          "description": "Number of instances of the component device in the current device.",
          "$ref": "#/definitions/integer"
        },
        "_count": {
          "description": "Extensions for count",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "reference"
      ]
    },
    "DeviceDefinition_Packaging": {
      "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "The business identifier of the packaged medication.",
          "$ref": "#/definitions/Identifier"
        },
        "type": {
          "description": "A code that defines the specific type of packaging.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "count": {
          "description": "The number of items contained in the package (devices or sub-packages).",
          "$ref": "#/definitions/integer"
        },
        "_count": {
          "description": "Extensions for count",
          "$ref": "#/definitions/Element"
        },
        "distributor": {
          "description": "An organization that distributes the packaged device.",
          "items": {
            "$ref": "#/definitions/DeviceDefinition_Distributor"
          },
          "type": "array"
        },
        "udiDeviceIdentifier": {
          "description": "Unique Device Identifier (UDI) Barcode string on the packaging.",
          "items": {
            "$ref": "#/definitions/DeviceDefinition_UdiDeviceIdentifier"
          },
          "type": "array"
        },
        "packaging": {
          "description": "Allows packages within packages.",
          "items": {
            "$ref": "#/definitions/DeviceDefinition_Packaging"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "DeviceDefinition_Distributor": {
      "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "Distributor\u0027s human-readable name.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "organizationReference": {
          "description": "Distributor as an Organization resource.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "DeviceDefinition_Version": {
      "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of the device version, e.g. manufacturer, approved, internal.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "component": {
          "description": "The hardware or software module of the device to which the version applies.",
          "$ref": "#/definitions/Identifier"
        },
        "value": {
          "description": "The version text.",
          "$ref": "#/definitions/string"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "DeviceDefinition_Property": {
      "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Code that specifies the property.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": {
          "description": "Property value - the data type depends on the property type.",
          "$ref": "#/definitions/Quantity"
        },
        "valueCodeableConcept": {
          "description": "Property value - the data type depends on the property type.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueString": {
          "description": "Property value - the data type depends on the property type.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "description": "Property value - the data type depends on the property type.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "description": "Property value - the data type depends on the property type.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": {
          "description": "Extensions for valueInteger",
          "$ref": "#/definitions/Element"
        },
        "valueRange": {
          "description": "Property value - the data type depends on the property type.",
          "$ref": "#/definitions/Range"
        },
        "valueAttachment": {
          "description": "Property value - the data type depends on the property type.",
          "$ref": "#/definitions/Attachment"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "DeviceDefinition_Link": {
      "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "relation": {
          "description": "The type indicates the relationship of the related device to the device instance.",
          "$ref": "#/definitions/Coding"
        },
        "relatedDevice": {
          "description": "A reference to the linked device.",
          "$ref": "#/definitions/CodeableReference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "relatedDevice",
        "relation"
      ]
    },
    "DeviceDefinition_Material": {
      "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "substance": {
          "description": "A substance that the device contains, may contain, or is made of - for example latex - to be used to determine patient compatibility. This is not intended to represent the composition of the device, only the clinically relevant materials.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "alternate": {
          "description": "Indicates an alternative material of the device.",
          "$ref": "#/definitions/boolean"
        },
        "_alternate": {
          "description": "Extensions for alternate",
          "$ref": "#/definitions/Element"
        },
        "allergenicIndicator": {
          "description": "Whether the substance is a known or suspected allergen.",
          "$ref": "#/definitions/boolean"
        },
        "_allergenicIndicator": {
          "description": "Extensions for allergenicIndicator",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "substance"
      ]
    },
    "DeviceDefinition_Guideline": {
      "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "useContext": {
          "description": "The circumstances that form the setting for using the device.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "usageInstruction": {
          "description": "Detailed written and visual directions for the user on how to use the device.",
          "$ref": "#/definitions/markdown"
        },
        "_usageInstruction": {
          "description": "Extensions for usageInstruction",
          "$ref": "#/definitions/Element"
        },
        "relatedArtifact": {
          "description": "A source of information or reference for this guideline.",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          },
          "type": "array"
        },
        "indication": {
          "description": "A clinical condition for which the device was designed to be used.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "contraindication": {
          "description": "A specific situation when a device should not be used because it may cause harm.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "warning": {
          "description": "Specific hazard alert information that a user needs to know before using the device.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "intendedUse": {
          "description": "A description of the general purpose or medical use of the device or its function.",
          "$ref": "#/definitions/string"
        },
        "_intendedUse": {
          "description": "Extensions for intendedUse",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "DeviceDefinition_CorrectiveAction": {
      "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "recall": {
          "description": "Whether the last corrective action known for this device was a recall.",
          "$ref": "#/definitions/boolean"
        },
        "_recall": {
          "description": "Extensions for recall",
          "$ref": "#/definitions/Element"
        },
        "scope": {
          "description": "The scope of the corrective action - whether the action targeted all units of a given device model, or only a specific set of batches identified by lot numbers, or individually identified devices identified by the serial name.",
          "$ref": "#/definitions/code"
        },
        "_scope": {
          "description": "Extensions for scope",
          "$ref": "#/definitions/Element"
        },
        "period": {
          "description": "Start and end dates of the  corrective action.",
          "$ref": "#/definitions/Period"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "period"
      ]
    },
    "DeviceDefinition_ChargeItem": {
      "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "chargeItemCode": {
          "description": "The code or reference for the charge item.",
          "$ref": "#/definitions/CodeableReference"
        },
        "count": {
          "description": "Coefficient applicable to the billing code.",
          "$ref": "#/definitions/Quantity"
        },
        "effectivePeriod": {
          "description": "A specific time period in which this charge item applies.",
          "$ref": "#/definitions/Period"
        },
        "useContext": {
          "description": "The context to which this charge item applies.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "chargeItemCode",
        "count"
      ]
    },
    "DeviceDispense": {
      "description": "A record of dispensation of a device.",
      "properties": {
        "resourceType": {
          "description": "This is a DeviceDispense resource",
          "const": "DeviceDispense"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Business identifier for this dispensation.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "basedOn": {
          "description": "The order or request that this dispense is fulfilling.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "partOf": {
          "description": "The bigger event that this dispense is a part of.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "status": {
          "description": "A code specifying the state of the set of dispense events.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "statusReason": {
          "description": "Indicates the reason why a dispense was or was not performed.",
          "$ref": "#/definitions/CodeableReference"
        },
        "category": {
          "description": "Indicates the type of device dispense.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "device": {
          "description": "Identifies the device being dispensed. This is either a link to a resource representing the details of the device or a simple attribute carrying a code that identifies the device from a known list of devices.",
          "$ref": "#/definitions/CodeableReference"
        },
        "subject": {
          "description": "A link to a resource representing the person to whom the device is intended.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "The encounter that establishes the context for this event.",
          "$ref": "#/definitions/Reference"
        },
        "supportingInformation": {
          "description": "Additional information that supports the device being dispensed.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "performer": {
          "description": "Indicates who or what performed the event.",
          "items": {
            "$ref": "#/definitions/DeviceDispense_Performer"
          },
          "type": "array"
        },
        "location": {
          "description": "The principal physical location where the dispense was performed.",
          "$ref": "#/definitions/Reference"
        },
        "type": {
          "description": "Indicates the type of dispensing event that is performed.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "quantity": {
          "description": "The number of devices that have been dispensed.",
          "$ref": "#/definitions/Quantity"
        },
        "preparedDate": {
          "description": "The time when the dispensed product was packaged and reviewed.",
          "$ref": "#/definitions/dateTime"
        },
        "_preparedDate": {
          "description": "Extensions for preparedDate",
          "$ref": "#/definitions/Element"
        },
        "whenHandedOver": {
          "description": "The time the dispensed product was made available to the patient or their representative.",
          "$ref": "#/definitions/dateTime"
        },
        "_whenHandedOver": {
          "description": "Extensions for whenHandedOver",
          "$ref": "#/definitions/Element"
        },
        "destination": {
          "description": "Identification of the facility/location where the device was /should be shipped to, as part of the dispense process.",
          "$ref": "#/definitions/Reference"
        },
        "note": {
          "description": "Extra information about the dispense that could not be conveyed in the other attributes.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "usageInstruction": {
          "description": "The full representation of the instructions.",
          "$ref": "#/definitions/string"
        },
        "_usageInstruction": {
          "description": "Extensions for usageInstruction",
          "$ref": "#/definitions/Element"
        },
        "eventHistory": {
          "description": "A summary of the events of interest that have occurred, such as when the dispense was verified.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "subject",
        "device",
        "resourceType"
      ]
    },
    "DeviceDispense_Performer": {
      "description": "A record of dispensation of a device.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "function": {
          "description": "Distinguishes the type of performer in the dispense.  For example, date enterer, packager, final checker.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "actor": {
          "description": "The device, practitioner, etc. who performed the action.  It should be assumed that the actor is the dispenser of the device.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "actor"
      ]
    },
    "DeviceMetric": {
      "description": "Describes a measurement, calculation or setting capability of a medical device.",
      "properties": {
        "resourceType": {
          "description": "This is a DeviceMetric resource",
          "const": "DeviceMetric"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Unique instance identifiers assigned to a device by the device or gateway software, manufacturers, other organizations or owners. For example: handle ID.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "type": {
          "description": "Describes the type of the metric. For example: Heart Rate, PEEP Setting, etc.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "unit": {
          "description": "Describes the unit that an observed value determined for this metric will have. For example: Percent, Seconds, etc.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "source": {
          "description": "Describes the link to the  Device that this DeviceMetric belongs to and that contains administrative device information such as manufacturer, serial number, etc.",
          "$ref": "#/definitions/Reference"
        },
        "parent": {
          "description": "Describes the link to the  Device that this DeviceMetric belongs to and that provide information about the location of this DeviceMetric in the containment structure of the parent Device. An example would be a Device that represents a Channel. This reference can be used by a client application to distinguish DeviceMetrics that have the same type, but should be interpreted based on their containment location.",
          "$ref": "#/definitions/Reference"
        },
        "operationalStatus": {
          "description": "Indicates current operational state of the device. For example: On, Off, Standby, etc.",
          "$ref": "#/definitions/code"
        },
        "_operationalStatus": {
          "description": "Extensions for operationalStatus",
          "$ref": "#/definitions/Element"
        },
        "color": {
          "description": "Describes the color representation for the metric. This is often used to aid clinicians to track and identify parameter types by color. In practice, consider a Patient Monitor that has ECG/HR and Pleth for example; the parameters are displayed in different characteristic colors, such as HR-blue, BP-green, and PR and SpO2- magenta.",
          "$ref": "#/definitions/code"
        },
        "_color": {
          "description": "Extensions for color",
          "$ref": "#/definitions/Element"
        },
        "category": {
          "description": "Indicates the category of the observation generation process. A DeviceMetric can be for example a setting, measurement, or calculation.",
          "$ref": "#/definitions/code"
        },
        "_category": {
          "description": "Extensions for category",
          "$ref": "#/definitions/Element"
        },
        "measurementPeriod": {
          "description": "Describes the measurement repetition time. This is not necessarily the same as the update period. The measurement repetition time can range from milliseconds up to hours. An example for a measurement repetition time in the range of milliseconds is the sampling rate of an ECG. An example for a measurement repetition time in the range of hours is a NIBP that is triggered automatically every hour. The update period may be different than the measurement repetition time, if the device does not update the published observed value with the same frequency as it was measured.",
          "$ref": "#/definitions/Timing"
        },
        "calibration": {
          "description": "Describes the calibrations that have been performed or that are required to be performed.",
          "items": {
            "$ref": "#/definitions/DeviceMetric_Calibration"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type",
        "resourceType"
      ]
    },
    "DeviceMetric_Calibration": {
      "description": "Describes a measurement, calculation or setting capability of a medical device.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Describes the type of the calibration method.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "state": {
          "description": "Describes the state of the calibration.",
          "$ref": "#/definitions/code"
        },
        "_state": {
          "description": "Extensions for state",
          "$ref": "#/definitions/Element"
        },
        "time": {
          "description": "Describes the time last calibration has been performed.",
          "$ref": "#/definitions/instant"
        },
        "_time": {
          "description": "Extensions for time",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "DeviceRequest": {
      "description": "Represents a request for a patient to employ a medical device. The device may be an implantable device, or an external assistive device, such as a walker.",
      "properties": {
        "resourceType": {
          "description": "This is a DeviceRequest resource",
          "const": "DeviceRequest"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifiers assigned to this order by the orderer or by the receiver.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "instantiatesCanonical": {
          "description": "The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this DeviceRequest.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "instantiatesUri": {
          "description": "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this DeviceRequest.",
          "items": {
            "$ref": "#/definitions/uri"
          },
          "type": "array"
        },
        "_instantiatesUri": {
          "description": "Extensions for instantiatesUri",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "basedOn": {
          "description": "Plan/proposal/order fulfilled by this request.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "replaces": {
          "description": "The request takes the place of the referenced completed or terminated request(s).",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "groupIdentifier": {
          "description": "Composite request this is part of.",
          "$ref": "#/definitions/Identifier"
        },
        "status": {
          "description": "The status of the request.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "intent": {
          "description": "Whether the request is a proposal, plan, an original order or a reflex order.",
          "$ref": "#/definitions/code"
        },
        "_intent": {
          "description": "Extensions for intent",
          "$ref": "#/definitions/Element"
        },
        "priority": {
          "description": "Indicates how quickly the request should be addressed with respect to other requests.",
          "$ref": "#/definitions/code"
        },
        "_priority": {
          "description": "Extensions for priority",
          "$ref": "#/definitions/Element"
        },
        "doNotPerform": {
          "description": "If true, indicates that the provider is asking for the patient to either stop using or to not start using the specified device or category of devices. For example, the patient has undergone surgery and the provider is indicating that the patient should not wear contact lenses.",
          "$ref": "#/definitions/boolean"
        },
        "_doNotPerform": {
          "description": "Extensions for doNotPerform",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "The details of the device to be used.",
          "$ref": "#/definitions/CodeableReference"
        },
        "quantity": {
          "description": "The number of devices to be provided.",
          "$ref": "#/definitions/integer"
        },
        "_quantity": {
          "description": "Extensions for quantity",
          "$ref": "#/definitions/Element"
        },
        "parameter": {
          "description": "Specific parameters for the ordered item.  For example, the prism value for lenses.",
          "items": {
            "$ref": "#/definitions/DeviceRequest_Parameter"
          },
          "type": "array"
        },
        "subject": {
          "description": "The patient who will use the device.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "An encounter that provides additional context in which this request is made.",
          "$ref": "#/definitions/Reference"
        },
        "occurrenceDateTime": {
          "description": "The timing schedule for the use of the device. The Schedule data type allows many different expressions, for example. \"Every 8 hours\"; \"Three times a day\"; \"1/2 an hour before breakfast for 10 days from 23-Dec 2011:\"; \"15 Oct 2013, 17 Oct 2013 and 1 Nov 2013\".",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_occurrenceDateTime": {
          "description": "Extensions for occurrenceDateTime",
          "$ref": "#/definitions/Element"
        },
        "occurrencePeriod": {
          "description": "The timing schedule for the use of the device. The Schedule data type allows many different expressions, for example. \"Every 8 hours\"; \"Three times a day\"; \"1/2 an hour before breakfast for 10 days from 23-Dec 2011:\"; \"15 Oct 2013, 17 Oct 2013 and 1 Nov 2013\".",
          "$ref": "#/definitions/Period"
        },
        "occurrenceTiming": {
          "description": "The timing schedule for the use of the device. The Schedule data type allows many different expressions, for example. \"Every 8 hours\"; \"Three times a day\"; \"1/2 an hour before breakfast for 10 days from 23-Dec 2011:\"; \"15 Oct 2013, 17 Oct 2013 and 1 Nov 2013\".",
          "$ref": "#/definitions/Timing"
        },
        "authoredOn": {
          "description": "When the request transitioned to being actionable.",
          "$ref": "#/definitions/dateTime"
        },
        "_authoredOn": {
          "description": "Extensions for authoredOn",
          "$ref": "#/definitions/Element"
        },
        "requester": {
          "description": "The individual or entity who initiated the request and has responsibility for its activation.",
          "$ref": "#/definitions/Reference"
        },
        "performerType": {
          "description": "The desired kind of individual or entity to provide the device to the subject of the request (e.g., patient, location).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "performer": {
          "description": "The desired individual or entity to provide the device to the subject of the request (e.g., patient, location).",
          "$ref": "#/definitions/Reference"
        },
        "reason": {
          "description": "Reason or justification for the use of this device.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "asNeeded": {
          "description": "This status is to indicate whether the request is a PRN or may be given as needed.",
          "$ref": "#/definitions/boolean"
        },
        "_asNeeded": {
          "description": "Extensions for asNeeded",
          "$ref": "#/definitions/Element"
        },
        "asNeededFor": {
          "description": "The reason for using the device.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "insurance": {
          "description": "Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be required for delivering the requested service.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "supportingInfo": {
          "description": "Additional clinical information about the patient that may influence the request fulfilment.  For example, this may include where on the subject\u0027s body the device will be used (i.e. the target site).",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "note": {
          "description": "Details about this request that were not represented at all or sufficiently in one of the attributes provided in a class. These may include for example a comment, an instruction, or a note associated with the statement.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "relevantHistory": {
          "description": "Key events in the history of the request.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code",
        "subject",
        "resourceType"
      ]
    },
    "DeviceRequest_Parameter": {
      "description": "Represents a request for a patient to employ a medical device. The device may be an implantable device, or an external assistive device, such as a walker.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "A code or string that identifies the device detail being asserted.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCodeableConcept": {
          "description": "The value of the device detail.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": {
          "description": "The value of the device detail.",
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "description": "The value of the device detail.",
          "$ref": "#/definitions/Range"
        },
        "valueBoolean": {
          "description": "The value of the device detail.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "DeviceUsage": {
      "description": "A record of a device being used by a patient where the record is the result of a report from the patient or a clinician.",
      "properties": {
        "resourceType": {
          "description": "This is a DeviceUsage resource",
          "const": "DeviceUsage"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "An external identifier for this statement such as an IRI.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "basedOn": {
          "description": "A plan, proposal or order that is fulfilled in whole or in part by this DeviceUsage.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "status": {
          "description": "A code representing the patient or other source\u0027s judgment about the state of the device used that this statement is about.  Generally this will be active or completed.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "category": {
          "description": "This attribute indicates a category for the statement - The device statement may be made in an inpatient or outpatient settting (inpatient | outpatient | community | patientspecified).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "patient": {
          "description": "The patient who used the device.",
          "$ref": "#/definitions/Reference"
        },
        "derivedFrom": {
          "description": "Allows linking the DeviceUsage to the underlying Request, or to other information that supports or is used to derive the DeviceUsage.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "context": {
          "description": "The encounter or episode of care that establishes the context for this device use statement.",
          "$ref": "#/definitions/Reference"
        },
        "timingTiming": {
          "description": "How often the device was used.",
          "$ref": "#/definitions/Timing"
        },
        "timingPeriod": {
          "description": "How often the device was used.",
          "$ref": "#/definitions/Period"
        },
        "timingDateTime": {
          "description": "How often the device was used.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_timingDateTime": {
          "description": "Extensions for timingDateTime",
          "$ref": "#/definitions/Element"
        },
        "dateAsserted": {
          "description": "The time at which the statement was recorded by informationSource.",
          "$ref": "#/definitions/dateTime"
        },
        "_dateAsserted": {
          "description": "Extensions for dateAsserted",
          "$ref": "#/definitions/Element"
        },
        "usageStatus": {
          "description": "The status of the device usage, for example always, sometimes, never. This is not the same as the status of the statement.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "usageReason": {
          "description": "The reason for asserting the usage status - for example forgot, lost, stolen, broken.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "adherence": {
          "description": "This indicates how or if the device is being used.",
          "$ref": "#/definitions/DeviceUsage_Adherence"
        },
        "informationSource": {
          "description": "Who reported the device was being used by the patient.",
          "$ref": "#/definitions/Reference"
        },
        "device": {
          "description": "Code or Reference to device used.",
          "$ref": "#/definitions/CodeableReference"
        },
        "reason": {
          "description": "Reason or justification for the use of the device. A coded concept, or another resource whose existence justifies this DeviceUsage.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "bodySite": {
          "description": "Indicates the anotomic location on the subject\u0027s body where the device was used ( i.e. the target).",
          "$ref": "#/definitions/CodeableReference"
        },
        "note": {
          "description": "Details about the device statement that were not represented at all or sufficiently in one of the attributes provided in a class. These may include for example a comment, an instruction, or a note associated with the statement.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "patient",
        "device",
        "resourceType"
      ]
    },
    "DeviceUsage_Adherence": {
      "description": "A record of a device being used by a patient where the record is the result of a report from the patient or a clinician.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "Type of adherence.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "reason": {
          "description": "Reason for adherence type.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "reason",
        "code"
      ]
    },
    "DiagnosticReport": {
      "description": "The findings and interpretation of diagnostic tests performed on patients, groups of patients, products, substances, devices, and locations, and/or specimens derived from these. The report includes clinical context such as requesting provider information, and some mix of atomic results, images, textual and coded interpretations, and formatted representation of diagnostic reports. The report also includes non-clinical context such as batch analysis and stability reporting of products and substances.",
      "properties": {
        "resourceType": {
          "description": "This is a DiagnosticReport resource",
          "const": "DiagnosticReport"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifiers assigned to this report by the performer or other systems.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "basedOn": {
          "description": "Details concerning a service requested.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of the diagnostic report.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "category": {
          "description": "A code that classifies the clinical discipline, department or diagnostic service that created the report (e.g. cardiology, biochemistry, hematology, MRI). This is used for searching, sorting and display purposes.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "code": {
          "description": "A code or name that describes this diagnostic report.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subject": {
          "description": "The subject of the report. Usually, but not always, this is a patient. However, diagnostic services also perform analyses on specimens collected from a variety of other sources.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "The healthcare event  (e.g. a patient and healthcare provider interaction) which this DiagnosticReport is about.",
          "$ref": "#/definitions/Reference"
        },
        "effectiveDateTime": {
          "description": "The time or time-period the observed values are related to. When the subject of the report is a patient, this is usually either the time of the procedure or of specimen collection(s), but very often the source of the date/time is not known, only the date/time itself.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_effectiveDateTime": {
          "description": "Extensions for effectiveDateTime",
          "$ref": "#/definitions/Element"
        },
        "effectivePeriod": {
          "description": "The time or time-period the observed values are related to. When the subject of the report is a patient, this is usually either the time of the procedure or of specimen collection(s), but very often the source of the date/time is not known, only the date/time itself.",
          "$ref": "#/definitions/Period"
        },
        "issued": {
          "description": "The date and time that this version of the report was made available to providers, typically after the report was reviewed and verified.",
          "$ref": "#/definitions/instant"
        },
        "_issued": {
          "description": "Extensions for issued",
          "$ref": "#/definitions/Element"
        },
        "performer": {
          "description": "The diagnostic service that is responsible for issuing the report.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "resultsInterpreter": {
          "description": "The practitioner or organization that is responsible for the report\u0027s conclusions and interpretations.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "specimen": {
          "description": "Details about the specimens on which this diagnostic report is based.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "result": {
          "description": "[Observations](observation.html)  that are part of this diagnostic report.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "note": {
          "description": "Comments about the diagnostic report.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "study": {
          "description": "One or more links to full details of any study performed during the diagnostic investigation. An ImagingStudy might comprise a set of radiologic images obtained via a procedure that are analyzed as a group. Typically, this is imaging performed by DICOM enabled modalities, but this is not required. A fully enabled PACS viewer can use this information to provide views of the source images. A GenomicStudy might comprise one or more analyses, each serving a specific purpose. These analyses may vary in method (e.g., karyotyping, CNV, or SNV detection), performer, software, devices used, or regions targeted.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "supportingInfo": {
          "description": "This backbone element contains supporting information that was used in the creation of the report not included in the results already included in the report.",
          "items": {
            "$ref": "#/definitions/DiagnosticReport_SupportingInfo"
          },
          "type": "array"
        },
        "media": {
          "description": "A list of key images or data associated with this report. The images or data are generally created during the diagnostic process, and may be directly of the patient, or of treated specimens (i.e. slides of interest).",
          "items": {
            "$ref": "#/definitions/DiagnosticReport_Media"
          },
          "type": "array"
        },
        "composition": {
          "description": "Reference to a Composition resource instance that provides structure for organizing the contents of the DiagnosticReport.",
          "$ref": "#/definitions/Reference"
        },
        "conclusion": {
          "description": "Concise and clinically contextualized summary conclusion (interpretation/impression) of the diagnostic report.",
          "$ref": "#/definitions/string"
        },
        "_conclusion": {
          "description": "Extensions for conclusion",
          "$ref": "#/definitions/Element"
        },
        "conclusionCode": {
          "description": "One or more codes that represent the summary conclusion (interpretation/impression) of the diagnostic report.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "presentedForm": {
          "description": "Rich text representation of the entire result as issued by the diagnostic service. Multiple formats are allowed but they SHALL be semantically equivalent.",
          "items": {
            "$ref": "#/definitions/Attachment"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code",
        "resourceType"
      ]
    },
    "DiagnosticReport_SupportingInfo": {
      "description": "The findings and interpretation of diagnostic tests performed on patients, groups of patients, products, substances, devices, and locations, and/or specimens derived from these. The report includes clinical context such as requesting provider information, and some mix of atomic results, images, textual and coded interpretations, and formatted representation of diagnostic reports. The report also includes non-clinical context such as batch analysis and stability reporting of products and substances.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The code value for the role of the supporting information in the diagnostic report.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "reference": {
          "description": "The reference for the supporting information in the diagnostic report.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "reference",
        "type"
      ]
    },
    "DiagnosticReport_Media": {
      "description": "The findings and interpretation of diagnostic tests performed on patients, groups of patients, products, substances, devices, and locations, and/or specimens derived from these. The report includes clinical context such as requesting provider information, and some mix of atomic results, images, textual and coded interpretations, and formatted representation of diagnostic reports. The report also includes non-clinical context such as batch analysis and stability reporting of products and substances.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "comment": {
          "description": "A comment about the image or data. Typically, this is used to provide an explanation for why the image or data is included, or to draw the viewer\u0027s attention to important features.",
          "$ref": "#/definitions/string"
        },
        "_comment": {
          "description": "Extensions for comment",
          "$ref": "#/definitions/Element"
        },
        "link": {
          "description": "Reference to the image or data source.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "link"
      ]
    },
    "DocumentManifest": {
      "description": "A collection of documents compiled for a purpose together with metadata that applies to the collection.",
      "properties": {
        "resourceType": {
          "description": "This is a DocumentManifest resource",
          "const": "DocumentManifest"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "masterIdentifier": {
          "description": "A single identifier that uniquely identifies this manifest. Principally used to refer to the manifest in non-FHIR contexts.",
          "$ref": "#/definitions/Identifier"
        },
        "identifier": {
          "description": "Other identifiers associated with the document manifest, including version independent  identifiers.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of this document manifest.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "The code specifying the type of clinical activity that resulted in placing the associated content into the DocumentManifest.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subject": {
          "description": "Who or what the set of documents is about. The documents can be about a person, (patient or healthcare practitioner), a device (i.e. machine) or even a group of subjects (such as a document about a herd of farm animals, or a set of patients that share a common exposure). If the documents cross more than one subject, then more than one subject is allowed here (unusual use case).",
          "$ref": "#/definitions/Reference"
        },
        "created": {
          "description": "When the document manifest was created for submission to the server (not necessarily the same thing as the actual resource last modified time, since it may be modified, replicated, etc.).",
          "$ref": "#/definitions/dateTime"
        },
        "_created": {
          "description": "Extensions for created",
          "$ref": "#/definitions/Element"
        },
        "author": {
          "description": "Identifies who is the author of the manifest. Manifest author is not necessarly the author of the references included.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "recipient": {
          "description": "A patient, practitioner, or organization for which this set of documents is intended.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "source": {
          "description": "Identifies the source system, application, or software that produced the document manifest.",
          "$ref": "#/definitions/uri"
        },
        "_source": {
          "description": "Extensions for source",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "Human-readable description of the source document. This is sometimes known as the \"title\".",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "content": {
          "description": "The list of Resources that consist of the parts of this manifest.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "related": {
          "description": "Related identifiers or resources associated with the DocumentManifest.",
          "items": {
            "$ref": "#/definitions/DocumentManifest_Related"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "content",
        "resourceType"
      ]
    },
    "DocumentManifest_Related": {
      "description": "A collection of documents compiled for a purpose together with metadata that applies to the collection.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Related identifier to this DocumentManifest.  For example, Order numbers, accession numbers, XDW workflow numbers.",
          "$ref": "#/definitions/Identifier"
        },
        "ref": {
          "description": "Related Resource to this DocumentManifest. For example, Order, ServiceRequest,  Procedure, EligibilityRequest, etc.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "DocumentReference": {
      "description": "A reference to a document of any kind for any purpose. While the term “document” implies a more narrow focus, for this resource this \"document\" encompasses *any* serialized object with a mime-type, it includes formal patient-centric documents (CDA), clinical notes, scanned paper, non-patient specific documents like policy text, as well as a photo, video, or audio recording acquired or used in healthcare.  The DocumentReference resource provides metadata about the document so that the document can be discovered and managed.  The actual content may be inline base64 encoded data or provided by direct reference.",
      "properties": {
        "resourceType": {
          "description": "This is a DocumentReference resource",
          "const": "DocumentReference"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Other business identifiers associated with the document, including version independent identifiers.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "basedOn": {
          "description": "A procedure that is fulfilled in whole or in part by the creation of this media.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of this document reference.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "docStatus": {
          "description": "The status of the underlying document.",
          "$ref": "#/definitions/code"
        },
        "_docStatus": {
          "description": "Extensions for docStatus",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "Specifies the particular kind of document referenced  (e.g. History and Physical, Discharge Summary, Progress Note). This usually equates to the purpose of making the document referenced.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "category": {
          "description": "A categorization for the type of document referenced - helps for indexing and searching. This may be implied by or derived from the code specified in the DocumentReference.type.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "subject": {
          "description": "Who or what the document is about. The document can be about a person, (patient or healthcare practitioner), a device (e.g. a machine) or even a group of subjects (such as a document about a herd of farm animals, or a set of patients that share a common exposure).",
          "$ref": "#/definitions/Reference"
        },
        "context": {
          "description": "Describes the clinical encounter or type of care that the document content is associated with.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "event": {
          "description": "This list of codes represents the main clinical acts, such as a colonoscopy or an appendectomy, being documented. In some cases, the event is inherent in the type Code, such as a \"History and Physical Report\" in which the procedure being documented is necessarily a \"History and Physical\" act.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "facilityType": {
          "description": "The kind of facility where the patient was seen.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "practiceSetting": {
          "description": "This property may convey specifics about the practice setting where the content was created, often reflecting the clinical specialty.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "period": {
          "description": "The time period over which the service that is described by the document was provided.",
          "$ref": "#/definitions/Period"
        },
        "date": {
          "description": "When the document reference was created.",
          "$ref": "#/definitions/instant"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "author": {
          "description": "Identifies who is responsible for adding the information to the document.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "attester": {
          "description": "A participant who has authenticated the accuracy of the document.",
          "items": {
            "$ref": "#/definitions/DocumentReference_Attester"
          },
          "type": "array"
        },
        "custodian": {
          "description": "Identifies the organization or group who is responsible for ongoing maintenance of and access to the document.",
          "$ref": "#/definitions/Reference"
        },
        "relatesTo": {
          "description": "Relationships that this document has with other document references that already exist.",
          "items": {
            "$ref": "#/definitions/DocumentReference_RelatesTo"
          },
          "type": "array"
        },
        "description": {
          "description": "Human-readable description of the source document.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "securityLabel": {
          "description": "A set of Security-Tag codes specifying the level of privacy/security of the Document found at DocumentReference.content.attachment.url. Note that DocumentReference.meta.security contains the security labels of the data elements in DocumentReference, while DocumentReference.securityLabel contains the security labels for the document the reference refers to. The distinction recognizes that the document may contain sensitive information, while the DocumentReference is metadata about the document and thus might not be as sensitive as the document. For example: a psychotherapy episode may contain highly sensitive information, while the metadata may simply indicate that some episode happened.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "content": {
          "description": "The document and format referenced.  If there are multiple content element repetitions, these must all represent the same document in different format, or attachment metadata.",
          "items": {
            "$ref": "#/definitions/DocumentReference_Content"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "content",
        "resourceType"
      ]
    },
    "DocumentReference_Attester": {
      "description": "A reference to a document of any kind for any purpose. While the term “document” implies a more narrow focus, for this resource this \"document\" encompasses *any* serialized object with a mime-type, it includes formal patient-centric documents (CDA), clinical notes, scanned paper, non-patient specific documents like policy text, as well as a photo, video, or audio recording acquired or used in healthcare.  The DocumentReference resource provides metadata about the document so that the document can be discovered and managed.  The actual content may be inline base64 encoded data or provided by direct reference.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "mode": {
          "description": "The type of attestation the authenticator offers.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "time": {
          "description": "When the document was attested by the party.",
          "$ref": "#/definitions/dateTime"
        },
        "_time": {
          "description": "Extensions for time",
          "$ref": "#/definitions/Element"
        },
        "party": {
          "description": "Who attested the document in the specified way.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "mode"
      ]
    },
    "DocumentReference_RelatesTo": {
      "description": "A reference to a document of any kind for any purpose. While the term “document” implies a more narrow focus, for this resource this \"document\" encompasses *any* serialized object with a mime-type, it includes formal patient-centric documents (CDA), clinical notes, scanned paper, non-patient specific documents like policy text, as well as a photo, video, or audio recording acquired or used in healthcare.  The DocumentReference resource provides metadata about the document so that the document can be discovered and managed.  The actual content may be inline base64 encoded data or provided by direct reference.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "The type of relationship that this document has with anther document.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "target": {
          "description": "The target document of this relationship.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code",
        "target"
      ]
    },
    "DocumentReference_Content": {
      "description": "A reference to a document of any kind for any purpose. While the term “document” implies a more narrow focus, for this resource this \"document\" encompasses *any* serialized object with a mime-type, it includes formal patient-centric documents (CDA), clinical notes, scanned paper, non-patient specific documents like policy text, as well as a photo, video, or audio recording acquired or used in healthcare.  The DocumentReference resource provides metadata about the document so that the document can be discovered and managed.  The actual content may be inline base64 encoded data or provided by direct reference.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "attachment": {
          "description": "The document or URL of the document along with critical metadata to prove content has integrity.",
          "$ref": "#/definitions/Attachment"
        },
        "profile": {
          "description": "An identifier of the document constraints, encoding, structure, and template that the document conforms to beyond the base format indicated in the mimeType.",
          "items": {
            "$ref": "#/definitions/DocumentReference_Profile"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "attachment"
      ]
    },
    "DocumentReference_Profile": {
      "description": "A reference to a document of any kind for any purpose. While the term “document” implies a more narrow focus, for this resource this \"document\" encompasses *any* serialized object with a mime-type, it includes formal patient-centric documents (CDA), clinical notes, scanned paper, non-patient specific documents like policy text, as well as a photo, video, or audio recording acquired or used in healthcare.  The DocumentReference resource provides metadata about the document so that the document can be discovered and managed.  The actual content may be inline base64 encoded data or provided by direct reference.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "valueCoding": {
          "description": "Code|uri|canonical.",
          "$ref": "#/definitions/Coding"
        },
        "valueUri": {
          "description": "Code|uri|canonical.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUri": {
          "description": "Extensions for valueUri",
          "$ref": "#/definitions/Element"
        },
        "valueCanonical": {
          "description": "Code|uri|canonical.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueCanonical": {
          "description": "Extensions for valueCanonical",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Encounter": {
      "description": "An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.  Encounter is primarily used to record information about the actual activities that occurred, where Appointment is used to record planned activities.",
      "properties": {
        "resourceType": {
          "description": "This is a Encounter resource",
          "const": "Encounter"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifier(s) by which this encounter is known.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "planned | in-progress | on-hold | discharged | completed | cancelled | discontinued | entered-in-error | unknown.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "statusHistory": {
          "description": "The status history permits the encounter resource to contain the status history without needing to read through the historical versions of the resource, or even have the server store them.",
          "items": {
            "$ref": "#/definitions/Encounter_StatusHistory"
          },
          "type": "array"
        },
        "class": {
          "description": "Concepts representing classification of patient encounter such as ambulatory (outpatient), inpatient, emergency, home health or others due to local variations.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "classHistory": {
          "description": "The class history permits the tracking of the encounters transitions without needing to go  through the resource history.  This would be used for a case where an admission starts of as an emergency encounter, then transitions into an inpatient scenario. Doing this and not restarting a new encounter ensures that any lab/diagnostic results can more easily follow the patient and not require re-processing and not get lost or cancelled during a kind of discharge from emergency to inpatient.",
          "items": {
            "$ref": "#/definitions/Encounter_ClassHistory"
          },
          "type": "array"
        },
        "priority": {
          "description": "Indicates the urgency of the encounter.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "type": {
          "description": "Specific type of encounter (e.g. e-mail consultation, surgical day-care, skilled nursing, rehabilitation).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "serviceType": {
          "description": "Broad categorization of the service that is to be provided (e.g. cardiology).",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "subject": {
          "description": "The patient or group related to this encounter. In some use-cases the patient MAY not be present, such as a case meeting about a patient between several practitioners or a careteam.",
          "$ref": "#/definitions/Reference"
        },
        "subjectStatus": {
          "description": "The subjectStatus value can be used to track the patient\u0027s status within the encounter. It details whether the patient has arrived or departed, has been triaged or is currently in a waiting status.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "episodeOfCare": {
          "description": "Where a specific encounter should be classified as a part of a specific episode(s) of care this field should be used. This association can facilitate grouping of related encounters together for a specific purpose, such as government reporting, issue tracking, association via a common problem.  The association is recorded on the encounter as these are typically created after the episode of care and grouped on entry rather than editing the episode of care to append another encounter to it (the episode of care could span years).",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "basedOn": {
          "description": "The request this encounter satisfies (e.g. incoming referral or procedure request).",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "careTeam": {
          "description": "The group(s) of individuals, organizations that are allocated to participate in this encounter. The participants backbone will record the actuals of when these individuals participated during the encounter.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "partOf": {
          "description": "Another Encounter of which this encounter is a part of (administratively or in time).",
          "$ref": "#/definitions/Reference"
        },
        "serviceProvider": {
          "description": "The organization that is primarily responsible for this Encounter\u0027s services. This MAY be the same as the organization on the Patient record, however it could be different, such as if the actor performing the services was from an external organization (which may be billed seperately) for an external consultation.  Refer to the example bundle showing an abbreviated set of Encounters for a colonoscopy.",
          "$ref": "#/definitions/Reference"
        },
        "participant": {
          "description": "The list of people responsible for providing the service.",
          "items": {
            "$ref": "#/definitions/Encounter_Participant"
          },
          "type": "array"
        },
        "appointment": {
          "description": "The appointment that scheduled this encounter.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "virtualService": {
          "description": "Connection details of a virtual service (e.g. conference call).",
          "items": {
            "$ref": "#/definitions/VirtualServiceDetail"
          },
          "type": "array"
        },
        "actualPeriod": {
          "description": "The actual start and end time of the encounter.",
          "$ref": "#/definitions/Period"
        },
        "plannedStartDate": {
          "description": "The planned start date/time (or admission date) of the encounter.",
          "$ref": "#/definitions/dateTime"
        },
        "_plannedStartDate": {
          "description": "Extensions for plannedStartDate",
          "$ref": "#/definitions/Element"
        },
        "plannedEndDate": {
          "description": "The planned end date/time (or discharge date) of the encounter.",
          "$ref": "#/definitions/dateTime"
        },
        "_plannedEndDate": {
          "description": "Extensions for plannedEndDate",
          "$ref": "#/definitions/Element"
        },
        "length": {
          "description": "Actual quantity of time the encounter lasted. This excludes the time during leaves of absence.\r\rWhen missing it is the time in between the start and end values.",
          "$ref": "#/definitions/Duration"
        },
        "reason": {
          "description": "Reason the encounter takes place, expressed as a code or a reference to another resource. For admissions, this can be used for a coded admission diagnosis.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "diagnosis": {
          "description": "The list of diagnosis relevant to this encounter.",
          "items": {
            "$ref": "#/definitions/Encounter_Diagnosis"
          },
          "type": "array"
        },
        "account": {
          "description": "The set of accounts that may be used for billing for this Encounter.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "admission": {
          "description": "Details about the admission to a healthcare service.",
          "$ref": "#/definitions/Encounter_Admission"
        },
        "location": {
          "description": "List of locations where  the patient has been during this encounter.",
          "items": {
            "$ref": "#/definitions/Encounter_Location"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Encounter_StatusHistory": {
      "description": "An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.  Encounter is primarily used to record information about the actual activities that occurred, where Appointment is used to record planned activities.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "status": {
          "description": "planned | in-progress | on-hold | discharged | completed | cancelled | discontinued | entered-in-error | unknown.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "period": {
          "description": "The time that the episode was in the specified status.",
          "$ref": "#/definitions/Period"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "period"
      ]
    },
    "Encounter_ClassHistory": {
      "description": "An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.  Encounter is primarily used to record information about the actual activities that occurred, where Appointment is used to record planned activities.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "class": {
          "description": "inpatient | outpatient | ambulatory | emergency +.",
          "$ref": "#/definitions/Coding"
        },
        "period": {
          "description": "The time that the episode was in the specified class.",
          "$ref": "#/definitions/Period"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "period",
        "class"
      ]
    },
    "Encounter_Participant": {
      "description": "An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.  Encounter is primarily used to record information about the actual activities that occurred, where Appointment is used to record planned activities.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Role of participant in encounter.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "period": {
          "description": "The period of time that the specified participant participated in the encounter. These can overlap or be sub-sets of the overall encounter\u0027s period.",
          "$ref": "#/definitions/Period"
        },
        "actor": {
          "description": "Person involved in the encounter, the patient/group is also included here to indicate that the patient was actually participating in the encounter. Not including the patient here covers use cases such as a case meeting between practitioners about a patient - non contact times.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Encounter_Diagnosis": {
      "description": "An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.  Encounter is primarily used to record information about the actual activities that occurred, where Appointment is used to record planned activities.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "condition": {
          "description": "Reason the encounter takes place, as specified using information from another resource. For admissions, this is the admission diagnosis. The indication will typically be a Condition (with other resources referenced in the evidence.detail), or a Procedure.",
          "$ref": "#/definitions/Reference"
        },
        "use": {
          "description": "Role that this diagnosis has within the encounter (e.g. admission, billing, discharge …).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "rank": {
          "description": "Ranking of the diagnosis (for each role type).",
          "$ref": "#/definitions/positiveInt"
        },
        "_rank": {
          "description": "Extensions for rank",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "condition"
      ]
    },
    "Encounter_Admission": {
      "description": "An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.  Encounter is primarily used to record information about the actual activities that occurred, where Appointment is used to record planned activities.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "preAdmissionIdentifier": {
          "description": "Pre-admission identifier.",
          "$ref": "#/definitions/Identifier"
        },
        "origin": {
          "description": "The location/organization from which the patient came before admission.",
          "$ref": "#/definitions/Reference"
        },
        "admitSource": {
          "description": "From where patient was admitted (physician referral, transfer).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "reAdmission": {
          "description": "Whether this admission is a readmission and why if known.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "dietPreference": {
          "description": "Diet preferences reported by the patient.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "specialCourtesy": {
          "description": "Special courtesies (VIP, board member).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "specialArrangement": {
          "description": "Any special requests that have been made for this admission encounter, such as the provision of specific equipment or other things.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "destination": {
          "description": "Location/organization to which the patient is discharged.",
          "$ref": "#/definitions/Reference"
        },
        "dischargeDisposition": {
          "description": "Category or kind of location after discharge.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Encounter_Location": {
      "description": "An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.  Encounter is primarily used to record information about the actual activities that occurred, where Appointment is used to record planned activities.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "location": {
          "description": "The location where the encounter takes place.",
          "$ref": "#/definitions/Reference"
        },
        "status": {
          "description": "The status of the participants\u0027 presence at the specified location during the period specified. If the participant is no longer at the location, then the period will have an end date/time.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "form": {
          "description": "This will be used to specify the required levels (bed/ward/room/etc.) desired to be recorded to simplify either messaging or query.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "period": {
          "description": "Time period during which the patient was present at the location.",
          "$ref": "#/definitions/Period"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "location"
      ]
    },
    "Endpoint": {
      "description": "The technical details of an endpoint that can be used for electronic services, such as for web services providing XDS.b, a REST endpoint for another FHIR server, or a s/Mime email address. This may include any security context information.",
      "properties": {
        "resourceType": {
          "description": "This is a Endpoint resource",
          "const": "Endpoint"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifier for the organization that is used to identify the endpoint across multiple disparate systems.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "The endpoint status represents the general expected availability of an endpoint.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "connectionType": {
          "description": "A coded value that represents the technical details of the usage of this endpoint, such as what WSDLs should be used in what way. (e.g. XDS.b/DICOM/cds-hook).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "name": {
          "description": "A friendly name that this endpoint can be referred to with.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "The description of the endpoint and what it is for (typically used as supplemental information in an endpoint directory describing it\u0027s usage/purpose).",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "environmentType": {
          "description": "The type of environment(s) exposed at this endpoint (dev, prod, test, etc).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "managingOrganization": {
          "description": "The organization that manages this endpoint (even if technically another organization is hosting this in the cloud, it is the organization associated with the data).",
          "$ref": "#/definitions/Reference"
        },
        "contact": {
          "description": "Contact details for a human to contact about the endpoint. The primary use of this for system administrator troubleshooting.",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          },
          "type": "array"
        },
        "period": {
          "description": "The interval during which the endpoint is expected to be operational.",
          "$ref": "#/definitions/Period"
        },
        "payloadType": {
          "description": "The payload type describes the acceptable content that can be communicated on the endpoint.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "payloadMimeType": {
          "description": "The mime type to send the payload in - e.g. application/fhir+xml, application/fhir+json. If the mime type is not specified, then the sender could send any content (including no content depending on the connectionType).",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_payloadMimeType": {
          "description": "Extensions for payloadMimeType",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "address": {
          "description": "The uri that describes the actual end-point to connect to.",
          "$ref": "#/definitions/url"
        },
        "_address": {
          "description": "Extensions for address",
          "$ref": "#/definitions/Element"
        },
        "header": {
          "description": "Additional headers / information to send as part of the notification.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_header": {
          "description": "Extensions for header",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "connectionType",
        "resourceType"
      ]
    },
    "EnrollmentRequest": {
      "description": "This resource provides the insurance enrollment details to the insurer regarding a specified coverage.",
      "properties": {
        "resourceType": {
          "description": "This is a EnrollmentRequest resource",
          "const": "EnrollmentRequest"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "The Response business identifier.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of the resource instance.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "created": {
          "description": "The date when this resource was created.",
          "$ref": "#/definitions/dateTime"
        },
        "_created": {
          "description": "Extensions for created",
          "$ref": "#/definitions/Element"
        },
        "insurer": {
          "description": "The Insurer who is target  of the request.",
          "$ref": "#/definitions/Reference"
        },
        "provider": {
          "description": "The practitioner who is responsible for the services rendered to the patient.",
          "$ref": "#/definitions/Reference"
        },
        "candidate": {
          "description": "Patient Resource.",
          "$ref": "#/definitions/Reference"
        },
        "coverage": {
          "description": "Reference to the program or plan identification, underwriter or payor.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "EnrollmentResponse": {
      "description": "This resource provides enrollment and plan details from the processing of an EnrollmentRequest resource.",
      "properties": {
        "resourceType": {
          "description": "This is a EnrollmentResponse resource",
          "const": "EnrollmentResponse"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "The Response business identifier.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of the resource instance.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "request": {
          "description": "Original request resource reference.",
          "$ref": "#/definitions/Reference"
        },
        "outcome": {
          "description": "Processing status: error, complete.",
          "$ref": "#/definitions/code"
        },
        "_outcome": {
          "description": "Extensions for outcome",
          "$ref": "#/definitions/Element"
        },
        "disposition": {
          "description": "A description of the status of the adjudication.",
          "$ref": "#/definitions/string"
        },
        "_disposition": {
          "description": "Extensions for disposition",
          "$ref": "#/definitions/Element"
        },
        "created": {
          "description": "The date when the enclosed suite of services were performed or completed.",
          "$ref": "#/definitions/dateTime"
        },
        "_created": {
          "description": "Extensions for created",
          "$ref": "#/definitions/Element"
        },
        "organization": {
          "description": "The Insurer who produced this adjudicated response.",
          "$ref": "#/definitions/Reference"
        },
        "requestProvider": {
          "description": "The practitioner who is responsible for the services rendered to the patient.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "EpisodeOfCare": {
      "description": "An association between a patient and an organization / healthcare provider(s) during which time encounters may occur. The managing organization assumes a level of responsibility for the patient during this time.",
      "properties": {
        "resourceType": {
          "description": "This is a EpisodeOfCare resource",
          "const": "EpisodeOfCare"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "The EpisodeOfCare may be known by different identifiers for different contexts of use, such as when an external agency is tracking the Episode for funding purposes.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "planned | waitlist | active | onhold | finished | cancelled.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "statusHistory": {
          "description": "The history of statuses that the EpisodeOfCare has been through (without requiring processing the history of the resource).",
          "items": {
            "$ref": "#/definitions/EpisodeOfCare_StatusHistory"
          },
          "type": "array"
        },
        "type": {
          "description": "A classification of the type of episode of care; e.g. specialist referral, disease management, type of funded care.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "diagnosis": {
          "description": "The list of diagnosis relevant to this episode of care.",
          "items": {
            "$ref": "#/definitions/EpisodeOfCare_Diagnosis"
          },
          "type": "array"
        },
        "patient": {
          "description": "The patient who is the focus of this episode of care.",
          "$ref": "#/definitions/Reference"
        },
        "managingOrganization": {
          "description": "The organization that has assumed the specific responsibilities for care coordination, care delivery, or other services for the specified duration.",
          "$ref": "#/definitions/Reference"
        },
        "period": {
          "description": "The interval during which the managing organization assumes the defined responsibility.",
          "$ref": "#/definitions/Period"
        },
        "referralRequest": {
          "description": "Referral Request(s) that are fulfilled by this EpisodeOfCare, incoming referrals.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "careManager": {
          "description": "The practitioner that is the care manager/care coordinator for this patient.",
          "$ref": "#/definitions/Reference"
        },
        "careTeam": {
          "description": "The list of practitioners that may be facilitating this episode of care for specific purposes.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "account": {
          "description": "The set of accounts that may be used for billing for this EpisodeOfCare.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "patient",
        "resourceType"
      ]
    },
    "EpisodeOfCare_StatusHistory": {
      "description": "An association between a patient and an organization / healthcare provider(s) during which time encounters may occur. The managing organization assumes a level of responsibility for the patient during this time.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "status": {
          "description": "planned | waitlist | active | onhold | finished | cancelled.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "period": {
          "description": "The period during this EpisodeOfCare that the specific status applied.",
          "$ref": "#/definitions/Period"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "period"
      ]
    },
    "EpisodeOfCare_Diagnosis": {
      "description": "An association between a patient and an organization / healthcare provider(s) during which time encounters may occur. The managing organization assumes a level of responsibility for the patient during this time.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "condition": {
          "description": "A list of conditions/problems/diagnoses that this episode of care is intended to be providing care for.",
          "$ref": "#/definitions/CodeableReference"
        },
        "role": {
          "description": "Role that this diagnosis has within the episode of care (e.g. admission, billing, discharge …).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "rank": {
          "description": "Ranking of the diagnosis (for each role type).",
          "$ref": "#/definitions/positiveInt"
        },
        "_rank": {
          "description": "Extensions for rank",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "condition"
      ]
    },
    "EventDefinition": {
      "description": "The EventDefinition resource provides a reusable description of when a particular event can occur.",
      "properties": {
        "resourceType": {
          "description": "This is a EventDefinition resource",
          "const": "EventDefinition"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this event definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this event definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the event definition is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this event definition when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the event definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the event definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the event definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the event definition.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this event definition. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this event definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the event definition was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the event definition changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the event definition.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the event definition from a consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate event definition instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the event definition is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this event definition is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the event definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the event definition.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "approvalDate": {
          "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
          "$ref": "#/definitions/date"
        },
        "_approvalDate": {
          "description": "Extensions for approvalDate",
          "$ref": "#/definitions/Element"
        },
        "lastReviewDate": {
          "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
          "$ref": "#/definitions/date"
        },
        "_lastReviewDate": {
          "description": "Extensions for lastReviewDate",
          "$ref": "#/definitions/Element"
        },
        "effectivePeriod": {
          "description": "The period during which the event definition content was or is planned to be in active use.",
          "$ref": "#/definitions/Period"
        },
        "topic": {
          "description": "Descriptive topics related to the module. Topics provide a high-level categorization of the module that can be useful for filtering and searching.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "author": {
          "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "editor": {
          "description": "An individual or organization primarily responsible for internal coherence of the content.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "reviewer": {
          "description": "An individual or organization primarily responsible for review of some aspect of the content.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "endorser": {
          "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "relatedArtifact": {
          "description": "Related resources such as additional documentation, justification, or bibliographic references.",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          },
          "type": "array"
        },
        "subtitle": {
          "description": "An explanatory or alternate title for the event definition giving additional information about its content.",
          "$ref": "#/definitions/string"
        },
        "_subtitle": {
          "description": "Extensions for subtitle",
          "$ref": "#/definitions/Element"
        },
        "subjectCodeableConcept": {
          "description": "A code or group definition that describes the intended subject of the event definition.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subjectReference": {
          "description": "A code or group definition that describes the intended subject of the event definition.",
          "$ref": "#/definitions/Reference"
        },
        "usage": {
          "description": "A detailed description of how the event definition is used from a clinical perspective.",
          "$ref": "#/definitions/string"
        },
        "_usage": {
          "description": "Extensions for usage",
          "$ref": "#/definitions/Element"
        },
        "trigger": {
          "description": "The trigger element defines when the event occurs. If more than one trigger condition is specified, the event fires whenever any one of the trigger conditions is met.",
          "items": {
            "$ref": "#/definitions/TriggerDefinition"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "trigger",
        "resourceType"
      ]
    },
    "Evidence": {
      "description": "The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (e.g., population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence.",
      "properties": {
        "resourceType": {
          "description": "This is a Evidence resource",
          "const": "Evidence"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this evidence when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this summary is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the summary is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this summary when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the summary when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the summary author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the evidence. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the summary.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this summary. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this resource is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the summary was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the summary changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the evidence.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the evidence from a consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate evidence instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the {{title}} is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this {{title}} is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the {{title}} and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the {{title}}.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "approvalDate": {
          "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
          "$ref": "#/definitions/date"
        },
        "_approvalDate": {
          "description": "Extensions for approvalDate",
          "$ref": "#/definitions/Element"
        },
        "lastReviewDate": {
          "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
          "$ref": "#/definitions/date"
        },
        "_lastReviewDate": {
          "description": "Extensions for lastReviewDate",
          "$ref": "#/definitions/Element"
        },
        "effectivePeriod": {
          "description": "The period during which the {{title}} content was or is planned to be in active use.",
          "$ref": "#/definitions/Period"
        },
        "topic": {
          "description": "Descriptive topics related to the content of the {{title}}. Topics provide a high-level categorization as well as keywords for the {{title}} that can be useful for filtering and searching.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "author": {
          "description": "An individiual, organization, or device primarily involved in the creation and maintenance of the content.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "editor": {
          "description": "An individiual, organization, or device primarily responsible for internal coherence of the content.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "reviewer": {
          "description": "An individiual, organization, or device primarily responsible for review of some aspect of the content.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "endorser": {
          "description": "An individiual, organization, or device responsible for officially endorsing the content for use in some setting.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "relatedArtifact": {
          "description": "Link or citation to artifact associated with the summary.",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          },
          "type": "array"
        },
        "citeAsReference": {
          "description": "Citation Resource or display of suggested citation for this evidence.",
          "$ref": "#/definitions/Reference"
        },
        "citeAsMarkdown": {
          "description": "Citation Resource or display of suggested citation for this evidence.",
          "pattern": "^\\s*(\\S|\\s)*$",
          "type": "string"
        },
        "_citeAsMarkdown": {
          "description": "Extensions for citeAsMarkdown",
          "$ref": "#/definitions/Element"
        },
        "assertion": {
          "description": "Declarative description of the Evidence.",
          "$ref": "#/definitions/markdown"
        },
        "_assertion": {
          "description": "Extensions for assertion",
          "$ref": "#/definitions/Element"
        },
        "note": {
          "description": "Footnotes and/or explanatory notes.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "variableDefinition": {
          "description": "Evidence variable such as population, exposure, or outcome.",
          "items": {
            "$ref": "#/definitions/Evidence_VariableDefinition"
          },
          "type": "array"
        },
        "synthesisType": {
          "description": "The method to combine studies.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "studyDesign": {
          "description": "The design of the study that produced this evidence. The design is described with any number of study design characteristics.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "statistic": {
          "description": "Values and parameters for a single statistic.",
          "items": {
            "$ref": "#/definitions/Evidence_Statistic"
          },
          "type": "array"
        },
        "certainty": {
          "description": "Assessment of certainty, confidence in the estimates, or quality of the evidence.",
          "items": {
            "$ref": "#/definitions/Evidence_Certainty"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "variableDefinition",
        "resourceType"
      ]
    },
    "Evidence_VariableDefinition": {
      "description": "The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (e.g., population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "description": {
          "description": "A text description or summary of the variable.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "note": {
          "description": "Footnotes and/or explanatory notes.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "variableRole": {
          "description": "population | subpopulation | exposure | referenceExposure | measuredVariable | confounder.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "observed": {
          "description": "Definition of the actual variable related to the statistic(s).",
          "$ref": "#/definitions/Reference"
        },
        "intended": {
          "description": "Definition of the intended variable related to the Evidence.",
          "$ref": "#/definitions/Reference"
        },
        "directnessMatch": {
          "description": "Indication of quality of match between intended variable to actual variable.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "variableRole"
      ]
    },
    "Evidence_Statistic": {
      "description": "The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (e.g., population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "description": {
          "description": "A description of the content value of the statistic.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "note": {
          "description": "Footnotes and/or explanatory notes.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "statisticType": {
          "description": "Type of statistic, e.g., relative risk.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "category": {
          "description": "When the measured variable is handled categorically, the category element is used to define which category the statistic is reporting.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "quantity": {
          "description": "Statistic value.",
          "$ref": "#/definitions/Quantity"
        },
        "numberOfEvents": {
          "description": "The number of events associated with the statistic, where the unit of analysis is different from numberAffected, sampleSize.knownDataCount and sampleSize.numberOfParticipants.",
          "$ref": "#/definitions/unsignedInt"
        },
        "_numberOfEvents": {
          "description": "Extensions for numberOfEvents",
          "$ref": "#/definitions/Element"
        },
        "numberAffected": {
          "description": "The number of participants affected where the unit of analysis is the same as sampleSize.knownDataCount and sampleSize.numberOfParticipants.",
          "$ref": "#/definitions/unsignedInt"
        },
        "_numberAffected": {
          "description": "Extensions for numberAffected",
          "$ref": "#/definitions/Element"
        },
        "sampleSize": {
          "description": "Number of samples in the statistic.",
          "$ref": "#/definitions/Evidence_SampleSize"
        },
        "attributeEstimate": {
          "description": "A statistical attribute of the statistic such as a measure of heterogeneity.",
          "items": {
            "$ref": "#/definitions/Evidence_AttributeEstimate"
          },
          "type": "array"
        },
        "modelCharacteristic": {
          "description": "A component of the method to generate the statistic.",
          "items": {
            "$ref": "#/definitions/Evidence_ModelCharacteristic"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Evidence_SampleSize": {
      "description": "The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (e.g., population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "description": {
          "description": "Human-readable summary of population sample size.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "note": {
          "description": "Footnote or explanatory note about the sample size.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "numberOfStudies": {
          "description": "Number of participants in the population.",
          "$ref": "#/definitions/unsignedInt"
        },
        "_numberOfStudies": {
          "description": "Extensions for numberOfStudies",
          "$ref": "#/definitions/Element"
        },
        "numberOfParticipants": {
          "description": "A human-readable string to clarify or explain concepts about the sample size.",
          "$ref": "#/definitions/unsignedInt"
        },
        "_numberOfParticipants": {
          "description": "Extensions for numberOfParticipants",
          "$ref": "#/definitions/Element"
        },
        "knownDataCount": {
          "description": "Number of participants with known results for measured variables.",
          "$ref": "#/definitions/unsignedInt"
        },
        "_knownDataCount": {
          "description": "Extensions for knownDataCount",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Evidence_AttributeEstimate": {
      "description": "The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (e.g., population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "description": {
          "description": "Human-readable summary of the estimate.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "note": {
          "description": "Footnote or explanatory note about the estimate.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of attribute estimate, e.g., confidence interval or p value.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "quantity": {
          "description": "The singular quantity of the attribute estimate, for attribute estimates represented as single values; also used to report unit of measure.",
          "$ref": "#/definitions/Quantity"
        },
        "level": {
          "description": "Use 95 for a 95% confidence interval.",
          "$ref": "#/definitions/decimal"
        },
        "_level": {
          "description": "Extensions for level",
          "$ref": "#/definitions/Element"
        },
        "range": {
          "description": "Lower bound of confidence interval.",
          "$ref": "#/definitions/Range"
        },
        "attributeEstimate": {
          "description": "A nested attribute estimate; which is the attribute estimate of an attribute estimate.",
          "items": {
            "$ref": "#/definitions/Evidence_AttributeEstimate"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Evidence_ModelCharacteristic": {
      "description": "The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (e.g., population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "Description of a component of the method to generate the statistic.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "value": {
          "description": "Further specification of the quantified value of the component of the method to generate the statistic.",
          "$ref": "#/definitions/Quantity"
        },
        "variable": {
          "description": "A variable adjusted for in the adjusted analysis.",
          "items": {
            "$ref": "#/definitions/Evidence_Variable"
          },
          "type": "array"
        },
        "attributeEstimate": {
          "description": "An attribute of the statistic used as a model characteristic.",
          "items": {
            "$ref": "#/definitions/Evidence_AttributeEstimate"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "Evidence_Variable": {
      "description": "The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (e.g., population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "variableDefinition": {
          "description": "Description of the variable.",
          "$ref": "#/definitions/Reference"
        },
        "handling": {
          "description": "How the variable is classified for use in adjusted analysis.",
          "$ref": "#/definitions/code"
        },
        "_handling": {
          "description": "Extensions for handling",
          "$ref": "#/definitions/Element"
        },
        "valueCategory": {
          "description": "Description for grouping of ordinal or polychotomous variables.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "valueQuantity": {
          "description": "Discrete value for grouping of ordinal or polychotomous variables.",
          "items": {
            "$ref": "#/definitions/Quantity"
          },
          "type": "array"
        },
        "valueRange": {
          "description": "Range of values for grouping of ordinal or polychotomous variables.",
          "items": {
            "$ref": "#/definitions/Range"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "variableDefinition"
      ]
    },
    "Evidence_Certainty": {
      "description": "The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (e.g., population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "description": {
          "description": "Textual description of certainty.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "note": {
          "description": "Footnotes and/or explanatory notes.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "type": {
          "description": "Aspect of certainty being rated.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "rating": {
          "description": "Assessment or judgement of the aspect.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "rater": {
          "description": "Individual or group who did the rating.",
          "$ref": "#/definitions/string"
        },
        "_rater": {
          "description": "Extensions for rater",
          "$ref": "#/definitions/Element"
        },
        "subcomponent": {
          "description": "A domain or subdomain of certainty.",
          "items": {
            "$ref": "#/definitions/Evidence_Certainty"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "EvidenceReport": {
      "description": "The EvidenceReport Resource is a specialized container for a collection of resources and codeable concepts, adapted to support compositions of Evidence, EvidenceVariable, and Citation resources and related concepts.",
      "properties": {
        "resourceType": {
          "description": "This is a EvidenceReport resource",
          "const": "EvidenceReport"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this EvidenceReport when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this summary is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the summary is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this EvidenceReport when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the {{title}} when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the {{title}} author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the {{title}}. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the {{title}}.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this summary. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this {{title}} is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the {{title}} was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the {{title}} changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the evidence report.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the {{title}} from a consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate evidence report instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the {{title}} is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this {{title}} is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the {{title}} and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the {{title}}.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "approvalDate": {
          "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
          "$ref": "#/definitions/date"
        },
        "_approvalDate": {
          "description": "Extensions for approvalDate",
          "$ref": "#/definitions/Element"
        },
        "lastReviewDate": {
          "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
          "$ref": "#/definitions/date"
        },
        "_lastReviewDate": {
          "description": "Extensions for lastReviewDate",
          "$ref": "#/definitions/Element"
        },
        "effectivePeriod": {
          "description": "The period during which the {{title}} content was or is planned to be in active use.",
          "$ref": "#/definitions/Period"
        },
        "topic": {
          "description": "Descriptive topics related to the content of the {{title}}. Topics provide a high-level categorization as well as keywords for the {{title}} that can be useful for filtering and searching.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "author": {
          "description": "An individiual, organization, or device primarily involved in the creation and maintenance of the content.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "editor": {
          "description": "An individiual, organization, or device primarily responsible for internal coherence of the content.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "reviewer": {
          "description": "An individiual, organization, or device primarily responsible for review of some aspect of the content.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "endorser": {
          "description": "An individiual, organization, or device responsible for officially endorsing the content for use in some setting.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "relatedArtifact": {
          "description": "Link, description or reference to artifact associated with the report.",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          },
          "type": "array"
        },
        "relatedIdentifier": {
          "description": "A formal identifier that is used to identify things closely related to this EvidenceReport.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "citeAsReference": {
          "description": "Citation Resource or display of suggested citation for this report.",
          "$ref": "#/definitions/Reference"
        },
        "citeAsMarkdown": {
          "description": "Citation Resource or display of suggested citation for this report.",
          "pattern": "^\\s*(\\S|\\s)*$",
          "type": "string"
        },
        "_citeAsMarkdown": {
          "description": "Extensions for citeAsMarkdown",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "Specifies the kind of report, such as grouping of classifiers, search results, or human-compiled expression.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "note": {
          "description": "Used for footnotes and annotations.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "subject": {
          "description": "Specifies the subject or focus of the report. Answers \"What is this report about?\".",
          "$ref": "#/definitions/EvidenceReport_Subject"
        },
        "relatesTo": {
          "description": "Relationships that this composition has with other compositions or documents that already exist.",
          "items": {
            "$ref": "#/definitions/EvidenceReport_RelatesTo"
          },
          "type": "array"
        },
        "section": {
          "description": "The root of the sections that make up the composition.",
          "items": {
            "$ref": "#/definitions/EvidenceReport_Section"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "subject",
        "resourceType"
      ]
    },
    "EvidenceReport_Subject": {
      "description": "The EvidenceReport Resource is a specialized container for a collection of resources and codeable concepts, adapted to support compositions of Evidence, EvidenceVariable, and Citation resources and related concepts.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "characteristic": {
          "description": "Characteristic.",
          "items": {
            "$ref": "#/definitions/EvidenceReport_Characteristic"
          },
          "type": "array"
        },
        "note": {
          "description": "Used for general notes and annotations not coded elsewhere.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "EvidenceReport_Characteristic": {
      "description": "The EvidenceReport Resource is a specialized container for a collection of resources and codeable concepts, adapted to support compositions of Evidence, EvidenceVariable, and Citation resources and related concepts.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "Characteristic code.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueReference": {
          "description": "Characteristic value.",
          "$ref": "#/definitions/Reference"
        },
        "valueCodeableConcept": {
          "description": "Characteristic value.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueBoolean": {
          "description": "Characteristic value.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueQuantity": {
          "description": "Characteristic value.",
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "description": "Characteristic value.",
          "$ref": "#/definitions/Range"
        },
        "exclude": {
          "description": "Is used to express not the characteristic.",
          "$ref": "#/definitions/boolean"
        },
        "_exclude": {
          "description": "Extensions for exclude",
          "$ref": "#/definitions/Element"
        },
        "period": {
          "description": "Timeframe for the characteristic.",
          "$ref": "#/definitions/Period"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "EvidenceReport_RelatesTo": {
      "description": "The EvidenceReport Resource is a specialized container for a collection of resources and codeable concepts, adapted to support compositions of Evidence, EvidenceVariable, and Citation resources and related concepts.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "The type of relationship that this composition has with anther composition or document.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "target": {
          "description": "The target composition/document of this relationship.",
          "$ref": "#/definitions/EvidenceReport_Target"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "target"
      ]
    },
    "EvidenceReport_Target": {
      "description": "The EvidenceReport Resource is a specialized container for a collection of resources and codeable concepts, adapted to support compositions of Evidence, EvidenceVariable, and Citation resources and related concepts.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "Target of the relationship URL.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "Target of the relationship Identifier.",
          "$ref": "#/definitions/Identifier"
        },
        "display": {
          "description": "Target of the relationship Display.",
          "$ref": "#/definitions/markdown"
        },
        "_display": {
          "description": "Extensions for display",
          "$ref": "#/definitions/Element"
        },
        "resource": {
          "description": "Target of the relationship Resource reference.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "EvidenceReport_Section": {
      "description": "The EvidenceReport Resource is a specialized container for a collection of resources and codeable concepts, adapted to support compositions of Evidence, EvidenceVariable, and Citation resources and related concepts.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "title": {
          "description": "The label for this particular section.  This will be part of the rendered content for the document, and is often used to build a table of contents.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "focus": {
          "description": "A code identifying the kind of content contained within the section. This should be consistent with the section title.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "focusReference": {
          "description": "A definitional Resource identifying the kind of content contained within the section. This should be consistent with the section title.",
          "$ref": "#/definitions/Reference"
        },
        "author": {
          "description": "Identifies who is responsible for the information in this section, not necessarily who typed it in.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "text": {
          "description": "A human-readable narrative that contains the attested content of the section, used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is peferred to contain sufficient detail to make it acceptable for a human to just read the narrative.",
          "$ref": "#/definitions/Narrative"
        },
        "mode": {
          "description": "How the entry list was prepared - whether it is a working list that is suitable for being maintained on an ongoing basis, or if it represents a snapshot of a list of items from another source, or whether it is a prepared list where items may be marked as added, modified or deleted.",
          "$ref": "#/definitions/code"
        },
        "_mode": {
          "description": "Extensions for mode",
          "$ref": "#/definitions/Element"
        },
        "orderedBy": {
          "description": "Specifies the order applied to the items in the section entries.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "entryClassifier": {
          "description": "Specifies any type of classification of the evidence report.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "entryReference": {
          "description": "A reference to the actual resource from which the narrative in the section is derived.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "entryQuantity": {
          "description": "Quantity as content.",
          "items": {
            "$ref": "#/definitions/Quantity"
          },
          "type": "array"
        },
        "emptyReason": {
          "description": "If the section is empty, why the list is empty. An empty section typically has some text explaining the empty reason.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "section": {
          "description": "A nested sub-section within this section.",
          "items": {
            "$ref": "#/definitions/EvidenceReport_Section"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "EvidenceVariable": {
      "description": "The EvidenceVariable resource describes an element that knowledge (Evidence) is about.",
      "properties": {
        "resourceType": {
          "description": "This is a EvidenceVariable resource",
          "const": "EvidenceVariable"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this evidence variable when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this evidence variable is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the evidence variable is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this evidence variable when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the evidence variable when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the evidence variable author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active artifacts.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the evidence variable. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the evidence variable.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this evidence variable. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this resource is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the evidence variable was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the evidence variable changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the evidence variable.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the evidence variable from a consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate evidence variable instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the {{title}} is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this {{title}} is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the resource and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the resource.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "approvalDate": {
          "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
          "$ref": "#/definitions/date"
        },
        "_approvalDate": {
          "description": "Extensions for approvalDate",
          "$ref": "#/definitions/Element"
        },
        "lastReviewDate": {
          "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
          "$ref": "#/definitions/date"
        },
        "_lastReviewDate": {
          "description": "Extensions for lastReviewDate",
          "$ref": "#/definitions/Element"
        },
        "effectivePeriod": {
          "description": "The period during which the resource content was or is planned to be in active use.",
          "$ref": "#/definitions/Period"
        },
        "topic": {
          "description": "Descriptive topics related to the content of the {{title}}. Topics provide a high-level categorization as well as keywords for the {{title}} that can be useful for filtering and searching.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "author": {
          "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "editor": {
          "description": "An individual or organization primarily responsible for internal coherence of the content.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "reviewer": {
          "description": "An individual or organization primarily responsible for review of some aspect of the content.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "endorser": {
          "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "relatedArtifact": {
          "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          },
          "type": "array"
        },
        "shortTitle": {
          "description": "The short title provides an alternate title for use in informal descriptive contexts where the full, formal title is not necessary.",
          "$ref": "#/definitions/string"
        },
        "_shortTitle": {
          "description": "Extensions for shortTitle",
          "$ref": "#/definitions/Element"
        },
        "subtitle": {
          "description": "An explanatory or alternate title for the EvidenceVariable giving additional information about its content.",
          "$ref": "#/definitions/string"
        },
        "_subtitle": {
          "description": "Extensions for subtitle",
          "$ref": "#/definitions/Element"
        },
        "note": {
          "description": "A human-readable string to clarify or explain concepts about the resource.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "actual": {
          "description": "True if the actual variable measured, false if a conceptual representation of the intended variable.",
          "$ref": "#/definitions/boolean"
        },
        "_actual": {
          "description": "Extensions for actual",
          "$ref": "#/definitions/Element"
        },
        "characteristic": {
          "description": "A defining factor of the EvidenceVariable. Multiple characteristics are applied with \"and\" semantics.",
          "items": {
            "$ref": "#/definitions/EvidenceVariable_Characteristic"
          },
          "type": "array"
        },
        "handling": {
          "description": "The method of handling in statistical analysis.",
          "$ref": "#/definitions/code"
        },
        "_handling": {
          "description": "Extensions for handling",
          "$ref": "#/definitions/Element"
        },
        "category": {
          "description": "A grouping for ordinal or polychotomous variables.",
          "items": {
            "$ref": "#/definitions/EvidenceVariable_Category"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "EvidenceVariable_Characteristic": {
      "description": "The EvidenceVariable resource describes an element that knowledge (Evidence) is about.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "linkId": {
          "description": "Label used for when a characteristic refers to another characteristic.",
          "$ref": "#/definitions/id"
        },
        "_linkId": {
          "description": "Extensions for linkId",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "A short, natural language description of the characteristic that could be used to communicate the criteria to an end-user.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "note": {
          "description": "A human-readable string to clarify or explain concepts about the characteristic.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "exclude": {
          "description": "When true, this characteristic is an exclusion criterion. In other words, not matching this characteristic definition is equivalent to meeting this criterion.",
          "$ref": "#/definitions/boolean"
        },
        "_exclude": {
          "description": "Extensions for exclude",
          "$ref": "#/definitions/Element"
        },
        "definitionReference": {
          "description": "Defines the characteristic using a Reference.",
          "$ref": "#/definitions/Reference"
        },
        "definitionCanonical": {
          "description": "Defines the characteristic using Canonical.",
          "$ref": "#/definitions/canonical"
        },
        "definitionCodeableConcept": {
          "description": "Defines the characteristic using CodeableConcept.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "definitionExpression": {
          "description": "Defines the characteristic using Expression.",
          "$ref": "#/definitions/Expression"
        },
        "definitionId": {
          "description": "Defines the characteristic using id.",
          "$ref": "#/definitions/id"
        },
        "_definitionId": {
          "description": "Extensions for definitionId",
          "$ref": "#/definitions/Element"
        },
        "definitionByTypeAndValue": {
          "description": "Defines the characteristic using both a type and value[x] elements.",
          "$ref": "#/definitions/EvidenceVariable_DefinitionByTypeAndValue"
        },
        "definitionByCombination": {
          "description": "Defines the characteristic as a combination of two or more characteristics.",
          "$ref": "#/definitions/EvidenceVariable_DefinitionByCombination"
        },
        "timeFromEvent": {
          "description": "Observation time from study specified event.",
          "items": {
            "$ref": "#/definitions/EvidenceVariable_TimeFromEvent"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "EvidenceVariable_DefinitionByTypeAndValue": {
      "description": "The EvidenceVariable resource describes an element that knowledge (Evidence) is about.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Used to express the type of characteristic.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "method": {
          "description": "Method for how the characteristic value was determined.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "device": {
          "description": "Device used for determining characteristic.",
          "$ref": "#/definitions/Reference"
        },
        "valueCodeableConcept": {
          "description": "Defines the characteristic when paired with characteristic.type.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueBoolean": {
          "description": "Defines the characteristic when paired with characteristic.type.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueQuantity": {
          "description": "Defines the characteristic when paired with characteristic.type.",
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "description": "Defines the characteristic when paired with characteristic.type.",
          "$ref": "#/definitions/Range"
        },
        "valueReference": {
          "description": "Defines the characteristic when paired with characteristic.type.",
          "$ref": "#/definitions/Reference"
        },
        "valueId": {
          "description": "Defines the characteristic when paired with characteristic.type.",
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string"
        },
        "_valueId": {
          "description": "Extensions for valueId",
          "$ref": "#/definitions/Element"
        },
        "offset": {
          "description": "Defines the reference point for comparison when valueQuantity is not compared to zero.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "EvidenceVariable_DefinitionByCombination": {
      "description": "The EvidenceVariable resource describes an element that knowledge (Evidence) is about.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "Used to specify if two or more characteristics are combined with OR or AND.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "threshold": {
          "description": "Provides the value of \"n\" when \"at-least\" or \"at-most\" codes are used.",
          "$ref": "#/definitions/positiveInt"
        },
        "_threshold": {
          "description": "Extensions for threshold",
          "$ref": "#/definitions/Element"
        },
        "characteristic": {
          "description": "A defining factor of the characteristic.",
          "items": {
            "$ref": "#/definitions/EvidenceVariable_Characteristic"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "characteristic"
      ]
    },
    "EvidenceVariable_TimeFromEvent": {
      "description": "The EvidenceVariable resource describes an element that knowledge (Evidence) is about.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "description": {
          "description": "Human readable description.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "note": {
          "description": "A human-readable string to clarify or explain concepts about the timeFromEvent.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "eventCodeableConcept": {
          "description": "The event used as a base point (reference point) in time.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "eventReference": {
          "description": "The event used as a base point (reference point) in time.",
          "$ref": "#/definitions/Reference"
        },
        "eventDateTime": {
          "description": "The event used as a base point (reference point) in time.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_eventDateTime": {
          "description": "Extensions for eventDateTime",
          "$ref": "#/definitions/Element"
        },
        "eventId": {
          "description": "The event used as a base point (reference point) in time.",
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string"
        },
        "_eventId": {
          "description": "Extensions for eventId",
          "$ref": "#/definitions/Element"
        },
        "quantity": {
          "description": "Used to express the observation at a defined amount of time after the study start.",
          "$ref": "#/definitions/Quantity"
        },
        "range": {
          "description": "Used to express the observation within a period after the study start.",
          "$ref": "#/definitions/Range"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "EvidenceVariable_Category": {
      "description": "The EvidenceVariable resource describes an element that knowledge (Evidence) is about.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "Description of the grouping.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "valueCodeableConcept": {
          "description": "Definition of the grouping.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": {
          "description": "Definition of the grouping.",
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "description": "Definition of the grouping.",
          "$ref": "#/definitions/Range"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ExampleScenario": {
      "description": "Example of workflow instance.",
      "properties": {
        "resourceType": {
          "description": "This is a ExampleScenario resource",
          "const": "ExampleScenario"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this example scenario when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this example scenario is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the example scenario is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this example scenario when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the example scenario when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the example scenario author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "Temporarily retained for tooling purposes.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the ExampleScenario.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this example scenario. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this example scenario is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the example scenario was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the example scenario changes. (e.g. the \u0027content logical definition\u0027).",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the example scenario.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the ExampleScenario from a consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate example scenario instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the example scenario is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "What the example scenario resource is created for. This should not be used to show the business purpose of the scenario itself, but the purpose of documenting a scenario.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the example scenario and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the example scenario.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "actor": {
          "description": "A system or person who shares or receives an instance within the scenario.",
          "items": {
            "$ref": "#/definitions/ExampleScenario_Actor"
          },
          "type": "array"
        },
        "instance": {
          "description": "A single data collection that is shared as part of the scenario.",
          "items": {
            "$ref": "#/definitions/ExampleScenario_Instance"
          },
          "type": "array"
        },
        "process": {
          "description": "A group of operations that represents a significant step within a scenario.",
          "items": {
            "$ref": "#/definitions/ExampleScenario_Process"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "ExampleScenario_Actor": {
      "description": "Example of workflow instance.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "key": {
          "description": "A unique string within the scenario that is used to reference the actor.",
          "$ref": "#/definitions/string"
        },
        "_key": {
          "description": "Extensions for key",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "The category of actor - person or system.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "The human-readable name for the actor used when rendering the scenario.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "An explanation of who/what the actor is and its role in the scenario.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ExampleScenario_Instance": {
      "description": "Example of workflow instance.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "key": {
          "description": "A unique string within the scenario that is used to reference the instance.",
          "$ref": "#/definitions/string"
        },
        "_key": {
          "description": "Extensions for key",
          "$ref": "#/definitions/Element"
        },
        "structureType": {
          "description": "A code indicating the kind of data structure (FHIR resource or some other standard) this is an instance of.",
          "$ref": "#/definitions/Coding"
        },
        "structureVersion": {
          "description": "Conveys the version of the data structure instantiated.  I.e. what release of FHIR, X12, OpenEHR, etc. is instance compliant with.",
          "$ref": "#/definitions/string"
        },
        "_structureVersion": {
          "description": "Extensions for structureVersion",
          "$ref": "#/definitions/Element"
        },
        "structureProfileCanonical": {
          "description": "Refers to a profile, template or other ruleset the instance adheres to.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_structureProfileCanonical": {
          "description": "Extensions for structureProfileCanonical",
          "$ref": "#/definitions/Element"
        },
        "structureProfileUri": {
          "description": "Refers to a profile, template or other ruleset the instance adheres to.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_structureProfileUri": {
          "description": "Extensions for structureProfileUri",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short descriptive label the instance to be used in tables or diagrams.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "An explanation of what the instance contains and what it\u0027s for.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "content": {
          "description": "Points to an instance (typically an example) that shows the data that would corespond to this instance.",
          "$ref": "#/definitions/Reference"
        },
        "version": {
          "description": "Represents the instance as it was at a specific time-point.",
          "items": {
            "$ref": "#/definitions/ExampleScenario_Version"
          },
          "type": "array"
        },
        "containedInstance": {
          "description": "References to other instances that can be found within this instance (e.g. the observations contained in a bundle).",
          "items": {
            "$ref": "#/definitions/ExampleScenario_ContainedInstance"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "structureType"
      ]
    },
    "ExampleScenario_Version": {
      "description": "Example of workflow instance.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "key": {
          "description": "A unique string within the instance that is used to reference the version of the instance.",
          "$ref": "#/definitions/string"
        },
        "_key": {
          "description": "Extensions for key",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short descriptive label the version to be used in tables or diagrams.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "An explanation of what this specific version of the instance contains and represents.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "content": {
          "description": "Points to an instance (typically an example) that shows the data that would flow at this point in the scenario.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ExampleScenario_ContainedInstance": {
      "description": "Example of workflow instance.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "instanceReference": {
          "description": "A reference to the key of an instance found within this one.",
          "$ref": "#/definitions/string"
        },
        "_instanceReference": {
          "description": "Extensions for instanceReference",
          "$ref": "#/definitions/Element"
        },
        "versionReference": {
          "description": "A reference to the key of a specific version of an instance in this instance.",
          "$ref": "#/definitions/string"
        },
        "_versionReference": {
          "description": "Extensions for versionReference",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ExampleScenario_Process": {
      "description": "Example of workflow instance.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "title": {
          "description": "A short descriptive label the process to be used in tables or diagrams.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "An explanation of what the process represents and what it does.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "preConditions": {
          "description": "Description of the initial state of the actors, environment and data before the process starts.",
          "$ref": "#/definitions/markdown"
        },
        "_preConditions": {
          "description": "Extensions for preConditions",
          "$ref": "#/definitions/Element"
        },
        "postConditions": {
          "description": "Description of the final state of the actors, environment and data after the process has been successfully completed.",
          "$ref": "#/definitions/markdown"
        },
        "_postConditions": {
          "description": "Extensions for postConditions",
          "$ref": "#/definitions/Element"
        },
        "step": {
          "description": "A significant action that occurs as part of the process.",
          "items": {
            "$ref": "#/definitions/ExampleScenario_Step"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ExampleScenario_Step": {
      "description": "Example of workflow instance.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "number": {
          "description": "The sequential number of the step, e.g. 1.2.5.",
          "$ref": "#/definitions/string"
        },
        "_number": {
          "description": "Extensions for number",
          "$ref": "#/definitions/Element"
        },
        "process": {
          "description": "Indicates that the step is a complex sub-process with its own steps.",
          "$ref": "#/definitions/ExampleScenario_Process"
        },
        "workflow": {
          "description": "Indicates that the step is defined by a seaparate scenario instance.",
          "$ref": "#/definitions/canonical"
        },
        "operation": {
          "description": "The step represents a single operation invoked on receiver by sender.",
          "$ref": "#/definitions/ExampleScenario_Operation"
        },
        "alternative": {
          "description": "Indicates an alternative step that can be taken instead of the sub-process, scenario or operation.  E.g. to represent non-happy-path/exceptional/atypical circumstances.",
          "items": {
            "$ref": "#/definitions/ExampleScenario_Alternative"
          },
          "type": "array"
        },
        "pause": {
          "description": "If true, indicates that, following this step, there is a pause in the flow and the subsequent step will occur at some later time (triggered by some event).",
          "$ref": "#/definitions/boolean"
        },
        "_pause": {
          "description": "Extensions for pause",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ExampleScenario_Operation": {
      "description": "Example of workflow instance.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The standardized type of action (FHIR or otherwise).",
          "$ref": "#/definitions/Coding"
        },
        "title": {
          "description": "A short descriptive label the step to be used in tables or diagrams.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "initiator": {
          "description": "The system that invokes the action/transmits the data.",
          "$ref": "#/definitions/string"
        },
        "_initiator": {
          "description": "Extensions for initiator",
          "$ref": "#/definitions/Element"
        },
        "receiver": {
          "description": "The system on which the action is invoked/receives the data.",
          "$ref": "#/definitions/string"
        },
        "_receiver": {
          "description": "Extensions for receiver",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "An explanation of what the operation represents and what it does.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "initiatorActive": {
          "description": "If false, the initiator is deactivated right after the operation.",
          "$ref": "#/definitions/boolean"
        },
        "_initiatorActive": {
          "description": "Extensions for initiatorActive",
          "$ref": "#/definitions/Element"
        },
        "receiverActive": {
          "description": "If false, the receiver is deactivated right after the operation.",
          "$ref": "#/definitions/boolean"
        },
        "_receiverActive": {
          "description": "Extensions for receiverActive",
          "$ref": "#/definitions/Element"
        },
        "request": {
          "description": "A reference to the instance that is transmitted from requester to receiver as part of the invocation of the operation.",
          "$ref": "#/definitions/ExampleScenario_ContainedInstance"
        },
        "response": {
          "description": "A reference to the instance that is transmitted from receiver to requester as part of the operation\u0027s synchronous response (if any).",
          "$ref": "#/definitions/ExampleScenario_ContainedInstance"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ExampleScenario_Alternative": {
      "description": "Example of workflow instance.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "title": {
          "description": "The label to display for the alternative that gives a sense of the circumstance in which the alternative should be invoked.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "A human-readable description of the alternative explaining when the alternative should occur rather than the base step.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "step": {
          "description": "Indicates the operation, sub-process or scenario that happens if the alternative option is selected.",
          "items": {
            "$ref": "#/definitions/ExampleScenario_Step"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ExplanationOfBenefit": {
      "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
      "properties": {
        "resourceType": {
          "description": "This is a ExplanationOfBenefit resource",
          "const": "ExplanationOfBenefit"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "A unique identifier assigned to this explanation of benefit.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of the resource instance.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "The category of claim, e.g. oral, pharmacy, vision, institutional, professional.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subType": {
          "description": "A finer grained suite of claim type codes which may convey additional information such as Inpatient vs Outpatient and/or a specialty service.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "use": {
          "description": "A code to indicate whether the nature of the request is: Claim - A request to an Insurer to adjudicate the supplied charges for health care goods and services under the identified policy and to pay the determined Benefit amount, if any; Preauthorization - A request to an Insurer to adjudicate the supplied proposed future charges for health care goods and services under the identified policy and to approve the services and provide the expected benefit amounts and potentially to reserve funds to pay the benefits when Claims for the indicated services are later submitted; or, Pre-determination - A request to an Insurer to adjudicate the supplied \u0027what if\u0027 charges for health care goods and services under the identified policy and report back what the Benefit payable would be had the services actually been provided.",
          "$ref": "#/definitions/code"
        },
        "_use": {
          "description": "Extensions for use",
          "$ref": "#/definitions/Element"
        },
        "patient": {
          "description": "The party to whom the professional services and/or products have been supplied or are being considered and for whom actual for forecast reimbursement is sought.",
          "$ref": "#/definitions/Reference"
        },
        "billablePeriod": {
          "description": "The period for which charges are being submitted.",
          "$ref": "#/definitions/Period"
        },
        "created": {
          "description": "The date this resource was created.",
          "$ref": "#/definitions/dateTime"
        },
        "_created": {
          "description": "Extensions for created",
          "$ref": "#/definitions/Element"
        },
        "enterer": {
          "description": "Individual who created the claim, predetermination or preauthorization.",
          "$ref": "#/definitions/Reference"
        },
        "insurer": {
          "description": "The party responsible for authorization, adjudication and reimbursement.",
          "$ref": "#/definitions/Reference"
        },
        "provider": {
          "description": "The provider which is responsible for the claim, predetermination or preauthorization.",
          "$ref": "#/definitions/Reference"
        },
        "priority": {
          "description": "The provider-required urgency of processing the request. Typical values include: stat, normal deferred.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "fundsReserveRequested": {
          "description": "A code to indicate whether and for whom funds are to be reserved for future claims.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "fundsReserve": {
          "description": "A code, used only on a response to a preauthorization, to indicate whether the benefits payable have been reserved and for whom.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "related": {
          "description": "Other claims which are related to this claim such as prior submissions or claims for related services or for the same event.",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefit_Related"
          },
          "type": "array"
        },
        "prescription": {
          "description": "Prescription is the document/authorization given to the claim author for them to provide products and services for which consideration (reimbursement) is sought. Could be a RX for medications, an \u0027order\u0027 for oxygen or wheelchair or physiotherapy treatments.",
          "$ref": "#/definitions/Reference"
        },
        "originalPrescription": {
          "description": "Original prescription which has been superseded by this prescription to support the dispensing of pharmacy services, medications or products.",
          "$ref": "#/definitions/Reference"
        },
        "payee": {
          "description": "The party to be reimbursed for cost of the products and services according to the terms of the policy.",
          "$ref": "#/definitions/ExplanationOfBenefit_Payee"
        },
        "referral": {
          "description": "The referral information received by the claim author, it is not to be used when the author generates a referral for a patient. A copy of that referral may be provided as supporting information. Some insurers require proof of referral to pay for services or to pay specialist rates for services.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "A billed item may include goods or services provided in multiple encounters.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "facility": {
          "description": "Facility where the services were provided.",
          "$ref": "#/definitions/Reference"
        },
        "claim": {
          "description": "The business identifier for the instance of the adjudication request: claim predetermination or preauthorization.",
          "$ref": "#/definitions/Reference"
        },
        "claimResponse": {
          "description": "The business identifier for the instance of the adjudication response: claim, predetermination or preauthorization response.",
          "$ref": "#/definitions/Reference"
        },
        "outcome": {
          "description": "The outcome of the claim, predetermination, or preauthorization processing.",
          "$ref": "#/definitions/code"
        },
        "_outcome": {
          "description": "Extensions for outcome",
          "$ref": "#/definitions/Element"
        },
        "decision": {
          "description": "The result of the claim, predetermination, or preauthorization adjudication.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "disposition": {
          "description": "A human readable description of the status of the adjudication.",
          "$ref": "#/definitions/string"
        },
        "_disposition": {
          "description": "Extensions for disposition",
          "$ref": "#/definitions/Element"
        },
        "preAuthRef": {
          "description": "Reference from the Insurer which is used in later communications which refers to this adjudication.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_preAuthRef": {
          "description": "Extensions for preAuthRef",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "preAuthRefPeriod": {
          "description": "The timeframe during which the supplied preauthorization reference may be quoted on claims to obtain the adjudication as provided.",
          "items": {
            "$ref": "#/definitions/Period"
          },
          "type": "array"
        },
        "diagnosisRelatedGroup": {
          "description": "A package billing code or bundle code used to group products and services to a particular health condition (such as heart attack) which is based on a predetermined grouping code system.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "careTeam": {
          "description": "The members of the team who provided the products and services.",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefit_CareTeam"
          },
          "type": "array"
        },
        "supportingInfo": {
          "description": "Additional information codes regarding exceptions, special considerations, the condition, situation, prior or concurrent issues.",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefit_SupportingInfo"
          },
          "type": "array"
        },
        "diagnosis": {
          "description": "Information about diagnoses relevant to the claim items.",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefit_Diagnosis"
          },
          "type": "array"
        },
        "procedure": {
          "description": "Procedures performed on the patient relevant to the billing items with the claim.",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefit_Procedure"
          },
          "type": "array"
        },
        "precedence": {
          "description": "This indicates the relative order of a series of EOBs related to different coverages for the same suite of services.",
          "$ref": "#/definitions/positiveInt"
        },
        "_precedence": {
          "description": "Extensions for precedence",
          "$ref": "#/definitions/Element"
        },
        "insurance": {
          "description": "Financial instruments for reimbursement for the health care products and services specified on the claim.",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefit_Insurance"
          },
          "type": "array"
        },
        "accident": {
          "description": "Details of a accident which resulted in injuries which required the products and services listed in the claim.",
          "$ref": "#/definitions/ExplanationOfBenefit_Accident"
        },
        "patientPaid": {
          "description": "The amount paid by the patient, in total at the claim claim level or specifically for the item and detail level, to the provider for goods and services.",
          "$ref": "#/definitions/Money"
        },
        "item": {
          "description": "A claim line. Either a simple (a product or service) or a \u0027group\u0027 of details which can also be a simple items or groups of sub-details.",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefit_Item"
          },
          "type": "array"
        },
        "addItem": {
          "description": "The first-tier service adjudications for payor added product or service lines.",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefit_AddItem"
          },
          "type": "array"
        },
        "adjudication": {
          "description": "The adjudication results which are presented at the header level rather than at the line-item or add-item levels.",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefit_Adjudication"
          },
          "type": "array"
        },
        "total": {
          "description": "Categorized monetary totals for the adjudication.",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefit_Total"
          },
          "type": "array"
        },
        "payment": {
          "description": "Payment details for the adjudication of the claim.",
          "$ref": "#/definitions/ExplanationOfBenefit_Payment"
        },
        "formCode": {
          "description": "A code for the form to be used for printing the content.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "form": {
          "description": "The actual form, by reference or inclusion, for printing the content or an EOB.",
          "$ref": "#/definitions/Attachment"
        },
        "processNote": {
          "description": "A note that describes or explains adjudication results in a human readable form.",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefit_ProcessNote"
          },
          "type": "array"
        },
        "benefitPeriod": {
          "description": "The term of the benefits documented in this response.",
          "$ref": "#/definitions/Period"
        },
        "benefitBalance": {
          "description": "Balance by Benefit Category.",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefit_BenefitBalance"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "patient",
        "type",
        "resourceType"
      ]
    },
    "ExplanationOfBenefit_Related": {
      "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "claim": {
          "description": "Reference to a related claim.",
          "$ref": "#/definitions/Reference"
        },
        "relationship": {
          "description": "A code to convey how the claims are related.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "reference": {
          "description": "An alternate organizational reference to the case or file to which this particular claim pertains.",
          "$ref": "#/definitions/Identifier"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ExplanationOfBenefit_Payee": {
      "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Type of Party to be reimbursed: Subscriber, provider, other.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "party": {
          "description": "Reference to the individual or organization to whom any payment will be made.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ExplanationOfBenefit_CareTeam": {
      "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "sequence": {
          "description": "A number to uniquely identify care team entries.",
          "$ref": "#/definitions/positiveInt"
        },
        "_sequence": {
          "description": "Extensions for sequence",
          "$ref": "#/definitions/Element"
        },
        "provider": {
          "description": "Member of the team who provided the product or service.",
          "$ref": "#/definitions/Reference"
        },
        "responsible": {
          "description": "The party who is billing and/or responsible for the claimed products or services.",
          "$ref": "#/definitions/boolean"
        },
        "_responsible": {
          "description": "Extensions for responsible",
          "$ref": "#/definitions/Element"
        },
        "role": {
          "description": "The lead, assisting or supervising practitioner and their discipline if a multidisciplinary team.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "specialty": {
          "description": "The specialization of the practitioner or provider which is applicable for this service.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "provider"
      ]
    },
    "ExplanationOfBenefit_SupportingInfo": {
      "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "sequence": {
          "description": "A number to uniquely identify supporting information entries.",
          "$ref": "#/definitions/positiveInt"
        },
        "_sequence": {
          "description": "Extensions for sequence",
          "$ref": "#/definitions/Element"
        },
        "category": {
          "description": "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "code": {
          "description": "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient  for which care is sought.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "timingDate": {
          "description": "The date when or period to which this information refers.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_timingDate": {
          "description": "Extensions for timingDate",
          "$ref": "#/definitions/Element"
        },
        "timingPeriod": {
          "description": "The date when or period to which this information refers.",
          "$ref": "#/definitions/Period"
        },
        "valueBoolean": {
          "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueString": {
          "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueQuantity": {
          "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
          "$ref": "#/definitions/Quantity"
        },
        "valueAttachment": {
          "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
          "$ref": "#/definitions/Attachment"
        },
        "valueReference": {
          "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
          "$ref": "#/definitions/Reference"
        },
        "valueIdentifier": {
          "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
          "$ref": "#/definitions/Identifier"
        },
        "reason": {
          "description": "Provides the reason in the situation where a reason code is required in addition to the content.",
          "$ref": "#/definitions/Coding"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "category"
      ]
    },
    "ExplanationOfBenefit_Diagnosis": {
      "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "sequence": {
          "description": "A number to uniquely identify diagnosis entries.",
          "$ref": "#/definitions/positiveInt"
        },
        "_sequence": {
          "description": "Extensions for sequence",
          "$ref": "#/definitions/Element"
        },
        "diagnosisCodeableConcept": {
          "description": "The nature of illness or problem in a coded form or as a reference to an external defined Condition.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "diagnosisReference": {
          "description": "The nature of illness or problem in a coded form or as a reference to an external defined Condition.",
          "$ref": "#/definitions/Reference"
        },
        "type": {
          "description": "When the condition was observed or the relative ranking.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "onAdmission": {
          "description": "Indication of whether the diagnosis was present on admission to a facility.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ExplanationOfBenefit_Procedure": {
      "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "sequence": {
          "description": "A number to uniquely identify procedure entries.",
          "$ref": "#/definitions/positiveInt"
        },
        "_sequence": {
          "description": "Extensions for sequence",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "When the condition was observed or the relative ranking.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "date": {
          "description": "Date and optionally time the procedure was performed.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "procedureCodeableConcept": {
          "description": "The code or reference to a Procedure resource which identifies the clinical intervention performed.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "procedureReference": {
          "description": "The code or reference to a Procedure resource which identifies the clinical intervention performed.",
          "$ref": "#/definitions/Reference"
        },
        "udi": {
          "description": "Unique Device Identifiers associated with this line item.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ExplanationOfBenefit_Insurance": {
      "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "focal": {
          "description": "A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true.",
          "$ref": "#/definitions/boolean"
        },
        "_focal": {
          "description": "Extensions for focal",
          "$ref": "#/definitions/Element"
        },
        "coverage": {
          "description": "Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient\u0027s actual coverage within the insurer\u0027s information system.",
          "$ref": "#/definitions/Reference"
        },
        "preAuthRef": {
          "description": "Reference numbers previously provided by the insurer to the provider to be quoted on subsequent claims containing services or products related to the prior authorization.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_preAuthRef": {
          "description": "Extensions for preAuthRef",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "coverage"
      ]
    },
    "ExplanationOfBenefit_Accident": {
      "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "date": {
          "description": "Date of an accident event  related to the products and services contained in the claim.",
          "$ref": "#/definitions/date"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "The type or context of the accident event for the purposes of selection of potential insurance coverages and determination of coordination between insurers.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "locationAddress": {
          "description": "The physical location of the accident event.",
          "$ref": "#/definitions/Address"
        },
        "locationReference": {
          "description": "The physical location of the accident event.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ExplanationOfBenefit_Item": {
      "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "sequence": {
          "description": "A number to uniquely identify item entries.",
          "$ref": "#/definitions/positiveInt"
        },
        "_sequence": {
          "description": "Extensions for sequence",
          "$ref": "#/definitions/Element"
        },
        "careTeamSequence": {
          "description": "Care team members related to this service or product.",
          "items": {
            "$ref": "#/definitions/positiveInt"
          },
          "type": "array"
        },
        "_careTeamSequence": {
          "description": "Extensions for careTeamSequence",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "diagnosisSequence": {
          "description": "Diagnoses applicable for this service or product.",
          "items": {
            "$ref": "#/definitions/positiveInt"
          },
          "type": "array"
        },
        "_diagnosisSequence": {
          "description": "Extensions for diagnosisSequence",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "procedureSequence": {
          "description": "Procedures applicable for this service or product.",
          "items": {
            "$ref": "#/definitions/positiveInt"
          },
          "type": "array"
        },
        "_procedureSequence": {
          "description": "Extensions for procedureSequence",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "informationSequence": {
          "description": "Exceptions, special conditions and supporting information applicable for this service or product.",
          "items": {
            "$ref": "#/definitions/positiveInt"
          },
          "type": "array"
        },
        "_informationSequence": {
          "description": "Extensions for informationSequence",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "revenue": {
          "description": "The type of revenue or cost center providing the product and/or service.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "category": {
          "description": "Code to identify the general type of benefits under which products and services are provided.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "productOrService": {
          "description": "When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "productOrServiceEnd": {
          "description": "This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifier": {
          "description": "Item typification or modifiers codes to convey additional context for the product or service.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "programCode": {
          "description": "Identifies the program under which this may be recovered.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "servicedDate": {
          "description": "The date or dates when the service or product was supplied, performed or completed.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_servicedDate": {
          "description": "Extensions for servicedDate",
          "$ref": "#/definitions/Element"
        },
        "servicedPeriod": {
          "description": "The date or dates when the service or product was supplied, performed or completed.",
          "$ref": "#/definitions/Period"
        },
        "locationCodeableConcept": {
          "description": "Where the product or service was provided.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "locationAddress": {
          "description": "Where the product or service was provided.",
          "$ref": "#/definitions/Address"
        },
        "locationReference": {
          "description": "Where the product or service was provided.",
          "$ref": "#/definitions/Reference"
        },
        "patientPaid": {
          "description": "The amount paid by the patient, in total at the claim claim level or specifically for the item and detail level, to the provider for goods and services.",
          "$ref": "#/definitions/Money"
        },
        "quantity": {
          "description": "The number of repetitions of a service or product.",
          "$ref": "#/definitions/Quantity"
        },
        "unitPrice": {
          "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
          "$ref": "#/definitions/Money"
        },
        "factor": {
          "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
          "$ref": "#/definitions/decimal"
        },
        "_factor": {
          "description": "Extensions for factor",
          "$ref": "#/definitions/Element"
        },
        "tax": {
          "description": "The total of taxes applicable for this product or service.",
          "$ref": "#/definitions/Money"
        },
        "net": {
          "description": "The quantity times the unit price for an additional service or product or charge.",
          "$ref": "#/definitions/Money"
        },
        "udi": {
          "description": "Unique Device Identifiers associated with this line item.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "bodySite": {
          "description": "Physical location where the service is performed or applies.",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefit_BodySite"
          },
          "type": "array"
        },
        "encounter": {
          "description": "A billed item may include goods or services provided in multiple encounters.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "noteNumber": {
          "description": "The numbers associated with notes below which apply to the adjudication of this item.",
          "items": {
            "$ref": "#/definitions/positiveInt"
          },
          "type": "array"
        },
        "_noteNumber": {
          "description": "Extensions for noteNumber",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "decision": {
          "description": "The result of the claim, predetermination, or preauthorization adjudication.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "adjudication": {
          "description": "If this item is a group then the values here are a summary of the adjudication of the detail items. If this item is a simple product or service then this is the result of the adjudication of this item.",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefit_Adjudication"
          },
          "type": "array"
        },
        "detail": {
          "description": "Second-tier of goods and services.",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefit_Detail"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ExplanationOfBenefit_BodySite": {
      "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "site": {
          "description": "Physical service site on the patient (limb, tooth, etc.).",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "subSite": {
          "description": "A region or surface of the bodySite, e.g. limb region or tooth surface(s).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "site"
      ]
    },
    "ExplanationOfBenefit_Adjudication": {
      "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "category": {
          "description": "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "reason": {
          "description": "A code supporting the understanding of the adjudication result and explaining variance from expected amount.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "amount": {
          "description": "Monetary amount associated with the category.",
          "$ref": "#/definitions/Money"
        },
        "value": {
          "description": "A non-monetary value associated with the category. Mutually exclusive to the amount element above.",
          "$ref": "#/definitions/decimal"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "category"
      ]
    },
    "ExplanationOfBenefit_Detail": {
      "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "sequence": {
          "description": "A claim detail line. Either a simple (a product or service) or a \u0027group\u0027 of sub-details which are simple items.",
          "$ref": "#/definitions/positiveInt"
        },
        "_sequence": {
          "description": "Extensions for sequence",
          "$ref": "#/definitions/Element"
        },
        "revenue": {
          "description": "The type of revenue or cost center providing the product and/or service.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "category": {
          "description": "Code to identify the general type of benefits under which products and services are provided.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "productOrService": {
          "description": "When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "productOrServiceEnd": {
          "description": "This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifier": {
          "description": "Item typification or modifiers codes to convey additional context for the product or service.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "programCode": {
          "description": "Identifies the program under which this may be recovered.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "patientPaid": {
          "description": "The amount paid by the patient, in total at the claim claim level or specifically for the item and detail level, to the provider for goods and services.",
          "$ref": "#/definitions/Money"
        },
        "quantity": {
          "description": "The number of repetitions of a service or product.",
          "$ref": "#/definitions/Quantity"
        },
        "unitPrice": {
          "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
          "$ref": "#/definitions/Money"
        },
        "factor": {
          "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
          "$ref": "#/definitions/decimal"
        },
        "_factor": {
          "description": "Extensions for factor",
          "$ref": "#/definitions/Element"
        },
        "tax": {
          "description": "The total of taxes applicable for this product or service.",
          "$ref": "#/definitions/Money"
        },
        "net": {
          "description": "The quantity times the unit price for an additional service or product or charge.",
          "$ref": "#/definitions/Money"
        },
        "udi": {
          "description": "Unique Device Identifiers associated with this line item.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "noteNumber": {
          "description": "The numbers associated with notes below which apply to the adjudication of this item.",
          "items": {
            "$ref": "#/definitions/positiveInt"
          },
          "type": "array"
        },
        "_noteNumber": {
          "description": "Extensions for noteNumber",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "decision": {
          "description": "The result of the claim, predetermination, or preauthorization adjudication.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "adjudication": {
          "description": "The adjudication results.",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefit_Adjudication"
          },
          "type": "array"
        },
        "subDetail": {
          "description": "Third-tier of goods and services.",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefit_SubDetail"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ExplanationOfBenefit_SubDetail": {
      "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "sequence": {
          "description": "A claim detail line. Either a simple (a product or service) or a \u0027group\u0027 of sub-details which are simple items.",
          "$ref": "#/definitions/positiveInt"
        },
        "_sequence": {
          "description": "Extensions for sequence",
          "$ref": "#/definitions/Element"
        },
        "revenue": {
          "description": "The type of revenue or cost center providing the product and/or service.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "category": {
          "description": "Code to identify the general type of benefits under which products and services are provided.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "productOrService": {
          "description": "When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "productOrServiceEnd": {
          "description": "This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifier": {
          "description": "Item typification or modifiers codes to convey additional context for the product or service.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "programCode": {
          "description": "Identifies the program under which this may be recovered.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "patientPaid": {
          "description": "The amount paid by the patient, in total at the claim claim level or specifically for the item and detail level, to the provider for goods and services.",
          "$ref": "#/definitions/Money"
        },
        "quantity": {
          "description": "The number of repetitions of a service or product.",
          "$ref": "#/definitions/Quantity"
        },
        "unitPrice": {
          "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
          "$ref": "#/definitions/Money"
        },
        "factor": {
          "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
          "$ref": "#/definitions/decimal"
        },
        "_factor": {
          "description": "Extensions for factor",
          "$ref": "#/definitions/Element"
        },
        "tax": {
          "description": "The total of taxes applicable for this product or service.",
          "$ref": "#/definitions/Money"
        },
        "net": {
          "description": "The quantity times the unit price for an additional service or product or charge.",
          "$ref": "#/definitions/Money"
        },
        "udi": {
          "description": "Unique Device Identifiers associated with this line item.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "noteNumber": {
          "description": "The numbers associated with notes below which apply to the adjudication of this item.",
          "items": {
            "$ref": "#/definitions/positiveInt"
          },
          "type": "array"
        },
        "_noteNumber": {
          "description": "Extensions for noteNumber",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "decision": {
          "description": "The result of the claim, predetermination, or preauthorization adjudication.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "adjudication": {
          "description": "The adjudication results.",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefit_Adjudication"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ExplanationOfBenefit_AddItem": {
      "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "itemSequence": {
          "description": "Claim items which this service line is intended to replace.",
          "items": {
            "$ref": "#/definitions/positiveInt"
          },
          "type": "array"
        },
        "_itemSequence": {
          "description": "Extensions for itemSequence",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "detailSequence": {
          "description": "The sequence number of the details within the claim item which this line is intended to replace.",
          "items": {
            "$ref": "#/definitions/positiveInt"
          },
          "type": "array"
        },
        "_detailSequence": {
          "description": "Extensions for detailSequence",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "subDetailSequence": {
          "description": "The sequence number of the sub-details woithin the details within the claim item which this line is intended to replace.",
          "items": {
            "$ref": "#/definitions/positiveInt"
          },
          "type": "array"
        },
        "_subDetailSequence": {
          "description": "Extensions for subDetailSequence",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "provider": {
          "description": "The providers who are authorized for the services rendered to the patient.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "revenue": {
          "description": "The type of revenue or cost center providing the product and/or service.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "productOrService": {
          "description": "When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "productOrServiceEnd": {
          "description": "This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifier": {
          "description": "Item typification or modifiers codes to convey additional context for the product or service.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "programCode": {
          "description": "Identifies the program under which this may be recovered.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "servicedDate": {
          "description": "The date or dates when the service or product was supplied, performed or completed.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_servicedDate": {
          "description": "Extensions for servicedDate",
          "$ref": "#/definitions/Element"
        },
        "servicedPeriod": {
          "description": "The date or dates when the service or product was supplied, performed or completed.",
          "$ref": "#/definitions/Period"
        },
        "locationCodeableConcept": {
          "description": "Where the product or service was provided.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "locationAddress": {
          "description": "Where the product or service was provided.",
          "$ref": "#/definitions/Address"
        },
        "locationReference": {
          "description": "Where the product or service was provided.",
          "$ref": "#/definitions/Reference"
        },
        "patientPaid": {
          "description": "The amount paid by the patient, in total at the claim claim level or specifically for the item and detail level, to the provider for goods and services.",
          "$ref": "#/definitions/Money"
        },
        "quantity": {
          "description": "The number of repetitions of a service or product.",
          "$ref": "#/definitions/Quantity"
        },
        "unitPrice": {
          "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
          "$ref": "#/definitions/Money"
        },
        "factor": {
          "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
          "$ref": "#/definitions/decimal"
        },
        "_factor": {
          "description": "Extensions for factor",
          "$ref": "#/definitions/Element"
        },
        "tax": {
          "description": "The total of taxes applicable for this product or service.",
          "$ref": "#/definitions/Money"
        },
        "net": {
          "description": "The quantity times the unit price for an additional service or product or charge.",
          "$ref": "#/definitions/Money"
        },
        "bodySite": {
          "description": "Physical location where the service is performed or applies.",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefit_BodySite1"
          },
          "type": "array"
        },
        "noteNumber": {
          "description": "The numbers associated with notes below which apply to the adjudication of this item.",
          "items": {
            "$ref": "#/definitions/positiveInt"
          },
          "type": "array"
        },
        "_noteNumber": {
          "description": "Extensions for noteNumber",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "decision": {
          "description": "The result of the claim, predetermination, or preauthorization adjudication.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "adjudication": {
          "description": "The adjudication results.",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefit_Adjudication"
          },
          "type": "array"
        },
        "detail": {
          "description": "The second-tier service adjudications for payor added services.",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefit_Detail1"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ExplanationOfBenefit_BodySite1": {
      "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "site": {
          "description": "Physical service site on the patient (limb, tooth, etc.).",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "subSite": {
          "description": "A region or surface of the bodySite, e.g. limb region or tooth surface(s).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "site"
      ]
    },
    "ExplanationOfBenefit_Detail1": {
      "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "revenue": {
          "description": "The type of revenue or cost center providing the product and/or service.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "productOrService": {
          "description": "When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "productOrServiceEnd": {
          "description": "This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifier": {
          "description": "Item typification or modifiers codes to convey additional context for the product or service.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "patientPaid": {
          "description": "The amount paid by the patient, in total at the claim claim level or specifically for the item and detail level, to the provider for goods and services.",
          "$ref": "#/definitions/Money"
        },
        "quantity": {
          "description": "The number of repetitions of a service or product.",
          "$ref": "#/definitions/Quantity"
        },
        "unitPrice": {
          "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
          "$ref": "#/definitions/Money"
        },
        "factor": {
          "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
          "$ref": "#/definitions/decimal"
        },
        "_factor": {
          "description": "Extensions for factor",
          "$ref": "#/definitions/Element"
        },
        "tax": {
          "description": "The total of taxes applicable for this product or service.",
          "$ref": "#/definitions/Money"
        },
        "net": {
          "description": "The quantity times the unit price for an additional service or product or charge.",
          "$ref": "#/definitions/Money"
        },
        "noteNumber": {
          "description": "The numbers associated with notes below which apply to the adjudication of this item.",
          "items": {
            "$ref": "#/definitions/positiveInt"
          },
          "type": "array"
        },
        "_noteNumber": {
          "description": "Extensions for noteNumber",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "decision": {
          "description": "The result of the claim, predetermination, or preauthorization adjudication.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "adjudication": {
          "description": "The adjudication results.",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefit_Adjudication"
          },
          "type": "array"
        },
        "subDetail": {
          "description": "The third-tier service adjudications for payor added services.",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefit_SubDetail1"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ExplanationOfBenefit_SubDetail1": {
      "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "revenue": {
          "description": "The type of revenue or cost center providing the product and/or service.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "productOrService": {
          "description": "When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "productOrServiceEnd": {
          "description": "This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifier": {
          "description": "Item typification or modifiers codes to convey additional context for the product or service.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "patientPaid": {
          "description": "The amount paid by the patient, in total at the claim claim level or specifically for the item and detail level, to the provider for goods and services.",
          "$ref": "#/definitions/Money"
        },
        "quantity": {
          "description": "The number of repetitions of a service or product.",
          "$ref": "#/definitions/Quantity"
        },
        "unitPrice": {
          "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
          "$ref": "#/definitions/Money"
        },
        "factor": {
          "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
          "$ref": "#/definitions/decimal"
        },
        "_factor": {
          "description": "Extensions for factor",
          "$ref": "#/definitions/Element"
        },
        "tax": {
          "description": "The total of taxes applicable for this product or service.",
          "$ref": "#/definitions/Money"
        },
        "net": {
          "description": "The quantity times the unit price for an additional service or product or charge.",
          "$ref": "#/definitions/Money"
        },
        "noteNumber": {
          "description": "The numbers associated with notes below which apply to the adjudication of this item.",
          "items": {
            "$ref": "#/definitions/positiveInt"
          },
          "type": "array"
        },
        "_noteNumber": {
          "description": "Extensions for noteNumber",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "decision": {
          "description": "The result of the claim, predetermination, or preauthorization adjudication.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "adjudication": {
          "description": "The adjudication results.",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefit_Adjudication"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ExplanationOfBenefit_Total": {
      "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "category": {
          "description": "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "amount": {
          "description": "Monetary total amount associated with the category.",
          "$ref": "#/definitions/Money"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "amount",
        "category"
      ]
    },
    "ExplanationOfBenefit_Payment": {
      "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Whether this represents partial or complete payment of the benefits payable.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "adjustment": {
          "description": "Total amount of all adjustments to this payment included in this transaction which are not related to this claim\u0027s adjudication.",
          "$ref": "#/definitions/Money"
        },
        "adjustmentReason": {
          "description": "Reason for the payment adjustment.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "date": {
          "description": "Estimated date the payment will be issued or the actual issue date of payment.",
          "$ref": "#/definitions/date"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "amount": {
          "description": "Benefits payable less any payment adjustment.",
          "$ref": "#/definitions/Money"
        },
        "identifier": {
          "description": "Issuer\u0027s unique identifier for the payment instrument.",
          "$ref": "#/definitions/Identifier"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ExplanationOfBenefit_ProcessNote": {
      "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "number": {
          "description": "A number to uniquely identify a note entry.",
          "$ref": "#/definitions/positiveInt"
        },
        "_number": {
          "description": "Extensions for number",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "The business purpose of the note text.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "The explanation or description associated with the processing.",
          "$ref": "#/definitions/string"
        },
        "_text": {
          "description": "Extensions for text",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "A code to define the language used in the text of the note.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ExplanationOfBenefit_BenefitBalance": {
      "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "category": {
          "description": "Code to identify the general type of benefits under which products and services are provided.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "excluded": {
          "description": "True if the indicated class of service is excluded from the plan, missing or False indicates the product or service is included in the coverage.",
          "$ref": "#/definitions/boolean"
        },
        "_excluded": {
          "description": "Extensions for excluded",
          "$ref": "#/definitions/Element"
        },
        "name": {
          "description": "A short name or tag for the benefit.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "A richer description of the benefit or services covered.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "network": {
          "description": "Is a flag to indicate whether the benefits refer to in-network providers or out-of-network providers.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "unit": {
          "description": "Indicates if the benefits apply to an individual or to the family.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "term": {
          "description": "The term or period of the values such as \u0027maximum lifetime benefit\u0027 or \u0027maximum annual visits\u0027.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "financial": {
          "description": "Benefits Used to date.",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefit_Financial"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "category"
      ]
    },
    "ExplanationOfBenefit_Financial": {
      "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Classification of benefit being provided.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "allowedUnsignedInt": {
          "description": "The quantity of the benefit which is permitted under the coverage.",
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_allowedUnsignedInt": {
          "description": "Extensions for allowedUnsignedInt",
          "$ref": "#/definitions/Element"
        },
        "allowedString": {
          "description": "The quantity of the benefit which is permitted under the coverage.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_allowedString": {
          "description": "Extensions for allowedString",
          "$ref": "#/definitions/Element"
        },
        "allowedMoney": {
          "description": "The quantity of the benefit which is permitted under the coverage.",
          "$ref": "#/definitions/Money"
        },
        "usedUnsignedInt": {
          "description": "The quantity of the benefit which have been consumed to date.",
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_usedUnsignedInt": {
          "description": "Extensions for usedUnsignedInt",
          "$ref": "#/definitions/Element"
        },
        "usedMoney": {
          "description": "The quantity of the benefit which have been consumed to date.",
          "$ref": "#/definitions/Money"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "FamilyMemberHistory": {
      "description": "Significant health conditions for a person related to the patient relevant in the context of care for the patient.",
      "properties": {
        "resourceType": {
          "description": "This is a FamilyMemberHistory resource",
          "const": "FamilyMemberHistory"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Business identifiers assigned to this family member history by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "instantiatesCanonical": {
          "description": "The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this FamilyMemberHistory.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "instantiatesUri": {
          "description": "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this FamilyMemberHistory.",
          "items": {
            "$ref": "#/definitions/uri"
          },
          "type": "array"
        },
        "_instantiatesUri": {
          "description": "Extensions for instantiatesUri",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "status": {
          "description": "A code specifying the status of the record of the family history of a specific family member.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "dataAbsentReason": {
          "description": "Describes why the family member\u0027s history is not available.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "patient": {
          "description": "The person who this history concerns.",
          "$ref": "#/definitions/Reference"
        },
        "date": {
          "description": "The date (and possibly time) when the family member history was recorded or last updated.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "participant": {
          "description": "Indicates who or what participated in the activities related to the family member history and how they were involved.",
          "items": {
            "$ref": "#/definitions/FamilyMemberHistory_Participant"
          },
          "type": "array"
        },
        "name": {
          "description": "This will either be a name or a description; e.g. \"Aunt Susan\", \"my cousin with the red hair\".",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "relationship": {
          "description": "The type of relationship this person has to the patient (father, mother, brother etc.).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "sex": {
          "description": "The birth sex of the family member.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "bornPeriod": {
          "description": "The actual or approximate date of birth of the relative.",
          "$ref": "#/definitions/Period"
        },
        "bornDate": {
          "description": "The actual or approximate date of birth of the relative.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_bornDate": {
          "description": "Extensions for bornDate",
          "$ref": "#/definitions/Element"
        },
        "bornString": {
          "description": "The actual or approximate date of birth of the relative.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_bornString": {
          "description": "Extensions for bornString",
          "$ref": "#/definitions/Element"
        },
        "ageAge": {
          "description": "The age of the relative at the time the family member history is recorded.",
          "$ref": "#/definitions/Age"
        },
        "ageRange": {
          "description": "The age of the relative at the time the family member history is recorded.",
          "$ref": "#/definitions/Range"
        },
        "ageString": {
          "description": "The age of the relative at the time the family member history is recorded.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_ageString": {
          "description": "Extensions for ageString",
          "$ref": "#/definitions/Element"
        },
        "estimatedAge": {
          "description": "If true, indicates that the age value specified is an estimated value.",
          "$ref": "#/definitions/boolean"
        },
        "_estimatedAge": {
          "description": "Extensions for estimatedAge",
          "$ref": "#/definitions/Element"
        },
        "deceasedBoolean": {
          "description": "Deceased flag or the actual or approximate age of the relative at the time of death for the family member history record.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_deceasedBoolean": {
          "description": "Extensions for deceasedBoolean",
          "$ref": "#/definitions/Element"
        },
        "deceasedAge": {
          "description": "Deceased flag or the actual or approximate age of the relative at the time of death for the family member history record.",
          "$ref": "#/definitions/Age"
        },
        "deceasedRange": {
          "description": "Deceased flag or the actual or approximate age of the relative at the time of death for the family member history record.",
          "$ref": "#/definitions/Range"
        },
        "deceasedDate": {
          "description": "Deceased flag or the actual or approximate age of the relative at the time of death for the family member history record.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_deceasedDate": {
          "description": "Extensions for deceasedDate",
          "$ref": "#/definitions/Element"
        },
        "deceasedString": {
          "description": "Deceased flag or the actual or approximate age of the relative at the time of death for the family member history record.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_deceasedString": {
          "description": "Extensions for deceasedString",
          "$ref": "#/definitions/Element"
        },
        "reason": {
          "description": "Describes why the family member history occurred in coded or textual form, or Indicates a Condition, Observation, AllergyIntolerance, or QuestionnaireResponse that justifies this family member history event.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "note": {
          "description": "This property allows a non condition-specific note to the made about the related person. Ideally, the note would be in the condition property, but this is not always possible.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "condition": {
          "description": "The significant Conditions (or condition) that the family member had. This is a repeating section to allow a system to represent more than one condition per resource, though there is nothing stopping multiple resources - one per condition.",
          "items": {
            "$ref": "#/definitions/FamilyMemberHistory_Condition"
          },
          "type": "array"
        },
        "procedure": {
          "description": "The significant Procedures (or procedure) that the family member had. This is a repeating section to allow a system to represent more than one procedure per resource, though there is nothing stopping multiple resources - one per procedure.",
          "items": {
            "$ref": "#/definitions/FamilyMemberHistory_Procedure"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "patient",
        "relationship",
        "resourceType"
      ]
    },
    "FamilyMemberHistory_Participant": {
      "description": "Significant health conditions for a person related to the patient relevant in the context of care for the patient.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "function": {
          "description": "Distinguishes the type of involvement of the actor in the activities related to the family member history.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "actor": {
          "description": "Indicates who or what participated in the activities related to the family member history.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "actor"
      ]
    },
    "FamilyMemberHistory_Condition": {
      "description": "Significant health conditions for a person related to the patient relevant in the context of care for the patient.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "The actual condition specified. Could be a coded condition (like MI or Diabetes) or a less specific string like \u0027cancer\u0027 depending on how much is known about the condition and the capabilities of the creating system.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "outcome": {
          "description": "Indicates what happened following the condition.  If the condition resulted in death, deceased date is captured on the relation.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "contributedToDeath": {
          "description": "This condition contributed to the cause of death of the related person. If contributedToDeath is not populated, then it is unknown.",
          "$ref": "#/definitions/boolean"
        },
        "_contributedToDeath": {
          "description": "Extensions for contributedToDeath",
          "$ref": "#/definitions/Element"
        },
        "onsetAge": {
          "description": "Either the age of onset, range of approximate age or descriptive string can be recorded.  For conditions with multiple occurrences, this describes the first known occurrence.",
          "$ref": "#/definitions/Age"
        },
        "onsetRange": {
          "description": "Either the age of onset, range of approximate age or descriptive string can be recorded.  For conditions with multiple occurrences, this describes the first known occurrence.",
          "$ref": "#/definitions/Range"
        },
        "onsetPeriod": {
          "description": "Either the age of onset, range of approximate age or descriptive string can be recorded.  For conditions with multiple occurrences, this describes the first known occurrence.",
          "$ref": "#/definitions/Period"
        },
        "onsetString": {
          "description": "Either the age of onset, range of approximate age or descriptive string can be recorded.  For conditions with multiple occurrences, this describes the first known occurrence.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_onsetString": {
          "description": "Extensions for onsetString",
          "$ref": "#/definitions/Element"
        },
        "note": {
          "description": "An area where general notes can be placed about this specific condition.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "FamilyMemberHistory_Procedure": {
      "description": "Significant health conditions for a person related to the patient relevant in the context of care for the patient.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "The actual procedure specified. Could be a coded procedure or a less specific string depending on how much is known about the procedure and the capabilities of the creating system.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "outcome": {
          "description": "Indicates what happened following the procedure. If the procedure resulted in death, deceased date is captured on the relation.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "contributedToDeath": {
          "description": "This procedure contributed to the cause of death of the related person. If contributedToDeath is not populated, then it is unknown.",
          "$ref": "#/definitions/boolean"
        },
        "_contributedToDeath": {
          "description": "Extensions for contributedToDeath",
          "$ref": "#/definitions/Element"
        },
        "performedAge": {
          "description": "Estimated or actual date, date-time, period, or age when the procedure was performed. Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.",
          "$ref": "#/definitions/Age"
        },
        "performedRange": {
          "description": "Estimated or actual date, date-time, period, or age when the procedure was performed. Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.",
          "$ref": "#/definitions/Range"
        },
        "performedPeriod": {
          "description": "Estimated or actual date, date-time, period, or age when the procedure was performed. Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.",
          "$ref": "#/definitions/Period"
        },
        "performedString": {
          "description": "Estimated or actual date, date-time, period, or age when the procedure was performed. Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_performedString": {
          "description": "Extensions for performedString",
          "$ref": "#/definitions/Element"
        },
        "performedDateTime": {
          "description": "Estimated or actual date, date-time, period, or age when the procedure was performed. Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_performedDateTime": {
          "description": "Extensions for performedDateTime",
          "$ref": "#/definitions/Element"
        },
        "note": {
          "description": "An area where general notes can be placed about this specific procedure.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "Flag": {
      "description": "Prospective warnings of potential issues when providing care to the patient.",
      "properties": {
        "resourceType": {
          "description": "This is a Flag resource",
          "const": "Flag"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Business identifiers assigned to this flag by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "Supports basic workflow.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "category": {
          "description": "Allows a flag to be divided into different categories like clinical, administrative etc. Intended to be used as a means of filtering which flags are displayed to particular user or in a given context.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "code": {
          "description": "The coded value or textual component of the flag to display to the user.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subject": {
          "description": "The patient, related person, location, group, organization, or practitioner etc. this is about record this flag is associated with.",
          "$ref": "#/definitions/Reference"
        },
        "period": {
          "description": "The period of time from the activation of the flag to inactivation of the flag. If the flag is active, the end of the period should be unspecified.",
          "$ref": "#/definitions/Period"
        },
        "encounter": {
          "description": "This alert is only relevant during the encounter.",
          "$ref": "#/definitions/Reference"
        },
        "author": {
          "description": "The person, organization or device that created the flag.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code",
        "subject",
        "resourceType"
      ]
    },
    "FormularyItem": {
      "description": "This resource describes a product or service that is available through a program and includes the conditions and constraints of availability.  All of the information in this resource is specific to the inclusion of the item in the formulary and is not inherent to the item itself.",
      "properties": {
        "resourceType": {
          "description": "This is a FormularyItem resource",
          "const": "FormularyItem"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Business identifier for this formulary item.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "code": {
          "description": "A code (or set of codes) that specify the product or service that is identified by this formulary item.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "status": {
          "description": "The validity about the information of the formulary item and not of the underlying product or service itself.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "GenomicStudy": {
      "description": "A Genomic Study is a set of analysis performed to analyze and generate genomic data.",
      "properties": {
        "resourceType": {
          "description": "This is a GenomicStudy resource",
          "const": "GenomicStudy"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifiers for this genomic study.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of the genomic study.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "type": {
          "description": "The type of the study, e.g., Familial variant segregation, Functional variation detection, or Gene expression profiling.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "subject": {
          "description": "The primary subject of the genomic study.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "The healthcare event with which this genomics study is associated.",
          "$ref": "#/definitions/Reference"
        },
        "startDate": {
          "description": "When the genomic study was started.",
          "$ref": "#/definitions/dateTime"
        },
        "_startDate": {
          "description": "Extensions for startDate",
          "$ref": "#/definitions/Element"
        },
        "basedOn": {
          "description": "Event resources that the genomic study is based on.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "referrer": {
          "description": "Healthcare professional who requested or referred the genomic study.",
          "$ref": "#/definitions/Reference"
        },
        "interpreter": {
          "description": "Healthcare professionals who interpreted the genomic study.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "reason": {
          "description": "Why the genomic study was performed.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "instantiatesCanonical": {
          "description": "The defined protocol that describes the study.",
          "$ref": "#/definitions/canonical"
        },
        "instantiatesUri": {
          "description": "The URL pointing to an externally maintained protocol that describes the study.",
          "$ref": "#/definitions/uri"
        },
        "_instantiatesUri": {
          "description": "Extensions for instantiatesUri",
          "$ref": "#/definitions/Element"
        },
        "note": {
          "description": "Comments related to the genomic study.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "description": {
          "description": "Description of the genomic study.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "analysis": {
          "description": "The details about a specific analysis that was performed in this GenomicStudy.",
          "items": {
            "$ref": "#/definitions/GenomicStudy_Analysis"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "subject",
        "resourceType",
        "status"
      ]
    },
    "GenomicStudy_Analysis": {
      "description": "A Genomic Study is a set of analysis performed to analyze and generate genomic data.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifiers for the analysis event.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "methodType": {
          "description": "Type of the methods used in the analysis, e.g., Fluorescence in situ hybridization (FISH), Karyotyping, or Microsatellite instability testing (MSI).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "changeType": {
          "description": "Type of the genomic changes studied in the analysis, e.g., DNA, RNA, or amino acid change.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "genomeBuild": {
          "description": "The reference genome build that is used in this analysis.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "instantiatesCanonical": {
          "description": "The defined protocol that describes the analysis.",
          "$ref": "#/definitions/canonical"
        },
        "instantiatesUri": {
          "description": "The URL pointing to an externally maintained protocol that describes the analysis.",
          "$ref": "#/definitions/uri"
        },
        "_instantiatesUri": {
          "description": "Extensions for instantiatesUri",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "Name of the analysis event (human friendly).",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "subject": {
          "description": "The subject of the analysis event.",
          "$ref": "#/definitions/Reference"
        },
        "specimen": {
          "description": "The specimen used in the analysis event.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "date": {
          "description": "The date of the analysis event.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "note": {
          "description": "Any notes capture with the analysis event.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "protocolPerformed": {
          "description": "The protocol that was performed for the analysis event.",
          "$ref": "#/definitions/Reference"
        },
        "regionsStudied": {
          "description": "The genomic regions to be studied in the analysis (BED file).",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "regionsCalled": {
          "description": "Genomic regions actually called in the analysis event (BED file).",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "input": {
          "description": "Inputs for the analysis event.",
          "items": {
            "$ref": "#/definitions/GenomicStudy_Input"
          },
          "type": "array"
        },
        "output": {
          "description": "Outputs for the analysis event.",
          "items": {
            "$ref": "#/definitions/GenomicStudy_Output"
          },
          "type": "array"
        },
        "performer": {
          "description": "Performer for the analysis event.",
          "items": {
            "$ref": "#/definitions/GenomicStudy_Performer"
          },
          "type": "array"
        },
        "device": {
          "description": "Devices used for the analysis (e.g., instruments, software), with settings and parameters.",
          "items": {
            "$ref": "#/definitions/GenomicStudy_Device"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "GenomicStudy_Input": {
      "description": "A Genomic Study is a set of analysis performed to analyze and generate genomic data.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "file": {
          "description": "File containing input data.",
          "$ref": "#/definitions/Reference"
        },
        "type": {
          "description": "Type of input data, e.g., BAM, CRAM, or FASTA.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "generatedByIdentifier": {
          "description": "The analysis event or other GenomicStudy that generated this input file.",
          "$ref": "#/definitions/Identifier"
        },
        "generatedByReference": {
          "description": "The analysis event or other GenomicStudy that generated this input file.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "GenomicStudy_Output": {
      "description": "A Genomic Study is a set of analysis performed to analyze and generate genomic data.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "file": {
          "description": "File containing output data.",
          "$ref": "#/definitions/Reference"
        },
        "type": {
          "description": "Type of output data, e.g., VCF, MAF, or BAM.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "GenomicStudy_Performer": {
      "description": "A Genomic Study is a set of analysis performed to analyze and generate genomic data.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "actor": {
          "description": "The organization, healthcare professional, or others who participated in performing this analysis.",
          "$ref": "#/definitions/Reference"
        },
        "role": {
          "description": "Role of the actor for this analysis.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "GenomicStudy_Device": {
      "description": "A Genomic Study is a set of analysis performed to analyze and generate genomic data.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "device": {
          "description": "Device used for the analysis.",
          "$ref": "#/definitions/Reference"
        },
        "function": {
          "description": "Specific function for the device used for the analysis.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Goal": {
      "description": "Describes the intended objective(s) for a patient, group or organization care, for example, weight loss, restoring an activity of daily living, obtaining herd immunity via immunization, meeting a process improvement objective, etc.",
      "properties": {
        "resourceType": {
          "description": "This is a Goal resource",
          "const": "Goal"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Business identifiers assigned to this goal by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "lifecycleStatus": {
          "description": "The state of the goal throughout its lifecycle.",
          "$ref": "#/definitions/code"
        },
        "_lifecycleStatus": {
          "description": "Extensions for lifecycleStatus",
          "$ref": "#/definitions/Element"
        },
        "achievementStatus": {
          "description": "Describes the progression, or lack thereof, towards the goal against the target.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "category": {
          "description": "Indicates a category the goal falls within.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "continuous": {
          "description": "After meeting the goal, ongoing activity is needed to sustain the goal objective.",
          "$ref": "#/definitions/boolean"
        },
        "_continuous": {
          "description": "Extensions for continuous",
          "$ref": "#/definitions/Element"
        },
        "priority": {
          "description": "Identifies the mutually agreed level of importance associated with reaching/sustaining the goal.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "description": {
          "description": "Human-readable and/or coded description of a specific desired objective of care, such as \"control blood pressure\" or \"negotiate an obstacle course\" or \"dance with child at wedding\".",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subject": {
          "description": "Identifies the patient, group or organization for whom the goal is being established.",
          "$ref": "#/definitions/Reference"
        },
        "startDate": {
          "description": "The date or event after which the goal should begin being pursued.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_startDate": {
          "description": "Extensions for startDate",
          "$ref": "#/definitions/Element"
        },
        "startCodeableConcept": {
          "description": "The date or event after which the goal should begin being pursued.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "target": {
          "description": "Indicates what should be done by when.",
          "items": {
            "$ref": "#/definitions/Goal_Target"
          },
          "type": "array"
        },
        "statusDate": {
          "description": "Identifies when the current status.  I.e. When initially created, when achieved, when cancelled, etc.",
          "$ref": "#/definitions/date"
        },
        "_statusDate": {
          "description": "Extensions for statusDate",
          "$ref": "#/definitions/Element"
        },
        "statusReason": {
          "description": "Captures the reason for the current status.",
          "$ref": "#/definitions/string"
        },
        "_statusReason": {
          "description": "Extensions for statusReason",
          "$ref": "#/definitions/Element"
        },
        "source": {
          "description": "Indicates whose goal this is - patient goal, practitioner goal, etc.",
          "$ref": "#/definitions/Reference"
        },
        "addresses": {
          "description": "The identified conditions and other health record elements that are intended to be addressed by the goal.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "note": {
          "description": "Any comments related to the goal.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "outcome": {
          "description": "Identifies the change (or lack of change) at the point when the status of the goal is assessed.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "subject",
        "description",
        "resourceType"
      ]
    },
    "Goal_Target": {
      "description": "Describes the intended objective(s) for a patient, group or organization care, for example, weight loss, restoring an activity of daily living, obtaining herd immunity via immunization, meeting a process improvement objective, etc.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "measure": {
          "description": "The parameter whose value is being tracked, e.g. body weight, blood pressure, or hemoglobin A1c level.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "detailQuantity": {
          "description": "The target value of the focus to be achieved to signify the fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any focus value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any focus value at or above the low value.",
          "$ref": "#/definitions/Quantity"
        },
        "detailRange": {
          "description": "The target value of the focus to be achieved to signify the fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any focus value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any focus value at or above the low value.",
          "$ref": "#/definitions/Range"
        },
        "detailCodeableConcept": {
          "description": "The target value of the focus to be achieved to signify the fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any focus value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any focus value at or above the low value.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "detailString": {
          "description": "The target value of the focus to be achieved to signify the fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any focus value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any focus value at or above the low value.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_detailString": {
          "description": "Extensions for detailString",
          "$ref": "#/definitions/Element"
        },
        "detailBoolean": {
          "description": "The target value of the focus to be achieved to signify the fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any focus value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any focus value at or above the low value.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_detailBoolean": {
          "description": "Extensions for detailBoolean",
          "$ref": "#/definitions/Element"
        },
        "detailInteger": {
          "description": "The target value of the focus to be achieved to signify the fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any focus value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any focus value at or above the low value.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_detailInteger": {
          "description": "Extensions for detailInteger",
          "$ref": "#/definitions/Element"
        },
        "detailRatio": {
          "description": "The target value of the focus to be achieved to signify the fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any focus value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any focus value at or above the low value.",
          "$ref": "#/definitions/Ratio"
        },
        "dueDate": {
          "description": "Indicates either the date or the duration after start by which the goal should be met.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_dueDate": {
          "description": "Extensions for dueDate",
          "$ref": "#/definitions/Element"
        },
        "dueDuration": {
          "description": "Indicates either the date or the duration after start by which the goal should be met.",
          "$ref": "#/definitions/Duration"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "GraphDefinition": {
      "description": "A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set.",
      "properties": {
        "resourceType": {
          "description": "This is a GraphDefinition resource",
          "const": "GraphDefinition"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this graph definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this graph definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the graph definition is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this {{title}} when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the graph definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the graph definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the graph definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the capability statement.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this graph definition. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this graph definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the graph definition was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the graph definition changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the graph definition.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the graph definition from a consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate graph definition instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the graph definition is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this graph definition is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the {{title}} and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the {{title}}.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "start": {
          "description": "The Node at which instances of this graph start. If there is no nominated start, the graph can start at any of the nodes.",
          "$ref": "#/definitions/id"
        },
        "_start": {
          "description": "Extensions for start",
          "$ref": "#/definitions/Element"
        },
        "node": {
          "description": "Potential target for the link.",
          "items": {
            "$ref": "#/definitions/GraphDefinition_Node"
          },
          "type": "array"
        },
        "link": {
          "description": "Links this graph makes rules about.",
          "items": {
            "$ref": "#/definitions/GraphDefinition_Link"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "GraphDefinition_Node": {
      "description": "A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "nodeId": {
          "description": "Internal ID of node - target for link references.",
          "$ref": "#/definitions/id"
        },
        "_nodeId": {
          "description": "Extensions for nodeId",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "Information about why this node is of interest in this graph definition.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "Type of resource this link refers to.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "profile": {
          "description": "Profile for the target resource.",
          "$ref": "#/definitions/canonical"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "GraphDefinition_Link": {
      "description": "A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "description": {
          "description": "Information about why this link is of interest in this graph definition.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "min": {
          "description": "Minimum occurrences for this link.",
          "$ref": "#/definitions/integer"
        },
        "_min": {
          "description": "Extensions for min",
          "$ref": "#/definitions/Element"
        },
        "max": {
          "description": "Maximum occurrences for this link.",
          "$ref": "#/definitions/string"
        },
        "_max": {
          "description": "Extensions for max",
          "$ref": "#/definitions/Element"
        },
        "sourceId": {
          "description": "The source node for this link.",
          "$ref": "#/definitions/id"
        },
        "_sourceId": {
          "description": "Extensions for sourceId",
          "$ref": "#/definitions/Element"
        },
        "path": {
          "description": "A FHIRPath expression that identifies one of FHIR References to other resources.",
          "$ref": "#/definitions/string"
        },
        "_path": {
          "description": "Extensions for path",
          "$ref": "#/definitions/Element"
        },
        "sliceName": {
          "description": "Which slice (if profiled).",
          "$ref": "#/definitions/string"
        },
        "_sliceName": {
          "description": "Extensions for sliceName",
          "$ref": "#/definitions/Element"
        },
        "targetId": {
          "description": "The target node for this link.",
          "$ref": "#/definitions/id"
        },
        "_targetId": {
          "description": "Extensions for targetId",
          "$ref": "#/definitions/Element"
        },
        "params": {
          "description": "A set of parameters to look up.",
          "$ref": "#/definitions/string"
        },
        "_params": {
          "description": "Extensions for params",
          "$ref": "#/definitions/Element"
        },
        "compartment": {
          "description": "Compartment Consistency Rules.",
          "items": {
            "$ref": "#/definitions/GraphDefinition_Compartment"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "GraphDefinition_Compartment": {
      "description": "A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "use": {
          "description": "Defines how the compartment rule is used - whether it it is used to test whether resources are subject to the rule, or whether it is a rule that must be followed.",
          "$ref": "#/definitions/code"
        },
        "_use": {
          "description": "Extensions for use",
          "$ref": "#/definitions/Element"
        },
        "rule": {
          "description": "identical | matching | different | no-rule | custom.",
          "$ref": "#/definitions/code"
        },
        "_rule": {
          "description": "Extensions for rule",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "Identifies the compartment.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "expression": {
          "description": "Custom rule, as a FHIRPath expression.",
          "$ref": "#/definitions/string"
        },
        "_expression": {
          "description": "Extensions for expression",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "Documentation for FHIRPath expression.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Group": {
      "description": "Represents a defined collection of entities that may be discussed or acted upon collectively but which are not expected to act collectively, and are not formally or legally recognized; i.e. a collection of entities that isn\u0027t an Organization.",
      "properties": {
        "resourceType": {
          "description": "This is a Group resource",
          "const": "Group"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "A unique business identifier for this group.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "active": {
          "description": "Indicates whether the record for the group is available for use or is merely being retained for historical purposes.",
          "$ref": "#/definitions/boolean"
        },
        "_active": {
          "description": "Extensions for active",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "Identifies the broad classification of the kind of resources the group includes.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "membership": {
          "description": "Basis for membership in the Group:\n\n* \u0027definitional\u0027: The Group.characteristics specified are both necessary and sufficient to determine membership. All entities that meet the criteria are considered to be members of the group, whether referenced by the group or not. If members are present, they are individuals that happen to be known as meeting the Group.characteristics. The list cannot be presumed to be complete.\n* \u0027enumerated\u0027: The Group.characteristics are necessary but not sufficient to determine membership. Membership is determined by being listed as one of the Group.member.",
          "$ref": "#/definitions/code"
        },
        "_membership": {
          "description": "Extensions for membership",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "Provides a specific type of resource the group includes; e.g. \"cow\", \"syringe\", etc.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "name": {
          "description": "A label assigned to the group for human identification and communication.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "Explanation of what the group represents and how it is intended to be used.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "quantity": {
          "description": "A count of the number of resource instances that are part of the group.",
          "$ref": "#/definitions/unsignedInt"
        },
        "_quantity": {
          "description": "Extensions for quantity",
          "$ref": "#/definitions/Element"
        },
        "managingEntity": {
          "description": "Entity responsible for defining and maintaining Group characteristics and/or registered members.",
          "$ref": "#/definitions/Reference"
        },
        "characteristic": {
          "description": "Identifies traits whose presence r absence is shared by members of the group.",
          "items": {
            "$ref": "#/definitions/Group_Characteristic"
          },
          "type": "array"
        },
        "member": {
          "description": "Identifies the resource instances that are members of the group.",
          "items": {
            "$ref": "#/definitions/Group_Member"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Group_Characteristic": {
      "description": "Represents a defined collection of entities that may be discussed or acted upon collectively but which are not expected to act collectively, and are not formally or legally recognized; i.e. a collection of entities that isn\u0027t an Organization.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "A code that identifies the kind of trait being asserted.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCodeableConcept": {
          "description": "The value of the trait that holds (or does not hold - see \u0027exclude\u0027) for members of the group.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueBoolean": {
          "description": "The value of the trait that holds (or does not hold - see \u0027exclude\u0027) for members of the group.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueQuantity": {
          "description": "The value of the trait that holds (or does not hold - see \u0027exclude\u0027) for members of the group.",
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "description": "The value of the trait that holds (or does not hold - see \u0027exclude\u0027) for members of the group.",
          "$ref": "#/definitions/Range"
        },
        "valueReference": {
          "description": "The value of the trait that holds (or does not hold - see \u0027exclude\u0027) for members of the group.",
          "$ref": "#/definitions/Reference"
        },
        "exclude": {
          "description": "If true, indicates the characteristic is one that is NOT held by members of the group.",
          "$ref": "#/definitions/boolean"
        },
        "_exclude": {
          "description": "Extensions for exclude",
          "$ref": "#/definitions/Element"
        },
        "period": {
          "description": "The period over which the characteristic is tested; e.g. the patient had an operation during the month of June.",
          "$ref": "#/definitions/Period"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "Group_Member": {
      "description": "Represents a defined collection of entities that may be discussed or acted upon collectively but which are not expected to act collectively, and are not formally or legally recognized; i.e. a collection of entities that isn\u0027t an Organization.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "entity": {
          "description": "A reference to the entity that is a member of the group. Must be consistent with Group.type. If the entity is another group, then the type must be the same.",
          "$ref": "#/definitions/Reference"
        },
        "period": {
          "description": "The period that the member was in the group, if known.",
          "$ref": "#/definitions/Period"
        },
        "inactive": {
          "description": "A flag to indicate that the member is no longer in the group, but previously may have been a member.",
          "$ref": "#/definitions/boolean"
        },
        "_inactive": {
          "description": "Extensions for inactive",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "entity"
      ]
    },
    "GuidanceResponse": {
      "description": "A guidance response is the formal response to a guidance request, including any output parameters returned by the evaluation, as well as the description of any proposed actions to be taken.",
      "properties": {
        "resourceType": {
          "description": "This is a GuidanceResponse resource",
          "const": "GuidanceResponse"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "requestIdentifier": {
          "description": "The identifier of the request associated with this response. If an identifier was given as part of the request, it will be reproduced here to enable the requester to more easily identify the response in a multi-request scenario.",
          "$ref": "#/definitions/Identifier"
        },
        "identifier": {
          "description": "Allows a service to provide  unique, business identifiers for the response.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "moduleUri": {
          "description": "An identifier, CodeableConcept or canonical reference to the guidance that was requested.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_moduleUri": {
          "description": "Extensions for moduleUri",
          "$ref": "#/definitions/Element"
        },
        "moduleCanonical": {
          "description": "An identifier, CodeableConcept or canonical reference to the guidance that was requested.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_moduleCanonical": {
          "description": "Extensions for moduleCanonical",
          "$ref": "#/definitions/Element"
        },
        "moduleCodeableConcept": {
          "description": "An identifier, CodeableConcept or canonical reference to the guidance that was requested.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "status": {
          "description": "The status of the response. If the evaluation is completed successfully, the status will indicate success. However, in order to complete the evaluation, the engine may require more information. In this case, the status will be data-required, and the response will contain a description of the additional required information. If the evaluation completed successfully, but the engine determines that a potentially more accurate response could be provided if more data was available, the status will be data-requested, and the response will contain a description of the additional requested information.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "subject": {
          "description": "The patient for which the request was processed.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "The encounter during which this response was created or to which the creation of this record is tightly associated.",
          "$ref": "#/definitions/Reference"
        },
        "occurrenceDateTime": {
          "description": "Indicates when the guidance response was processed.",
          "$ref": "#/definitions/dateTime"
        },
        "_occurrenceDateTime": {
          "description": "Extensions for occurrenceDateTime",
          "$ref": "#/definitions/Element"
        },
        "performer": {
          "description": "Provides a reference to the device that performed the guidance.",
          "$ref": "#/definitions/Reference"
        },
        "reason": {
          "description": "Describes the reason for the guidance response in coded or textual form, or Indicates the reason the request was initiated. This is typically provided as a parameter to the evaluation and echoed by the service, although for some use cases, such as subscription- or event-based scenarios, it may provide an indication of the cause for the response.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "note": {
          "description": "Provides a mechanism to communicate additional information about the response.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "evaluationMessage": {
          "description": "Messages resulting from the evaluation of the artifact or artifacts. As part of evaluating the request, the engine may produce informational or warning messages. These messages will be provided by this element.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "outputParameters": {
          "description": "The output parameters of the evaluation, if any. Many modules will result in the return of specific resources such as procedure or communication requests that are returned as part of the operation result. However, modules may define specific outputs that would be returned as the result of the evaluation, and these would be returned in this element.",
          "$ref": "#/definitions/Reference"
        },
        "result": {
          "description": "The actions, if any, produced by the evaluation of the artifact.",
          "$ref": "#/definitions/Reference"
        },
        "dataRequirement": {
          "description": "If the evaluation could not be completed due to lack of information, or additional information would potentially result in a more accurate response, this element will a description of the data required in order to proceed with the evaluation. A subsequent request to the service should include this data.",
          "items": {
            "$ref": "#/definitions/DataRequirement"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "HealthcareService": {
      "description": "The details of a healthcare service available at a location.",
      "properties": {
        "resourceType": {
          "description": "This is a HealthcareService resource",
          "const": "HealthcareService"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "External identifiers for this item.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "active": {
          "description": "This flag is used to mark the record to not be used. This is not used when a center is closed for maintenance, or for holidays, the notAvailable period is to be used for this.",
          "$ref": "#/definitions/boolean"
        },
        "_active": {
          "description": "Extensions for active",
          "$ref": "#/definitions/Element"
        },
        "providedBy": {
          "description": "The organization that provides this healthcare service.",
          "$ref": "#/definitions/Reference"
        },
        "offeredIn": {
          "description": "When the HealthcareService is representing a specific, schedulable service, the availableIn property can refer to a generic service.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "category": {
          "description": "Identifies the broad category of service being performed or delivered.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "type": {
          "description": "The specific type of service that may be delivered or performed.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "specialty": {
          "description": "Collection of specialties handled by the Healthcare service. This is more of a medical term.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "location": {
          "description": "The location(s) where this healthcare service may be provided.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "name": {
          "description": "Further description of the service as it would be presented to a consumer while searching.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "comment": {
          "description": "Any additional description of the service and/or any specific issues not covered by the other attributes, which can be displayed as further detail under the serviceName.",
          "$ref": "#/definitions/string"
        },
        "_comment": {
          "description": "Extensions for comment",
          "$ref": "#/definitions/Element"
        },
        "extraDetails": {
          "description": "Extra details about the service that can\u0027t be placed in the other fields.",
          "$ref": "#/definitions/markdown"
        },
        "_extraDetails": {
          "description": "Extensions for extraDetails",
          "$ref": "#/definitions/Element"
        },
        "photo": {
          "description": "If there is a photo/symbol associated with this HealthcareService, it may be included here to facilitate quick identification of the service in a list.",
          "$ref": "#/definitions/Attachment"
        },
        "contact": {
          "description": "The contact details of communication devices available relevant to the specific HealthcareService. This can include addresses, phone numbers, fax numbers, mobile numbers, email addresses and web sites.",
          "items": {
            "$ref": "#/definitions/ExtendedContactDetail"
          },
          "type": "array"
        },
        "coverageArea": {
          "description": "The location(s) that this service is available to (not where the service is provided).",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "serviceProvisionCode": {
          "description": "The code(s) that detail the conditions under which the healthcare service is available/offered.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "eligibility": {
          "description": "Does this service have specific eligibility requirements that need to be met in order to use the service?",
          "items": {
            "$ref": "#/definitions/HealthcareService_Eligibility"
          },
          "type": "array"
        },
        "program": {
          "description": "Programs that this service is applicable to.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "characteristic": {
          "description": "Collection of characteristics (attributes).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "communication": {
          "description": "Some services are specifically made available in multiple languages, this property permits a directory to declare the languages this is offered in. Typically this is only provided where a service operates in communities with mixed languages used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "referralMethod": {
          "description": "Ways that the service accepts referrals, if this is not provided then it is implied that no referral is required.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "appointmentRequired": {
          "description": "Indicates whether or not a prospective consumer will require an appointment for a particular service at a site to be provided by the Organization. Indicates if an appointment is required for access to this service.",
          "$ref": "#/definitions/boolean"
        },
        "_appointmentRequired": {
          "description": "Extensions for appointmentRequired",
          "$ref": "#/definitions/Element"
        },
        "availability": {
          "description": "A collection of times that the healthcare service is available.",
          "items": {
            "$ref": "#/definitions/Availability"
          },
          "type": "array"
        },
        "endpoint": {
          "description": "Technical endpoints providing access to services operated for the specific healthcare services defined at this resource.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "HealthcareService_Eligibility": {
      "description": "The details of a healthcare service available at a location.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "Coded value for the eligibility.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "comment": {
          "description": "Describes the eligibility conditions for the service.",
          "$ref": "#/definitions/markdown"
        },
        "_comment": {
          "description": "Extensions for comment",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ImagingSelection": {
      "description": "A selection of DICOM SOP instances and/or frames within a single Study and Series. This might include additional specifics such as an image region, an Observation UID or a Segmentation Number, allowing linkage to an Observation Resource or transferring this information along with the ImagingStudy Resource.",
      "properties": {
        "resourceType": {
          "description": "This is a ImagingSelection resource",
          "const": "ImagingSelection"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "A unique identifier assigned to this imaging selection.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "The current state of the ImagingSelection resource. This is not the status of any ImagingStudy, ServiceRequest, or Task resources associated with the ImagingSelection.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "subject": {
          "description": "The patient, or group of patients, location, device, organization, procedure or practitioner this imaging selection is about and into whose or what record the imaging selection is placed.",
          "$ref": "#/definitions/Reference"
        },
        "issued": {
          "description": "The date and time this imaging selection was created.",
          "$ref": "#/definitions/instant"
        },
        "_issued": {
          "description": "Extensions for issued",
          "$ref": "#/definitions/Element"
        },
        "performer": {
          "description": "Selector of the instances – human or machine.",
          "items": {
            "$ref": "#/definitions/ImagingSelection_Performer"
          },
          "type": "array"
        },
        "basedOn": {
          "description": "A list of the diagnostic requests that resulted in this imaging selection being performed.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "category": {
          "description": "Classifies the imaging selection.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "code": {
          "description": "Reason for referencing the selected content.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "studyUid": {
          "description": "The Study Instance UID for the DICOM Study from which the images were selected.",
          "$ref": "#/definitions/id"
        },
        "_studyUid": {
          "description": "Extensions for studyUid",
          "$ref": "#/definitions/Element"
        },
        "derivedFrom": {
          "description": "The imaging study from which the imaging selection is made.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "endpoint": {
          "description": "The network service providing retrieval access to the selected images, frames, etc. See implementation notes for information about using DICOM endpoints.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "seriesUid": {
          "description": "The Series Instance UID for the DICOM Series from which the images were selected.",
          "$ref": "#/definitions/id"
        },
        "_seriesUid": {
          "description": "Extensions for seriesUid",
          "$ref": "#/definitions/Element"
        },
        "seriesNumber": {
          "description": "The Series Number for the DICOM Series from which the images were selected.",
          "$ref": "#/definitions/unsignedInt"
        },
        "_seriesNumber": {
          "description": "Extensions for seriesNumber",
          "$ref": "#/definitions/Element"
        },
        "frameOfReferenceUid": {
          "description": "The Frame of Reference UID identifying the coordinate system that conveys spatial and/or temporal information for the selected images or frames.",
          "$ref": "#/definitions/id"
        },
        "_frameOfReferenceUid": {
          "description": "Extensions for frameOfReferenceUid",
          "$ref": "#/definitions/Element"
        },
        "bodySite": {
          "description": "The anatomic structures examined. See DICOM Part 16 Annex L (http://dicom.nema.org/medical/dicom/current/output/chtml/part16/chapter_L.html) for DICOM to SNOMED-CT mappings.",
          "$ref": "#/definitions/CodeableReference"
        },
        "focus": {
          "description": "The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother\u0027s record.  The focus of an observation could also be an existing condition,  an intervention, the subject\u0027s diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child\u0027s tracheostomy tube. In this example, the child is the patient of record and the mother is the focus.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "instance": {
          "description": "Each imaging selection includes one or more selected DICOM SOP instances.",
          "items": {
            "$ref": "#/definitions/ImagingSelection_Instance"
          },
          "type": "array"
        },
        "imageRegion": {
          "description": "Each imaging selection might includes a 3D image region, specified by a region type and a set of 3D coordinates.",
          "items": {
            "$ref": "#/definitions/ImagingSelection_ImageRegion1"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code",
        "resourceType"
      ]
    },
    "ImagingSelection_Performer": {
      "description": "A selection of DICOM SOP instances and/or frames within a single Study and Series. This might include additional specifics such as an image region, an Observation UID or a Segmentation Number, allowing linkage to an Observation Resource or transferring this information along with the ImagingStudy Resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "function": {
          "description": "Distinguishes the type of involvement of the performer.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "actor": {
          "description": "Author – human or machine.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ImagingSelection_Instance": {
      "description": "A selection of DICOM SOP instances and/or frames within a single Study and Series. This might include additional specifics such as an image region, an Observation UID or a Segmentation Number, allowing linkage to an Observation Resource or transferring this information along with the ImagingStudy Resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "uid": {
          "description": "The SOP Instance UID for the selected DICOM instance.",
          "$ref": "#/definitions/id"
        },
        "_uid": {
          "description": "Extensions for uid",
          "$ref": "#/definitions/Element"
        },
        "number": {
          "description": "The Instance Number for the selected DICOM instance.",
          "$ref": "#/definitions/unsignedInt"
        },
        "_number": {
          "description": "Extensions for number",
          "$ref": "#/definitions/Element"
        },
        "sopClass": {
          "description": "The SOP Class UID for the selected DICOM instance.",
          "$ref": "#/definitions/Coding"
        },
        "subset": {
          "description": "Selected subset of the SOP Instance. The content and format of the subset item is determined by the SOP Class of the selected instance.\n       May be one of:\n       - A list of frame numbers selected from a multiframe SOP Instance.\n       - A list of Content Item Observation UID values selected from a DICOM SR or other structured document SOP Instance.\n       - A list of segment numbers selected from a segmentation SOP Instance.\n       - A list of Region of Interest (ROI) numbers selected from a radiotherapy structure set SOP Instance.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_subset": {
          "description": "Extensions for subset",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "imageRegion": {
          "description": "Each imaging selection instance or frame list might includes an image region, specified by a region type and a set of 2D coordinates.\n       If the parent imagingSelection.instance contains a subset element of type frame, the image region applies to all frames in the subset list.",
          "items": {
            "$ref": "#/definitions/ImagingSelection_ImageRegion"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ImagingSelection_ImageRegion": {
      "description": "A selection of DICOM SOP instances and/or frames within a single Study and Series. This might include additional specifics such as an image region, an Observation UID or a Segmentation Number, allowing linkage to an Observation Resource or transferring this information along with the ImagingStudy Resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "regionType": {
          "description": "Specifies the type of image region.",
          "$ref": "#/definitions/code"
        },
        "_regionType": {
          "description": "Extensions for regionType",
          "$ref": "#/definitions/Element"
        },
        "coordinate": {
          "description": "The coordinates describing the image region. Encoded as a set of (column, row) pairs that denote positions in the selected image / frames specified with sub-pixel resolution.\n       The origin at the TLHC of the TLHC pixel is 0.0\\0.0, the BRHC of the TLHC pixel is 1.0\\1.0, and the BRHC of the BRHC pixel is the number of columns\\rows in the image / frames. The values must be within the range 0\\0 to the number of columns\\rows in the image / frames.",
          "items": {
            "$ref": "#/definitions/decimal"
          },
          "type": "array"
        },
        "_coordinate": {
          "description": "Extensions for coordinate",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ImagingSelection_ImageRegion1": {
      "description": "A selection of DICOM SOP instances and/or frames within a single Study and Series. This might include additional specifics such as an image region, an Observation UID or a Segmentation Number, allowing linkage to an Observation Resource or transferring this information along with the ImagingStudy Resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "regionType": {
          "description": "Specifies the type of image region.",
          "$ref": "#/definitions/code"
        },
        "_regionType": {
          "description": "Extensions for regionType",
          "$ref": "#/definitions/Element"
        },
        "coordinate": {
          "description": "The coordinates describing the image region. Encoded as an ordered set of (x,y,z) triplets (in mm and may be negative) that define a region of interest in the patient-relative Reference Coordinate System defined by ImagingSelection.frameOfReferenceUid element.",
          "items": {
            "$ref": "#/definitions/decimal"
          },
          "type": "array"
        },
        "_coordinate": {
          "description": "Extensions for coordinate",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ImagingStudy": {
      "description": "Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context.  A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities.",
      "properties": {
        "resourceType": {
          "description": "This is a ImagingStudy resource",
          "const": "ImagingStudy"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifiers for the ImagingStudy such as DICOM Study Instance UID.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "The current state of the ImagingStudy resource. This is not the status of any ServiceRequest or Task resources associated with the ImagingStudy.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "modality": {
          "description": "A list of all the distinct values of series.modality. This may include both acquisition and non-acquisition modalities.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "subject": {
          "description": "The subject, typically a patient, of the imaging study.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "The healthcare event (e.g. a patient and healthcare provider interaction) during which this ImagingStudy is made.",
          "$ref": "#/definitions/Reference"
        },
        "started": {
          "description": "Date and time the study started.",
          "$ref": "#/definitions/dateTime"
        },
        "_started": {
          "description": "Extensions for started",
          "$ref": "#/definitions/Element"
        },
        "basedOn": {
          "description": "A list of the diagnostic requests that resulted in this imaging study being performed.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "referrer": {
          "description": "The requesting/referring physician.",
          "$ref": "#/definitions/Reference"
        },
        "interpreter": {
          "description": "Who read the study and interpreted the images or other content.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "endpoint": {
          "description": "The network service providing access (e.g., query, view, or retrieval) for the study. See implementation notes for information about using DICOM endpoints. A study-level endpoint applies to each series in the study, unless overridden by a series-level endpoint with the same Endpoint.connectionType.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "numberOfSeries": {
          "description": "Number of Series in the Study. This value given may be larger than the number of series elements this Resource contains due to resource availability, security, or other factors. This element should be present if any series elements are present.",
          "$ref": "#/definitions/unsignedInt"
        },
        "_numberOfSeries": {
          "description": "Extensions for numberOfSeries",
          "$ref": "#/definitions/Element"
        },
        "numberOfInstances": {
          "description": "Number of SOP Instances in Study. This value given may be larger than the number of instance elements this resource contains due to resource availability, security, or other factors. This element should be present if any instance elements are present.",
          "$ref": "#/definitions/unsignedInt"
        },
        "_numberOfInstances": {
          "description": "Extensions for numberOfInstances",
          "$ref": "#/definitions/Element"
        },
        "procedure": {
          "description": "The procedure or code from which this ImagingStudy was part of.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "location": {
          "description": "The principal physical location where the ImagingStudy was performed.",
          "$ref": "#/definitions/Reference"
        },
        "reason": {
          "description": "Description of clinical condition indicating why the ImagingStudy was requested, and/or Indicates another resource whose existence justifies this Study.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "note": {
          "description": "Per the recommended DICOM mapping, this element is derived from the Study Description attribute (0008,1030). Observations or findings about the imaging study should be recorded in another resource, e.g. Observation, and not in this element.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "description": {
          "description": "The Imaging Manager description of the study. Institution-generated description or classification of the Study (component) performed.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "series": {
          "description": "Each study has one or more series of images or other content.",
          "items": {
            "$ref": "#/definitions/ImagingStudy_Series"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "subject",
        "resourceType"
      ]
    },
    "ImagingStudy_Series": {
      "description": "Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context.  A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "uid": {
          "description": "The DICOM Series Instance UID for the series.",
          "$ref": "#/definitions/id"
        },
        "_uid": {
          "description": "Extensions for uid",
          "$ref": "#/definitions/Element"
        },
        "number": {
          "description": "The numeric identifier of this series in the study.",
          "$ref": "#/definitions/unsignedInt"
        },
        "_number": {
          "description": "Extensions for number",
          "$ref": "#/definitions/Element"
        },
        "modality": {
          "description": "The distinct modality for this series. This may include both acquisition and non-acquisition modalities.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "description": {
          "description": "A description of the series.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "numberOfInstances": {
          "description": "Number of SOP Instances in the Study. The value given may be larger than the number of instance elements this resource contains due to resource availability, security, or other factors. This element should be present if any instance elements are present.",
          "$ref": "#/definitions/unsignedInt"
        },
        "_numberOfInstances": {
          "description": "Extensions for numberOfInstances",
          "$ref": "#/definitions/Element"
        },
        "endpoint": {
          "description": "The network service providing access (e.g., query, view, or retrieval) for this series. See implementation notes for information about using DICOM endpoints. A series-level endpoint, if present, has precedence over a study-level endpoint with the same Endpoint.connectionType.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "bodySite": {
          "description": "The anatomic structures examined. See DICOM Part 16 Annex L (http://dicom.nema.org/medical/dicom/current/output/chtml/part16/chapter_L.html) for DICOM to SNOMED-CT mappings. The bodySite may indicate the laterality of body part imaged; if so, it shall be consistent with any content of ImagingStudy.series.laterality.",
          "$ref": "#/definitions/CodeableReference"
        },
        "laterality": {
          "description": "The laterality of the (possibly paired) anatomic structures examined. E.g., the left knee, both lungs, or unpaired abdomen. If present, shall be consistent with any laterality information indicated in ImagingStudy.series.bodySite.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "specimen": {
          "description": "The specimen imaged, e.g., for whole slide imaging of a biopsy.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "started": {
          "description": "The date and time the series was started.",
          "$ref": "#/definitions/dateTime"
        },
        "_started": {
          "description": "Extensions for started",
          "$ref": "#/definitions/Element"
        },
        "performer": {
          "description": "Indicates who or what performed the series and how they were involved.",
          "items": {
            "$ref": "#/definitions/ImagingStudy_Performer"
          },
          "type": "array"
        },
        "instance": {
          "description": "A single SOP instance within the series, e.g. an image, or presentation state.",
          "items": {
            "$ref": "#/definitions/ImagingStudy_Instance"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "modality"
      ]
    },
    "ImagingStudy_Performer": {
      "description": "Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context.  A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "function": {
          "description": "Distinguishes the type of involvement of the performer in the series.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "actor": {
          "description": "Indicates who or what performed the series.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "actor"
      ]
    },
    "ImagingStudy_Instance": {
      "description": "Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context.  A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "uid": {
          "description": "The DICOM SOP Instance UID for this image or other DICOM content.",
          "$ref": "#/definitions/id"
        },
        "_uid": {
          "description": "Extensions for uid",
          "$ref": "#/definitions/Element"
        },
        "sopClass": {
          "description": "DICOM instance  type.",
          "$ref": "#/definitions/Coding"
        },
        "number": {
          "description": "The number of instance in the series.",
          "$ref": "#/definitions/unsignedInt"
        },
        "_number": {
          "description": "Extensions for number",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "The description of the instance.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "sopClass"
      ]
    },
    "Immunization": {
      "description": "Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.",
      "properties": {
        "resourceType": {
          "description": "This is a Immunization resource",
          "const": "Immunization"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "A unique identifier assigned to this immunization record.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "basedOn": {
          "description": "A plan, order or recommendation fulfilled in whole or in part by this immunization.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "status": {
          "description": "Indicates the current status of the immunization event.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "statusReason": {
          "description": "Indicates the reason the immunization event was not performed.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "vaccineCode": {
          "description": "Vaccine that was administered or was to be administered.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "administeredProduct": {
          "description": "An indication of which product was administered to the patient. This is typically a more detailed representation of the concept conveyed by the vaccineCode data element. If a Medication resource is referenced, it may be to a stand-alone resource or a contained resource within the Immunization resource.",
          "$ref": "#/definitions/CodeableReference"
        },
        "manufacturer": {
          "description": "Name of vaccine manufacturer.",
          "$ref": "#/definitions/CodeableReference"
        },
        "lotNumber": {
          "description": "Lot number of the  vaccine product.",
          "$ref": "#/definitions/string"
        },
        "_lotNumber": {
          "description": "Extensions for lotNumber",
          "$ref": "#/definitions/Element"
        },
        "expirationDate": {
          "description": "Date vaccine batch expires.",
          "$ref": "#/definitions/date"
        },
        "_expirationDate": {
          "description": "Extensions for expirationDate",
          "$ref": "#/definitions/Element"
        },
        "patient": {
          "description": "The patient who either received or did not receive the immunization.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "The visit or admission or other contact between patient and health care provider the immunization was performed as part of.",
          "$ref": "#/definitions/Reference"
        },
        "supportingInformation": {
          "description": "Additional information that is relevant to the immunization (e.g. for a vaccine recipient who is pregnant, the gestational age of the fetus). The reason why a vaccine was given (e.g. occupation, underlying medical condition) should be conveyed in Immunization.reason, not as supporting information. The reason why a vaccine was not given (e.g. contraindication) should be conveyed in Immunization.statusReason, not as supporting information.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "occurrenceDateTime": {
          "description": "Date vaccine administered or was to be administered.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_occurrenceDateTime": {
          "description": "Extensions for occurrenceDateTime",
          "$ref": "#/definitions/Element"
        },
        "occurrenceString": {
          "description": "Date vaccine administered or was to be administered.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_occurrenceString": {
          "description": "Extensions for occurrenceString",
          "$ref": "#/definitions/Element"
        },
        "primarySource": {
          "description": "Indicates whether the data contained in the resource was captured by the individual/organization which was responsible for the administration of the vaccine rather than as \u0027secondary reported\u0027 data documented by a third party. A value of \u0027true\u0027 means this data originated with the individual/organization which was responsible for the administration of the vaccine.",
          "$ref": "#/definitions/boolean"
        },
        "_primarySource": {
          "description": "Extensions for primarySource",
          "$ref": "#/definitions/Element"
        },
        "informationSource": {
          "description": "Typically the source of the data when the report of the immunization event is not based on information from the person who administered the vaccine.",
          "$ref": "#/definitions/CodeableReference"
        },
        "location": {
          "description": "The service delivery location where the vaccine administration occurred.",
          "$ref": "#/definitions/Reference"
        },
        "site": {
          "description": "Body site where vaccine was administered.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "route": {
          "description": "The path by which the vaccine product is taken into the body.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "doseQuantity": {
          "description": "The quantity of vaccine product that was administered.",
          "$ref": "#/definitions/Quantity"
        },
        "performer": {
          "description": "Indicates who performed the immunization event.",
          "items": {
            "$ref": "#/definitions/Immunization_Performer"
          },
          "type": "array"
        },
        "note": {
          "description": "Extra information about the immunization that is not conveyed by the other attributes.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "reason": {
          "description": "Describes why the immunization occurred in coded or textual form, or Indicates another resource (Condition, Observation or DiagnosticReport) whose existence justifies this immunization.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "isSubpotent": {
          "description": "Indication if a dose is considered to be subpotent. By default, a dose should be considered to be potent.",
          "$ref": "#/definitions/boolean"
        },
        "_isSubpotent": {
          "description": "Extensions for isSubpotent",
          "$ref": "#/definitions/Element"
        },
        "subpotentReason": {
          "description": "Reason why a dose is considered to be subpotent.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "programEligibility": {
          "description": "Indicates a patient\u0027s eligibility for a funding program.",
          "items": {
            "$ref": "#/definitions/Immunization_ProgramEligibility"
          },
          "type": "array"
        },
        "fundingSource": {
          "description": "Indicates the source of the vaccine actually administered. This may be different than the patient eligibility (e.g. the patient may be eligible for a publically purchased vaccine but due to inventory issues, vaccine purchased with private funds was actually administered).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "reaction": {
          "description": "Categorical data indicating that an adverse event is associated in time to an immunization.",
          "items": {
            "$ref": "#/definitions/Immunization_Reaction"
          },
          "type": "array"
        },
        "protocolApplied": {
          "description": "The protocol (set of recommendations) being followed by the provider who administered the dose.",
          "items": {
            "$ref": "#/definitions/Immunization_ProtocolApplied"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "patient",
        "vaccineCode",
        "resourceType"
      ]
    },
    "Immunization_Performer": {
      "description": "Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "function": {
          "description": "Describes the type of performance (e.g. ordering provider, administering provider, etc.).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "actor": {
          "description": "The practitioner or organization who performed the action.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "actor"
      ]
    },
    "Immunization_ProgramEligibility": {
      "description": "Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "program": {
          "description": "Indicates which program the patient had their eligility evaluated for.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "programStatus": {
          "description": "Indicates the patient\u0027s eligility status for for a specific payment program.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "program",
        "programStatus"
      ]
    },
    "Immunization_Reaction": {
      "description": "Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "date": {
          "description": "Date of reaction to the immunization.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "manifestation": {
          "description": "Details of the reaction.",
          "$ref": "#/definitions/CodeableReference"
        },
        "reported": {
          "description": "Self-reported indicator.",
          "$ref": "#/definitions/boolean"
        },
        "_reported": {
          "description": "Extensions for reported",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Immunization_ProtocolApplied": {
      "description": "Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "series": {
          "description": "One possible path to achieve presumed immunity against a disease - within the context of an authority.",
          "$ref": "#/definitions/string"
        },
        "_series": {
          "description": "Extensions for series",
          "$ref": "#/definitions/Element"
        },
        "authority": {
          "description": "Indicates the authority who published the protocol (e.g. ACIP) that is being followed.",
          "$ref": "#/definitions/Reference"
        },
        "targetDisease": {
          "description": "The vaccine preventable disease the dose is being administered against.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "doseNumber": {
          "description": "Nominal position in a series as intended by the practitioner administering the dose.",
          "$ref": "#/definitions/string"
        },
        "_doseNumber": {
          "description": "Extensions for doseNumber",
          "$ref": "#/definitions/Element"
        },
        "seriesDoses": {
          "description": "The recommended number of doses to achieve immunity as intended by the practitioner administering the dose.",
          "$ref": "#/definitions/string"
        },
        "_seriesDoses": {
          "description": "Extensions for seriesDoses",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ImmunizationEvaluation": {
      "description": "Describes a comparison of an immunization event against published recommendations to determine if the administration is \"valid\" in relation to those  recommendations.",
      "properties": {
        "resourceType": {
          "description": "This is a ImmunizationEvaluation resource",
          "const": "ImmunizationEvaluation"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "A unique identifier assigned to this immunization evaluation record.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "Indicates the current status of the evaluation of the vaccination administration event.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "patient": {
          "description": "The individual for whom the evaluation is being done.",
          "$ref": "#/definitions/Reference"
        },
        "date": {
          "description": "The date the evaluation of the vaccine administration event was performed.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "authority": {
          "description": "Indicates the authority who published the protocol (e.g. ACIP).",
          "$ref": "#/definitions/Reference"
        },
        "targetDisease": {
          "description": "The vaccine preventable disease the dose is being evaluated against.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "immunizationEvent": {
          "description": "The vaccine administration event being evaluated.",
          "$ref": "#/definitions/Reference"
        },
        "doseStatus": {
          "description": "Indicates if the dose is valid or not valid with respect to the published recommendations.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "doseStatusReason": {
          "description": "Provides an explanation as to why the vaccine administration event is valid or not relative to the published recommendations.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "description": {
          "description": "Additional information about the evaluation.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "series": {
          "description": "One possible path to achieve presumed immunity against a disease - within the context of an authority.",
          "$ref": "#/definitions/string"
        },
        "_series": {
          "description": "Extensions for series",
          "$ref": "#/definitions/Element"
        },
        "doseNumber": {
          "description": "Nominal position in a series as determined by the outcome of the evaluation process.",
          "$ref": "#/definitions/string"
        },
        "_doseNumber": {
          "description": "Extensions for doseNumber",
          "$ref": "#/definitions/Element"
        },
        "seriesDoses": {
          "description": "The recommended number of doses to achieve immunity as determined by the outcome of the evaluation process.",
          "$ref": "#/definitions/string"
        },
        "_seriesDoses": {
          "description": "Extensions for seriesDoses",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "doseStatus",
        "patient",
        "targetDisease",
        "immunizationEvent",
        "resourceType"
      ]
    },
    "ImmunizationRecommendation": {
      "description": "A patient\u0027s point-in-time set of recommendations (i.e. forecasting) according to a published schedule with optional supporting justification.",
      "properties": {
        "resourceType": {
          "description": "This is a ImmunizationRecommendation resource",
          "const": "ImmunizationRecommendation"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "A unique identifier assigned to this particular recommendation record.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "patient": {
          "description": "The patient the recommendation(s) are for.",
          "$ref": "#/definitions/Reference"
        },
        "date": {
          "description": "The date the immunization recommendation(s) were created.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "authority": {
          "description": "Indicates the authority who published the protocol (e.g. ACIP).",
          "$ref": "#/definitions/Reference"
        },
        "recommendation": {
          "description": "Vaccine administration recommendations.",
          "items": {
            "$ref": "#/definitions/ImmunizationRecommendation_Recommendation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "patient",
        "recommendation",
        "resourceType"
      ]
    },
    "ImmunizationRecommendation_Recommendation": {
      "description": "A patient\u0027s point-in-time set of recommendations (i.e. forecasting) according to a published schedule with optional supporting justification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "vaccineCode": {
          "description": "Vaccine(s) or vaccine group that pertain to the recommendation.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "targetDisease": {
          "description": "The targeted disease for the recommendation.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "contraindicatedVaccineCode": {
          "description": "Vaccine(s) which should not be used to fulfill the recommendation.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "forecastStatus": {
          "description": "Indicates the patient status with respect to the path to immunity for the target disease.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "forecastReason": {
          "description": "The reason for the assigned forecast status.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "dateCriterion": {
          "description": "Vaccine date recommendations.  For example, earliest date to administer, latest date to administer, etc.",
          "items": {
            "$ref": "#/definitions/ImmunizationRecommendation_DateCriterion"
          },
          "type": "array"
        },
        "description": {
          "description": "Contains the description about the protocol under which the vaccine was administered.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "series": {
          "description": "One possible path to achieve presumed immunity against a disease - within the context of an authority.",
          "$ref": "#/definitions/string"
        },
        "_series": {
          "description": "Extensions for series",
          "$ref": "#/definitions/Element"
        },
        "doseNumber": {
          "description": "Nominal position of the recommended dose in a series as determined by the evaluation and forecasting process (e.g. dose 2 is the next recommended dose).",
          "$ref": "#/definitions/string"
        },
        "_doseNumber": {
          "description": "Extensions for doseNumber",
          "$ref": "#/definitions/Element"
        },
        "seriesDoses": {
          "description": "The recommended number of doses to achieve immunity as determined by the evaluation and forecasting process.",
          "$ref": "#/definitions/string"
        },
        "_seriesDoses": {
          "description": "Extensions for seriesDoses",
          "$ref": "#/definitions/Element"
        },
        "supportingImmunization": {
          "description": "Immunization event history and/or evaluation that supports the status and recommendation.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "supportingPatientInformation": {
          "description": "Patient Information that supports the status and recommendation.  This includes patient observations, adverse reactions and allergy/intolerance information.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "forecastStatus"
      ]
    },
    "ImmunizationRecommendation_DateCriterion": {
      "description": "A patient\u0027s point-in-time set of recommendations (i.e. forecasting) according to a published schedule with optional supporting justification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "Date classification of recommendation.  For example, earliest date to give, latest date to give, etc.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "value": {
          "description": "The date whose meaning is specified by dateCriterion.code.",
          "$ref": "#/definitions/dateTime"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "ImplementationGuide": {
      "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.",
      "properties": {
        "resourceType": {
          "description": "This is a ImplementationGuide resource",
          "const": "ImplementationGuide"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this implementation guide when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this implementation guide is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the implementation guide is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this {{title}} when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the implementation guide when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the implementation guide author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the implementation guide. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the implementation guide.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this implementation guide. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this implementation guide is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the implementation guide was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the implementation guide changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the implementation guide.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the implementation guide from a consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate implementation guide instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the implementation guide is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this {{title}} is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the implementation guide and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the implementation guide.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "packageId": {
          "description": "The NPM package name for this Implementation Guide, used in the NPM package distribution, which is the primary mechanism by which FHIR based tooling manages IG dependencies. This value must be globally unique, and should be assigned with care.",
          "$ref": "#/definitions/id"
        },
        "_packageId": {
          "description": "Extensions for packageId",
          "$ref": "#/definitions/Element"
        },
        "license": {
          "description": "The license that applies to this Implementation Guide, using an SPDX license code, or \u0027not-open-source\u0027.",
          "$ref": "#/definitions/code"
        },
        "_license": {
          "description": "Extensions for license",
          "$ref": "#/definitions/Element"
        },
        "fhirVersion": {
          "description": "The version(s) of the FHIR specification that this ImplementationGuide targets - e.g. describes how to use. The value of this element is the formal version of the specification, without the revision number, e.g. [publication].[major].[minor], which is 4.6.0. for this version.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_fhirVersion": {
          "description": "Extensions for fhirVersion",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "dependsOn": {
          "description": "Another implementation guide that this implementation depends on. Typically, an implementation guide uses value sets, profiles etc.defined in other implementation guides.",
          "items": {
            "$ref": "#/definitions/ImplementationGuide_DependsOn"
          },
          "type": "array"
        },
        "global": {
          "description": "A set of profiles that all resources covered by this implementation guide must conform to.",
          "items": {
            "$ref": "#/definitions/ImplementationGuide_Global"
          },
          "type": "array"
        },
        "definition": {
          "description": "The information needed by an IG publisher tool to publish the whole implementation guide.",
          "$ref": "#/definitions/ImplementationGuide_Definition"
        },
        "manifest": {
          "description": "Information about an assembled implementation guide, created by the publication tooling.",
          "$ref": "#/definitions/ImplementationGuide_Manifest"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "ImplementationGuide_DependsOn": {
      "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "uri": {
          "description": "A canonical reference to the Implementation guide for the dependency.",
          "$ref": "#/definitions/canonical"
        },
        "packageId": {
          "description": "The NPM package name for the Implementation Guide that this IG depends on.",
          "$ref": "#/definitions/id"
        },
        "_packageId": {
          "description": "Extensions for packageId",
          "$ref": "#/definitions/Element"
        },
        "version": {
          "description": "The version of the IG that is depended on, when the correct version is required to understand the IG correctly.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "reason": {
          "description": "A description explaining the nature of the dependency on the listed IG.",
          "$ref": "#/definitions/markdown"
        },
        "_reason": {
          "description": "Extensions for reason",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "uri"
      ]
    },
    "ImplementationGuide_Global": {
      "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of resource that all instances must conform to.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "profile": {
          "description": "A reference to the profile that all instances must conform to.",
          "$ref": "#/definitions/canonical"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "profile"
      ]
    },
    "ImplementationGuide_Definition": {
      "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "grouping": {
          "description": "A logical group of resources. Logical groups can be used when building pages.",
          "items": {
            "$ref": "#/definitions/ImplementationGuide_Grouping"
          },
          "type": "array"
        },
        "resource": {
          "description": "A resource that is part of the implementation guide. Conformance resources (value set, structure definition, capability statements etc.) are obvious candidates for inclusion, but any kind of resource can be included as an example resource.",
          "items": {
            "$ref": "#/definitions/ImplementationGuide_Resource"
          },
          "type": "array"
        },
        "page": {
          "description": "A page / section in the implementation guide. The root page is the implementation guide home page.",
          "$ref": "#/definitions/ImplementationGuide_Page"
        },
        "parameter": {
          "description": "A set of parameters that defines how the implementation guide is built. The parameters are defined by the relevant tools that build the implementation guides.",
          "items": {
            "$ref": "#/definitions/ImplementationGuide_Parameter"
          },
          "type": "array"
        },
        "template": {
          "description": "A template for building resources.",
          "items": {
            "$ref": "#/definitions/ImplementationGuide_Template"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ImplementationGuide_Grouping": {
      "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "The human-readable title to display for the package of resources when rendering the implementation guide.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "Human readable text describing the package.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ImplementationGuide_Resource": {
      "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "reference": {
          "description": "Where this resource is found.",
          "$ref": "#/definitions/Reference"
        },
        "fhirVersion": {
          "description": "Indicates the FHIR Version(s) this artifact is intended to apply to. If no versions are specified, the resource is assumed to apply to all the versions stated in ImplementationGuide.fhirVersion.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_fhirVersion": {
          "description": "Extensions for fhirVersion",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "name": {
          "description": "A human assigned name for the resource. All resources SHOULD have a name, but the name may be extracted from the resource (e.g. ValueSet.name).",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "A description of the reason that a resource has been included in the implementation guide.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "isExample": {
          "description": "If true, indicates the resource is an example instance.",
          "$ref": "#/definitions/boolean"
        },
        "_isExample": {
          "description": "Extensions for isExample",
          "$ref": "#/definitions/Element"
        },
        "profile": {
          "description": "If present, indicates profile(s) the instance is valid against.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "groupingId": {
          "description": "Reference to the id of the grouping this resource appears in.",
          "$ref": "#/definitions/id"
        },
        "_groupingId": {
          "description": "Extensions for groupingId",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "reference"
      ]
    },
    "ImplementationGuide_Page": {
      "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "sourceUrl": {
          "description": "Indicates the URL or the actual content to provide for the page.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_sourceUrl": {
          "description": "Extensions for sourceUrl",
          "$ref": "#/definitions/Element"
        },
        "sourceString": {
          "description": "Indicates the URL or the actual content to provide for the page.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_sourceString": {
          "description": "Extensions for sourceString",
          "$ref": "#/definitions/Element"
        },
        "sourceMarkdown": {
          "description": "Indicates the URL or the actual content to provide for the page.",
          "pattern": "^\\s*(\\S|\\s)*$",
          "type": "string"
        },
        "_sourceMarkdown": {
          "description": "Extensions for sourceMarkdown",
          "$ref": "#/definitions/Element"
        },
        "name": {
          "description": "The url by which the page should be known when published.",
          "$ref": "#/definitions/url"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short title used to represent this page in navigational structures such as table of contents, bread crumbs, etc.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "generation": {
          "description": "A code that indicates how the page is generated.",
          "$ref": "#/definitions/code"
        },
        "_generation": {
          "description": "Extensions for generation",
          "$ref": "#/definitions/Element"
        },
        "page": {
          "description": "Nested Pages/Sections under this page.",
          "items": {
            "$ref": "#/definitions/ImplementationGuide_Page"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ImplementationGuide_Parameter": {
      "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "A tool-specific code that defines the parameter.",
          "$ref": "#/definitions/Coding"
        },
        "value": {
          "description": "Value for named type.",
          "$ref": "#/definitions/string"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "ImplementationGuide_Template": {
      "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "Type of template specified.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "source": {
          "description": "The source location for the template.",
          "$ref": "#/definitions/string"
        },
        "_source": {
          "description": "Extensions for source",
          "$ref": "#/definitions/Element"
        },
        "scope": {
          "description": "The scope in which the template applies.",
          "$ref": "#/definitions/string"
        },
        "_scope": {
          "description": "Extensions for scope",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ImplementationGuide_Manifest": {
      "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "rendering": {
          "description": "A pointer to official web page, PDF or other rendering of the implementation guide.",
          "$ref": "#/definitions/url"
        },
        "_rendering": {
          "description": "Extensions for rendering",
          "$ref": "#/definitions/Element"
        },
        "resource": {
          "description": "A resource that is part of the implementation guide. Conformance resources (value set, structure definition, capability statements etc.) are obvious candidates for inclusion, but any kind of resource can be included as an example resource.",
          "items": {
            "$ref": "#/definitions/ImplementationGuide_Resource1"
          },
          "type": "array"
        },
        "page": {
          "description": "Information about a page within the IG.",
          "items": {
            "$ref": "#/definitions/ImplementationGuide_Page1"
          },
          "type": "array"
        },
        "image": {
          "description": "Indicates a relative path to an image that exists within the IG.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_image": {
          "description": "Extensions for image",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "other": {
          "description": "Indicates the relative path of an additional non-page, non-image file that is part of the IG - e.g. zip, jar and similar files that could be the target of a hyperlink in a derived IG.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_other": {
          "description": "Extensions for other",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resource"
      ]
    },
    "ImplementationGuide_Resource1": {
      "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "reference": {
          "description": "Where this resource is found.",
          "$ref": "#/definitions/Reference"
        },
        "isExample": {
          "description": "If true, indicates the resource is an example instance.",
          "$ref": "#/definitions/boolean"
        },
        "_isExample": {
          "description": "Extensions for isExample",
          "$ref": "#/definitions/Element"
        },
        "profile": {
          "description": "If present, indicates profile(s) the instance is valid against.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "relativePath": {
          "description": "The relative path for primary page for this resource within the IG.",
          "$ref": "#/definitions/url"
        },
        "_relativePath": {
          "description": "Extensions for relativePath",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "reference"
      ]
    },
    "ImplementationGuide_Page1": {
      "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "Relative path to the page.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "Label for the page intended for human display.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "anchor": {
          "description": "The name of an anchor available on the page.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_anchor": {
          "description": "Extensions for anchor",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Ingredient": {
      "description": "An ingredient of a manufactured item or pharmaceutical product.",
      "properties": {
        "resourceType": {
          "description": "This is a Ingredient resource",
          "const": "Ingredient"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "The identifier(s) of this Ingredient that are assigned by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate.",
          "$ref": "#/definitions/Identifier"
        },
        "status": {
          "description": "The status of this ingredient. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "for": {
          "description": "The product which this ingredient is a constituent part of.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "role": {
          "description": "A classification of the ingredient identifying its purpose within the product, e.g. active, inactive.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "function": {
          "description": "A classification of the ingredient identifying its precise purpose(s) in the drug product. This extends the Ingredient.role to add more detail. Example: antioxidant, alkalizing agent.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "group": {
          "description": "A classification of the ingredient according to where in the physical item it tends to be used, such the outer shell of a tablet, inner body or ink.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "allergenicIndicator": {
          "description": "If the ingredient is a known or suspected allergen. Note that this is a property of the substance, so if a reference to a SubstanceDefinition is used to decribe that (rather than just a code), the allergen information should go there, not here.",
          "$ref": "#/definitions/boolean"
        },
        "_allergenicIndicator": {
          "description": "Extensions for allergenicIndicator",
          "$ref": "#/definitions/Element"
        },
        "manufacturer": {
          "description": "The organization(s) that manufacture this ingredient. Can be used to indicate:         1) Organizations we are aware of that manufacture this ingredient         2) Specific Manufacturer(s) currently being used         3) Set of organisations allowed to manufacture this ingredient for this product         Users must be clear on the application of context relevant to their use case.",
          "items": {
            "$ref": "#/definitions/Ingredient_Manufacturer"
          },
          "type": "array"
        },
        "substance": {
          "description": "The substance that comprises this ingredient.",
          "$ref": "#/definitions/Ingredient_Substance"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "role",
        "substance",
        "resourceType"
      ]
    },
    "Ingredient_Manufacturer": {
      "description": "An ingredient of a manufactured item or pharmaceutical product.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "role": {
          "description": "The way in which this manufacturer is associated with the ingredient. For example whether it is a possible one (others allowed), or an exclusive authorized one for this ingredient. Note that this is not the manufacturing process role.",
          "$ref": "#/definitions/code"
        },
        "_role": {
          "description": "Extensions for role",
          "$ref": "#/definitions/Element"
        },
        "manufacturer": {
          "description": "An organization that manufactures this ingredient.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "manufacturer"
      ]
    },
    "Ingredient_Substance": {
      "description": "An ingredient of a manufactured item or pharmaceutical product.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "A code or full resource that represents the ingredient\u0027s substance.",
          "$ref": "#/definitions/CodeableReference"
        },
        "strength": {
          "description": "The quantity of substance in the unit of presentation, or in the volume (or mass) of the single pharmaceutical product or manufactured item. The allowed repetitions do not represent different strengths, but are different representations - mathematically equivalent - of a single strength.",
          "items": {
            "$ref": "#/definitions/Ingredient_Strength"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "Ingredient_Strength": {
      "description": "An ingredient of a manufactured item or pharmaceutical product.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "presentationRatio": {
          "description": "The quantity of substance in the unit of presentation, or in the volume (or mass) of the single pharmaceutical product or manufactured item. Unit of presentation refers to the quantity that the item occurs in e.g. a strength per tablet size, perhaps \u0027per 20mg\u0027 (the size of the tablet). It is not generally normalized as a unitary unit, which would be \u0027per mg\u0027).",
          "$ref": "#/definitions/Ratio"
        },
        "presentationRatioRange": {
          "description": "The quantity of substance in the unit of presentation, or in the volume (or mass) of the single pharmaceutical product or manufactured item. Unit of presentation refers to the quantity that the item occurs in e.g. a strength per tablet size, perhaps \u0027per 20mg\u0027 (the size of the tablet). It is not generally normalized as a unitary unit, which would be \u0027per mg\u0027).",
          "$ref": "#/definitions/RatioRange"
        },
        "presentationCodeableConcept": {
          "description": "The quantity of substance in the unit of presentation, or in the volume (or mass) of the single pharmaceutical product or manufactured item. Unit of presentation refers to the quantity that the item occurs in e.g. a strength per tablet size, perhaps \u0027per 20mg\u0027 (the size of the tablet). It is not generally normalized as a unitary unit, which would be \u0027per mg\u0027).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "presentationQuantity": {
          "description": "The quantity of substance in the unit of presentation, or in the volume (or mass) of the single pharmaceutical product or manufactured item. Unit of presentation refers to the quantity that the item occurs in e.g. a strength per tablet size, perhaps \u0027per 20mg\u0027 (the size of the tablet). It is not generally normalized as a unitary unit, which would be \u0027per mg\u0027).",
          "$ref": "#/definitions/Quantity"
        },
        "textPresentation": {
          "description": "A textual represention of either the whole of the presentation strength or a part of it - with the rest being in Strength.presentation as a ratio.",
          "$ref": "#/definitions/string"
        },
        "_textPresentation": {
          "description": "Extensions for textPresentation",
          "$ref": "#/definitions/Element"
        },
        "concentrationRatio": {
          "description": "The strength per unitary volume (or mass).",
          "$ref": "#/definitions/Ratio"
        },
        "concentrationRatioRange": {
          "description": "The strength per unitary volume (or mass).",
          "$ref": "#/definitions/RatioRange"
        },
        "concentrationCodeableConcept": {
          "description": "The strength per unitary volume (or mass).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "concentrationQuantity": {
          "description": "The strength per unitary volume (or mass).",
          "$ref": "#/definitions/Quantity"
        },
        "textConcentration": {
          "description": "A textual represention of either the whole of the concentration strength or a part of it - with the rest being in Strength.concentration as a ratio.",
          "$ref": "#/definitions/string"
        },
        "_textConcentration": {
          "description": "Extensions for textConcentration",
          "$ref": "#/definitions/Element"
        },
        "basis": {
          "description": "A code that indicates if the strength is, for example, based on the ingredient substance as stated or on the substance base (when the ingredient is a salt).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "measurementPoint": {
          "description": "For when strength is measured at a particular point or distance. There are products where strength is measured at a particular point. For example, the strength of the ingredient in some inhalers is measured at a particular position relative to the point of aerosolization.",
          "$ref": "#/definitions/string"
        },
        "_measurementPoint": {
          "description": "Extensions for measurementPoint",
          "$ref": "#/definitions/Element"
        },
        "country": {
          "description": "The country or countries for which the strength range applies.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "referenceStrength": {
          "description": "Strength expressed in terms of a reference substance. For when the ingredient strength is additionally expressed as equivalent to the strength of some other closely related substance (e.g. salt vs. base). Reference strength represents the strength (quantitative composition) of the active moiety of the active substance. There are situations when the active substance and active moiety are different, therefore both a strength and a reference strength are needed.",
          "items": {
            "$ref": "#/definitions/Ingredient_ReferenceStrength"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Ingredient_ReferenceStrength": {
      "description": "An ingredient of a manufactured item or pharmaceutical product.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "substance": {
          "description": "Relevant reference substance.",
          "$ref": "#/definitions/CodeableReference"
        },
        "strengthRatio": {
          "description": "Strength expressed in terms of a reference substance.",
          "$ref": "#/definitions/Ratio"
        },
        "strengthRatioRange": {
          "description": "Strength expressed in terms of a reference substance.",
          "$ref": "#/definitions/RatioRange"
        },
        "strengthQuantity": {
          "description": "Strength expressed in terms of a reference substance.",
          "$ref": "#/definitions/Quantity"
        },
        "measurementPoint": {
          "description": "For when strength is measured at a particular point or distance.",
          "$ref": "#/definitions/string"
        },
        "_measurementPoint": {
          "description": "Extensions for measurementPoint",
          "$ref": "#/definitions/Element"
        },
        "country": {
          "description": "The country or countries for which the strength range applies.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "InsurancePlan": {
      "description": "Details of a Health Insurance product/plan provided by an organization.",
      "properties": {
        "resourceType": {
          "description": "This is a InsurancePlan resource",
          "const": "InsurancePlan"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Business identifiers assigned to this health insurance product which remain constant as the resource is updated and propagates from server to server.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "The current state of the health insurance product.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "The kind of health insurance product.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "name": {
          "description": "Official name of the health insurance product as designated by the owner.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "alias": {
          "description": "A list of alternate names that the product is known as, or was known as in the past.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_alias": {
          "description": "Extensions for alias",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "period": {
          "description": "The period of time that the health insurance product is available.",
          "$ref": "#/definitions/Period"
        },
        "ownedBy": {
          "description": "The entity that is providing  the health insurance product and underwriting the risk.  This is typically an insurance carriers, other third-party payers, or health plan sponsors comonly referred to as \u0027payers\u0027.",
          "$ref": "#/definitions/Reference"
        },
        "administeredBy": {
          "description": "An organization which administer other services such as underwriting, customer service and/or claims processing on behalf of the health insurance product owner.",
          "$ref": "#/definitions/Reference"
        },
        "coverageArea": {
          "description": "The geographic region in which a health insurance product\u0027s benefits apply.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "contact": {
          "description": "The contact details of communication devices available relevant to the specific Insurance Plan/Product. This can include addresses, phone numbers, fax numbers, mobile numbers, email addresses and web sites.",
          "items": {
            "$ref": "#/definitions/ExtendedContactDetail"
          },
          "type": "array"
        },
        "endpoint": {
          "description": "The technical endpoints providing access to services operated for the health insurance product.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "network": {
          "description": "Reference to the network included in the health insurance product.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "coverage": {
          "description": "Details about the coverage offered by the insurance product.",
          "items": {
            "$ref": "#/definitions/InsurancePlan_Coverage"
          },
          "type": "array"
        },
        "plan": {
          "description": "Details about an insurance plan.",
          "items": {
            "$ref": "#/definitions/InsurancePlan_Plan"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "InsurancePlan_Coverage": {
      "description": "Details of a Health Insurance product/plan provided by an organization.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Type of coverage  (Medical; Dental; Mental Health; Substance Abuse; Vision; Drug; Short Term; Long Term Care; Hospice; Home Health).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "network": {
          "description": "Reference to the network that providing the type of coverage.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "benefit": {
          "description": "Specific benefits under this type of coverage.",
          "items": {
            "$ref": "#/definitions/InsurancePlan_Benefit"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type",
        "benefit"
      ]
    },
    "InsurancePlan_Benefit": {
      "description": "Details of a Health Insurance product/plan provided by an organization.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Type of benefit (primary care; speciality care; inpatient; outpatient).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "requirement": {
          "description": "The referral requirements to have access/coverage for this benefit.",
          "$ref": "#/definitions/string"
        },
        "_requirement": {
          "description": "Extensions for requirement",
          "$ref": "#/definitions/Element"
        },
        "limit": {
          "description": "The specific limits on the benefit.",
          "items": {
            "$ref": "#/definitions/InsurancePlan_Limit"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "InsurancePlan_Limit": {
      "description": "Details of a Health Insurance product/plan provided by an organization.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "value": {
          "description": "The maximum amount of a service item a plan will pay for a covered benefit.  For examples. wellness visits, or eyeglasses.",
          "$ref": "#/definitions/Quantity"
        },
        "code": {
          "description": "The specific limit on the benefit.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "InsurancePlan_Plan": {
      "description": "Details of a Health Insurance product/plan provided by an organization.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Business identifiers assigned to this health insurance plan which remain constant as the resource is updated and propagates from server to server.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "type": {
          "description": "Type of plan. For example, \"Platinum\" or \"High Deductable\".",
          "$ref": "#/definitions/CodeableConcept"
        },
        "coverageArea": {
          "description": "The geographic region in which a health insurance plan\u0027s benefits apply.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "network": {
          "description": "Reference to the network that providing the type of coverage.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "generalCost": {
          "description": "Overall costs associated with the plan.",
          "items": {
            "$ref": "#/definitions/InsurancePlan_GeneralCost"
          },
          "type": "array"
        },
        "specificCost": {
          "description": "Costs associated with the coverage provided by the product.",
          "items": {
            "$ref": "#/definitions/InsurancePlan_SpecificCost"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "InsurancePlan_GeneralCost": {
      "description": "Details of a Health Insurance product/plan provided by an organization.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Type of cost.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "groupSize": {
          "description": "Number of participants enrolled in the plan.",
          "$ref": "#/definitions/positiveInt"
        },
        "_groupSize": {
          "description": "Extensions for groupSize",
          "$ref": "#/definitions/Element"
        },
        "cost": {
          "description": "Value of the cost.",
          "$ref": "#/definitions/Money"
        },
        "comment": {
          "description": "Additional information about the general costs associated with this plan.",
          "$ref": "#/definitions/string"
        },
        "_comment": {
          "description": "Extensions for comment",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "InsurancePlan_SpecificCost": {
      "description": "Details of a Health Insurance product/plan provided by an organization.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "category": {
          "description": "General category of benefit (Medical; Dental; Vision; Drug; Mental Health; Substance Abuse; Hospice, Home Health).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "benefit": {
          "description": "List of the specific benefits under this category of benefit.",
          "items": {
            "$ref": "#/definitions/InsurancePlan_Benefit1"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "category"
      ]
    },
    "InsurancePlan_Benefit1": {
      "description": "Details of a Health Insurance product/plan provided by an organization.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Type of specific benefit (preventative; primary care office visit; speciality office visit; hospitalization; emergency room; urgent care).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "cost": {
          "description": "List of the costs associated with a specific benefit.",
          "items": {
            "$ref": "#/definitions/InsurancePlan_Cost"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "InsurancePlan_Cost": {
      "description": "Details of a Health Insurance product/plan provided by an organization.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Type of cost (copay; individual cap; family cap; coinsurance; deductible).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "applicability": {
          "description": "Whether the cost applies to in-network or out-of-network providers (in-network; out-of-network; other).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "qualifiers": {
          "description": "Additional information about the cost, such as information about funding sources (e.g. HSA, HRA, FSA, RRA).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "value": {
          "description": "The actual cost value. (some of the costs may be represented as percentages rather than currency, e.g. 10% coinsurance).",
          "$ref": "#/definitions/Quantity"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "InventoryReport": {
      "description": "A report of inventory or stock items.",
      "properties": {
        "resourceType": {
          "description": "This is a InventoryReport resource",
          "const": "InventoryReport"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifiers for the InventoryReport.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of the inventory check or notification - whether this is draft (e.g. the report is still pending some updates) or active.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "countType": {
          "description": "Whether the report is about the current inventory count (snapshot) or a differential change in inventory (change).",
          "$ref": "#/definitions/code"
        },
        "_countType": {
          "description": "Extensions for countType",
          "$ref": "#/definitions/Element"
        },
        "operationType": {
          "description": "What type of operation is being performed - addition or subtraction.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "operationTypeReason": {
          "description": "The reason for this count - regular count, ad-hoc count, new arrivals, etc.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "reportedDateTime": {
          "description": "When the report has been submitted.",
          "$ref": "#/definitions/dateTime"
        },
        "_reportedDateTime": {
          "description": "Extensions for reportedDateTime",
          "$ref": "#/definitions/Element"
        },
        "reporter": {
          "description": "Who submits the report.",
          "$ref": "#/definitions/Reference"
        },
        "reportingPeriod": {
          "description": "The period the report refers to.",
          "$ref": "#/definitions/Period"
        },
        "inventoryListing": {
          "description": "An inventory listing section (grouped by any of the attributes).",
          "items": {
            "$ref": "#/definitions/InventoryReport_InventoryListing"
          },
          "type": "array"
        },
        "note": {
          "description": "A note associated with the InventoryReport.",
          "$ref": "#/definitions/Annotation"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "InventoryReport_InventoryListing": {
      "description": "A report of inventory or stock items.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "location": {
          "description": "Location of the inventory items.",
          "$ref": "#/definitions/Reference"
        },
        "itemStatus": {
          "description": "The status of the items.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "countingDateTime": {
          "description": "The date and time when the items were counted.",
          "$ref": "#/definitions/dateTime"
        },
        "_countingDateTime": {
          "description": "Extensions for countingDateTime",
          "$ref": "#/definitions/Element"
        },
        "items": {
          "description": "The item or items in this listing.",
          "items": {
            "$ref": "#/definitions/InventoryReport_Items"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "InventoryReport_Items": {
      "description": "A report of inventory or stock items.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "category": {
          "description": "The category of the item or items.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "quantity": {
          "description": "The quantity of the item or items.",
          "$ref": "#/definitions/Quantity"
        },
        "item": {
          "description": "The code or reference to the item type.",
          "$ref": "#/definitions/CodeableReference"
        },
        "lot": {
          "description": "The lot number of the item or items.",
          "$ref": "#/definitions/string"
        },
        "_lot": {
          "description": "Extensions for lot",
          "$ref": "#/definitions/Element"
        },
        "serial": {
          "description": "The serial number of the item.",
          "$ref": "#/definitions/string"
        },
        "_serial": {
          "description": "Extensions for serial",
          "$ref": "#/definitions/Element"
        },
        "expiry": {
          "description": "The expiry date of the item or items.",
          "$ref": "#/definitions/dateTime"
        },
        "_expiry": {
          "description": "Extensions for expiry",
          "$ref": "#/definitions/Element"
        },
        "manufacturingDate": {
          "description": "The manufacturingDate of the item or items.",
          "$ref": "#/definitions/dateTime"
        },
        "_manufacturingDate": {
          "description": "Extensions for manufacturingDate",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "item",
        "quantity"
      ]
    },
    "Invoice": {
      "description": "Invoice containing collected ChargeItems from an Account with calculated individual and total price for Billing purpose.",
      "properties": {
        "resourceType": {
          "description": "This is a Invoice resource",
          "const": "Invoice"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifier of this Invoice, often used for reference in correspondence about this invoice or for tracking of payments.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "The current state of the Invoice.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "cancelledReason": {
          "description": "In case of Invoice cancellation a reason must be given (entered in error, superseded by corrected invoice etc.).",
          "$ref": "#/definitions/string"
        },
        "_cancelledReason": {
          "description": "Extensions for cancelledReason",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "Type of Invoice depending on domain, realm an usage (e.g. internal/external, dental, preliminary).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subject": {
          "description": "The individual or set of individuals receiving the goods and services billed in this invoice.",
          "$ref": "#/definitions/Reference"
        },
        "recipient": {
          "description": "The individual or Organization responsible for balancing of this invoice.",
          "$ref": "#/definitions/Reference"
        },
        "date": {
          "description": "Depricared by the element below.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "creation": {
          "description": "Date/time(s) of when this Invoice was posted.",
          "$ref": "#/definitions/dateTime"
        },
        "_creation": {
          "description": "Extensions for creation",
          "$ref": "#/definitions/Element"
        },
        "periodDate": {
          "description": "Date/time(s) range of services included in this invoice.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_periodDate": {
          "description": "Extensions for periodDate",
          "$ref": "#/definitions/Element"
        },
        "periodPeriod": {
          "description": "Date/time(s) range of services included in this invoice.",
          "$ref": "#/definitions/Period"
        },
        "participant": {
          "description": "Indicates who or what performed or participated in the charged service.",
          "items": {
            "$ref": "#/definitions/Invoice_Participant"
          },
          "type": "array"
        },
        "issuer": {
          "description": "The organizationissuing the Invoice.",
          "$ref": "#/definitions/Reference"
        },
        "account": {
          "description": "Account which is supposed to be balanced with this Invoice.",
          "$ref": "#/definitions/Reference"
        },
        "lineItem": {
          "description": "Each line item represents one charge for goods and services rendered. Details such as date, code and amount are found in the referenced ChargeItem resource.",
          "items": {
            "$ref": "#/definitions/Invoice_LineItem"
          },
          "type": "array"
        },
        "totalPriceComponent": {
          "description": "The total amount for the Invoice may be calculated as the sum of the line items with surcharges/deductions that apply in certain conditions.  The priceComponent element can be used to offer transparency to the recipient of the Invoice of how the total price was calculated.",
          "items": {
            "$ref": "#/definitions/MonetaryComponent"
          },
          "type": "array"
        },
        "totalNet": {
          "description": "Invoice total , taxes excluded.",
          "$ref": "#/definitions/Money"
        },
        "totalGross": {
          "description": "Invoice total, tax included.",
          "$ref": "#/definitions/Money"
        },
        "paymentTerms": {
          "description": "Payment details such as banking details, period of payment, deductibles, methods of payment.",
          "$ref": "#/definitions/markdown"
        },
        "_paymentTerms": {
          "description": "Extensions for paymentTerms",
          "$ref": "#/definitions/Element"
        },
        "note": {
          "description": "Comments made about the invoice by the issuer, subject, or other participants.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Invoice_Participant": {
      "description": "Invoice containing collected ChargeItems from an Account with calculated individual and total price for Billing purpose.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "role": {
          "description": "Describes the type of involvement (e.g. transcriptionist, creator etc.). If the invoice has been created automatically, the Participant may be a billing engine or another kind of device.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "actor": {
          "description": "The device, practitioner, etc. who performed or participated in the service.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "actor"
      ]
    },
    "Invoice_LineItem": {
      "description": "Invoice containing collected ChargeItems from an Account with calculated individual and total price for Billing purpose.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "sequence": {
          "description": "Sequence in which the items appear on the invoice.",
          "$ref": "#/definitions/positiveInt"
        },
        "_sequence": {
          "description": "Extensions for sequence",
          "$ref": "#/definitions/Element"
        },
        "servicedDate": {
          "description": "Date/time(s) range when this service was delivered or completed.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_servicedDate": {
          "description": "Extensions for servicedDate",
          "$ref": "#/definitions/Element"
        },
        "servicedPeriod": {
          "description": "Date/time(s) range when this service was delivered or completed.",
          "$ref": "#/definitions/Period"
        },
        "chargeItemReference": {
          "description": "The ChargeItem contains information such as the billing code, date, amount etc. If no further details are required for the lineItem, inline billing codes can be added using the CodeableConcept data type instead of the Reference.",
          "$ref": "#/definitions/Reference"
        },
        "chargeItemCodeableConcept": {
          "description": "The ChargeItem contains information such as the billing code, date, amount etc. If no further details are required for the lineItem, inline billing codes can be added using the CodeableConcept data type instead of the Reference.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "priceComponent": {
          "description": "The price for a ChargeItem may be calculated as a base price with surcharges/deductions that apply in certain conditions. A ChargeItemDefinition resource that defines the prices, factors and conditions that apply to a billing code is currently under development. The priceComponent element can be used to offer transparency to the recipient of the Invoice as to how the prices have been calculated.",
          "items": {
            "$ref": "#/definitions/MonetaryComponent"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Library": {
      "description": "The Library resource is a general-purpose container for knowledge asset definitions. It can be used to describe and expose existing knowledge assets such as logic libraries and information model descriptions, as well as to describe a collection of knowledge assets.",
      "properties": {
        "resourceType": {
          "description": "This is a Library resource",
          "const": "Library"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this library when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this library is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the library is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this library when it is represented in other formats, or referenced in a specification, model, design or an instance. e.g. CMS or NQF identifiers for a measure artifact. Note that at least one identifier is required for non-experimental active artifacts.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the library when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the library author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active artifacts.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the library. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the library.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this library. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this library is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the library was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the library changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the library.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the library from a consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate library instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the library is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this library is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the library and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the library.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "approvalDate": {
          "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
          "$ref": "#/definitions/date"
        },
        "_approvalDate": {
          "description": "Extensions for approvalDate",
          "$ref": "#/definitions/Element"
        },
        "lastReviewDate": {
          "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
          "$ref": "#/definitions/date"
        },
        "_lastReviewDate": {
          "description": "Extensions for lastReviewDate",
          "$ref": "#/definitions/Element"
        },
        "effectivePeriod": {
          "description": "The period during which the library content was or is planned to be in active use.",
          "$ref": "#/definitions/Period"
        },
        "topic": {
          "description": "Descriptive topics related to the content of the library. Topics provide a high-level categorization of the library that can be useful for filtering and searching.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "author": {
          "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "editor": {
          "description": "An individual or organization primarily responsible for internal coherence of the content.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "reviewer": {
          "description": "An individual or organization primarily responsible for review of some aspect of the content.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "endorser": {
          "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "relatedArtifact": {
          "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          },
          "type": "array"
        },
        "subtitle": {
          "description": "An explanatory or alternate title for the library giving additional information about its content.",
          "$ref": "#/definitions/string"
        },
        "_subtitle": {
          "description": "Extensions for subtitle",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "Identifies the type of library such as a Logic Library, Model Definition, Asset Collection, or Module Definition.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subjectCodeableConcept": {
          "description": "A code or group definition that describes the intended subject of the contents of the library.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subjectReference": {
          "description": "A code or group definition that describes the intended subject of the contents of the library.",
          "$ref": "#/definitions/Reference"
        },
        "usage": {
          "description": "A detailed description of how the library is used from a clinical perspective.",
          "$ref": "#/definitions/string"
        },
        "_usage": {
          "description": "Extensions for usage",
          "$ref": "#/definitions/Element"
        },
        "parameter": {
          "description": "The parameter element defines parameters used by the library.",
          "items": {
            "$ref": "#/definitions/ParameterDefinition"
          },
          "type": "array"
        },
        "dataRequirement": {
          "description": "Describes a set of data that must be provided in order to be able to successfully perform the computations defined by the library.",
          "items": {
            "$ref": "#/definitions/DataRequirement"
          },
          "type": "array"
        },
        "content": {
          "description": "The content of the library as an Attachment. The content may be a reference to a url, or may be directly embedded as a base-64 string. Either way, the contentType of the attachment determines how to interpret the content.",
          "items": {
            "$ref": "#/definitions/Attachment"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type",
        "resourceType"
      ]
    },
    "Linkage": {
      "description": "Identifies two or more records (resource instances) that refer to the same real-world \"occurrence\".",
      "properties": {
        "resourceType": {
          "description": "This is a Linkage resource",
          "const": "Linkage"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "active": {
          "description": "Indicates whether the asserted set of linkages are considered to be \"in effect\".",
          "$ref": "#/definitions/boolean"
        },
        "_active": {
          "description": "Extensions for active",
          "$ref": "#/definitions/Element"
        },
        "author": {
          "description": "Identifies the user or organization responsible for asserting the linkages as well as the user or organization who establishes the context in which the nature of each linkage is evaluated.",
          "$ref": "#/definitions/Reference"
        },
        "item": {
          "description": "Identifies which record considered as the reference to the same real-world occurrence as well as how the items should be evaluated within the collection of linked items.",
          "items": {
            "$ref": "#/definitions/Linkage_Item"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "item",
        "resourceType"
      ]
    },
    "Linkage_Item": {
      "description": "Identifies two or more records (resource instances) that refer to the same real-world \"occurrence\".",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Distinguishes which item is \"source of truth\" (if any) and which items are no longer considered to be current representations.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "resource": {
          "description": "The resource instance being linked as part of the group.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resource"
      ]
    },
    "List": {
      "description": "A List is a curated collection of resources, for things such as problem lists, allergy lists, facility list, organization list, etc.",
      "properties": {
        "resourceType": {
          "description": "This is a List resource",
          "const": "List"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifier for the List assigned for business purposes outside the context of FHIR.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "Indicates the current state of this list.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "mode": {
          "description": "How this list was prepared - whether it is a working list that is suitable for being maintained on an ongoing basis, or if it represents a snapshot of a list of items from another source, or whether it is a prepared list where items may be marked as added, modified or deleted.",
          "$ref": "#/definitions/code"
        },
        "_mode": {
          "description": "Extensions for mode",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A label for the list assigned by the author.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "This code defines the purpose of the list - why it was created.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subject": {
          "description": "The common subject (or patient) of the resources that are in the list if there is one.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "The encounter that is the context in which this list was created.",
          "$ref": "#/definitions/Reference"
        },
        "date": {
          "description": "Date list was last reviewed/revised and determined to be \u0027current\u0027.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "source": {
          "description": "The entity responsible for deciding what the contents of the list were. Where the list was created by a human, this is the same as the author of the list.",
          "$ref": "#/definitions/Reference"
        },
        "orderedBy": {
          "description": "What order applies to the items in the list.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "note": {
          "description": "Comments that apply to the overall list.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "entry": {
          "description": "Entries in this list.",
          "items": {
            "$ref": "#/definitions/List_Entry"
          },
          "type": "array"
        },
        "emptyReason": {
          "description": "If the list is empty, why the list is empty.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "List_Entry": {
      "description": "A List is a curated collection of resources, for things such as problem lists, allergy lists, facility list, organization list, etc.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "flag": {
          "description": "The flag allows the system constructing the list to indicate the role and significance of the item in the list.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "deleted": {
          "description": "True if this item is marked as deleted in the list.",
          "$ref": "#/definitions/boolean"
        },
        "_deleted": {
          "description": "Extensions for deleted",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "When this item was added to the list.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "item": {
          "description": "A reference to the actual resource from which data was derived.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "item"
      ]
    },
    "Location": {
      "description": "Details and position information for a physical place where services are provided and resources and participants may be stored, found, contained, or accommodated.",
      "properties": {
        "resourceType": {
          "description": "This is a Location resource",
          "const": "Location"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Unique code or number identifying the location to its users.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "The status property covers the general availability of the resource, not the current value which may be covered by the operationStatus, or by a schedule/slots if they are configured for the location.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "operationalStatus": {
          "description": "The operational status covers operation values most relevant to beds (but can also apply to rooms/units/chairs/etc. such as an isolation unit/dialysis chair). This typically covers concepts such as contamination, housekeeping, and other activities like maintenance.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "Name of the location as used by humans. Does not need to be unique.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "alias": {
          "description": "A list of alternate names that the location is known as, or was known as, in the past.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_alias": {
          "description": "Extensions for alias",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "description": {
          "description": "Description of the Location, which helps in finding or referencing the place.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "mode": {
          "description": "Indicates whether a resource instance represents a specific location or a class of locations.",
          "$ref": "#/definitions/code"
        },
        "_mode": {
          "description": "Extensions for mode",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "Indicates the type of function performed at the location.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "contact": {
          "description": "The contact details of communication devices available at the location. This can include addresses, phone numbers, fax numbers, mobile numbers, email addresses and web sites.",
          "items": {
            "$ref": "#/definitions/ExtendedContactDetail"
          },
          "type": "array"
        },
        "address": {
          "description": "Physical location.",
          "$ref": "#/definitions/Address"
        },
        "form": {
          "description": "Physical form of the location, e.g. building, room, vehicle, road, virtual.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "position": {
          "description": "The absolute geographic location of the Location, expressed using the WGS84 datum (This is the same co-ordinate system used in KML).",
          "$ref": "#/definitions/Location_Position"
        },
        "managingOrganization": {
          "description": "The organization responsible for the provisioning and upkeep of the location.",
          "$ref": "#/definitions/Reference"
        },
        "partOf": {
          "description": "Another Location of which this Location is physically a part of.",
          "$ref": "#/definitions/Reference"
        },
        "characteristic": {
          "description": "Collection of characteristics (attributes).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "hoursOfOperation": {
          "description": "What days/times during a week is this location usually open, and any exceptions where the location is not available.",
          "items": {
            "$ref": "#/definitions/Availability"
          },
          "type": "array"
        },
        "virtualService": {
          "description": "Connection details of a virtual service (e.g. shared conference call facility with dedicated number/details).",
          "items": {
            "$ref": "#/definitions/VirtualServiceDetail"
          },
          "type": "array"
        },
        "endpoint": {
          "description": "Technical endpoints providing access to services operated for the location.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Location_Position": {
      "description": "Details and position information for a physical place where services are provided and resources and participants may be stored, found, contained, or accommodated.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "longitude": {
          "description": "Longitude. The value domain and the interpretation are the same as for the text of the longitude element in KML (see notes on Location main page).",
          "$ref": "#/definitions/decimal"
        },
        "_longitude": {
          "description": "Extensions for longitude",
          "$ref": "#/definitions/Element"
        },
        "latitude": {
          "description": "Latitude. The value domain and the interpretation are the same as for the text of the latitude element in KML (see notes on Location main page).",
          "$ref": "#/definitions/decimal"
        },
        "_latitude": {
          "description": "Extensions for latitude",
          "$ref": "#/definitions/Element"
        },
        "altitude": {
          "description": "Altitude. The value domain and the interpretation are the same as for the text of the altitude element in KML (see notes on Location main page).",
          "$ref": "#/definitions/decimal"
        },
        "_altitude": {
          "description": "Extensions for altitude",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ManufacturedItemDefinition": {
      "description": "The definition and characteristics of a medicinal manufactured item, such as a tablet or capsule, as contained in a packaged medicinal product.",
      "properties": {
        "resourceType": {
          "description": "This is a ManufacturedItemDefinition resource",
          "const": "ManufacturedItemDefinition"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Unique identifier.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of this item. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "name": {
          "description": "A descriptive name applied to this item.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "manufacturedDoseForm": {
          "description": "Dose form as manufactured and before any transformation into the pharmaceutical product.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "unitOfPresentation": {
          "description": "The “real world” units in which the quantity of the manufactured item is described.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "manufacturer": {
          "description": "Manufacturer of the item, one of several possible.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "marketingStatus": {
          "description": "Allows specifying that an item is on the market for sale, or that it is not available, and the dates and locations associated.",
          "items": {
            "$ref": "#/definitions/MarketingStatus"
          },
          "type": "array"
        },
        "ingredient": {
          "description": "The ingredients of this manufactured item. This is only needed if the ingredients are not specified by incoming references from the Ingredient resource.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "property": {
          "description": "General characteristics of this item.",
          "items": {
            "$ref": "#/definitions/ManufacturedItemDefinition_Property"
          },
          "type": "array"
        },
        "component": {
          "description": "Physical parts of the manufactured item, that it is intrisically made from. This is distinct from the ingredients that are part of its chemical makeup.",
          "items": {
            "$ref": "#/definitions/ManufacturedItemDefinition_Component"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "manufacturedDoseForm",
        "resourceType"
      ]
    },
    "ManufacturedItemDefinition_Property": {
      "description": "The definition and characteristics of a medicinal manufactured item, such as a tablet or capsule, as contained in a packaged medicinal product.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "A code expressing the type of characteristic.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCodeableConcept": {
          "description": "A value for the characteristic.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": {
          "description": "A value for the characteristic.",
          "$ref": "#/definitions/Quantity"
        },
        "valueDate": {
          "description": "A value for the characteristic.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_valueDate": {
          "description": "Extensions for valueDate",
          "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "description": "A value for the characteristic.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueAttachment": {
          "description": "A value for the characteristic.",
          "$ref": "#/definitions/Attachment"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "ManufacturedItemDefinition_Component": {
      "description": "The definition and characteristics of a medicinal manufactured item, such as a tablet or capsule, as contained in a packaged medicinal product.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Defining type of the component e.g. shell, layer, ink.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "function": {
          "description": "The function of this component within the item e.g. delivers active ingredient, masks taste.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "amount": {
          "description": "The measurable amount of total quantity of all substances in the component, expressable in different ways (e.g. by mass or volume).",
          "items": {
            "$ref": "#/definitions/Quantity"
          },
          "type": "array"
        },
        "constituent": {
          "description": "A reference to an constituent of the manufactured item as a whole, linked here so that its component location within the item can be indicated. This not where the item\u0027s ingredient are primarily stated (for which see Ingredient.for or ManufacturedItemDefinition.ingredient).",
          "items": {
            "$ref": "#/definitions/ManufacturedItemDefinition_Constituent"
          },
          "type": "array"
        },
        "property": {
          "description": "General characteristics of this component.",
          "items": {
            "$ref": "#/definitions/ManufacturedItemDefinition_Property"
          },
          "type": "array"
        },
        "component": {
          "description": "A component that this component contains or is made from.",
          "items": {
            "$ref": "#/definitions/ManufacturedItemDefinition_Component"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "ManufacturedItemDefinition_Constituent": {
      "description": "The definition and characteristics of a medicinal manufactured item, such as a tablet or capsule, as contained in a packaged medicinal product.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "amount": {
          "description": "The measurable amount of the substance, expressable in different ways (e.g. by mass or volume).",
          "items": {
            "$ref": "#/definitions/Quantity"
          },
          "type": "array"
        },
        "location": {
          "description": "The physical location of the constituent/ingredient within the component. Example – if the component is the bead in the capsule, then the location would be where the ingredient resides within the product part – intragranular, extra-granular, etc.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "function": {
          "description": "The function of this constituent within the component e.g. binder.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "hasIngredient": {
          "description": "The ingredient that is the constituent of the given component.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Measure": {
      "description": "The Measure resource provides the definition of a quality measure.",
      "properties": {
        "resourceType": {
          "description": "This is a Measure resource",
          "const": "Measure"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this measure when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this measure is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the measure is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this measure when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the measure when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the measure author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active artifacts.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the measure. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the measure.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this measure. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this measure is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the measure was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the measure changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the measure.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the measure from a consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate measure instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the measure is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this measure is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the measure and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the measure.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "approvalDate": {
          "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
          "$ref": "#/definitions/date"
        },
        "_approvalDate": {
          "description": "Extensions for approvalDate",
          "$ref": "#/definitions/Element"
        },
        "lastReviewDate": {
          "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
          "$ref": "#/definitions/date"
        },
        "_lastReviewDate": {
          "description": "Extensions for lastReviewDate",
          "$ref": "#/definitions/Element"
        },
        "effectivePeriod": {
          "description": "The period during which the measure content was or is planned to be in active use.",
          "$ref": "#/definitions/Period"
        },
        "topic": {
          "description": "Descriptive topics related to the content of the measure. Topics provide a high-level categorization grouping types of measures that can be useful for filtering and searching.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "author": {
          "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "editor": {
          "description": "An individual or organization primarily responsible for internal coherence of the content.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "reviewer": {
          "description": "An individual or organization primarily responsible for review of some aspect of the content.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "endorser": {
          "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "relatedArtifact": {
          "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          },
          "type": "array"
        },
        "subtitle": {
          "description": "An explanatory or alternate title for the measure giving additional information about its content.",
          "$ref": "#/definitions/string"
        },
        "_subtitle": {
          "description": "Extensions for subtitle",
          "$ref": "#/definitions/Element"
        },
        "subjectCodeableConcept": {
          "description": "The intended subjects for the measure. If this element is not provided, a Patient subject is assumed, but the subject of the measure can be anything.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subjectReference": {
          "description": "The intended subjects for the measure. If this element is not provided, a Patient subject is assumed, but the subject of the measure can be anything.",
          "$ref": "#/definitions/Reference"
        },
        "basis": {
          "description": "The population basis specifies the type of elements in the population. For a subject-based measure, this is boolean (because the subject and the population basis are the same, and the population criteria define yes/no values for each individual in the population). For measures that have a population basis that is different than the subject, this element specifies the type of the population basis. For example, an encounter-based measure has a subject of Patient and a population basis of Encounter, and the population criteria all return lists of Encounters.",
          "$ref": "#/definitions/code"
        },
        "_basis": {
          "description": "Extensions for basis",
          "$ref": "#/definitions/Element"
        },
        "usage": {
          "description": "A detailed description, from a clinical perspective, of how the measure is used.",
          "$ref": "#/definitions/string"
        },
        "_usage": {
          "description": "Extensions for usage",
          "$ref": "#/definitions/Element"
        },
        "library": {
          "description": "A reference to a Library resource containing the formal logic used by the measure.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "disclaimer": {
          "description": "Notices and disclaimers regarding the use of the measure or related to intellectual property (such as code systems) referenced by the measure.",
          "$ref": "#/definitions/markdown"
        },
        "_disclaimer": {
          "description": "Extensions for disclaimer",
          "$ref": "#/definitions/Element"
        },
        "scoring": {
          "description": "Indicates how the calculation is performed for the measure, including proportion, ratio, continuous-variable, and cohort. The value set is extensible, allowing additional measure scoring types to be represented.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "scoringUnit": {
          "description": "Defines the expected units of measure for the measure score. This element SHOULD be specified as a UCUM unit.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "compositeScoring": {
          "description": "If this is a composite measure, the scoring method used to combine the component measures to determine the composite score.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "type": {
          "description": "Indicates whether the measure is used to examine a process, an outcome over time, a patient-reported outcome, or a structure measure such as utilization.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "riskAdjustment": {
          "description": "A description of the risk adjustment factors that may impact the resulting score for the measure and how they may be accounted for when computing and reporting measure results.",
          "$ref": "#/definitions/string"
        },
        "_riskAdjustment": {
          "description": "Extensions for riskAdjustment",
          "$ref": "#/definitions/Element"
        },
        "rateAggregation": {
          "description": "Describes how to combine the information calculated, based on logic in each of several populations, into one summarized result.",
          "$ref": "#/definitions/string"
        },
        "_rateAggregation": {
          "description": "Extensions for rateAggregation",
          "$ref": "#/definitions/Element"
        },
        "rationale": {
          "description": "Provides a succinct statement of the need for the measure. Usually includes statements pertaining to importance criterion: impact, gap in care, and evidence.",
          "$ref": "#/definitions/markdown"
        },
        "_rationale": {
          "description": "Extensions for rationale",
          "$ref": "#/definitions/Element"
        },
        "clinicalRecommendationStatement": {
          "description": "Provides a summary of relevant clinical guidelines or other clinical recommendations supporting the measure.",
          "$ref": "#/definitions/markdown"
        },
        "_clinicalRecommendationStatement": {
          "description": "Extensions for clinicalRecommendationStatement",
          "$ref": "#/definitions/Element"
        },
        "improvementNotation": {
          "description": "Information on whether an increase or decrease in score is the preferred result (e.g., a higher score indicates better quality OR a lower score indicates better quality OR quality is within a range).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "term": {
          "description": "Provides a description of an individual term used within the measure.",
          "items": {
            "$ref": "#/definitions/Measure_Term"
          },
          "type": "array"
        },
        "guidance": {
          "description": "Additional guidance for the measure including how it can be used in a clinical context, and the intent of the measure.",
          "$ref": "#/definitions/markdown"
        },
        "_guidance": {
          "description": "Extensions for guidance",
          "$ref": "#/definitions/Element"
        },
        "group": {
          "description": "A group of population criteria for the measure.",
          "items": {
            "$ref": "#/definitions/Measure_Group"
          },
          "type": "array"
        },
        "supplementalData": {
          "description": "The supplemental data criteria for the measure report, specified as either the name of a valid CQL expression within a referenced library, or a valid FHIR Resource Path.",
          "items": {
            "$ref": "#/definitions/Measure_SupplementalData"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Measure_Term": {
      "description": "The Measure resource provides the definition of a quality measure.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "A codeable representation of the defined term.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "definition": {
          "description": "Provides a definition for the term as used within the measure.",
          "$ref": "#/definitions/markdown"
        },
        "_definition": {
          "description": "Extensions for definition",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Measure_Group": {
      "description": "The Measure resource provides the definition of a quality measure.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "Indicates a meaning for the group. This can be as simple as a unique identifier, or it can establish meaning in a broader context by drawing from a terminology, allowing groups to be correlated across measures.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "description": {
          "description": "The human readable description of this population group.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "Indicates whether the measure is used to examine a process, an outcome over time, a patient-reported outcome, or a structure measure such as utilization.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "basis": {
          "description": "The population basis specifies the type of elements in the population. For a subject-based measure, this is boolean (because the subject and the population basis are the same, and the population criteria define yes/no values for each individual in the population). For measures that have a population basis that is different than the subject, this element specifies the type of the population basis. For example, an encounter-based measure has a subject of Patient and a population basis of Encounter, and the population criteria all return lists of Encounters.",
          "$ref": "#/definitions/code"
        },
        "_basis": {
          "description": "Extensions for basis",
          "$ref": "#/definitions/Element"
        },
        "scoring": {
          "description": "Indicates how the calculation is performed for the measure, including proportion, ratio, continuous-variable, and cohort. The value set is extensible, allowing additional measure scoring types to be represented.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "scoringUnit": {
          "description": "Defines the expected units of measure for the measure score. This element SHOULD be specified as a UCUM unit.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "improvementNotation": {
          "description": "Information on whether an increase or decrease in score is the preferred result (e.g., a higher score indicates better quality OR a lower score indicates better quality OR quality is within a range).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "population": {
          "description": "A population criteria for the measure.",
          "items": {
            "$ref": "#/definitions/Measure_Population"
          },
          "type": "array"
        },
        "stratifier": {
          "description": "The stratifier criteria for the measure report, specified as either the name of a valid CQL expression defined within a referenced library or a valid FHIR Resource Path.",
          "items": {
            "$ref": "#/definitions/Measure_Stratifier"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Measure_Population": {
      "description": "The Measure resource provides the definition of a quality measure.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "The type of population criteria.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "description": {
          "description": "The human readable description of this population criteria.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "criteria": {
          "description": "An expression that specifies the criteria for the population, typically the name of an expression in a library.",
          "$ref": "#/definitions/Expression"
        },
        "inputPopulationId": {
          "description": "The id of a population element in this measure that provides the input for this population criteria. In most cases, the scoring structure of the measure implies specific relationships (e.g. the Numerator uses the Denominator as the source in a proportion scoring). In some cases, however, multiple possible choices exist and must be resolved explicitly. For example in a ratio measure with multiple initial populations, the denominator must specify which population should be used as the starting point.",
          "$ref": "#/definitions/string"
        },
        "_inputPopulationId": {
          "description": "Extensions for inputPopulationId",
          "$ref": "#/definitions/Element"
        },
        "aggregateMethod": {
          "description": "Specifies which method should be used to aggregate measure observation values. For most scoring types, this is implied by scoring (e.g. a proportion measure counts members of the populations). For continuous variables, however, this information must be specified to ensure correct calculation.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "criteria"
      ]
    },
    "Measure_Stratifier": {
      "description": "The Measure resource provides the definition of a quality measure.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "Indicates a meaning for the stratifier. This can be as simple as a unique identifier, or it can establish meaning in a broader context by drawing from a terminology, allowing stratifiers to be correlated across measures.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "description": {
          "description": "The human readable description of this stratifier criteria.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "criteria": {
          "description": "An expression that specifies the criteria for the stratifier. This is typically the name of an expression defined within a referenced library, but it may also be a path to a stratifier element.",
          "$ref": "#/definitions/Expression"
        },
        "component": {
          "description": "A component of the stratifier criteria for the measure report, specified as either the name of a valid CQL expression defined within a referenced library or a valid FHIR Resource Path.",
          "items": {
            "$ref": "#/definitions/Measure_Component"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Measure_Component": {
      "description": "The Measure resource provides the definition of a quality measure.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "Indicates a meaning for the stratifier component. This can be as simple as a unique identifier, or it can establish meaning in a broader context by drawing from a terminology, allowing stratifiers to be correlated across measures.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "description": {
          "description": "The human readable description of this stratifier criteria component.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "criteria": {
          "description": "An expression that specifies the criteria for this component of the stratifier. This is typically the name of an expression defined within a referenced library, but it may also be a path to a stratifier element.",
          "$ref": "#/definitions/Expression"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "criteria"
      ]
    },
    "Measure_SupplementalData": {
      "description": "The Measure resource provides the definition of a quality measure.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "Indicates a meaning for the supplemental data. This can be as simple as a unique identifier, or it can establish meaning in a broader context by drawing from a terminology, allowing supplemental data to be correlated across measures.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "usage": {
          "description": "An indicator of the intended usage for the supplemental data element. Supplemental data indicates the data is additional information requested to augment the measure information. Risk adjustment factor indicates the data is additional information used to calculate risk adjustment factors when applying a risk model to the measure calculation.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "description": {
          "description": "The human readable description of this supplemental data.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "criteria": {
          "description": "The criteria for the supplemental data. This is typically the name of a valid expression defined within a referenced library, but it may also be a path to a specific data element. The criteria defines the data to be returned for this element.",
          "$ref": "#/definitions/Expression"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "criteria"
      ]
    },
    "MeasureReport": {
      "description": "The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.",
      "properties": {
        "resourceType": {
          "description": "This is a MeasureReport resource",
          "const": "MeasureReport"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this MeasureReport when it is represented in other formats or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "The MeasureReport status. No data will be available until the MeasureReport status is complete.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "The type of measure report. This may be an individual report, which provides the score for the measure for an individual member of the population; a subject-listing, which returns the list of members that meet the various criteria in the measure; a summary report, which returns a population count for each of the criteria in the measure; or a data-collection, which enables the MeasureReport to be used to exchange the data-of-interest for a quality measure.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "dataUpdateType": {
          "description": "Indicates whether the data submitted in an data-exchange report represents a snapshot or incremental update. A snapshot update replaces all previously submitted data for the receiver, whereas an incremental update represents only updated and/or changed data and should be applied as a differential update to the existing submitted data for the receiver.",
          "$ref": "#/definitions/code"
        },
        "_dataUpdateType": {
          "description": "Extensions for dataUpdateType",
          "$ref": "#/definitions/Element"
        },
        "measure": {
          "description": "A reference to the Measure that was calculated to produce this report.",
          "$ref": "#/definitions/canonical"
        },
        "subject": {
          "description": "Optional subject identifying the individual or individuals the report is for.",
          "$ref": "#/definitions/Reference"
        },
        "date": {
          "description": "The date this measure report was generated.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "reporter": {
          "description": "The individual or organization that is reporting the data.",
          "$ref": "#/definitions/Reference"
        },
        "reportingVendor": {
          "description": "A reference to the vendor who queried the data, calculated results and/or generated the report. The ‘reporting vendor’ is intended to represent the submitting entity when it is not the same as the reporting entity. This extension is used when the Receiver is interested in getting vendor information in the report.",
          "$ref": "#/definitions/Reference"
        },
        "location": {
          "description": "A reference to the location for which the data is being reported.",
          "$ref": "#/definitions/Reference"
        },
        "period": {
          "description": "The reporting period for which the report was calculated.",
          "$ref": "#/definitions/Period"
        },
        "inputParameters": {
          "description": "A reference to a Parameters resource (typically represented using a contained resource) that represents any input parameters that were provided to the operation that generated the report.",
          "$ref": "#/definitions/Reference"
        },
        "scoring": {
          "description": "Indicates how the calculation is performed for the measure, including proportion, ratio, continuous-variable, and cohort. The value set is extensible, allowing additional measure scoring types to be represented. It is expected to be the same as the scoring element on the referenced Measure.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "improvementNotation": {
          "description": "Whether improvement in the measure is noted by an increase or decrease in the measure score.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "group": {
          "description": "The results of the calculation, one for each population group in the measure.",
          "items": {
            "$ref": "#/definitions/MeasureReport_Group"
          },
          "type": "array"
        },
        "evaluatedResource": {
          "description": "A reference to a Resource that was used in the calculation of this measure.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "period",
        "resourceType"
      ]
    },
    "MeasureReport_Group": {
      "description": "The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "The meaning of the population group as defined in the measure definition.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "population": {
          "description": "The populations that make up the population group, one for each type of population appropriate for the measure.",
          "items": {
            "$ref": "#/definitions/MeasureReport_Population"
          },
          "type": "array"
        },
        "measureScoreQuantity": {
          "description": "The measure score for this population group, calculated as appropriate for the measure type and scoring method, and based on the contents of the populations defined in the group.",
          "$ref": "#/definitions/Quantity"
        },
        "measureScoreDateTime": {
          "description": "The measure score for this population group, calculated as appropriate for the measure type and scoring method, and based on the contents of the populations defined in the group.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_measureScoreDateTime": {
          "description": "Extensions for measureScoreDateTime",
          "$ref": "#/definitions/Element"
        },
        "measureScoreCodeableConcept": {
          "description": "The measure score for this population group, calculated as appropriate for the measure type and scoring method, and based on the contents of the populations defined in the group.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "measureScorePeriod": {
          "description": "The measure score for this population group, calculated as appropriate for the measure type and scoring method, and based on the contents of the populations defined in the group.",
          "$ref": "#/definitions/Period"
        },
        "measureScoreRange": {
          "description": "The measure score for this population group, calculated as appropriate for the measure type and scoring method, and based on the contents of the populations defined in the group.",
          "$ref": "#/definitions/Range"
        },
        "measureScoreDuration": {
          "description": "The measure score for this population group, calculated as appropriate for the measure type and scoring method, and based on the contents of the populations defined in the group.",
          "$ref": "#/definitions/Duration"
        },
        "stratifier": {
          "description": "When a measure includes multiple stratifiers, there will be a stratifier group for each stratifier defined by the measure.",
          "items": {
            "$ref": "#/definitions/MeasureReport_Stratifier"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MeasureReport_Population": {
      "description": "The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "The type of the population.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "count": {
          "description": "The number of members of the population.",
          "$ref": "#/definitions/integer"
        },
        "_count": {
          "description": "Extensions for count",
          "$ref": "#/definitions/Element"
        },
        "subjectResults": {
          "description": "This element refers to a List of subject level MeasureReport resources, one for each subject in this population.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MeasureReport_Stratifier": {
      "description": "The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "The meaning of this stratifier, as defined in the measure definition.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "stratum": {
          "description": "This element contains the results for a single stratum within the stratifier. For example, when stratifying on administrative gender, there will be four strata, one for each possible gender value.",
          "items": {
            "$ref": "#/definitions/MeasureReport_Stratum"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MeasureReport_Stratum": {
      "description": "The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "valueCodeableConcept": {
          "description": "The value for this stratum, expressed as a CodeableConcept. When defining stratifiers on complex values, the value must be rendered such that the value for each stratum within the stratifier is unique.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueBoolean": {
          "description": "The value for this stratum, expressed as a CodeableConcept. When defining stratifiers on complex values, the value must be rendered such that the value for each stratum within the stratifier is unique.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueQuantity": {
          "description": "The value for this stratum, expressed as a CodeableConcept. When defining stratifiers on complex values, the value must be rendered such that the value for each stratum within the stratifier is unique.",
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "description": "The value for this stratum, expressed as a CodeableConcept. When defining stratifiers on complex values, the value must be rendered such that the value for each stratum within the stratifier is unique.",
          "$ref": "#/definitions/Range"
        },
        "valueReference": {
          "description": "The value for this stratum, expressed as a CodeableConcept. When defining stratifiers on complex values, the value must be rendered such that the value for each stratum within the stratifier is unique.",
          "$ref": "#/definitions/Reference"
        },
        "component": {
          "description": "A stratifier component value.",
          "items": {
            "$ref": "#/definitions/MeasureReport_Component"
          },
          "type": "array"
        },
        "population": {
          "description": "The populations that make up the stratum, one for each type of population appropriate to the measure.",
          "items": {
            "$ref": "#/definitions/MeasureReport_Population1"
          },
          "type": "array"
        },
        "measureScoreQuantity": {
          "description": "The measure score for this stratum, calculated as appropriate for the measure type and scoring method, and based on only the members of this stratum.",
          "$ref": "#/definitions/Quantity"
        },
        "measureScoreDateTime": {
          "description": "The measure score for this stratum, calculated as appropriate for the measure type and scoring method, and based on only the members of this stratum.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_measureScoreDateTime": {
          "description": "Extensions for measureScoreDateTime",
          "$ref": "#/definitions/Element"
        },
        "measureScoreCodeableConcept": {
          "description": "The measure score for this stratum, calculated as appropriate for the measure type and scoring method, and based on only the members of this stratum.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "measureScorePeriod": {
          "description": "The measure score for this stratum, calculated as appropriate for the measure type and scoring method, and based on only the members of this stratum.",
          "$ref": "#/definitions/Period"
        },
        "measureScoreRange": {
          "description": "The measure score for this stratum, calculated as appropriate for the measure type and scoring method, and based on only the members of this stratum.",
          "$ref": "#/definitions/Range"
        },
        "measureScoreDuration": {
          "description": "The measure score for this stratum, calculated as appropriate for the measure type and scoring method, and based on only the members of this stratum.",
          "$ref": "#/definitions/Duration"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MeasureReport_Component": {
      "description": "The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "The code for the stratum component value.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCodeableConcept": {
          "description": "The stratum component value.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueBoolean": {
          "description": "The stratum component value.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueQuantity": {
          "description": "The stratum component value.",
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "description": "The stratum component value.",
          "$ref": "#/definitions/Range"
        },
        "valueReference": {
          "description": "The stratum component value.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "MeasureReport_Population1": {
      "description": "The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "The type of the population.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "count": {
          "description": "The number of members of the population in this stratum.",
          "$ref": "#/definitions/integer"
        },
        "_count": {
          "description": "Extensions for count",
          "$ref": "#/definitions/Element"
        },
        "subjectResults": {
          "description": "This element refers to a List of subject level MeasureReport resources, one for each subject in this population in this stratum.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Medication": {
      "description": "This resource is primarily used for the identification and definition of a medication, including ingredients, for the purposes of prescribing, dispensing, and administering a medication as well as for making statements about medication use.",
      "properties": {
        "resourceType": {
          "description": "This is a Medication resource",
          "const": "Medication"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Business identifier for this medication.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "code": {
          "description": "A code (or set of codes) that specify this medication, or a textual description if no code is available. Usage note: This could be a standard medication code such as a code from RxNorm, SNOMED CT, IDMP etc. It could also be a national or local formulary code, optionally with translations to other code systems.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "status": {
          "description": "A code to indicate if the medication is in active use.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "marketingAuthorizationHolder": {
          "description": "The company or other legal entity that has authorization, from the appropriate drug regulatory authority,  to market a medicine in one or more jurisdictions.  Typically abbreviated MAH.Note:  The MAH may manufacture the product and may also contract the manufacturing of the product to one or more companies (organizations).",
          "$ref": "#/definitions/Reference"
        },
        "doseForm": {
          "description": "Describes the form of the item.  Powder; tablets; capsule.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "totalVolume": {
          "description": "When the specified product code does not infer a package size, this is the specific amount of drug in the product.  For example, when specifying a product that has the same strength (For example, Insulin glargine 100 unit per mL solution for injection), this attribute provides additional clarification of the package amount (For example, 3 mL, 10mL, etc.).",
          "$ref": "#/definitions/Ratio"
        },
        "ingredient": {
          "description": "Identifies a particular constituent of interest in the product.",
          "items": {
            "$ref": "#/definitions/Medication_Ingredient"
          },
          "type": "array"
        },
        "batch": {
          "description": "Information that only applies to packages (not products).",
          "$ref": "#/definitions/Medication_Batch"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Medication_Ingredient": {
      "description": "This resource is primarily used for the identification and definition of a medication, including ingredients, for the purposes of prescribing, dispensing, and administering a medication as well as for making statements about medication use.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "item": {
          "description": "The ingredient (substance or medication) that the ingredient.strength relates to.  This is represented as a concept from a code system or described in another resource (Substance or Medication).",
          "$ref": "#/definitions/CodeableReference"
        },
        "isActive": {
          "description": "Indication of whether this ingredient affects the therapeutic action of the drug.",
          "$ref": "#/definitions/boolean"
        },
        "_isActive": {
          "description": "Extensions for isActive",
          "$ref": "#/definitions/Element"
        },
        "strengthRatio": {
          "description": "Specifies how many (or how much) of the items there are in this Medication.  For example, 250 mg per tablet.  This is expressed as a ratio where the numerator is 250mg and the denominator is 1 tablet but can also be expressed a quantity when the denominator is assumed to be 1 tablet.",
          "$ref": "#/definitions/Ratio"
        },
        "strengthCodeableConcept": {
          "description": "Specifies how many (or how much) of the items there are in this Medication.  For example, 250 mg per tablet.  This is expressed as a ratio where the numerator is 250mg and the denominator is 1 tablet but can also be expressed a quantity when the denominator is assumed to be 1 tablet.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "strengthQuantity": {
          "description": "Specifies how many (or how much) of the items there are in this Medication.  For example, 250 mg per tablet.  This is expressed as a ratio where the numerator is 250mg and the denominator is 1 tablet but can also be expressed a quantity when the denominator is assumed to be 1 tablet.",
          "$ref": "#/definitions/Quantity"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "item"
      ]
    },
    "Medication_Batch": {
      "description": "This resource is primarily used for the identification and definition of a medication, including ingredients, for the purposes of prescribing, dispensing, and administering a medication as well as for making statements about medication use.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "lotNumber": {
          "description": "The assigned lot number of a batch of the specified product.",
          "$ref": "#/definitions/string"
        },
        "_lotNumber": {
          "description": "Extensions for lotNumber",
          "$ref": "#/definitions/Element"
        },
        "expirationDate": {
          "description": "When this specific batch of product will expire.",
          "$ref": "#/definitions/dateTime"
        },
        "_expirationDate": {
          "description": "Extensions for expirationDate",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MedicationAdministration": {
      "description": "Describes the event of a patient consuming or otherwise being administered a medication.  This may be as simple as swallowing a tablet or it may be a long running infusion.  Related resources tie this event to the authorizing prescription, and the specific encounter between patient and health care practitioner.",
      "properties": {
        "resourceType": {
          "description": "This is a MedicationAdministration resource",
          "const": "MedicationAdministration"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifiers associated with this Medication Administration that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "basedOn": {
          "description": "A plan that is fulfilled in whole or in part by this MedicationAdministration.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "partOf": {
          "description": "A larger event of which this particular event is a component or step.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "status": {
          "description": "Will generally be set to show that the administration has been completed.  For some long running administrations such as infusions, it is possible for an administration to be started but not completed or it may be paused while some other process is under way.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "statusReason": {
          "description": "A code indicating why the administration was not performed.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "category": {
          "description": "The type of medication administration (for example, drug classification like ATC, where meds would be administered, legal category of the medication).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "medication": {
          "description": "Identifies the medication that was administered. This is either a link to a resource representing the details of the medication or a simple attribute carrying a code that identifies the medication from a known list of medications.",
          "$ref": "#/definitions/CodeableReference"
        },
        "subject": {
          "description": "The person or animal or group receiving the medication.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "The visit, admission, or other contact between patient and health care provider during which the medication administration was performed.",
          "$ref": "#/definitions/Reference"
        },
        "supportingInformation": {
          "description": "Additional information (for example, patient height and weight) that supports the administration of the medication.  This attribute can be used to provide documentation of specific characteristics of the patient present at the time of administration.  For example, if the dose says \"give \"x\" if the heartrate exceeds \"y\"\", then the heart rate can be included using this attribute.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "occurenceDateTime": {
          "description": "A specific date/time or interval of time during which the administration took place (or did not take place). For many administrations, such as swallowing a tablet the use of dateTime is more appropriate.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_occurenceDateTime": {
          "description": "Extensions for occurenceDateTime",
          "$ref": "#/definitions/Element"
        },
        "occurencePeriod": {
          "description": "A specific date/time or interval of time during which the administration took place (or did not take place). For many administrations, such as swallowing a tablet the use of dateTime is more appropriate.",
          "$ref": "#/definitions/Period"
        },
        "recorded": {
          "description": "The date the occurrence of the  MedicationAdministration was first captured in the record - potentially significantly after the occurrence of the event.",
          "$ref": "#/definitions/dateTime"
        },
        "_recorded": {
          "description": "Extensions for recorded",
          "$ref": "#/definitions/Element"
        },
        "isSubPotent": {
          "description": "An indication that the full dose was not administered.",
          "$ref": "#/definitions/boolean"
        },
        "_isSubPotent": {
          "description": "Extensions for isSubPotent",
          "$ref": "#/definitions/Element"
        },
        "subPotentReason": {
          "description": "The reason or reasons why the full dose was not administered.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "performer": {
          "description": "Indicates who or what performed the medication administration and how they were involved. For devices, this is the device that is actually performing the administration of the medication.  An IV Pump would be an example of a device that is performing the administration.  Both the IV Pump and the practitioner that set the rate or bolus on the pump can be listed as performers.",
          "items": {
            "$ref": "#/definitions/MedicationAdministration_Performer"
          },
          "type": "array"
        },
        "reason": {
          "description": "A code, Condition or observation that supports why the medication was administered.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "request": {
          "description": "The original request, instruction or authority to perform the administration.",
          "$ref": "#/definitions/Reference"
        },
        "device": {
          "description": "The device used in administering the medication to the patient.  For example, a particular infusion pump.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "note": {
          "description": "Extra information about the medication administration that is not conveyed by the other attributes.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "dosage": {
          "description": "Describes the medication dosage information details e.g. dose, rate, site, route, etc.",
          "$ref": "#/definitions/MedicationAdministration_Dosage"
        },
        "eventHistory": {
          "description": "A summary of the events of interest that have occurred, such as when the administration was verified.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "subject",
        "medication",
        "resourceType"
      ]
    },
    "MedicationAdministration_Performer": {
      "description": "Describes the event of a patient consuming or otherwise being administered a medication.  This may be as simple as swallowing a tablet or it may be a long running infusion.  Related resources tie this event to the authorizing prescription, and the specific encounter between patient and health care practitioner.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "function": {
          "description": "Distinguishes the type of involvement of the performer in the medication administration.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "actor": {
          "description": "Indicates who or what performed the medication administration.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "actor"
      ]
    },
    "MedicationAdministration_Dosage": {
      "description": "Describes the event of a patient consuming or otherwise being administered a medication.  This may be as simple as swallowing a tablet or it may be a long running infusion.  Related resources tie this event to the authorizing prescription, and the specific encounter between patient and health care practitioner.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "text": {
          "description": "Free text dosage can be used for cases where the dosage administered is too complex to code. When coded dosage is present, the free text dosage may still be present for display to humans.\r\rThe dosage instructions should reflect the dosage of the medication that was administered.",
          "$ref": "#/definitions/string"
        },
        "_text": {
          "description": "Extensions for text",
          "$ref": "#/definitions/Element"
        },
        "site": {
          "description": "A coded specification of the anatomic site where the medication first entered the body.  For example, \"left arm\".",
          "$ref": "#/definitions/CodeableConcept"
        },
        "route": {
          "description": "A code specifying the route or physiological path of administration of a therapeutic agent into or onto the patient.  For example, topical, intravenous, etc.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "method": {
          "description": "A coded value indicating the method by which the medication is intended to be or was introduced into or on the body.  This attribute will most often NOT be populated.  It is most commonly used for injections.  For example, Slow Push, Deep IV.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "dose": {
          "description": "The amount of the medication given at one administration event.   Use this value when the administration is essentially an instantaneous event such as a swallowing a tablet or giving an injection.",
          "$ref": "#/definitions/Quantity"
        },
        "rateRatio": {
          "description": "Identifies the speed with which the medication was or will be introduced into the patient.  Typically, the rate for an infusion e.g. 100 ml per 1 hour or 100 ml/hr.  May also be expressed as a rate per unit of time, e.g. 500 ml per 2 hours.  Other examples:  200 mcg/min or 200 mcg/1 minute; 1 liter/8 hours.",
          "$ref": "#/definitions/Ratio"
        },
        "rateQuantity": {
          "description": "Identifies the speed with which the medication was or will be introduced into the patient.  Typically, the rate for an infusion e.g. 100 ml per 1 hour or 100 ml/hr.  May also be expressed as a rate per unit of time, e.g. 500 ml per 2 hours.  Other examples:  200 mcg/min or 200 mcg/1 minute; 1 liter/8 hours.",
          "$ref": "#/definitions/Quantity"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MedicationDispense": {
      "description": "Indicates that a medication product is to be or has been dispensed for a named person/patient.  This includes a description of the medication product (supply) provided and the instructions for administering the medication.  The medication dispense is the result of a pharmacy system responding to a medication order.",
      "properties": {
        "resourceType": {
          "description": "This is a MedicationDispense resource",
          "const": "MedicationDispense"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifiers associated with this Medication Dispense that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "basedOn": {
          "description": "A plan that is fulfilled in whole or in part by this MedicationDispense.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "partOf": {
          "description": "The procedure or medication administration that triggered the dispense.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "status": {
          "description": "A code specifying the state of the set of dispense events.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "notPerformedReason": {
          "description": "Indicates the reason why a dispense was not performed.",
          "$ref": "#/definitions/CodeableReference"
        },
        "statusChanged": {
          "description": "The date (and maybe time) when the status of the dispense record changed.",
          "$ref": "#/definitions/dateTime"
        },
        "_statusChanged": {
          "description": "Extensions for statusChanged",
          "$ref": "#/definitions/Element"
        },
        "category": {
          "description": "Indicates the type of medication dispense (for example, drug classification like ATC, where meds would be administered, legal category of the medication.).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "medication": {
          "description": "Identifies the medication supplied. This is either a link to a resource representing the details of the medication or a simple attribute carrying a code that identifies the medication from a known list of medications.",
          "$ref": "#/definitions/CodeableReference"
        },
        "subject": {
          "description": "A link to a resource representing the person or the group to whom the medication will be given.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "The encounter that establishes the context for this event.",
          "$ref": "#/definitions/Reference"
        },
        "supportingInformation": {
          "description": "Additional information that supports the medication being dispensed.  For example, there may be requirements that a specific lab test has been completed prior to dispensing or the patient\u0027s weight at the time of dispensing is documented.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "performer": {
          "description": "Indicates who or what performed the event.",
          "items": {
            "$ref": "#/definitions/MedicationDispense_Performer"
          },
          "type": "array"
        },
        "location": {
          "description": "The principal physical location where the dispense was performed.",
          "$ref": "#/definitions/Reference"
        },
        "authorizingPrescription": {
          "description": "Indicates the medication order that is being dispensed against.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "type": {
          "description": "Indicates the type of dispensing event that is performed. For example, Trial Fill, Completion of Trial, Partial Fill, Emergency Fill, Samples, etc.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "quantity": {
          "description": "The amount of medication that has been dispensed. Includes unit of measure.",
          "$ref": "#/definitions/Quantity"
        },
        "daysSupply": {
          "description": "The amount of medication expressed as a timing amount.",
          "$ref": "#/definitions/Quantity"
        },
        "recorded": {
          "description": "The date (and maybe time) when the dispense activity started if whenPrepared or whenHandedOver is not populated.",
          "$ref": "#/definitions/dateTime"
        },
        "_recorded": {
          "description": "Extensions for recorded",
          "$ref": "#/definitions/Element"
        },
        "whenPrepared": {
          "description": "The time when the dispensed product was packaged and reviewed.",
          "$ref": "#/definitions/dateTime"
        },
        "_whenPrepared": {
          "description": "Extensions for whenPrepared",
          "$ref": "#/definitions/Element"
        },
        "whenHandedOver": {
          "description": "The time the dispensed product was provided to the patient or their representative.",
          "$ref": "#/definitions/dateTime"
        },
        "_whenHandedOver": {
          "description": "Extensions for whenHandedOver",
          "$ref": "#/definitions/Element"
        },
        "destination": {
          "description": "Identification of the facility/location where the medication was shipped to, as part of the dispense event.",
          "$ref": "#/definitions/Reference"
        },
        "receiver": {
          "description": "Identifies the person who picked up the medication or the location of where the medication was delivered.  This will usually be a patient or their caregiver, but some cases exist where it can be a healthcare professional or a location.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "note": {
          "description": "Extra information about the dispense that could not be conveyed in the other attributes.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "renderedDosageInstruction": {
          "description": "The full representation of the dose of the medication included in all dosage instructions.  To be used when multiple dosage instructions are included to represent complex dosing such as increasing or tapering doses.",
          "$ref": "#/definitions/string"
        },
        "_renderedDosageInstruction": {
          "description": "Extensions for renderedDosageInstruction",
          "$ref": "#/definitions/Element"
        },
        "dosageInstruction": {
          "description": "Indicates how the medication is to be used by the patient.",
          "items": {
            "$ref": "#/definitions/Dosage"
          },
          "type": "array"
        },
        "substitution": {
          "description": "Indicates whether or not substitution was made as part of the dispense.  In some cases, substitution will be expected but does not happen, in other cases substitution is not expected but does happen.  This block explains what substitution did or did not happen and why.  If nothing is specified, substitution was not done.",
          "$ref": "#/definitions/MedicationDispense_Substitution"
        },
        "eventHistory": {
          "description": "A summary of the events of interest that have occurred, such as when the dispense was verified.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "subject",
        "medication",
        "resourceType"
      ]
    },
    "MedicationDispense_Performer": {
      "description": "Indicates that a medication product is to be or has been dispensed for a named person/patient.  This includes a description of the medication product (supply) provided and the instructions for administering the medication.  The medication dispense is the result of a pharmacy system responding to a medication order.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "function": {
          "description": "Distinguishes the type of performer in the dispense.  For example, date enterer, packager, final checker.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "actor": {
          "description": "The device, practitioner, etc. who performed the action.  It should be assumed that the actor is the dispenser of the medication.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "actor"
      ]
    },
    "MedicationDispense_Substitution": {
      "description": "Indicates that a medication product is to be or has been dispensed for a named person/patient.  This includes a description of the medication product (supply) provided and the instructions for administering the medication.  The medication dispense is the result of a pharmacy system responding to a medication order.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "wasSubstituted": {
          "description": "True if the dispenser dispensed a different drug or product from what was prescribed.",
          "$ref": "#/definitions/boolean"
        },
        "_wasSubstituted": {
          "description": "Extensions for wasSubstituted",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "A code signifying whether a different drug was dispensed from what was prescribed.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "reason": {
          "description": "Indicates the reason for the substitution (or lack of substitution) from what was prescribed.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "responsibleParty": {
          "description": "The person or organization that has primary responsibility for the substitution.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MedicationKnowledge": {
      "description": "Information about a medication that is used to support knowledge.",
      "properties": {
        "resourceType": {
          "description": "This is a MedicationKnowledge resource",
          "const": "MedicationKnowledge"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this {{title}} when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this {{title}} is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the {{title}} is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "Business identifier for this medication.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the {{title}} when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the {{title}} author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "All of the names for a medication, for example, the name(s) given to a medication in different countries.  For example, acetaminophen and paracetamol or salbutamol and albuterol.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_name": {
          "description": "Extensions for name",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the {{title}}.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "A code to indicate if the medication referred to by this MedicationKnowledge is in active use within the drug database or inventory system. The status refers to the validity about the information of the medication and not to its medicinal properties.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this {{title}} is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the {{title}} was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the {{title}} changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the {{title}}.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the {{title}} from a consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate {{title}} instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the {{title}} is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this {{title}} is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the {{title}} and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the {{title}}.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "approvalDate": {
          "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
          "$ref": "#/definitions/date"
        },
        "_approvalDate": {
          "description": "Extensions for approvalDate",
          "$ref": "#/definitions/Element"
        },
        "lastReviewDate": {
          "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
          "$ref": "#/definitions/date"
        },
        "_lastReviewDate": {
          "description": "Extensions for lastReviewDate",
          "$ref": "#/definitions/Element"
        },
        "effectivePeriod": {
          "description": "The period during which the {{title}} content was or is planned to be in active use.",
          "$ref": "#/definitions/Period"
        },
        "topic": {
          "description": "Descriptive topics related to the content of the {{title}}. Topics provide a high-level categorization as well as keywords for the {{title}} that can be useful for filtering and searching.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "author": {
          "description": "The creator or owner of the knowledge or information about the medication.",
          "$ref": "#/definitions/Reference"
        },
        "editor": {
          "description": "An individual or organization primarily responsible for internal coherence of the {{title}}.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "reviewer": {
          "description": "An individual or organization primarily responsible for review of some aspect of the {{title}}.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "endorser": {
          "description": "An individual or organization responsible for officially endorsing the {{title}} for use in some setting.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "relatedArtifact": {
          "description": "Related artifacts such as additional documentation, justification, dependencies, bibliographic references, and predecessor and successor artifacts.",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          },
          "type": "array"
        },
        "code": {
          "description": "A code that specifies this medication, or a textual description if no code is available. Usage note: This could be a standard medication code such as a code from RxNorm, SNOMED CT, IDMP etc. It could also be a national or local formulary code, optionally with translations to other code systems.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "intendedJurisdiction": {
          "description": "Lists the jurisdictions that this medication knowledge was written for.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "relatedMedicationKnowledge": {
          "description": "Associated or related medications. For example, if the medication is a branded product (e.g. Crestor), this is the Therapeutic Moeity (e.g. Rosuvastatin) or if this is a generic medication (e.g. Rosuvastatin), this would link to a branded product (e.g. Crestor.",
          "items": {
            "$ref": "#/definitions/MedicationKnowledge_RelatedMedicationKnowledge"
          },
          "type": "array"
        },
        "associatedMedication": {
          "description": "Links to associated medications that could be prescribed, dispensed or administered.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "productType": {
          "description": "Category of the medication or product (e.g. branded product, therapeutic moeity, generic product, innovator product, etc.).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "monograph": {
          "description": "Associated documentation about the medication.",
          "items": {
            "$ref": "#/definitions/MedicationKnowledge_Monograph"
          },
          "type": "array"
        },
        "preparationInstruction": {
          "description": "The instructions for preparing the medication.",
          "$ref": "#/definitions/markdown"
        },
        "_preparationInstruction": {
          "description": "Extensions for preparationInstruction",
          "$ref": "#/definitions/Element"
        },
        "cost": {
          "description": "The price of the medication.",
          "items": {
            "$ref": "#/definitions/MedicationKnowledge_Cost"
          },
          "type": "array"
        },
        "monitoringProgram": {
          "description": "The program under which the medication is reviewed.",
          "items": {
            "$ref": "#/definitions/MedicationKnowledge_MonitoringProgram"
          },
          "type": "array"
        },
        "indicationGuideline": {
          "description": "Guidelines or protocols that are applicable for the administration of the medication based on indication.",
          "items": {
            "$ref": "#/definitions/MedicationKnowledge_IndicationGuideline"
          },
          "type": "array"
        },
        "medicineClassification": {
          "description": "Categorization of the medication within a formulary or classification system.",
          "items": {
            "$ref": "#/definitions/MedicationKnowledge_MedicineClassification"
          },
          "type": "array"
        },
        "packaging": {
          "description": "Information that only applies to packages (not products).",
          "items": {
            "$ref": "#/definitions/MedicationKnowledge_Packaging"
          },
          "type": "array"
        },
        "clinicalUseIssue": {
          "description": "Potential clinical issue with or between medication(s) (for example, drug-drug interaction, drug-disease contraindication, drug-allergy interaction, etc.).",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "storageGuideline": {
          "description": "Information on how the medication should be stored, for example, refrigeration temperatures and length of stability at a given temperature.",
          "items": {
            "$ref": "#/definitions/MedicationKnowledge_StorageGuideline"
          },
          "type": "array"
        },
        "regulatory": {
          "description": "Regulatory information about a medication.",
          "items": {
            "$ref": "#/definitions/MedicationKnowledge_Regulatory"
          },
          "type": "array"
        },
        "definitional": {
          "description": "Along with the link to a Medicinal Product Definition resource, this information provides common definitional elements that are needed to understand the specific medication that is being described.",
          "$ref": "#/definitions/MedicationKnowledge_Definitional"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "MedicationKnowledge_RelatedMedicationKnowledge": {
      "description": "Information about a medication that is used to support knowledge.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The category of the associated medication knowledge reference.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "reference": {
          "description": "Associated documentation about the associated medication knowledge.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "reference",
        "type"
      ]
    },
    "MedicationKnowledge_Monograph": {
      "description": "Information about a medication that is used to support knowledge.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The category of documentation about the medication. (e.g. professional monograph, patient education monograph).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "source": {
          "description": "Associated documentation about the medication.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MedicationKnowledge_Cost": {
      "description": "Information about a medication that is used to support knowledge.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "effectiveDate": {
          "description": "The date range for which the cost information of the medication is effective.",
          "items": {
            "$ref": "#/definitions/Period"
          },
          "type": "array"
        },
        "type": {
          "description": "The category of the cost information.  For example, manufacturers\u0027 cost, patient cost, claim reimbursement cost, actual acquisition cost.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "source": {
          "description": "The source or owner that assigns the price to the medication.",
          "$ref": "#/definitions/string"
        },
        "_source": {
          "description": "Extensions for source",
          "$ref": "#/definitions/Element"
        },
        "costMoney": {
          "description": "The price or representation of the cost (for example, Band A, Band B or $, $$) of the medication.",
          "$ref": "#/definitions/Money"
        },
        "costCodeableConcept": {
          "description": "The price or representation of the cost (for example, Band A, Band B or $, $$) of the medication.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "MedicationKnowledge_MonitoringProgram": {
      "description": "Information about a medication that is used to support knowledge.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Type of program under which the medication is monitored.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "name": {
          "description": "Name of the reviewing program.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MedicationKnowledge_IndicationGuideline": {
      "description": "Information about a medication that is used to support knowledge.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "indication": {
          "description": "Indication or reason for use of the medication that applies to the specific administration guideline.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "dosingGuideline": {
          "description": "The guidelines for the dosage of the medication for the indication.",
          "items": {
            "$ref": "#/definitions/MedicationKnowledge_DosingGuideline"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MedicationKnowledge_DosingGuideline": {
      "description": "Information about a medication that is used to support knowledge.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "treatmentIntent": {
          "description": "The overall intention of the treatment, for example, prophylactic, supporative, curative, etc.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "dosage": {
          "description": "Dosage for the medication for the specific guidelines.",
          "items": {
            "$ref": "#/definitions/MedicationKnowledge_Dosage"
          },
          "type": "array"
        },
        "administrationTreatment": {
          "description": "The type of the treatment that the guideline applies to, for example, long term therapy, first line treatment, etc.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "patientCharacteristic": {
          "description": "Characteristics of the patient that are relevant to the administration guidelines (for example, height, weight, gender, etc.).",
          "items": {
            "$ref": "#/definitions/MedicationKnowledge_PatientCharacteristic"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MedicationKnowledge_Dosage": {
      "description": "Information about a medication that is used to support knowledge.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The type or category of dosage for a given medication (for example, prophylaxis, maintenance, therapeutic, etc.).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "dosage": {
          "description": "Dosage for the medication for the specific guidelines.",
          "items": {
            "$ref": "#/definitions/Dosage"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "dosage",
        "type"
      ]
    },
    "MedicationKnowledge_PatientCharacteristic": {
      "description": "Information about a medication that is used to support knowledge.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The categorization of the specific characteristic that is relevant to the administration guideline (e.g. height, weight, gender).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCodeableConcept": {
          "description": "The specific characteristic (e.g. height, weight, gender, etc.).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": {
          "description": "The specific characteristic (e.g. height, weight, gender, etc.).",
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "description": "The specific characteristic (e.g. height, weight, gender, etc.).",
          "$ref": "#/definitions/Range"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "MedicationKnowledge_MedicineClassification": {
      "description": "Information about a medication that is used to support knowledge.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of category for the medication (for example, therapeutic classification, therapeutic sub-classification).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "sourceString": {
          "description": "Either a textual source of the classification or a reference to an online source.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_sourceString": {
          "description": "Extensions for sourceString",
          "$ref": "#/definitions/Element"
        },
        "sourceUri": {
          "description": "Either a textual source of the classification or a reference to an online source.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_sourceUri": {
          "description": "Extensions for sourceUri",
          "$ref": "#/definitions/Element"
        },
        "classification": {
          "description": "Specific category assigned to the medication (e.g. anti-infective, anti-hypertensive, antibiotic, etc.).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "MedicationKnowledge_Packaging": {
      "description": "Information about a medication that is used to support knowledge.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "cost": {
          "description": "The cost of the packaged medication.",
          "items": {
            "$ref": "#/definitions/MedicationKnowledge_Cost"
          },
          "type": "array"
        },
        "packagedProduct": {
          "description": "A reference to a PackagedProductDefinition that provides the details of the product that is in the packaging and is being priced.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MedicationKnowledge_StorageGuideline": {
      "description": "Information about a medication that is used to support knowledge.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "reference": {
          "description": "Reference to additional information about the storage guidelines.",
          "$ref": "#/definitions/uri"
        },
        "_reference": {
          "description": "Extensions for reference",
          "$ref": "#/definitions/Element"
        },
        "note": {
          "description": "Additional notes about the storage.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "stabilityDuration": {
          "description": "Duration that the medication remains stable if the environmentalSetting is respected.",
          "$ref": "#/definitions/Duration"
        },
        "environmentalSetting": {
          "description": "Describes a setting/value on the environment for the adequate storage of the medication and other substances.  Environment settings may involve temperature, humidity, or exposure to light.",
          "items": {
            "$ref": "#/definitions/MedicationKnowledge_EnvironmentalSetting"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MedicationKnowledge_EnvironmentalSetting": {
      "description": "Information about a medication that is used to support knowledge.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Identifies the category or type of setting (e.g., type of location, temperature, humidity).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": {
          "description": "Value associated to the setting. E.g., 40° – 50°F for temperature.",
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "description": "Value associated to the setting. E.g., 40° – 50°F for temperature.",
          "$ref": "#/definitions/Range"
        },
        "valueCodeableConcept": {
          "description": "Value associated to the setting. E.g., 40° – 50°F for temperature.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "MedicationKnowledge_Regulatory": {
      "description": "Information about a medication that is used to support knowledge.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "regulatoryAuthority": {
          "description": "The authority that is specifying the regulations.",
          "$ref": "#/definitions/Reference"
        },
        "substitution": {
          "description": "Specifies if changes are allowed when dispensing a medication from a regulatory perspective.",
          "items": {
            "$ref": "#/definitions/MedicationKnowledge_Substitution"
          },
          "type": "array"
        },
        "schedule": {
          "description": "Specifies the schedule of a medication in jurisdiction.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "maxDispense": {
          "description": "The maximum number of units of the medication that can be dispensed in a period.",
          "$ref": "#/definitions/MedicationKnowledge_MaxDispense"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "regulatoryAuthority"
      ]
    },
    "MedicationKnowledge_Substitution": {
      "description": "Information about a medication that is used to support knowledge.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Specifies the type of substitution allowed.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "allowed": {
          "description": "Specifies if regulation allows for changes in the medication when dispensing.",
          "$ref": "#/definitions/boolean"
        },
        "_allowed": {
          "description": "Extensions for allowed",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "MedicationKnowledge_MaxDispense": {
      "description": "Information about a medication that is used to support knowledge.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "quantity": {
          "description": "The maximum number of units of the medication that can be dispensed.",
          "$ref": "#/definitions/Quantity"
        },
        "period": {
          "description": "The period that applies to the maximum number of units.",
          "$ref": "#/definitions/Duration"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "quantity"
      ]
    },
    "MedicationKnowledge_Definitional": {
      "description": "Information about a medication that is used to support knowledge.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "definition": {
          "description": "Associated definitions for this medication.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "doseForm": {
          "description": "Describes the form of the item.  Powder; tablets; capsule.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "intendedRoute": {
          "description": "The intended or approved route of administration.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "ingredient": {
          "description": "Identifies a particular constituent of interest in the product.",
          "items": {
            "$ref": "#/definitions/MedicationKnowledge_Ingredient"
          },
          "type": "array"
        },
        "drugCharacteristic": {
          "description": "Specifies descriptive properties of the medicine, such as color, shape, imprints, etc.",
          "items": {
            "$ref": "#/definitions/MedicationKnowledge_DrugCharacteristic"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MedicationKnowledge_Ingredient": {
      "description": "Information about a medication that is used to support knowledge.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "item": {
          "description": "A reference to the resource that provides information about the ingredient.",
          "$ref": "#/definitions/CodeableReference"
        },
        "type": {
          "description": "Indication of whether this ingredient affects the therapeutic action of the drug.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "strengthRatio": {
          "description": "Specifies how many (or how much) of the items there are in this Medication.  For example, 250 mg per tablet.  This is expressed as a ratio where the numerator is 250mg and the denominator is 1 tablet but can also be expressed a quantity when the denominator is assumed to be 1 tablet.",
          "$ref": "#/definitions/Ratio"
        },
        "strengthCodeableConcept": {
          "description": "Specifies how many (or how much) of the items there are in this Medication.  For example, 250 mg per tablet.  This is expressed as a ratio where the numerator is 250mg and the denominator is 1 tablet but can also be expressed a quantity when the denominator is assumed to be 1 tablet.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "strengthQuantity": {
          "description": "Specifies how many (or how much) of the items there are in this Medication.  For example, 250 mg per tablet.  This is expressed as a ratio where the numerator is 250mg and the denominator is 1 tablet but can also be expressed a quantity when the denominator is assumed to be 1 tablet.",
          "$ref": "#/definitions/Quantity"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "item"
      ]
    },
    "MedicationKnowledge_DrugCharacteristic": {
      "description": "Information about a medication that is used to support knowledge.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "A code specifying which characteristic of the medicine is being described (for example, colour, shape, imprint).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCodeableConcept": {
          "description": "Description of the characteristic.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueString": {
          "description": "Description of the characteristic.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueQuantity": {
          "description": "Description of the characteristic.",
          "$ref": "#/definitions/Quantity"
        },
        "valueBase64Binary": {
          "description": "Description of the characteristic.",
          "pattern": "^\\s*([A-Za-z0-9+\\\\/]{4})*(([A-Za-z0-9+\\\\/]{2}\u003d\u003d)|([A-Za-z0-9+\\\\/]{3}\u003d)|([A-Za-z0-9+\\\\/]{4}))\\s*$",
          "type": "string"
        },
        "_valueBase64Binary": {
          "description": "Extensions for valueBase64Binary",
          "$ref": "#/definitions/Element"
        },
        "valueAttachment": {
          "description": "Description of the characteristic.",
          "$ref": "#/definitions/Attachment"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MedicationRequest": {
      "description": "An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called \"MedicationRequest\" rather than \"MedicationPrescription\" or \"MedicationOrder\" to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns.",
      "properties": {
        "resourceType": {
          "description": "This is a MedicationRequest resource",
          "const": "MedicationRequest"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifiers associated with this medication request that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "basedOn": {
          "description": "A plan or request that is fulfilled in whole or in part by this medication request.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "priorPrescription": {
          "description": "A link to a resource representing an earlier order related order or prescription.",
          "$ref": "#/definitions/Reference"
        },
        "groupIdentifier": {
          "description": "A shared identifier common to all requests that were authorized more or less simultaneously by a single author, representing the identifier of the requisition or prescription.",
          "$ref": "#/definitions/Identifier"
        },
        "status": {
          "description": "A code specifying the current state of the order.  Generally, this will be active or completed state.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "statusReason": {
          "description": "Captures the reason for the current state of the MedicationRequest.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "statusChanged": {
          "description": "The date (and perhaps time) when the status was changed.",
          "$ref": "#/definitions/dateTime"
        },
        "_statusChanged": {
          "description": "Extensions for statusChanged",
          "$ref": "#/definitions/Element"
        },
        "intent": {
          "description": "Whether the request is a proposal, plan, or an original order.",
          "$ref": "#/definitions/code"
        },
        "_intent": {
          "description": "Extensions for intent",
          "$ref": "#/definitions/Element"
        },
        "category": {
          "description": "Indicates the grouping or category of medication request (for example, drug classification like ATC, where meds would be administered, legal category of the medication.).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "priority": {
          "description": "Indicates how quickly the Medication Request should be addressed with respect to other requests.",
          "$ref": "#/definitions/code"
        },
        "_priority": {
          "description": "Extensions for priority",
          "$ref": "#/definitions/Element"
        },
        "doNotPerform": {
          "description": "If true, indicates that the provider is asking for the patient to either stop taking or to not start taking the specified medication. For example, the patient is taking an existing medication and the provider is changing their medication. They want to create two seperate requests: one to stop using the current medication and another to start the new medication.",
          "$ref": "#/definitions/boolean"
        },
        "_doNotPerform": {
          "description": "Extensions for doNotPerform",
          "$ref": "#/definitions/Element"
        },
        "medication": {
          "description": "Identifies the medication being requested. This is a link to a resource that represents the medication which may be the details of the medication or simply an attribute carrying a code that identifies the medication from a known list of medications.",
          "$ref": "#/definitions/CodeableReference"
        },
        "subject": {
          "description": "A link to a resource representing the person or set of individuals to whom the medication will be given.",
          "$ref": "#/definitions/Reference"
        },
        "informationSource": {
          "description": "The person or organization who provided the information about this request, if the source is someone other than the requestor.  This is often used when the MedicationRequest is reported by another person.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "encounter": {
          "description": "The Encounter during which this [x] was created or to which the creation of this record is tightly associated.",
          "$ref": "#/definitions/Reference"
        },
        "supportingInformation": {
          "description": "Information to support fulfilling (i.e. dispensing or administering) of the medication, for example, patient height and weight, a MedicationUsage for the patient).",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "authoredOn": {
          "description": "The date (and perhaps time) when the prescription was initially written or authored on.",
          "$ref": "#/definitions/dateTime"
        },
        "_authoredOn": {
          "description": "Extensions for authoredOn",
          "$ref": "#/definitions/Element"
        },
        "requester": {
          "description": "The individual, organization, or device that initiated the request and has responsibility for its activation.",
          "$ref": "#/definitions/Reference"
        },
        "reported": {
          "description": "Indicates if this record was captured as a secondary \u0027reported\u0027 record rather than as an original primary source-of-truth record.  It may also indicate the source of the report.",
          "$ref": "#/definitions/boolean"
        },
        "_reported": {
          "description": "Extensions for reported",
          "$ref": "#/definitions/Element"
        },
        "performerType": {
          "description": "Indicates the type of performer of the administration of the medication.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "performer": {
          "description": "The specified desired performer of the medication treatment (e.g. the performer of the medication administration).  For devices, this is the device that is intended to perform the administration of the medication.  An IV Pump would be an example of a device that is performing the administration.  Both the IV Pump and the practitioner that set the rate or bolus on the pump can be listed as performers.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "device": {
          "description": "The intended type of device that is to be used for the administration of the medication (for example, PCA Pump).",
          "$ref": "#/definitions/CodeableReference"
        },
        "recorder": {
          "description": "The person who entered the order on behalf of another individual for example in the case of a verbal or a telephone order.",
          "$ref": "#/definitions/Reference"
        },
        "reason": {
          "description": "The reason or the indication for ordering or not ordering the medication.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "courseOfTherapyType": {
          "description": "The description of the overall pattern of the administration of the medication to the patient.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "insurance": {
          "description": "Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be required for delivering the requested service.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "note": {
          "description": "Extra information about the prescription that could not be conveyed by the other attributes.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "dose": {
          "description": "Indicates how the medication is to be used by the patient.",
          "$ref": "#/definitions/MedicationRequest_Dose"
        },
        "dispenseRequest": {
          "description": "Indicates the specific details for the dispense or medication supply part of a medication request (also known as a Medication Prescription or Medication Order).  Note that this information is not always sent with the order.  There may be in some settings (e.g. hospitals) institutional or system support for completing the dispense details in the pharmacy department.",
          "$ref": "#/definitions/MedicationRequest_DispenseRequest"
        },
        "substitution": {
          "description": "Indicates whether or not substitution can or should be part of the dispense. In some cases, substitution must happen, in other cases substitution must not happen. This block explains the prescriber\u0027s intent. If nothing is specified substitution may be done.",
          "$ref": "#/definitions/MedicationRequest_Substitution"
        },
        "eventHistory": {
          "description": "Links to Provenance records for past versions of this resource or fulfilling request or event resources that identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the resource.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "subject",
        "medication",
        "resourceType"
      ]
    },
    "MedicationRequest_Dose": {
      "description": "An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called \"MedicationRequest\" rather than \"MedicationPrescription\" or \"MedicationOrder\" to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "renderedDosageInstruction": {
          "description": "The full representation of the dose of the medication included in all dosage instructions.  To be used when multiple dosage instructions are included to represent complex dosing such as increasing or tapering doses.",
          "$ref": "#/definitions/string"
        },
        "_renderedDosageInstruction": {
          "description": "Extensions for renderedDosageInstruction",
          "$ref": "#/definitions/Element"
        },
        "effectiveDosePeriod": {
          "description": "The period over which the medication is to be taken.  Where there are multiple dosageInstruction lines (for example, tapering doses), this is the earliest date and the latest end date of the dosageInstructions.",
          "$ref": "#/definitions/Period"
        },
        "dosageInstruction": {
          "description": "Specific instructions for how the medication is to be used by the patient.",
          "items": {
            "$ref": "#/definitions/Dosage"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MedicationRequest_DispenseRequest": {
      "description": "An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called \"MedicationRequest\" rather than \"MedicationPrescription\" or \"MedicationOrder\" to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "initialFill": {
          "description": "Indicates the quantity or duration for the first dispense of the medication.",
          "$ref": "#/definitions/MedicationRequest_InitialFill"
        },
        "dispenseInterval": {
          "description": "The minimum period of time that must occur between dispenses of the medication.",
          "$ref": "#/definitions/Duration"
        },
        "validityPeriod": {
          "description": "This indicates the validity period of a prescription (stale dating the Prescription).",
          "$ref": "#/definitions/Period"
        },
        "numberOfRepeatsAllowed": {
          "description": "An integer indicating the number of times, in addition to the original dispense, (aka refills or repeats) that the patient can receive the prescribed medication. Usage Notes: This integer does not include the original order dispense. This means that if an order indicates dispense 30 tablets plus \"3 repeats\", then the order can be dispensed a total of 4 times and the patient can receive a total of 120 tablets.  A prescriber may explicitly say that zero refills are permitted after the initial dispense.",
          "$ref": "#/definitions/unsignedInt"
        },
        "_numberOfRepeatsAllowed": {
          "description": "Extensions for numberOfRepeatsAllowed",
          "$ref": "#/definitions/Element"
        },
        "quantity": {
          "description": "The amount that is to be dispensed for one fill.",
          "$ref": "#/definitions/Quantity"
        },
        "expectedSupplyDuration": {
          "description": "Identifies the period time over which the supplied product is expected to be used, or the length of time the dispense is expected to last.",
          "$ref": "#/definitions/Duration"
        },
        "dispenser": {
          "description": "Indicates the intended performing Organization that will dispense the medication as specified by the prescriber.",
          "$ref": "#/definitions/Reference"
        },
        "dispenserInstruction": {
          "description": "Provides additional information to the dispenser, for example, counselling to be provided to the patient.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "doseAdministrationAid": {
          "description": "Provides information about the type of adherence packaging to be supplied for the medication dispense.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MedicationRequest_InitialFill": {
      "description": "An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called \"MedicationRequest\" rather than \"MedicationPrescription\" or \"MedicationOrder\" to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "quantity": {
          "description": "The amount or quantity to provide as part of the first dispense.",
          "$ref": "#/definitions/Quantity"
        },
        "duration": {
          "description": "The length of time that the first dispense is expected to last.",
          "$ref": "#/definitions/Duration"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MedicationRequest_Substitution": {
      "description": "An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called \"MedicationRequest\" rather than \"MedicationPrescription\" or \"MedicationOrder\" to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "allowedBoolean": {
          "description": "True if the prescriber allows a different drug to be dispensed from what was prescribed.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_allowedBoolean": {
          "description": "Extensions for allowedBoolean",
          "$ref": "#/definitions/Element"
        },
        "allowedCodeableConcept": {
          "description": "True if the prescriber allows a different drug to be dispensed from what was prescribed.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "reason": {
          "description": "Indicates the reason for the substitution, or why substitution must or must not be performed.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MedicationUsage": {
      "description": "A record of a medication that is being consumed by a patient.   A MedicationUsage may indicate that the patient may be taking the medication now or has taken the medication in the past or will be taking the medication in the future.  The source of this information can be the patient, significant other (such as a family member or spouse), or a clinician.  A common scenario where this information is captured is during the history taking process during a patient visit or stay.   The medication information may come from sources such as the patient\u0027s memory, from a prescription bottle,  or from a list of medications the patient, clinician or other party maintains. \n\nThe primary difference between a medicationusage and a medicationadministration is that the medication administration has complete administration information and is based on actual administration information from the person who administered the medication.  A medicationusage is often, if not always, less specific.  There is no required date/time when the medication was administered, in fact we only know that a source has reported the patient is taking this medication, where details such as time, quantity, or rate or even medication product may be incomplete or missing or less precise.  As stated earlier, the Medication Usage information may come from the patient\u0027s memory, from a prescription bottle or from a list of medications the patient, clinician or other party maintains.  Medication administration is more formal and is not missing detailed information.\n\nThe MedicationUsage resource was previously called MedicationStatement.",
      "properties": {
        "resourceType": {
          "description": "This is a MedicationUsage resource",
          "const": "MedicationUsage"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifiers associated with this Medication Usage that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "partOf": {
          "description": "A larger event of which this particular MedicationUsage is a component or step.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "status": {
          "description": "A code representing the status of recording the medication usage.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "category": {
          "description": "Type of medication usage (for example, drug classification like ATC, where meds would be administered, legal category of the medication.).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "medication": {
          "description": "Identifies the medication being administered. This is either a link to a resource representing the details of the medication or a simple attribute carrying a code that identifies the medication from a known list of medications.",
          "$ref": "#/definitions/CodeableReference"
        },
        "subject": {
          "description": "The person, animal or group who is/was taking the medication.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "The encounter that establishes the context for this MedicationUsage.",
          "$ref": "#/definitions/Reference"
        },
        "effectiveDateTime": {
          "description": "The interval of time during which it is being asserted that the patient is/was/will be taking the medication (or was not taking, when the MedicationUsage.adherence element is Not Taking).",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_effectiveDateTime": {
          "description": "Extensions for effectiveDateTime",
          "$ref": "#/definitions/Element"
        },
        "effectivePeriod": {
          "description": "The interval of time during which it is being asserted that the patient is/was/will be taking the medication (or was not taking, when the MedicationUsage.adherence element is Not Taking).",
          "$ref": "#/definitions/Period"
        },
        "dateAsserted": {
          "description": "The date when the Medication Usage was asserted by the information source.",
          "$ref": "#/definitions/dateTime"
        },
        "_dateAsserted": {
          "description": "Extensions for dateAsserted",
          "$ref": "#/definitions/Element"
        },
        "informationSource": {
          "description": "The person or organization that provided the information about the taking of this medication. Note: Use derivedFrom when a MedicationUsage is derived from other resources, e.g. Claim or MedicationRequest.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "derivedFrom": {
          "description": "Allows linking the MedicationUsage to the underlying MedicationRequest, or to other information that supports or is used to derive the MedicationUsage.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "reason": {
          "description": "A concept, Condition or observation that supports why the medication is being/was taken.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "note": {
          "description": "Provides extra information about the Medication Usage that is not conveyed by the other attributes.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "relatedClinicalInformation": {
          "description": "Link to information that is relevant to a medication usage, for example, illicit drug use, gestational age, etc.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "renderedDosageInstruction": {
          "description": "The full representation of the dose of the medication included in all dosage instructions.  To be used when multiple dosage instructions are included to represent complex dosing such as increasing or tapering doses.",
          "$ref": "#/definitions/string"
        },
        "_renderedDosageInstruction": {
          "description": "Extensions for renderedDosageInstruction",
          "$ref": "#/definitions/Element"
        },
        "dosage": {
          "description": "Indicates how the medication is/was or should be taken by the patient.",
          "items": {
            "$ref": "#/definitions/Dosage"
          },
          "type": "array"
        },
        "adherence": {
          "description": "Indicates if the medication is being consumed or administered as instructed.",
          "$ref": "#/definitions/MedicationUsage_Adherence"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "subject",
        "medication",
        "resourceType"
      ]
    },
    "MedicationUsage_Adherence": {
      "description": "A record of a medication that is being consumed by a patient.   A MedicationUsage may indicate that the patient may be taking the medication now or has taken the medication in the past or will be taking the medication in the future.  The source of this information can be the patient, significant other (such as a family member or spouse), or a clinician.  A common scenario where this information is captured is during the history taking process during a patient visit or stay.   The medication information may come from sources such as the patient\u0027s memory, from a prescription bottle,  or from a list of medications the patient, clinician or other party maintains. \n\nThe primary difference between a medicationusage and a medicationadministration is that the medication administration has complete administration information and is based on actual administration information from the person who administered the medication.  A medicationusage is often, if not always, less specific.  There is no required date/time when the medication was administered, in fact we only know that a source has reported the patient is taking this medication, where details such as time, quantity, or rate or even medication product may be incomplete or missing or less precise.  As stated earlier, the Medication Usage information may come from the patient\u0027s memory, from a prescription bottle or from a list of medications the patient, clinician or other party maintains.  Medication administration is more formal and is not missing detailed information.\n\nThe MedicationUsage resource was previously called MedicationStatement.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "Type of the adherence for the medication.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "reason": {
          "description": "Captures the reason for the current use or adherence of a medication.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "MedicinalProductDefinition": {
      "description": "A medicinal product, being a substance or combination of substances that is intended to treat, prevent or diagnose a disease, or to restore, correct or modify physiological functions by exerting a pharmacological, immunological or metabolic action. This resource is intended to define and detail such products and their properties, for uses other than direct patient care (e.g. regulatory use, or drug catalogs).",
      "properties": {
        "resourceType": {
          "description": "This is a MedicinalProductDefinition resource",
          "const": "MedicinalProductDefinition"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Business identifier for this product. Could be an MPID. When in development or being regulated, products are typically referenced by official identifiers, assigned by a manufacturer or regulator, and unique to a product (which, when compared to a product instance being prescribed, is actually a product type). See also MedicinalProductDefinition.code.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "type": {
          "description": "Regulatory type, e.g. Investigational or Authorized.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "domain": {
          "description": "If this medicine applies to human or veterinary uses.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "version": {
          "description": "A business identifier relating to a specific version of the product, this is commonly used to support revisions to an existing product.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status within the lifecycle of this product record. A high-level status, this is not intended to duplicate details carried elsewhere such as legal status, or authorization status.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "statusDate": {
          "description": "The date at which the given status became applicable.",
          "$ref": "#/definitions/dateTime"
        },
        "_statusDate": {
          "description": "Extensions for statusDate",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "General description of this product.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "combinedPharmaceuticalDoseForm": {
          "description": "The dose form for a single part product, or combined form of a multiple part product. This is one concept that describes all the components. It does not represent the form with components physically mixed, if that might be necessary, for which see (AdministrableProductDefinition.administrableDoseForm).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "route": {
          "description": "The path by which the product is taken into or makes contact with the body. In some regions this is referred to as the licenced or approved route. See also AdministrableProductDefinition resource. MedicinalProductDefinition.route is the same concept as AdministrableProductDefinition.routeOfAdministration.code, and they cannot be used together.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "indication": {
          "description": "Description of indication(s) for this product, used when structured indications are not required. In cases where structured indications are required, they are captured using the ClinicalUseDefinition resource. An indication is a medical situation for which using the product is appropriate.",
          "$ref": "#/definitions/markdown"
        },
        "_indication": {
          "description": "Extensions for indication",
          "$ref": "#/definitions/Element"
        },
        "legalStatusOfSupply": {
          "description": "The legal status of supply of the medicinal product as classified by the regulator.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "additionalMonitoringIndicator": {
          "description": "Whether the Medicinal Product is subject to additional monitoring for regulatory reasons, such as heightened reporting requirements.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "specialMeasures": {
          "description": "Whether the Medicinal Product is subject to special measures for regulatory reasons, such as a requirement to conduct post-authorisation studies.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "pediatricUseIndicator": {
          "description": "If authorised for use in children, or infants, neonates etc.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "classification": {
          "description": "Allows the product to be classified by various systems, commonly WHO ATC.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "marketingStatus": {
          "description": "Marketing status of the medicinal product, in contrast to marketing authorization. This refers to the product being actually \u0027on the market\u0027 as opposed to being allowed to be on the market (which is an authorization).",
          "items": {
            "$ref": "#/definitions/MarketingStatus"
          },
          "type": "array"
        },
        "packagedMedicinalProduct": {
          "description": "Package type for the product. See also the PackagedProductDefinition resource.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "comprisedOf": {
          "description": "Types of medicinal manufactured items and/or devices that this product consists of, such as tablets, capsule, or syringes. Used as a direct link when the item\u0027s packaging is not being recorded (see also PackagedProductDefinition.package.containedItem.item).",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "ingredient": {
          "description": "The ingredients of this medicinal product - when not detailed in other resources. This is only needed if the ingredients are not specified by incoming references from the Ingredient resource, or indirectly via incoming AdministrableProductDefinition, PackagedProductDefinition or ManufacturedItemDefinition references. In cases where those levels of detail are not used, the ingredients may be specified directly here as codes.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "impurity": {
          "description": "Any component of the drug product which is not the chemical entity defined as the drug substance, or an excipient in the drug product. This includes process-related impurities and contaminants, product-related impurities including degradation products.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "attachedDocument": {
          "description": "Additional information or supporting documentation about the medicinal product.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "masterFile": {
          "description": "A master file for the medicinal product (e.g. Pharmacovigilance System Master File). Drug master files (DMFs) are documents submitted to regulatory agencies to provide confidential detailed information about facilities, processes or articles used in the manufacturing, processing, packaging and storing of drug products.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "contact": {
          "description": "A product specific contact, person (in a role), or an organization.",
          "items": {
            "$ref": "#/definitions/MedicinalProductDefinition_Contact"
          },
          "type": "array"
        },
        "clinicalTrial": {
          "description": "Clinical trials or studies that this product is involved in.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "code": {
          "description": "A code that this product is known by, usually within some formal terminology, perhaps assigned by a third party (i.e. not the manufacturer or regulator). Products (types of medications) tend to be known by identifiers during development and within regulatory process. However when they are prescribed they tend to be identified by codes. The same product may be have multiple codes, applied to it by multiple organizations.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        },
        "name": {
          "description": "The product\u0027s name, including full name and possibly coded parts.",
          "items": {
            "$ref": "#/definitions/MedicinalProductDefinition_Name"
          },
          "type": "array"
        },
        "crossReference": {
          "description": "Reference to another product, e.g. for linking authorised to investigational product, or a virtual product.",
          "items": {
            "$ref": "#/definitions/MedicinalProductDefinition_CrossReference"
          },
          "type": "array"
        },
        "operation": {
          "description": "A manufacturing or administrative process or step associated with (or performed on) the medicinal product.",
          "items": {
            "$ref": "#/definitions/MedicinalProductDefinition_Operation"
          },
          "type": "array"
        },
        "characteristic": {
          "description": "Allows the key product features to be recorded, such as \"sugar free\", \"modified release\", \"parallel import\".",
          "items": {
            "$ref": "#/definitions/MedicinalProductDefinition_Characteristic"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "name",
        "resourceType"
      ]
    },
    "MedicinalProductDefinition_Contact": {
      "description": "A medicinal product, being a substance or combination of substances that is intended to treat, prevent or diagnose a disease, or to restore, correct or modify physiological functions by exerting a pharmacological, immunological or metabolic action. This resource is intended to define and detail such products and their properties, for uses other than direct patient care (e.g. regulatory use, or drug catalogs).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Allows the contact to be classified, for example QPPV, Pharmacovigilance Enquiry Information.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "contact": {
          "description": "A product specific contact, person (in a role), or an organization.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "contact"
      ]
    },
    "MedicinalProductDefinition_Name": {
      "description": "A medicinal product, being a substance or combination of substances that is intended to treat, prevent or diagnose a disease, or to restore, correct or modify physiological functions by exerting a pharmacological, immunological or metabolic action. This resource is intended to define and detail such products and their properties, for uses other than direct patient care (e.g. regulatory use, or drug catalogs).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "productName": {
          "description": "The full product name.",
          "$ref": "#/definitions/string"
        },
        "_productName": {
          "description": "Extensions for productName",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "Type of product name, such as rINN, BAN, Proprietary, Non-Proprietary.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "part": {
          "description": "Coding words or phrases of the name.",
          "items": {
            "$ref": "#/definitions/MedicinalProductDefinition_Part"
          },
          "type": "array"
        },
        "usage": {
          "description": "Country and jurisdiction where the name applies, and associated language.",
          "items": {
            "$ref": "#/definitions/MedicinalProductDefinition_Usage"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MedicinalProductDefinition_Part": {
      "description": "A medicinal product, being a substance or combination of substances that is intended to treat, prevent or diagnose a disease, or to restore, correct or modify physiological functions by exerting a pharmacological, immunological or metabolic action. This resource is intended to define and detail such products and their properties, for uses other than direct patient care (e.g. regulatory use, or drug catalogs).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "part": {
          "description": "A fragment of a product name.",
          "$ref": "#/definitions/string"
        },
        "_part": {
          "description": "Extensions for part",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "Identifying type for this part of the name (e.g. strength part).",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "MedicinalProductDefinition_Usage": {
      "description": "A medicinal product, being a substance or combination of substances that is intended to treat, prevent or diagnose a disease, or to restore, correct or modify physiological functions by exerting a pharmacological, immunological or metabolic action. This resource is intended to define and detail such products and their properties, for uses other than direct patient care (e.g. regulatory use, or drug catalogs).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "country": {
          "description": "Country code for where this name applies.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "jurisdiction": {
          "description": "Jurisdiction code for where this name applies. A jurisdiction may be a sub- or supra-national entity (e.g. a state or a geographic region).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "language": {
          "description": "Language code for this name.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "country",
        "language"
      ]
    },
    "MedicinalProductDefinition_CrossReference": {
      "description": "A medicinal product, being a substance or combination of substances that is intended to treat, prevent or diagnose a disease, or to restore, correct or modify physiological functions by exerting a pharmacological, immunological or metabolic action. This resource is intended to define and detail such products and their properties, for uses other than direct patient care (e.g. regulatory use, or drug catalogs).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "product": {
          "description": "Reference to another product, e.g. for linking authorised to investigational product.",
          "$ref": "#/definitions/CodeableReference"
        },
        "type": {
          "description": "The type of relationship, for instance branded to generic, virtual to actual product, product to development product (investigational), parallel import version.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "product"
      ]
    },
    "MedicinalProductDefinition_Operation": {
      "description": "A medicinal product, being a substance or combination of substances that is intended to treat, prevent or diagnose a disease, or to restore, correct or modify physiological functions by exerting a pharmacological, immunological or metabolic action. This resource is intended to define and detail such products and their properties, for uses other than direct patient care (e.g. regulatory use, or drug catalogs).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of manufacturing operation e.g. manufacturing itself, re-packaging. For the authorization of this, a RegulatedAuthorization would point to the same plan or activity referenced here.",
          "$ref": "#/definitions/CodeableReference"
        },
        "effectiveDate": {
          "description": "Date range of applicability.",
          "$ref": "#/definitions/Period"
        },
        "organization": {
          "description": "The organization or establishment responsible for (or associated with) the particular process or step, examples include the manufacturer, importer, agent.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "confidentialityIndicator": {
          "description": "Specifies whether this particular business or manufacturing process is considered proprietary or confidential.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MedicinalProductDefinition_Characteristic": {
      "description": "A medicinal product, being a substance or combination of substances that is intended to treat, prevent or diagnose a disease, or to restore, correct or modify physiological functions by exerting a pharmacological, immunological or metabolic action. This resource is intended to define and detail such products and their properties, for uses other than direct patient care (e.g. regulatory use, or drug catalogs).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "A code expressing the type of characteristic.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCodeableConcept": {
          "description": "A value for the characteristic.text.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueString": {
          "description": "A value for the characteristic.text.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueQuantity": {
          "description": "A value for the characteristic.text.",
          "$ref": "#/definitions/Quantity"
        },
        "valueInteger": {
          "description": "A value for the characteristic.text.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": {
          "description": "Extensions for valueInteger",
          "$ref": "#/definitions/Element"
        },
        "valueDate": {
          "description": "A value for the characteristic.text.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_valueDate": {
          "description": "Extensions for valueDate",
          "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "description": "A value for the characteristic.text.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueAttachment": {
          "description": "A value for the characteristic.text.",
          "$ref": "#/definitions/Attachment"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "MessageDefinition": {
      "description": "Defines the characteristics of a message that can be shared between systems, including the type of event that initiates the message, the content to be transmitted and what response(s), if any, are permitted.",
      "properties": {
        "resourceType": {
          "description": "This is a MessageDefinition resource",
          "const": "MessageDefinition"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "The business identifier that is used to reference the MessageDefinition and *is* expected to be consistent from server to server.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this message definition when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the message definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the message definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the message definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the message definition.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this message definition. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this message definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the message definition was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the message definition changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the message definition.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the message definition from a consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate message definition instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the message definition is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this message definition is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the message definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the message definition.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "replaces": {
          "description": "A MessageDefinition that is superseded by this definition.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "base": {
          "description": "The MessageDefinition that is the basis for the contents of this resource.",
          "$ref": "#/definitions/canonical"
        },
        "parent": {
          "description": "Identifies a protocol or workflow that this MessageDefinition represents a step in.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "eventCoding": {
          "description": "Event code or link to the EventDefinition.",
          "$ref": "#/definitions/Coding"
        },
        "eventUri": {
          "description": "Event code or link to the EventDefinition.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_eventUri": {
          "description": "Extensions for eventUri",
          "$ref": "#/definitions/Element"
        },
        "category": {
          "description": "The impact of the content of the message.",
          "$ref": "#/definitions/code"
        },
        "_category": {
          "description": "Extensions for category",
          "$ref": "#/definitions/Element"
        },
        "focus": {
          "description": "Identifies the resource (or resources) that are being addressed by the event.  For example, the Encounter for an admit message or two Account records for a merge.",
          "items": {
            "$ref": "#/definitions/MessageDefinition_Focus"
          },
          "type": "array"
        },
        "responseRequired": {
          "description": "Declare at a message definition level whether a response is required or only upon error or success, or never.",
          "$ref": "#/definitions/code"
        },
        "_responseRequired": {
          "description": "Extensions for responseRequired",
          "$ref": "#/definitions/Element"
        },
        "allowedResponse": {
          "description": "Indicates what types of messages may be sent as an application-level response to this message.",
          "items": {
            "$ref": "#/definitions/MessageDefinition_AllowedResponse"
          },
          "type": "array"
        },
        "graph": {
          "description": "Canonical reference to a GraphDefinition. If a URL is provided, it is the canonical reference to a [GraphDefinition](graphdefinition.html) that it controls what resources are to be added to the bundle when building the document. The GraphDefinition can also specify profiles that apply to the various resources.",
          "$ref": "#/definitions/canonical"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "MessageDefinition_Focus": {
      "description": "Defines the characteristics of a message that can be shared between systems, including the type of event that initiates the message, the content to be transmitted and what response(s), if any, are permitted.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "The kind of resource that must be the focus for this message.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "profile": {
          "description": "A profile that reflects constraints for the focal resource (and potentially for related resources).",
          "$ref": "#/definitions/canonical"
        },
        "min": {
          "description": "Identifies the minimum number of resources of this type that must be pointed to by a message in order for it to be valid against this MessageDefinition.",
          "$ref": "#/definitions/unsignedInt"
        },
        "_min": {
          "description": "Extensions for min",
          "$ref": "#/definitions/Element"
        },
        "max": {
          "description": "Identifies the maximum number of resources of this type that must be pointed to by a message in order for it to be valid against this MessageDefinition.",
          "$ref": "#/definitions/string"
        },
        "_max": {
          "description": "Extensions for max",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MessageDefinition_AllowedResponse": {
      "description": "Defines the characteristics of a message that can be shared between systems, including the type of event that initiates the message, the content to be transmitted and what response(s), if any, are permitted.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "message": {
          "description": "A reference to the message definition that must be adhered to by this supported response.",
          "$ref": "#/definitions/canonical"
        },
        "situation": {
          "description": "Provides a description of the circumstances in which this response should be used (as opposed to one of the alternative responses).",
          "$ref": "#/definitions/markdown"
        },
        "_situation": {
          "description": "Extensions for situation",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "message"
      ]
    },
    "MessageHeader": {
      "description": "The header for a message exchange that is either requesting or responding to an action.  The reference(s) that are the subject of the action as well as other information related to the action are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource in the bundle.",
      "properties": {
        "resourceType": {
          "description": "This is a MessageHeader resource",
          "const": "MessageHeader"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "eventCoding": {
          "description": "Code that identifies the event this message represents and connects it with its definition. Events defined as part of the FHIR specification have the system value \"http://terminology.hl7.org/CodeSystem/message-events\".  Alternatively a canonical uri to the EventDefinition.",
          "$ref": "#/definitions/Coding"
        },
        "eventCanonical": {
          "description": "Code that identifies the event this message represents and connects it with its definition. Events defined as part of the FHIR specification have the system value \"http://terminology.hl7.org/CodeSystem/message-events\".  Alternatively a canonical uri to the EventDefinition.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_eventCanonical": {
          "description": "Extensions for eventCanonical",
          "$ref": "#/definitions/Element"
        },
        "destination": {
          "description": "The destination application which the message is intended for.",
          "items": {
            "$ref": "#/definitions/MessageHeader_Destination"
          },
          "type": "array"
        },
        "sender": {
          "description": "Identifies the sending system to allow the use of a trust relationship.",
          "$ref": "#/definitions/Reference"
        },
        "enterer": {
          "description": "The person or device that performed the data entry leading to this message. When there is more than one candidate, pick the most proximal to the message. Can provide other enterers in extensions.",
          "$ref": "#/definitions/Reference"
        },
        "author": {
          "description": "The logical author of the message - the personor device that decided the described event should happen. When there is more than one candidate, pick the most proximal to the MessageHeader. Can provide other authors in extensions.",
          "$ref": "#/definitions/Reference"
        },
        "source": {
          "description": "The source application from which this message originated.",
          "$ref": "#/definitions/MessageHeader_Source"
        },
        "responsible": {
          "description": "The person or organization that accepts overall responsibility for the contents of the message. The implication is that the message event happened under the policies of the responsible party.",
          "$ref": "#/definitions/Reference"
        },
        "reason": {
          "description": "Coded indication of the cause for the event - indicates  a reason for the occurrence of the event that is a focus of this message.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "response": {
          "description": "Information about the message that this message is a response to.  Only present if this message is a response.",
          "$ref": "#/definitions/MessageHeader_Response"
        },
        "focus": {
          "description": "The actual data of the message - a reference to the root/focus class of the event. This is allowed to be a Parameters resource.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "definition": {
          "description": "Permanent link to the MessageDefinition for this message.",
          "$ref": "#/definitions/canonical"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "source",
        "resourceType"
      ]
    },
    "MessageHeader_Destination": {
      "description": "The header for a message exchange that is either requesting or responding to an action.  The reference(s) that are the subject of the action as well as other information related to the action are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource in the bundle.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "Human-readable name for the target system.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "target": {
          "description": "Identifies the target end system in situations where the initial message transmission is to an intermediary system.",
          "$ref": "#/definitions/Reference"
        },
        "endpoint": {
          "description": "Indicates where the message should be routed to.",
          "$ref": "#/definitions/url"
        },
        "_endpoint": {
          "description": "Extensions for endpoint",
          "$ref": "#/definitions/Element"
        },
        "receiver": {
          "description": "Allows data conveyed by a message to be addressed to a particular person or department when routing to a specific application isn\u0027t sufficient.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MessageHeader_Source": {
      "description": "The header for a message exchange that is either requesting or responding to an action.  The reference(s) that are the subject of the action as well as other information related to the action are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource in the bundle.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "Human-readable name for the source system.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "software": {
          "description": "May include configuration or other information useful in debugging.",
          "$ref": "#/definitions/string"
        },
        "_software": {
          "description": "Extensions for software",
          "$ref": "#/definitions/Element"
        },
        "version": {
          "description": "Can convey versions of multiple systems in situations where a message passes through multiple hands.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "An e-mail, phone, website or other contact point to use to resolve issues with message communications.",
          "$ref": "#/definitions/ContactPoint"
        },
        "endpoint": {
          "description": "Identifies the routing target to send acknowledgements to.",
          "$ref": "#/definitions/url"
        },
        "_endpoint": {
          "description": "Extensions for endpoint",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MessageHeader_Response": {
      "description": "The header for a message exchange that is either requesting or responding to an action.  The reference(s) that are the subject of the action as well as other information related to the action are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource in the bundle.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "The Bundle.identifier of the message to which this message is a response.",
          "$ref": "#/definitions/Identifier"
        },
        "code": {
          "description": "Code that identifies the type of response to the message - whether it was successful or not, and whether it should be resent or not.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "details": {
          "description": "Full details of any issues found in the message.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "identifier"
      ]
    },
    "MolecularSequence": {
      "description": "Representation of a molecular sequence.",
      "properties": {
        "resourceType": {
          "description": "This is a MolecularSequence resource",
          "const": "MolecularSequence"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "A unique identifier for this particular sequence instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "type": {
          "description": "Amino Acid Sequence/ DNA Sequence / RNA Sequence.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "subject": {
          "description": "Indicates the subject this sequence is associated too.",
          "$ref": "#/definitions/Reference"
        },
        "specimen": {
          "description": "Specimen used for sequencing.",
          "$ref": "#/definitions/Reference"
        },
        "device": {
          "description": "The method for sequencing, for example, chip information.",
          "$ref": "#/definitions/Reference"
        },
        "performer": {
          "description": "The organization or lab that should be responsible for this result.",
          "$ref": "#/definitions/Reference"
        },
        "literal": {
          "description": "Sequence that was observed.",
          "$ref": "#/definitions/string"
        },
        "_literal": {
          "description": "Extensions for literal",
          "$ref": "#/definitions/Element"
        },
        "formatted": {
          "description": "Sequence that was observed as file content. Can be an actual file contents, or referenced by a URL to an external system.",
          "items": {
            "$ref": "#/definitions/Attachment"
          },
          "type": "array"
        },
        "relative": {
          "description": "A sequence defined relative to another sequence.",
          "items": {
            "$ref": "#/definitions/MolecularSequence_Relative"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "MolecularSequence_Relative": {
      "description": "Representation of a molecular sequence.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "coordinateSystem": {
          "description": "These are different ways of identifying nucleotides or amino acids within a sequence. Different databases and file types may use different systems. For detail definitions, see https://loinc.org/92822-6/ for more detail.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "ordinalPosition": {
          "description": "Indicates the order in which the sequence should be considered when putting multiple \u0027relative\u0027 elements together.",
          "$ref": "#/definitions/integer"
        },
        "_ordinalPosition": {
          "description": "Extensions for ordinalPosition",
          "$ref": "#/definitions/Element"
        },
        "sequenceRange": {
          "description": "Indicates the nucleotide range in the composed sequence when multiple \u0027relative\u0027 elements are used together.",
          "$ref": "#/definitions/Range"
        },
        "startingSequence": {
          "description": "A sequence that is used as a starting sequence to describe variants that are present in a sequence analyzed.",
          "$ref": "#/definitions/MolecularSequence_StartingSequence"
        },
        "edit": {
          "description": "Changes in sequence from the starting sequence.",
          "items": {
            "$ref": "#/definitions/MolecularSequence_Edit"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "coordinateSystem"
      ]
    },
    "MolecularSequence_StartingSequence": {
      "description": "Representation of a molecular sequence.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "genomeAssembly": {
          "description": "The genome assembly used for starting sequence, e.g. GRCh38.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "chromosome": {
          "description": "Structural unit composed of a nucleic acid molecule which controls its own replication through the interaction of specific proteins at one or more origins of replication ([SO:0000340](http://www.sequenceontology.org/browser/current_svn/term/SO:0000340)).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "sequenceCodeableConcept": {
          "description": "The reference sequence that represents the starting sequence.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "sequenceString": {
          "description": "The reference sequence that represents the starting sequence.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_sequenceString": {
          "description": "Extensions for sequenceString",
          "$ref": "#/definitions/Element"
        },
        "sequenceReference": {
          "description": "The reference sequence that represents the starting sequence.",
          "$ref": "#/definitions/Reference"
        },
        "windowStart": {
          "description": "Start position of the window on the starting sequence. This value should honor the rules of the coordinateSystem.",
          "$ref": "#/definitions/integer"
        },
        "_windowStart": {
          "description": "Extensions for windowStart",
          "$ref": "#/definitions/Element"
        },
        "windowEnd": {
          "description": "End position of the window on the starting sequence. This value should honor the rules of the  coordinateSystem.",
          "$ref": "#/definitions/integer"
        },
        "_windowEnd": {
          "description": "Extensions for windowEnd",
          "$ref": "#/definitions/Element"
        },
        "orientation": {
          "description": "A relative reference to a DNA strand based on gene orientation. The strand that contains the open reading frame of the gene is the \"sense\" strand, and the opposite complementary strand is the \"antisense\" strand.",
          "$ref": "#/definitions/code"
        },
        "_orientation": {
          "description": "Extensions for orientation",
          "$ref": "#/definitions/Element"
        },
        "strand": {
          "description": "An absolute reference to a strand. The Watson strand is the strand whose 5\u0027-end is on the short arm of the chromosome, and the Crick strand as the one whose 5\u0027-end is on the long arm.",
          "$ref": "#/definitions/code"
        },
        "_strand": {
          "description": "Extensions for strand",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MolecularSequence_Edit": {
      "description": "Representation of a molecular sequence.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "start": {
          "description": "Start position of the edit on the starting sequence. If the coordinate system is either 0-based or 1-based, then start position is inclusive.",
          "$ref": "#/definitions/integer"
        },
        "_start": {
          "description": "Extensions for start",
          "$ref": "#/definitions/Element"
        },
        "end": {
          "description": "End position of the edit on the starting sequence. If the coordinate system is 0-based then end is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position.",
          "$ref": "#/definitions/integer"
        },
        "_end": {
          "description": "Extensions for end",
          "$ref": "#/definitions/Element"
        },
        "replacementSequence": {
          "description": "Allele that was observed. Nucleotide(s)/amino acids from start position of sequence to stop position of sequence on the positive (+) strand of the observed sequence. When the sequence type is DNA, it should be the sequence on the positive (+) strand. This will lay in the range between variant.start and variant.end.",
          "$ref": "#/definitions/string"
        },
        "_replacementSequence": {
          "description": "Extensions for replacementSequence",
          "$ref": "#/definitions/Element"
        },
        "replacedSequence": {
          "description": "Allele in the starting sequence. Nucleotide(s)/amino acids from start position of sequence to stop position of sequence on the positive (+) strand of the starting sequence. When the sequence  type is DNA, it should be the sequence on the positive (+) strand. This will lay in the range between variant.start and variant.end.",
          "$ref": "#/definitions/string"
        },
        "_replacedSequence": {
          "description": "Extensions for replacedSequence",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "NamingSystem": {
      "description": "A curated namespace that issues unique symbols within that namespace for the identification of concepts, people, devices, etc.  Represents a \"System\" used within the Identifier and Coding data types.",
      "properties": {
        "resourceType": {
          "description": "This is a NamingSystem resource",
          "const": "NamingSystem"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this naming system when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this naming system is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the naming system is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this naming system when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the naming system when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the naming system author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the naming system. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the naming system.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this naming system. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this naming system is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the naming system was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the naming system changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the naming system.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the naming system from a consumer\u0027s perspective. Details about what the namespace identifies including scope, granularity, version labeling, etc.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate naming system instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the naming system is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this naming system is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the naming system and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the naming system.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "approvalDate": {
          "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
          "$ref": "#/definitions/date"
        },
        "_approvalDate": {
          "description": "Extensions for approvalDate",
          "$ref": "#/definitions/Element"
        },
        "lastReviewDate": {
          "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
          "$ref": "#/definitions/date"
        },
        "_lastReviewDate": {
          "description": "Extensions for lastReviewDate",
          "$ref": "#/definitions/Element"
        },
        "effectivePeriod": {
          "description": "The period during which the NamingSystem content was or is planned to be in active use.",
          "$ref": "#/definitions/Period"
        },
        "topic": {
          "description": "Descriptions related to the content of the NamingSystem. Topics provide a high-level categorization as well as keywords for the NamingSystem that can be useful for filtering and searching.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "author": {
          "description": "An individiual or organization primarily involved in the creation and maintenance of the NamingSystem.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "editor": {
          "description": "An individual or organization primarily responsible for internal coherence of the NamingSystem.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "reviewer": {
          "description": "An individual or organization primarily responsible for review of some aspect of the NamingSystem.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "endorser": {
          "description": "An individual or organization responsible for officially endorsing the NamingSystem for use in some setting.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "relatedArtifact": {
          "description": "Related artifacts such as additional documentation, justification, dependencies, bibliographic references, and predecessor and successor artifacts.",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          },
          "type": "array"
        },
        "kind": {
          "description": "Indicates the purpose for the naming system - what kinds of things does it make unique?",
          "$ref": "#/definitions/code"
        },
        "_kind": {
          "description": "Extensions for kind",
          "$ref": "#/definitions/Element"
        },
        "responsible": {
          "description": "The name of the organization that is responsible for issuing identifiers or codes for this namespace and ensuring their non-collision.",
          "$ref": "#/definitions/string"
        },
        "_responsible": {
          "description": "Extensions for responsible",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "Categorizes a naming system for easier search by grouping related naming systems.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "usage": {
          "description": "Provides guidance on the use of the namespace, including the handling of formatting characters, use of upper vs. lower case, etc.",
          "$ref": "#/definitions/string"
        },
        "_usage": {
          "description": "Extensions for usage",
          "$ref": "#/definitions/Element"
        },
        "uniqueId": {
          "description": "Indicates how the system may be identified when referenced in electronic exchange.",
          "items": {
            "$ref": "#/definitions/NamingSystem_UniqueId"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "uniqueId",
        "resourceType"
      ]
    },
    "NamingSystem_UniqueId": {
      "description": "A curated namespace that issues unique symbols within that namespace for the identification of concepts, people, devices, etc.  Represents a \"System\" used within the Identifier and Coding data types.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Identifies the unique identifier scheme used for this particular identifier.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "value": {
          "description": "The string that should be sent over the wire to identify the code system or identifier system.",
          "$ref": "#/definitions/string"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        },
        "preferred": {
          "description": "Indicates whether this identifier is the \"preferred\" identifier of this type.",
          "$ref": "#/definitions/boolean"
        },
        "_preferred": {
          "description": "Extensions for preferred",
          "$ref": "#/definitions/Element"
        },
        "comment": {
          "description": "Notes about the past or intended usage of this identifier.",
          "$ref": "#/definitions/string"
        },
        "_comment": {
          "description": "Extensions for comment",
          "$ref": "#/definitions/Element"
        },
        "period": {
          "description": "Identifies the period of time over which this identifier is considered appropriate to refer to the naming system.  Outside of this window, the identifier might be non-deterministic.",
          "$ref": "#/definitions/Period"
        },
        "authoritative": {
          "description": "Indicates whether this identifier ie endorsed by the official owner of the associated naming system.",
          "$ref": "#/definitions/boolean"
        },
        "_authoritative": {
          "description": "Extensions for authoritative",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "NutritionIntake": {
      "description": "A record of food or fluid that is being consumed by a patient.   A NutritionIntake may indicate that the patient may be consuming the food or fluid now or has consumed the food or fluid in the past.  The source of this information can be the patient, significant other (such as a family member or spouse), or a clinician.  A common scenario where this information is captured is during the history taking process during a patient visit or stay or through an app that tracks food or fluids consumed.   The consumption information may come from sources such as the patient\u0027s memory, from a nutrition label,  or from a clinician documenting observed intake.",
      "properties": {
        "resourceType": {
          "description": "This is a NutritionIntake resource",
          "const": "NutritionIntake"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifiers associated with this Nutrition Intake that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "instantiatesCanonical": {
          "description": "Instantiates FHIR protocol or definition.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "instantiatesUri": {
          "description": "Instantiates external protocol or definition.",
          "items": {
            "$ref": "#/definitions/uri"
          },
          "type": "array"
        },
        "_instantiatesUri": {
          "description": "Extensions for instantiatesUri",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "basedOn": {
          "description": "A plan, proposal or order that is fulfilled in whole or in part by this event.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "partOf": {
          "description": "A larger event of which this particular event is a component or step.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "status": {
          "description": "A code representing the patient or other source\u0027s judgment about the state of the intake that this assertion is about.  Generally, this will be active or completed.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "statusReason": {
          "description": "Captures the reason for the current state of the NutritionIntake.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "code": {
          "description": "Overall type of nutrition intake.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subject": {
          "description": "The person, animal or group who is/was consuming the food or fluid.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "The encounter that establishes the context for this NutritionIntake.",
          "$ref": "#/definitions/Reference"
        },
        "occurrenceDateTime": {
          "description": "The interval of time during which it is being asserted that the patient is/was consuming the food or fluid.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_occurrenceDateTime": {
          "description": "Extensions for occurrenceDateTime",
          "$ref": "#/definitions/Element"
        },
        "occurrencePeriod": {
          "description": "The interval of time during which it is being asserted that the patient is/was consuming the food or fluid.",
          "$ref": "#/definitions/Period"
        },
        "recorded": {
          "description": "The date when the Nutrition Intake was asserted by the information source.",
          "$ref": "#/definitions/dateTime"
        },
        "_recorded": {
          "description": "Extensions for recorded",
          "$ref": "#/definitions/Element"
        },
        "reportedBoolean": {
          "description": "The person or organization that provided the information about the consumption of this food or fluid. Note: Use derivedFrom when a NutritionIntake is derived from other resources.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_reportedBoolean": {
          "description": "Extensions for reportedBoolean",
          "$ref": "#/definitions/Element"
        },
        "reportedReference": {
          "description": "The person or organization that provided the information about the consumption of this food or fluid. Note: Use derivedFrom when a NutritionIntake is derived from other resources.",
          "$ref": "#/definitions/Reference"
        },
        "consumedItem": {
          "description": "What food or fluid product or item was consumed.",
          "items": {
            "$ref": "#/definitions/NutritionIntake_ConsumedItem"
          },
          "type": "array"
        },
        "ingredientLabel": {
          "description": "Total nutrient amounts for the whole meal, product, serving, etc.",
          "items": {
            "$ref": "#/definitions/NutritionIntake_IngredientLabel"
          },
          "type": "array"
        },
        "performer": {
          "description": "Who performed the intake and how they were involved.",
          "items": {
            "$ref": "#/definitions/NutritionIntake_Performer"
          },
          "type": "array"
        },
        "location": {
          "description": "Where the intake occurred.",
          "$ref": "#/definitions/Reference"
        },
        "derivedFrom": {
          "description": "Allows linking the NutritionIntake to the underlying NutritionOrder, or to other information, such as AllergyIntolerance, that supports or is used to derive the NutritionIntake.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "reason": {
          "description": "A reason, Condition or observation for why the food or fluid is /was consumed.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "note": {
          "description": "Provides extra information about the Nutrition Intake that is not conveyed by the other attributes.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "subject",
        "consumedItem",
        "resourceType"
      ]
    },
    "NutritionIntake_ConsumedItem": {
      "description": "A record of food or fluid that is being consumed by a patient.   A NutritionIntake may indicate that the patient may be consuming the food or fluid now or has consumed the food or fluid in the past.  The source of this information can be the patient, significant other (such as a family member or spouse), or a clinician.  A common scenario where this information is captured is during the history taking process during a patient visit or stay or through an app that tracks food or fluids consumed.   The consumption information may come from sources such as the patient\u0027s memory, from a nutrition label,  or from a clinician documenting observed intake.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Indicates what a category of item that was consumed: eg., food, fluid, enteral, etc.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "nutritionProduct": {
          "description": "Identifies the food or fluid product that was consumed. This is potentially a link to a resource representing the details of the food product (TBD) or a simple attribute carrying a code that identifies the food from a known list of foods.",
          "$ref": "#/definitions/CodeableReference"
        },
        "schedule": {
          "description": "Scheduled frequency of consumption.",
          "$ref": "#/definitions/Timing"
        },
        "amount": {
          "description": "Quantity of the specified food.",
          "$ref": "#/definitions/Quantity"
        },
        "rate": {
          "description": "Rate at which enteral feeding was administered.",
          "$ref": "#/definitions/Quantity"
        },
        "notConsumed": {
          "description": "Indicator when a patient is in a setting where it is helpful to know if food was not consumed, such as it was refused, held (as in tube feedings), or otherwise not provided. If a consumption is being recorded from an app, such as MyFitnessPal, this indicator will likely not be used.",
          "$ref": "#/definitions/boolean"
        },
        "_notConsumed": {
          "description": "Extensions for notConsumed",
          "$ref": "#/definitions/Element"
        },
        "notConsumedReason": {
          "description": "Document the reason the food or fluid was not consumed, such as refused, held, etc.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "nutritionProduct",
        "type"
      ]
    },
    "NutritionIntake_IngredientLabel": {
      "description": "A record of food or fluid that is being consumed by a patient.   A NutritionIntake may indicate that the patient may be consuming the food or fluid now or has consumed the food or fluid in the past.  The source of this information can be the patient, significant other (such as a family member or spouse), or a clinician.  A common scenario where this information is captured is during the history taking process during a patient visit or stay or through an app that tracks food or fluids consumed.   The consumption information may come from sources such as the patient\u0027s memory, from a nutrition label,  or from a clinician documenting observed intake.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "nutrient": {
          "description": "Total nutrient consumed. This could be a macronutrient (protein, fat, carbohydrate), or a vitamin and mineral.",
          "$ref": "#/definitions/CodeableReference"
        },
        "amount": {
          "description": "Total amount of nutrient consumed.",
          "$ref": "#/definitions/Quantity"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "amount",
        "nutrient"
      ]
    },
    "NutritionIntake_Performer": {
      "description": "A record of food or fluid that is being consumed by a patient.   A NutritionIntake may indicate that the patient may be consuming the food or fluid now or has consumed the food or fluid in the past.  The source of this information can be the patient, significant other (such as a family member or spouse), or a clinician.  A common scenario where this information is captured is during the history taking process during a patient visit or stay or through an app that tracks food or fluids consumed.   The consumption information may come from sources such as the patient\u0027s memory, from a nutrition label,  or from a clinician documenting observed intake.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "function": {
          "description": "Type of performer.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "actor": {
          "description": "Who performed the intake.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "actor"
      ]
    },
    "NutritionOrder": {
      "description": "A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.",
      "properties": {
        "resourceType": {
          "description": "This is a NutritionOrder resource",
          "const": "NutritionOrder"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifiers assigned to this order by the order sender or by the order receiver.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "instantiatesCanonical": {
          "description": "The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this NutritionOrder.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "instantiatesUri": {
          "description": "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this NutritionOrder.",
          "items": {
            "$ref": "#/definitions/uri"
          },
          "type": "array"
        },
        "_instantiatesUri": {
          "description": "Extensions for instantiatesUri",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "instantiates": {
          "description": "The URL pointing to a protocol, guideline, orderset or other definition that is adhered to in whole or in part by this NutritionOrder.",
          "items": {
            "$ref": "#/definitions/uri"
          },
          "type": "array"
        },
        "_instantiates": {
          "description": "Extensions for instantiates",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "basedOn": {
          "description": "A plan or request that is fulfilled in whole or in part by this nutrition order.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "status": {
          "description": "The workflow status of the nutrition order/request.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "intent": {
          "description": "Indicates the level of authority/intentionality associated with the NutrionOrder and where the request fits into the workflow chain.",
          "$ref": "#/definitions/code"
        },
        "_intent": {
          "description": "Extensions for intent",
          "$ref": "#/definitions/Element"
        },
        "priority": {
          "description": "Indicates how quickly the Nutrition Order should be addressed with respect to other        requests.",
          "$ref": "#/definitions/code"
        },
        "_priority": {
          "description": "Extensions for priority",
          "$ref": "#/definitions/Element"
        },
        "subject": {
          "description": "The person or set of individuals who needs the nutrition order for an oral diet, nutritional supplement and/or enteral or formula feeding.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "An encounter that provides additional information about the healthcare context in which this request is made.",
          "$ref": "#/definitions/Reference"
        },
        "supportingInformation": {
          "description": "Information to support fulfilling (i.e. dispensing or administering) of the nutrition,        for example, patient height and weight).",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "dateTime": {
          "description": "The date and time that this nutrition order was requested.",
          "$ref": "#/definitions/dateTime"
        },
        "_dateTime": {
          "description": "Extensions for dateTime",
          "$ref": "#/definitions/Element"
        },
        "orderer": {
          "description": "The practitioner that holds legal responsibility for ordering the diet, nutritional supplement, or formula feedings.",
          "$ref": "#/definitions/Reference"
        },
        "performer": {
          "description": "The specified desired performer of the nutrition order.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "allergyIntolerance": {
          "description": "A link to a record of allergies or intolerances  which should be included in the nutrition order.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "foodPreferenceModifier": {
          "description": "This modifier is used to convey order-specific modifiers about the type of food that should be given. These can be derived from patient allergies, intolerances, or preferences such as Halal, Vegan or Kosher. This modifier applies to the entire nutrition order inclusive of the oral diet, nutritional supplements and enteral formula feedings.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "excludeFoodModifier": {
          "description": "This modifier is used to convey Order-specific modifier about the type of oral food or oral fluids that should not be given. These can be derived from patient allergies, intolerances, or preferences such as No Red Meat, No Soy or No Wheat or  Gluten-Free.  While it should not be necessary to repeat allergy or intolerance information captured in the referenced AllergyIntolerance resource in the excludeFoodModifier, this element may be used to convey additional specificity related to foods that should be eliminated from the patient’s diet for any reason.  This modifier applies to the entire nutrition order inclusive of the oral diet, nutritional supplements and enteral formula feedings.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "outsideFoodAllowed": {
          "description": "This modifier is used to convey whether a food item is allowed to be brought in by the patient and/or family.  If set to true, indicates that the receiving system does not need to supply the food item.",
          "$ref": "#/definitions/boolean"
        },
        "_outsideFoodAllowed": {
          "description": "Extensions for outsideFoodAllowed",
          "$ref": "#/definitions/Element"
        },
        "oralDiet": {
          "description": "Diet given orally in contrast to enteral (tube) feeding.",
          "$ref": "#/definitions/NutritionOrder_OralDiet"
        },
        "supplement": {
          "description": "Oral nutritional products given in order to add further nutritional value to the patient\u0027s diet.",
          "items": {
            "$ref": "#/definitions/NutritionOrder_Supplement"
          },
          "type": "array"
        },
        "enteralFormula": {
          "description": "Feeding provided through the gastrointestinal tract via a tube, catheter, or stoma that delivers nutrition distal to the oral cavity.",
          "$ref": "#/definitions/NutritionOrder_EnteralFormula"
        },
        "note": {
          "description": "Comments made about the {{title}} by the requester, performer, subject or other participants.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "subject",
        "resourceType"
      ]
    },
    "NutritionOrder_OralDiet": {
      "description": "A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The kind of diet or dietary restriction such as fiber restricted diet or diabetic diet.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "schedule": {
          "description": "Schedule information for an oral diet.",
          "$ref": "#/definitions/NutritionOrder_Schedule"
        },
        "nutrient": {
          "description": "Class that defines the quantity and type of nutrient modifications (for example carbohydrate, fiber or sodium) required for the oral diet.",
          "items": {
            "$ref": "#/definitions/NutritionOrder_Nutrient"
          },
          "type": "array"
        },
        "texture": {
          "description": "Class that describes any texture modifications required for the patient to safely consume various types of solid foods.",
          "items": {
            "$ref": "#/definitions/NutritionOrder_Texture"
          },
          "type": "array"
        },
        "fluidConsistencyType": {
          "description": "The required consistency (e.g. honey-thick, nectar-thick, thin, thickened.) of liquids or fluids served to the patient.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "instruction": {
          "description": "Free text or additional instructions or information pertaining to the oral diet.",
          "$ref": "#/definitions/string"
        },
        "_instruction": {
          "description": "Extensions for instruction",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "NutritionOrder_Schedule": {
      "description": "A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "timing": {
          "description": "The time period and frequency at which the diet should be given.  The diet should be given for the combination of all schedules if more than one schedule is present.",
          "items": {
            "$ref": "#/definitions/Timing"
          },
          "type": "array"
        },
        "asNeeded": {
          "description": "Indicates whether the product is only taken when needed within a specific dosing schedule.",
          "$ref": "#/definitions/boolean"
        },
        "_asNeeded": {
          "description": "Extensions for asNeeded",
          "$ref": "#/definitions/Element"
        },
        "asNeededFor": {
          "description": "Indicates whether the product is only taken based on a precondition for taking the product.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "NutritionOrder_Nutrient": {
      "description": "A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifier": {
          "description": "The nutrient that is being modified such as carbohydrate or sodium.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "amount": {
          "description": "The quantity of the specified nutrient to include in diet.",
          "$ref": "#/definitions/Quantity"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "NutritionOrder_Texture": {
      "description": "A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifier": {
          "description": "Any texture modifications (for solid foods) that should be made, e.g. easy to chew, chopped, ground, and pureed.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "foodType": {
          "description": "The food type(s) (e.g. meats, all foods)  that the texture modification applies to.  This could be all foods types.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "NutritionOrder_Supplement": {
      "description": "A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The kind of nutritional supplement product required such as a high protein or pediatric clear liquid supplement.",
          "$ref": "#/definitions/CodeableReference"
        },
        "productName": {
          "description": "The product or brand name of the nutritional supplement such as \"Acme Protein Shake\".",
          "$ref": "#/definitions/string"
        },
        "_productName": {
          "description": "Extensions for productName",
          "$ref": "#/definitions/Element"
        },
        "schedule": {
          "description": "Schedule information for a supplement.",
          "$ref": "#/definitions/NutritionOrder_Schedule1"
        },
        "quantity": {
          "description": "The amount of the nutritional supplement to be given.",
          "$ref": "#/definitions/Quantity"
        },
        "instruction": {
          "description": "Free text or additional instructions or information pertaining to the oral supplement.",
          "$ref": "#/definitions/string"
        },
        "_instruction": {
          "description": "Extensions for instruction",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "NutritionOrder_Schedule1": {
      "description": "A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "timing": {
          "description": "The time period and frequency at which the supplement should be given.  The supplement should be given for the combination of all schedules if more than one schedule is present.",
          "items": {
            "$ref": "#/definitions/Timing"
          },
          "type": "array"
        },
        "asNeeded": {
          "description": "Indicates whether the supplement is only taken when needed within a specific dosing schedule.",
          "$ref": "#/definitions/boolean"
        },
        "_asNeeded": {
          "description": "Extensions for asNeeded",
          "$ref": "#/definitions/Element"
        },
        "asNeededFor": {
          "description": "Indicates whether the supplement is only taken based on a precondition for taking the supplement.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "NutritionOrder_EnteralFormula": {
      "description": "A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "baseFormulaType": {
          "description": "The type of enteral or infant formula such as an adult standard formula with fiber or a soy-based infant formula.",
          "$ref": "#/definitions/CodeableReference"
        },
        "baseFormulaProductName": {
          "description": "The product or brand name of the enteral or infant formula product such as \"ACME Adult Standard Formula\".",
          "$ref": "#/definitions/string"
        },
        "_baseFormulaProductName": {
          "description": "Extensions for baseFormulaProductName",
          "$ref": "#/definitions/Element"
        },
        "deliveryDevice": {
          "description": "The intended type of device that is to be used for the administration of the enteral formula.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "additive": {
          "description": "Indicates modular components to be provided in addition or mixed with the base formula.",
          "items": {
            "$ref": "#/definitions/NutritionOrder_Additive"
          },
          "type": "array"
        },
        "caloricDensity": {
          "description": "The amount of energy (calories) that the formula should provide per specified volume, typically per mL or fluid oz.  For example, an infant may require a formula that provides 24 calories per fluid ounce or an adult may require an enteral formula that provides 1.5 calorie/mL.",
          "$ref": "#/definitions/Quantity"
        },
        "routeOfAdministration": {
          "description": "The route or physiological path of administration into the patient\u0027s gastrointestinal  tract for purposes of providing the formula feeding, e.g. nasogastric tube.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "administration": {
          "description": "Formula administration instructions as structured data.  This repeating structure allows for changing the administration rate or volume over time for both bolus and continuous feeding.  An example of this would be an instruction to increase the rate of continuous feeding every 2 hours.",
          "items": {
            "$ref": "#/definitions/NutritionOrder_Administration"
          },
          "type": "array"
        },
        "maxVolumeToDeliver": {
          "description": "The maximum total quantity of formula that may be administered to a subject over the period of time, e.g. 1440 mL over 24 hours.",
          "$ref": "#/definitions/Quantity"
        },
        "administrationInstruction": {
          "description": "Free text formula administration, feeding instructions or additional instructions or information.",
          "$ref": "#/definitions/string"
        },
        "_administrationInstruction": {
          "description": "Extensions for administrationInstruction",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "NutritionOrder_Additive": {
      "description": "A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Indicates the type of modular component such as protein, carbohydrate, fat or fiber to be provided in addition to or mixed with the base formula.",
          "$ref": "#/definitions/CodeableReference"
        },
        "productName": {
          "description": "The product or brand name of the type of modular component to be added to the formula.",
          "$ref": "#/definitions/string"
        },
        "_productName": {
          "description": "Extensions for productName",
          "$ref": "#/definitions/Element"
        },
        "quantity": {
          "description": "The amount of additive to be given in addition or to be mixed in with the base formula.",
          "$ref": "#/definitions/Quantity"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "NutritionOrder_Administration": {
      "description": "A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "schedule": {
          "description": "Schedule information for an enteral formula.",
          "$ref": "#/definitions/NutritionOrder_Schedule2"
        },
        "quantity": {
          "description": "The volume of formula to provide to the patient per the specified administration schedule.",
          "$ref": "#/definitions/Quantity"
        },
        "rateQuantity": {
          "description": "The rate of administration of formula via a feeding pump, e.g. 60 mL per hour, according to the specified schedule.",
          "$ref": "#/definitions/Quantity"
        },
        "rateRatio": {
          "description": "The rate of administration of formula via a feeding pump, e.g. 60 mL per hour, according to the specified schedule.",
          "$ref": "#/definitions/Ratio"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "NutritionOrder_Schedule2": {
      "description": "A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "timing": {
          "description": "The time period and frequency at which the enteral formula should be given.  The enteral formula should be given for the combination of all schedules if more than one schedule is present.",
          "items": {
            "$ref": "#/definitions/Timing"
          },
          "type": "array"
        },
        "asNeeded": {
          "description": "Indicates whether the enteral formula is only taken when needed within a specific dosing schedule.",
          "$ref": "#/definitions/boolean"
        },
        "_asNeeded": {
          "description": "Extensions for asNeeded",
          "$ref": "#/definitions/Element"
        },
        "asNeededFor": {
          "description": "Indicates whether the enteral formula is only taken based on a precondition for taking the enteral formula.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "NutritionProduct": {
      "description": "A food or supplement that is consumed by patients.",
      "properties": {
        "resourceType": {
          "description": "This is a NutritionProduct resource",
          "const": "NutritionProduct"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "The code assigned to the product, for example a USDA NDB number, a USDA FDC ID number, or a Langual code.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "status": {
          "description": "The current state of the product.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "category": {
          "description": "Nutrition products can have different classifications - according to its nutritional properties, preparation methods, etc.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "manufacturer": {
          "description": "The organisation (manufacturer, representative or legal authorisation holder) that is responsible for the device.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "nutrient": {
          "description": "The product\u0027s nutritional information expressed by the nutrients.",
          "items": {
            "$ref": "#/definitions/NutritionProduct_Nutrient"
          },
          "type": "array"
        },
        "ingredient": {
          "description": "Ingredients contained in this product.",
          "items": {
            "$ref": "#/definitions/NutritionProduct_Ingredient"
          },
          "type": "array"
        },
        "knownAllergen": {
          "description": "Allergens that are known or suspected to be a part of this nutrition product.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "characteristic": {
          "description": "Specifies descriptive properties of the nutrition product.",
          "items": {
            "$ref": "#/definitions/NutritionProduct_Characteristic"
          },
          "type": "array"
        },
        "instance": {
          "description": "Conveys instance-level information about this product item. One or several physical, countable instances or occurrences of the product.",
          "items": {
            "$ref": "#/definitions/NutritionProduct_Instance"
          },
          "type": "array"
        },
        "note": {
          "description": "Comments made about the product.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "NutritionProduct_Nutrient": {
      "description": "A food or supplement that is consumed by patients.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "item": {
          "description": "The (relevant) nutrients in the product.",
          "$ref": "#/definitions/CodeableReference"
        },
        "amount": {
          "description": "The amount of nutrient expressed in one or more units: X per pack / per serving / per dose.",
          "items": {
            "$ref": "#/definitions/Ratio"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "NutritionProduct_Ingredient": {
      "description": "A food or supplement that is consumed by patients.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "item": {
          "description": "The ingredient contained in the product.",
          "$ref": "#/definitions/CodeableReference"
        },
        "amount": {
          "description": "The amount of ingredient that is in the product.",
          "items": {
            "$ref": "#/definitions/Ratio"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "item"
      ]
    },
    "NutritionProduct_Characteristic": {
      "description": "A food or supplement that is consumed by patients.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "A code specifying which characteristic of the product is being described (for example, colour, shape).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCodeableConcept": {
          "description": "The actual characteristic value corresponding to the type.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueString": {
          "description": "The actual characteristic value corresponding to the type.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueQuantity": {
          "description": "The actual characteristic value corresponding to the type.",
          "$ref": "#/definitions/Quantity"
        },
        "valueBase64Binary": {
          "description": "The actual characteristic value corresponding to the type.",
          "pattern": "^\\s*([A-Za-z0-9+\\\\/]{4})*(([A-Za-z0-9+\\\\/]{2}\u003d\u003d)|([A-Za-z0-9+\\\\/]{3}\u003d)|([A-Za-z0-9+\\\\/]{4}))\\s*$",
          "type": "string"
        },
        "_valueBase64Binary": {
          "description": "Extensions for valueBase64Binary",
          "$ref": "#/definitions/Element"
        },
        "valueAttachment": {
          "description": "The actual characteristic value corresponding to the type.",
          "$ref": "#/definitions/Attachment"
        },
        "valueBoolean": {
          "description": "The actual characteristic value corresponding to the type.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "NutritionProduct_Instance": {
      "description": "A food or supplement that is consumed by patients.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "quantity": {
          "description": "The amount of items or instances that the resource considers, for instance when referring to 2 identical units together.",
          "$ref": "#/definitions/Quantity"
        },
        "identifier": {
          "description": "The identifier for the physical instance, typically a serial number or manufacturer number.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "name": {
          "description": "The name for the specific product.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "lotNumber": {
          "description": "The identification of the batch or lot of the product.",
          "$ref": "#/definitions/string"
        },
        "_lotNumber": {
          "description": "Extensions for lotNumber",
          "$ref": "#/definitions/Element"
        },
        "expiry": {
          "description": "The time after which the product is no longer expected to be in proper condition, or its use is not advised or not allowed.",
          "$ref": "#/definitions/dateTime"
        },
        "_expiry": {
          "description": "Extensions for expiry",
          "$ref": "#/definitions/Element"
        },
        "useBy": {
          "description": "The time after which the product is no longer expected to be in proper condition, or its use is not advised or not allowed.",
          "$ref": "#/definitions/dateTime"
        },
        "_useBy": {
          "description": "Extensions for useBy",
          "$ref": "#/definitions/Element"
        },
        "biologicalSourceEvent": {
          "description": "An identifier that supports traceability to the event during which material in this product from one or more biological entities was obtained or pooled.",
          "$ref": "#/definitions/Identifier"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Observation": {
      "description": "Measurements and simple assertions made about a patient, device or other subject.",
      "properties": {
        "resourceType": {
          "description": "This is a Observation resource",
          "const": "Observation"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "A unique identifier assigned to this observation.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "instantiatesCanonical": {
          "description": "The reference to a FHIR ObservationDefinition resource that provides the definition that is adhered to in whole or in part by this Observation instance.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_instantiatesCanonical": {
          "description": "Extensions for instantiatesCanonical",
          "$ref": "#/definitions/Element"
        },
        "instantiatesReference": {
          "description": "The reference to a FHIR ObservationDefinition resource that provides the definition that is adhered to in whole or in part by this Observation instance.",
          "$ref": "#/definitions/Reference"
        },
        "basedOn": {
          "description": "A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "triggeredBy": {
          "description": "Identifies the observation(s) that triggered the performance of this observation.",
          "items": {
            "$ref": "#/definitions/Observation_TriggeredBy"
          },
          "type": "array"
        },
        "partOf": {
          "description": "A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of the result value.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "category": {
          "description": "A code that classifies the general type of observation being made.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "code": {
          "description": "Describes what was observed. Sometimes this is called the observation \"name\".",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subject": {
          "description": "The patient, or group of patients, location, device, organization, procedure or practitioner this observation is about and into whose or what record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation.",
          "$ref": "#/definitions/Reference"
        },
        "focus": {
          "description": "The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother\u0027s record.  The focus of an observation could also be an existing condition,  an intervention, the subject\u0027s diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child\u0027s tracheostomy tube. In this example, the child is the patient of record and the mother is the focus.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "encounter": {
          "description": "The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made.",
          "$ref": "#/definitions/Reference"
        },
        "effectiveDateTime": {
          "description": "The time or time-period the observed value is asserted as being true. For biological subjects - e.g. human patients - this is usually called the \"physiologically relevant time\". This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_effectiveDateTime": {
          "description": "Extensions for effectiveDateTime",
          "$ref": "#/definitions/Element"
        },
        "effectivePeriod": {
          "description": "The time or time-period the observed value is asserted as being true. For biological subjects - e.g. human patients - this is usually called the \"physiologically relevant time\". This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself.",
          "$ref": "#/definitions/Period"
        },
        "effectiveTiming": {
          "description": "The time or time-period the observed value is asserted as being true. For biological subjects - e.g. human patients - this is usually called the \"physiologically relevant time\". This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself.",
          "$ref": "#/definitions/Timing"
        },
        "effectiveInstant": {
          "description": "The time or time-period the observed value is asserted as being true. For biological subjects - e.g. human patients - this is usually called the \"physiologically relevant time\". This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string"
        },
        "_effectiveInstant": {
          "description": "Extensions for effectiveInstant",
          "$ref": "#/definitions/Element"
        },
        "issued": {
          "description": "The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified.",
          "$ref": "#/definitions/instant"
        },
        "_issued": {
          "description": "Extensions for issued",
          "$ref": "#/definitions/Element"
        },
        "performer": {
          "description": "Who was responsible for asserting the observed value as \"true\".",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "valueQuantity": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "$ref": "#/definitions/Quantity"
        },
        "valueCodeableConcept": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueString": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": {
          "description": "Extensions for valueInteger",
          "$ref": "#/definitions/Element"
        },
        "valueRange": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "$ref": "#/definitions/Range"
        },
        "valueRatio": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "$ref": "#/definitions/Ratio"
        },
        "valueSampledData": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "$ref": "#/definitions/SampledData"
        },
        "valueTime": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?$",
          "type": "string"
        },
        "_valueTime": {
          "description": "Extensions for valueTime",
          "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_valueDateTime": {
          "description": "Extensions for valueDateTime",
          "$ref": "#/definitions/Element"
        },
        "valuePeriod": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "$ref": "#/definitions/Period"
        },
        "valueAttachment": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "$ref": "#/definitions/Attachment"
        },
        "dataAbsentReason": {
          "description": "Provides a reason why the expected value in the element Observation.value[x] is missing.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "interpretation": {
          "description": "A categorical assessment of an observation value.  For example, high, low, normal.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "note": {
          "description": "Comments about the observation or the results.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "bodySite": {
          "description": "Indicates the site on the subject\u0027s body where the observation was made (i.e. the target site).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "bodyStructure": {
          "description": "Indicates the body structure on the subject\u0027s body where the observation was made (i.e. the target site).",
          "$ref": "#/definitions/Reference"
        },
        "method": {
          "description": "Indicates the mechanism used to perform the observation.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "specimen": {
          "description": "The specimen that was used when this observation was made.",
          "$ref": "#/definitions/Reference"
        },
        "device": {
          "description": "The device used to generate the observation data.",
          "$ref": "#/definitions/Reference"
        },
        "referenceRange": {
          "description": "Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an \"OR\".   In other words, to represent two distinct target populations, two `referenceRange` elements would be used.",
          "items": {
            "$ref": "#/definitions/Observation_ReferenceRange"
          },
          "type": "array"
        },
        "hasMember": {
          "description": "This observation is a group observation (e.g. a battery, a panel of tests, a set of vital sign measurements) that includes the target as a member of the group.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "derivedFrom": {
          "description": "The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "component": {
          "description": "Some observations have multiple component observations.  These component observations are expressed as separate code value pairs that share the same attributes.  Examples include systolic and diastolic component observations for blood pressure measurement and multiple component observations for genetics observations.",
          "items": {
            "$ref": "#/definitions/Observation_Component"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code",
        "resourceType"
      ]
    },
    "Observation_TriggeredBy": {
      "description": "Measurements and simple assertions made about a patient, device or other subject.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "observation": {
          "description": "Reference to the triggering observation.",
          "$ref": "#/definitions/Reference"
        },
        "type": {
          "description": "The type of trigger.\nReflex | Repeat | Re-run.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "reason": {
          "description": "Provides the reason why this observation was performed as a result of the observation(s) referenced.",
          "$ref": "#/definitions/string"
        },
        "_reason": {
          "description": "Extensions for reason",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "observation"
      ]
    },
    "Observation_ReferenceRange": {
      "description": "Measurements and simple assertions made about a patient, device or other subject.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "low": {
          "description": "The value of the low bound of the reference range.  The low bound of the reference range endpoint is inclusive of the value (e.g.  reference range is \u003e\u003d5 - \u003c\u003d9). If the low bound is omitted,  it is assumed to be meaningless (e.g. reference range is \u003c\u003d2.3).",
          "$ref": "#/definitions/Quantity"
        },
        "high": {
          "description": "The value of the high bound of the reference range.  The high bound of the reference range endpoint is inclusive of the value (e.g.  reference range is \u003e\u003d5 - \u003c\u003d9). If the high bound is omitted,  it is assumed to be meaningless (e.g. reference range is \u003e\u003d 2.3).",
          "$ref": "#/definitions/Quantity"
        },
        "normalValue": {
          "description": "The value of the normal value of the reference range.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "type": {
          "description": "Codes to indicate the what part of the targeted reference population it applies to. For example, the normal or therapeutic range.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "appliesTo": {
          "description": "Codes to indicate the target population this reference range applies to.  For example, a reference range may be based on the normal population or a particular sex or race.  Multiple `appliesTo`  are interpreted as an \"AND\" of the target populations.  For example, to represent a target population of African American females, both a code of female and a code for African American would be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "age": {
          "description": "The age at which this reference range is applicable. This is a neonatal age (e.g. number of weeks at term) if the meaning says so.",
          "$ref": "#/definitions/Range"
        },
        "text": {
          "description": "Text based reference range in an observation which may be used when a quantitative range is not appropriate for an observation.  An example would be a reference value of \"Negative\" or a list or table of \"normals\".",
          "$ref": "#/definitions/string"
        },
        "_text": {
          "description": "Extensions for text",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Observation_Component": {
      "description": "Measurements and simple assertions made about a patient, device or other subject.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "Describes what was observed. Sometimes this is called the observation \"code\".",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "$ref": "#/definitions/Quantity"
        },
        "valueCodeableConcept": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueString": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": {
          "description": "Extensions for valueInteger",
          "$ref": "#/definitions/Element"
        },
        "valueRange": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "$ref": "#/definitions/Range"
        },
        "valueRatio": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "$ref": "#/definitions/Ratio"
        },
        "valueSampledData": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "$ref": "#/definitions/SampledData"
        },
        "valueTime": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?$",
          "type": "string"
        },
        "_valueTime": {
          "description": "Extensions for valueTime",
          "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_valueDateTime": {
          "description": "Extensions for valueDateTime",
          "$ref": "#/definitions/Element"
        },
        "valuePeriod": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "$ref": "#/definitions/Period"
        },
        "valueAttachment": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "$ref": "#/definitions/Attachment"
        },
        "dataAbsentReason": {
          "description": "Provides a reason why the expected value in the element Observation.component.value[x] is missing.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "interpretation": {
          "description": "A categorical assessment of an observation value.  For example, high, low, normal.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "referenceRange": {
          "description": "Guidance on how to interpret the value by comparison to a normal or recommended range.",
          "items": {
            "$ref": "#/definitions/Observation_ReferenceRange"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "ObservationDefinition": {
      "description": "Set of definitional characteristics for a kind of observation or measurement produced or consumed by an orderable health care service.",
      "properties": {
        "resourceType": {
          "description": "This is a ObservationDefinition resource",
          "const": "ObservationDefinition"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URL that is used to identify this ObservationDefinition when it is referenced in a specification, model, design or an instance. This SHALL be a URL, SHOULD be globally unique, and SHOULD be an address at which this ObservationDefinition is (or will be) published. The URL SHOULD include the major version of the ObservationDefinition. For more information see Technical and Business Versions.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "Business identifiers assigned to this ObservationDefinition. by the performer and/or other systems. These identifiers remain constant as the resource is updated and propagates from server to server.",
          "$ref": "#/definitions/Identifier"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the ObservationDefinition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the ObservationDefinition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions are orderable.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the ObservationDefinition. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the ObservationDefinition.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The current state of the ObservationDefinition.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A flag to indicate that this ObservationDefinition is authored for testing purposes (or education/evaluation/marketing), and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date (and optionally time) when the ObservationDefinition was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the ObservationDefinition changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "Helps establish the \"authority/credibility\" of the ObservationDefinition. May also allow for contact.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the ObservationDefinition from the consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate ObservationDefinition instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A jurisdiction in which the ObservationDefinition is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explains why this ObservationDefinition is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "Copyright statement relating to the ObservationDefinition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the ObservationDefinition.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "approvalDate": {
          "description": "The date on which the asset content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
          "$ref": "#/definitions/date"
        },
        "_approvalDate": {
          "description": "Extensions for approvalDate",
          "$ref": "#/definitions/Element"
        },
        "lastReviewDate": {
          "description": "The date on which the asset content was last reviewed. Review happens periodically after that, but doesn\u0027t change the original approval date.",
          "$ref": "#/definitions/date"
        },
        "_lastReviewDate": {
          "description": "Extensions for lastReviewDate",
          "$ref": "#/definitions/Element"
        },
        "effectivePeriod": {
          "description": "The period during which the ObservationDefinition content was or is planned to be effective.",
          "$ref": "#/definitions/Period"
        },
        "topic": {
          "description": "Descriptive topics related to the content of the {{title}}. Topics provide a high-level categorization as well as keywords for the {{title}} that can be useful for filtering and searching.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "author": {
          "description": "An individiual or organization primarily involved in the creation and maintenance of the {{title}}.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "editor": {
          "description": "An individual or organization primarily responsible for internal coherence of the {{title}}.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "reviewer": {
          "description": "An individual or organization primarily responsible for review of some aspect of the {{title}}.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "endorser": {
          "description": "An individual or organization responsible for officially endorsing the {{title}} for use in some setting.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "relatedArtifact": {
          "description": "Related artifacts such as additional documentation, justification, dependencies, bibliographic references, and predecessor and successor artifacts.",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          },
          "type": "array"
        },
        "derivedFromCanonical": {
          "description": "The canonical URL pointing to another FHIR-defined ObservationDefinition that is adhered to in whole or in part by this definition.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "derivedFromUri": {
          "description": "The URL pointing to an externally-defined observation definition, guideline or other definition that is adhered to in whole or in part by this definition.",
          "items": {
            "$ref": "#/definitions/uri"
          },
          "type": "array"
        },
        "_derivedFromUri": {
          "description": "Extensions for derivedFromUri",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "subject": {
          "description": "A code that describes the intended kind of subject of Observation instances conforming to this ObservationDefinition.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "performerType": {
          "description": "The type of individual/organization/device that is expected to act upon instances of this definition.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "category": {
          "description": "A code that classifies the general type of observation.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "code": {
          "description": "Describes what will be observed. Sometimes this is called the observation \"name\".",
          "$ref": "#/definitions/CodeableConcept"
        },
        "permittedDataType": {
          "description": "The data types allowed for the value element of the instance observations conforming to this ObservationDefinition.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_permittedDataType": {
          "description": "Extensions for permittedDataType",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "multipleResultsAllowed": {
          "description": "Multiple results allowed for observations conforming to this ObservationDefinition.",
          "$ref": "#/definitions/boolean"
        },
        "_multipleResultsAllowed": {
          "description": "Extensions for multipleResultsAllowed",
          "$ref": "#/definitions/Element"
        },
        "bodySite": {
          "description": "The site on the subject\u0027s body where the  observation is to be made.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "method": {
          "description": "The method or technique used to perform the observation.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "specimen": {
          "description": "The kind of specimen that this type of observation is produced on.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "device": {
          "description": "The measurement model of device or actual device used to produce observations of this type.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "preferredReportName": {
          "description": "The preferred name to be used when reporting the results of observations conforming to this ObservationDefinition.",
          "$ref": "#/definitions/string"
        },
        "_preferredReportName": {
          "description": "Extensions for preferredReportName",
          "$ref": "#/definitions/Element"
        },
        "quantitativeDetails": {
          "description": "Characteristics for quantitative results of observations conforming to this ObservationDefinition.",
          "$ref": "#/definitions/ObservationDefinition_QuantitativeDetails"
        },
        "qualifiedValue": {
          "description": "A set of qualified values associated with a context and a set of conditions -  provides a range for quantitative and ordinal observations and a collection of value sets for qualitative observations.",
          "items": {
            "$ref": "#/definitions/ObservationDefinition_QualifiedValue"
          },
          "type": "array"
        },
        "hasMember": {
          "description": "This ObservationDefinition defines a group  observation (e.g. a battery, a panel of tests, a set of vital sign measurements) that includes the target as a member of the group.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "component": {
          "description": "Some observations have multiple component observations, expressed as separate code value pairs.",
          "items": {
            "$ref": "#/definitions/ObservationDefinition_Component"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code",
        "resourceType"
      ]
    },
    "ObservationDefinition_QuantitativeDetails": {
      "description": "Set of definitional characteristics for a kind of observation or measurement produced or consumed by an orderable health care service.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "unit": {
          "description": "Primary unit used to report quantitative results of observations conforming to this ObservationDefinition.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "customaryUnit": {
          "description": "Secondary unit used to report quantitative results of observations conforming to this ObservationDefinition.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "conversionFactor": {
          "description": "Factor for converting value expressed with primary unit to value expressed with secondary unit.",
          "$ref": "#/definitions/decimal"
        },
        "_conversionFactor": {
          "description": "Extensions for conversionFactor",
          "$ref": "#/definitions/Element"
        },
        "decimalPrecision": {
          "description": "Number of digits after decimal separator when the results of such observations are of type Quantity.",
          "$ref": "#/definitions/integer"
        },
        "_decimalPrecision": {
          "description": "Extensions for decimalPrecision",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ObservationDefinition_QualifiedValue": {
      "description": "Set of definitional characteristics for a kind of observation or measurement produced or consumed by an orderable health care service.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "context": {
          "description": "A concept defining the context for this set of qualified values.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "appliesTo": {
          "description": "The target population this  set of qualified values applies to.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "gender": {
          "description": "The gender this  set of qualified values applies to.",
          "$ref": "#/definitions/code"
        },
        "_gender": {
          "description": "Extensions for gender",
          "$ref": "#/definitions/Element"
        },
        "age": {
          "description": "The age range this  set of qualified values applies to.",
          "$ref": "#/definitions/Range"
        },
        "gestationalAge": {
          "description": "The gestational age this  set of qualified values applies to.",
          "$ref": "#/definitions/Range"
        },
        "condition": {
          "description": "Text based condition for which the the set of qualified values is valid.",
          "$ref": "#/definitions/string"
        },
        "_condition": {
          "description": "Extensions for condition",
          "$ref": "#/definitions/Element"
        },
        "rangeCategory": {
          "description": "The category of range of values for continuous or ordinal observations that match the criteria of this set of qualified values.",
          "$ref": "#/definitions/code"
        },
        "_rangeCategory": {
          "description": "Extensions for rangeCategory",
          "$ref": "#/definitions/Element"
        },
        "range": {
          "description": "The range of values defined for continuous or ordinal observations that match the criteria of this set of qualified values.",
          "$ref": "#/definitions/Range"
        },
        "validCodedValueSet": {
          "description": "The set of valid coded results for qualitative observations  that match the criteria of this set of qualified values.",
          "$ref": "#/definitions/canonical"
        },
        "normalCodedValueSet": {
          "description": "The set of normal coded results for qualitative observations  that match the criteria of this set of qualified values.",
          "$ref": "#/definitions/canonical"
        },
        "abnormalCodedValueSet": {
          "description": "The set of abnormal coded results for qualitative observations  that match the criteria of this set of qualified values.",
          "$ref": "#/definitions/canonical"
        },
        "criticalCodedValueSet": {
          "description": "The set of critical coded results for qualitative observations  that match the criteria of this set of qualified values.",
          "$ref": "#/definitions/canonical"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ObservationDefinition_Component": {
      "description": "Set of definitional characteristics for a kind of observation or measurement produced or consumed by an orderable health care service.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "Describes what will be observed.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "permittedDataType": {
          "description": "The data types allowed for the value element of the instance of this component observations.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_permittedDataType": {
          "description": "Extensions for permittedDataType",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "quantitativeDetails": {
          "description": "Characteristics for quantitative results of this observation.",
          "$ref": "#/definitions/ObservationDefinition_QuantitativeDetails"
        },
        "qualifiedValue": {
          "description": "A set of qualified values associated with a context and a set of conditions -  provides a range for quantitative and ordinal observations and a collection of value sets for qualitative observations.",
          "items": {
            "$ref": "#/definitions/ObservationDefinition_QualifiedValue"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "OperationDefinition": {
      "description": "A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).",
      "properties": {
        "resourceType": {
          "description": "This is a OperationDefinition resource",
          "const": "OperationDefinition"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this operation definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this operation definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the operation definition is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this {{title}} when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the operation definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the operation definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the operation definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the operation definition.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this operation definition. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this operation definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the operation definition was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the operation definition changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the operation definition.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the operation definition from a consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate operation definition instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the operation definition is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this operation definition is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the OperationDefinition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the OperationDefinition.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "kind": {
          "description": "Whether this is an operation or a named query.",
          "$ref": "#/definitions/code"
        },
        "_kind": {
          "description": "Extensions for kind",
          "$ref": "#/definitions/Element"
        },
        "affectsState": {
          "description": "Whether the operation affects state. Side effects such as producing audit trail entries do not count as \u0027affecting  state\u0027.",
          "$ref": "#/definitions/boolean"
        },
        "_affectsState": {
          "description": "Extensions for affectsState",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "The label that is recommended to be used in the URL for this operation. In some cases, servers may need to use a different CapabilityStatement operation.name to differentiate between multiple SearchParameters that happen to have the same code.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "comment": {
          "description": "Additional information about how to use this operation or named query.",
          "$ref": "#/definitions/markdown"
        },
        "_comment": {
          "description": "Extensions for comment",
          "$ref": "#/definitions/Element"
        },
        "base": {
          "description": "Indicates that this operation definition is a constraining profile on the base.",
          "$ref": "#/definitions/canonical"
        },
        "resource": {
          "description": "The types on which this operation can be executed.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_resource": {
          "description": "Extensions for resource",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "system": {
          "description": "Indicates whether this operation or named query can be invoked at the system level (e.g. without needing to choose a resource type for the context).",
          "$ref": "#/definitions/boolean"
        },
        "_system": {
          "description": "Extensions for system",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "Indicates whether this operation or named query can be invoked at the resource type level for any given resource type level (e.g. without needing to choose a specific resource id for the context).",
          "$ref": "#/definitions/boolean"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "instance": {
          "description": "Indicates whether this operation can be invoked on a particular instance of one of the given types.",
          "$ref": "#/definitions/boolean"
        },
        "_instance": {
          "description": "Extensions for instance",
          "$ref": "#/definitions/Element"
        },
        "inputProfile": {
          "description": "Additional validation information for the in parameters - a single profile that covers all the parameters. The profile is a constraint on the parameters resource as a whole.",
          "$ref": "#/definitions/canonical"
        },
        "outputProfile": {
          "description": "Additional validation information for the out parameters - a single profile that covers all the parameters. The profile is a constraint on the parameters resource.",
          "$ref": "#/definitions/canonical"
        },
        "parameter": {
          "description": "The parameters for the operation/query.",
          "items": {
            "$ref": "#/definitions/OperationDefinition_Parameter"
          },
          "type": "array"
        },
        "overload": {
          "description": "Defines an appropriate combination of parameters to use when invoking this operation, to help code generators when generating overloaded parameter sets for this operation.",
          "items": {
            "$ref": "#/definitions/OperationDefinition_Overload"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "OperationDefinition_Parameter": {
      "description": "A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "The name of used to identify the parameter.",
          "$ref": "#/definitions/code"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "use": {
          "description": "Whether this is an input or an output parameter.",
          "$ref": "#/definitions/code"
        },
        "_use": {
          "description": "Extensions for use",
          "$ref": "#/definitions/Element"
        },
        "scope": {
          "description": "If present, indicates that the parameter applies when the operation is being invoked at the specified level.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_scope": {
          "description": "Extensions for scope",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "min": {
          "description": "The minimum number of times this parameter SHALL appear in the request or response.",
          "$ref": "#/definitions/integer"
        },
        "_min": {
          "description": "Extensions for min",
          "$ref": "#/definitions/Element"
        },
        "max": {
          "description": "The maximum number of times this element is permitted to appear in the request or response.",
          "$ref": "#/definitions/string"
        },
        "_max": {
          "description": "Extensions for max",
          "$ref": "#/definitions/Element"
        },
        "documentation": {
          "description": "Describes the meaning or use of this parameter.",
          "$ref": "#/definitions/markdown"
        },
        "_documentation": {
          "description": "Extensions for documentation",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "The type for this parameter.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "allowedType": {
          "description": "Support for polymorphic types. If the parameter type is abstract, this element lists allowed sub-types for the parameter.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_allowedType": {
          "description": "Extensions for allowedType",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "targetProfile": {
          "description": "Used when the type is \"Reference\" or \"canonical\", and identifies a profile structure or implementation Guide that applies to the target of the reference this parameter refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the target resource SHALL conform to at least one profile defined in the implementation guide.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "searchType": {
          "description": "How the parameter is understood if/when it used as search parameter. This is only used if the parameter is a string.",
          "$ref": "#/definitions/code"
        },
        "_searchType": {
          "description": "Extensions for searchType",
          "$ref": "#/definitions/Element"
        },
        "binding": {
          "description": "Binds to a value set if this parameter is coded (code, Coding, CodeableConcept).",
          "$ref": "#/definitions/OperationDefinition_Binding"
        },
        "referencedFrom": {
          "description": "Identifies other resource parameters within the operation invocation that are expected to resolve to this resource.",
          "items": {
            "$ref": "#/definitions/OperationDefinition_ReferencedFrom"
          },
          "type": "array"
        },
        "part": {
          "description": "The parts of a nested Parameter.",
          "items": {
            "$ref": "#/definitions/OperationDefinition_Parameter"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "OperationDefinition_Binding": {
      "description": "A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "strength": {
          "description": "Indicates the degree of conformance expectations associated with this binding - that is, the degree to which the provided value set must be adhered to in the instances.",
          "$ref": "#/definitions/code"
        },
        "_strength": {
          "description": "Extensions for strength",
          "$ref": "#/definitions/Element"
        },
        "valueSet": {
          "description": "Points to the value set or external definition (e.g. implicit value set) that identifies the set of codes to be used.",
          "$ref": "#/definitions/canonical"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "valueSet"
      ]
    },
    "OperationDefinition_ReferencedFrom": {
      "description": "A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "source": {
          "description": "The name of the parameter or dot-separated path of parameter names pointing to the resource parameter that is expected to contain a reference to this resource.",
          "$ref": "#/definitions/string"
        },
        "_source": {
          "description": "Extensions for source",
          "$ref": "#/definitions/Element"
        },
        "sourceId": {
          "description": "The id of the element in the referencing resource that is expected to resolve to this resource.",
          "$ref": "#/definitions/string"
        },
        "_sourceId": {
          "description": "Extensions for sourceId",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "OperationDefinition_Overload": {
      "description": "A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "parameterName": {
          "description": "Name of parameter to include in overload.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_parameterName": {
          "description": "Extensions for parameterName",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "comment": {
          "description": "Comments to go on overload.",
          "$ref": "#/definitions/string"
        },
        "_comment": {
          "description": "Extensions for comment",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "OperationOutcome": {
      "description": "A collection of error, warning, or information messages that result from a system action.",
      "properties": {
        "resourceType": {
          "description": "This is a OperationOutcome resource",
          "const": "OperationOutcome"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "issue": {
          "description": "An error, warning, or information message that results from a system action.",
          "items": {
            "$ref": "#/definitions/OperationOutcome_Issue"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "issue",
        "resourceType"
      ]
    },
    "OperationOutcome_Issue": {
      "description": "A collection of error, warning, or information messages that result from a system action.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "severity": {
          "description": "Indicates whether the issue indicates a variation from successful processing.",
          "$ref": "#/definitions/code"
        },
        "_severity": {
          "description": "Extensions for severity",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "Describes the type of the issue. The system that creates an OperationOutcome SHALL choose the most applicable code from the IssueType value set, and may additional provide its own code for the error in the details element.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "details": {
          "description": "Additional details about the error. This may be a text description of the error or a system code that identifies the error.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "diagnostics": {
          "description": "Additional diagnostic information about the issue.",
          "$ref": "#/definitions/string"
        },
        "_diagnostics": {
          "description": "Extensions for diagnostics",
          "$ref": "#/definitions/Element"
        },
        "location": {
          "description": "This element is deprecated because it is XML specific. It is replaced by issue.expression, which is format independent, and simpler to parse. \n\nFor resource issues, this will be a simple XPath limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.  For HTTP errors, will be \"http.\" + the parameter name.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_location": {
          "description": "Extensions for location",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "expression": {
          "description": "A [simple subset of FHIRPath](fhirpath.html#simple) limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_expression": {
          "description": "Extensions for expression",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Organization": {
      "description": "A formally or informally recognized grouping of people or organizations formed for the purpose of achieving some form of collective action.  Includes companies, institutions, corporations, departments, community groups, healthcare practice groups, payer/insurer, etc.",
      "properties": {
        "resourceType": {
          "description": "This is a Organization resource",
          "const": "Organization"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifier for the organization that is used to identify the organization across multiple disparate systems.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "active": {
          "description": "Whether the organization\u0027s record is still in active use.",
          "$ref": "#/definitions/boolean"
        },
        "_active": {
          "description": "Extensions for active",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "The kind(s) of organization that this is.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "name": {
          "description": "A name associated with the organization.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "alias": {
          "description": "A list of alternate names that the organization is known as, or was known as in the past.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_alias": {
          "description": "Extensions for alias",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "description": {
          "description": "Description of the organization, which helps provide additional general context on the organization to ensure that the correct organization is selected.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "The contact details of communication devices available relevant to the specific Organization. This can include addresses, phone numbers, fax numbers, mobile numbers, email addresses and web sites.",
          "items": {
            "$ref": "#/definitions/ExtendedContactDetail"
          },
          "type": "array"
        },
        "partOf": {
          "description": "The organization of which this organization forms a part.",
          "$ref": "#/definitions/Reference"
        },
        "endpoint": {
          "description": "Technical endpoints providing access to services operated for the organization.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "qualification": {
          "description": "The official certifications, accreditations, training, designations and licenses that authorize and/or otherwise endorse the provision of care by the organization.\r\rFor example, an approval to provide a type of services issued by a certifying body (such as the US Joint Commission) to an organization.",
          "items": {
            "$ref": "#/definitions/Organization_Qualification"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Organization_Qualification": {
      "description": "A formally or informally recognized grouping of people or organizations formed for the purpose of achieving some form of collective action.  Includes companies, institutions, corporations, departments, community groups, healthcare practice groups, payer/insurer, etc.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "An identifier allocated to this qualification for this organization.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "code": {
          "description": "Coded representation of the qualification.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "period": {
          "description": "Period during which the qualification is valid.",
          "$ref": "#/definitions/Period"
        },
        "issuer": {
          "description": "Organization that regulates and issues the qualification.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "OrganizationAffiliation": {
      "description": "Defines an affiliation/assotiation/relationship between 2 distinct organizations, that is not a part-of relationship/sub-division relationship.",
      "properties": {
        "resourceType": {
          "description": "This is a OrganizationAffiliation resource",
          "const": "OrganizationAffiliation"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Business identifiers that are specific to this role.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "active": {
          "description": "Whether this organization affiliation record is in active use.",
          "$ref": "#/definitions/boolean"
        },
        "_active": {
          "description": "Extensions for active",
          "$ref": "#/definitions/Element"
        },
        "period": {
          "description": "The period during which the participatingOrganization is affiliated with the primary organization.",
          "$ref": "#/definitions/Period"
        },
        "organization": {
          "description": "Organization where the role is available (primary organization/has members).",
          "$ref": "#/definitions/Reference"
        },
        "participatingOrganization": {
          "description": "The Participating Organization provides/performs the role(s) defined by the code to the Primary Organization (e.g. providing services or is a member of).",
          "$ref": "#/definitions/Reference"
        },
        "network": {
          "description": "The network in which the participatingOrganization provides the role\u0027s services (if defined) at the indicated locations (if defined).",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "code": {
          "description": "Definition of the role the participatingOrganization plays in the association.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "specialty": {
          "description": "Specific specialty of the participatingOrganization in the context of the role.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "location": {
          "description": "The location(s) at which the role occurs.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "healthcareService": {
          "description": "Healthcare services provided through the role.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "contact": {
          "description": "The contact details of communication devices available at the participatingOrganization relevant to this Affiliation.",
          "items": {
            "$ref": "#/definitions/ExtendedContactDetail"
          },
          "type": "array"
        },
        "endpoint": {
          "description": "Technical endpoints providing access to services operated for this role.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "PackagedProductDefinition": {
      "description": "A medically related item or items, in a container or package.",
      "properties": {
        "resourceType": {
          "description": "This is a PackagedProductDefinition resource",
          "const": "PackagedProductDefinition"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "A unique identifier for this package as whole - not the the content of the package. Unique instance identifiers assigned to a package by manufacturers, regulators, drug catalogue custodians or other organizations.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "name": {
          "description": "A name for this package. Typically what it would be listed as in a drug formulary or catalogue, inventory etc.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "A high level category e.g. medicinal product, raw material, shipping/transport container, etc.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "packageFor": {
          "description": "The product this package model relates to, not the contents of the package (for which see package.containedItem).",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "status": {
          "description": "The status within the lifecycle of this item. A high level status, this is not intended to duplicate details carried elsewhere such as legal status, or authorization or marketing status.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "statusDate": {
          "description": "The date at which the given status became applicable.",
          "$ref": "#/definitions/dateTime"
        },
        "_statusDate": {
          "description": "Extensions for statusDate",
          "$ref": "#/definitions/Element"
        },
        "containedItemQuantity": {
          "description": "A total of the complete count of contained items of a particular type/form, independent of sub-packaging or organization. This can be considered as the pack size. This attribute differs from containedItem.amount in that it can give a single aggregated count of all tablet types in a pack, even when these are different manufactured items. For example a pill pack of 21 tablets plus 7 sugar tablets, can be denoted here as \u002728 tablets\u0027. This attribute is repeatable so that the different item types in one pack type can be counted (e.g. a count of vials and count of syringes). Each repeat must have different units, so that it is clear what the different sets of counted items are, and it is not intended to allow different counts of similar items (e.g. not \u00272 tubes and 3 tubes\u0027). Repeats are not to be used to represent different pack sizes (e.g. 20 pack vs. 50 pack) - which would be different instances of this resource.",
          "items": {
            "$ref": "#/definitions/Quantity"
          },
          "type": "array"
        },
        "description": {
          "description": "Textual description. Note that this is not the name of the package or product.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "legalStatusOfSupply": {
          "description": "The legal status of supply of the packaged item as classified by the regulator.",
          "items": {
            "$ref": "#/definitions/PackagedProductDefinition_LegalStatusOfSupply"
          },
          "type": "array"
        },
        "marketingStatus": {
          "description": "Allows specifying that an item is on the market for sale, or that it is not available, and the dates and locations associated.",
          "items": {
            "$ref": "#/definitions/MarketingStatus"
          },
          "type": "array"
        },
        "copackagedIndicator": {
          "description": "Identifies if the package contains different items, such as when a drug product is supplied with another item e.g. a diluent or adjuvant.",
          "$ref": "#/definitions/boolean"
        },
        "_copackagedIndicator": {
          "description": "Extensions for copackagedIndicator",
          "$ref": "#/definitions/Element"
        },
        "manufacturer": {
          "description": "Manufacturer of this package type. When there are multiple it means these are all possible manufacturers.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "attachedDocument": {
          "description": "Additional information or supporting documentation about the packaged product.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "packaging": {
          "description": "A packaging item, as a container for medically related items, possibly with other packaging items within, or a packaging component, such as bottle cap (which is not a device or a medication manufactured item).",
          "$ref": "#/definitions/PackagedProductDefinition_Packaging"
        },
        "characteristic": {
          "description": "Allows the key features to be recorded, such as \"hospital pack\", \"nurse prescribable\", \"calendar pack\".",
          "items": {
            "$ref": "#/definitions/PackagedProductDefinition_Property"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "PackagedProductDefinition_LegalStatusOfSupply": {
      "description": "A medically related item or items, in a container or package.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "The actual status of supply. Conveys in what situation this package type may be supplied for use.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "jurisdiction": {
          "description": "The place where the legal status of supply applies. When not specified, this indicates it is unknown in this context.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "PackagedProductDefinition_Packaging": {
      "description": "A medically related item or items, in a container or package.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "A business identifier that is specific to this particular part of the packaging, often assigned by the manufacturer. Including possibly Data Carrier Identifier (a GS1 barcode).",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "type": {
          "description": "The physical type of the container of the items.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "componentPart": {
          "description": "Is this a part of the packaging (e.g. a cap or bottle stopper), rather than the packaging itself (e.g. a bottle or vial). The latter type are designed be a container, but the former are not.",
          "$ref": "#/definitions/boolean"
        },
        "_componentPart": {
          "description": "Extensions for componentPart",
          "$ref": "#/definitions/Element"
        },
        "quantity": {
          "description": "The quantity of packaging items contained at this layer of the package. This does not relate to the number of contained items but relates solely to the number of packaging items. When looking at the outermost layer it is always 1. If there are two boxes within, at the next layer it would be 2.",
          "$ref": "#/definitions/integer"
        },
        "_quantity": {
          "description": "Extensions for quantity",
          "$ref": "#/definitions/Element"
        },
        "material": {
          "description": "Material type of the package item.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "alternateMaterial": {
          "description": "A possible alternate material for this part of the packaging, that is allowed to be used instead of the usual material (e.g. different types of plastic for a blister sleeve).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "shelfLifeStorage": {
          "description": "Shelf Life and storage information.",
          "items": {
            "$ref": "#/definitions/ProductShelfLife"
          },
          "type": "array"
        },
        "manufacturer": {
          "description": "Manufacturer of this packaging item. When there are multiple values each one is a potential manufacturer of this packaging item.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "property": {
          "description": "General characteristics of this item.",
          "items": {
            "$ref": "#/definitions/PackagedProductDefinition_Property"
          },
          "type": "array"
        },
        "containedItem": {
          "description": "The item(s) within the packaging.",
          "items": {
            "$ref": "#/definitions/PackagedProductDefinition_ContainedItem"
          },
          "type": "array"
        },
        "packaging": {
          "description": "Allows containers (and parts of containers) within containers, still as a part of a single packaged product. See also PackagedProductDefinition.packaging.containedItem.item(PackagedProductDefinition).",
          "items": {
            "$ref": "#/definitions/PackagedProductDefinition_Packaging"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "PackagedProductDefinition_Property": {
      "description": "A medically related item or items, in a container or package.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "A code expressing the type of characteristic.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCodeableConcept": {
          "description": "A value for the characteristic.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": {
          "description": "A value for the characteristic.",
          "$ref": "#/definitions/Quantity"
        },
        "valueDate": {
          "description": "A value for the characteristic.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_valueDate": {
          "description": "Extensions for valueDate",
          "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "description": "A value for the characteristic.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueAttachment": {
          "description": "A value for the characteristic.",
          "$ref": "#/definitions/Attachment"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "PackagedProductDefinition_ContainedItem": {
      "description": "A medically related item or items, in a container or package.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "item": {
          "description": "The actual item(s) of medication, as manufactured, or a device (typically, but not necessarily, a co-packaged one), or other medically related item (such as food, biologicals, raw materials, medical fluids, gases etc.), as contained in the package. This also allows another whole packaged product to be included, which is solely for the case where a package of other entire packages is wanted - such as a wholesale or distribution pack (for layers within one package, use PackagedProductDefinition.packaging.packaging).",
          "$ref": "#/definitions/CodeableReference"
        },
        "amount": {
          "description": "The number of this type of item within this packaging.",
          "$ref": "#/definitions/Quantity"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "item"
      ]
    },
    "Parameters": {
      "description": "This resource is used to pass information into and back from an operation (whether invoked directly from REST or within a messaging environment).  It is not persisted or allowed to be referenced by other resources.",
      "properties": {
        "resourceType": {
          "description": "This is a Parameters resource",
          "const": "Parameters"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "parameter": {
          "description": "A parameter passed to or received from the operation.",
          "items": {
            "$ref": "#/definitions/Parameters_Parameter"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Parameters_Parameter": {
      "description": "This resource is used to pass information into and back from an operation (whether invoked directly from REST or within a messaging environment).  It is not persisted or allowed to be referenced by other resources.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "The name of the parameter (reference to the operation definition).",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "valueBase64Binary": {
          "description": "Conveys the content if the parameter is a data type.",
          "pattern": "^\\s*([A-Za-z0-9+\\\\/]{4})*(([A-Za-z0-9+\\\\/]{2}\u003d\u003d)|([A-Za-z0-9+\\\\/]{3}\u003d)|([A-Za-z0-9+\\\\/]{4}))\\s*$",
          "type": "string"
        },
        "_valueBase64Binary": {
          "description": "Extensions for valueBase64Binary",
          "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "description": "Conveys the content if the parameter is a data type.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueCanonical": {
          "description": "Conveys the content if the parameter is a data type.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueCanonical": {
          "description": "Extensions for valueCanonical",
          "$ref": "#/definitions/Element"
        },
        "valueCode": {
          "description": "Conveys the content if the parameter is a data type.",
          "pattern": "^[^\\s]+( [^\\s]+)*$",
          "type": "string"
        },
        "_valueCode": {
          "description": "Extensions for valueCode",
          "$ref": "#/definitions/Element"
        },
        "valueDate": {
          "description": "Conveys the content if the parameter is a data type.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_valueDate": {
          "description": "Extensions for valueDate",
          "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "description": "Conveys the content if the parameter is a data type.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_valueDateTime": {
          "description": "Extensions for valueDateTime",
          "$ref": "#/definitions/Element"
        },
        "valueDecimal": {
          "description": "Conveys the content if the parameter is a data type.",
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_valueDecimal": {
          "description": "Extensions for valueDecimal",
          "$ref": "#/definitions/Element"
        },
        "valueId": {
          "description": "Conveys the content if the parameter is a data type.",
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string"
        },
        "_valueId": {
          "description": "Extensions for valueId",
          "$ref": "#/definitions/Element"
        },
        "valueInstant": {
          "description": "Conveys the content if the parameter is a data type.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string"
        },
        "_valueInstant": {
          "description": "Extensions for valueInstant",
          "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "description": "Conveys the content if the parameter is a data type.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": {
          "description": "Extensions for valueInteger",
          "$ref": "#/definitions/Element"
        },
        "valueInteger64": {
          "description": "Conveys the content if the parameter is a data type.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "string"
        },
        "_valueInteger64": {
          "description": "Extensions for valueInteger64",
          "$ref": "#/definitions/Element"
        },
        "valueMarkdown": {
          "description": "Conveys the content if the parameter is a data type.",
          "pattern": "^\\s*(\\S|\\s)*$",
          "type": "string"
        },
        "_valueMarkdown": {
          "description": "Extensions for valueMarkdown",
          "$ref": "#/definitions/Element"
        },
        "valueOid": {
          "description": "Conveys the content if the parameter is a data type.",
          "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
          "type": "string"
        },
        "_valueOid": {
          "description": "Extensions for valueOid",
          "$ref": "#/definitions/Element"
        },
        "valuePositiveInt": {
          "description": "Conveys the content if the parameter is a data type.",
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_valuePositiveInt": {
          "description": "Extensions for valuePositiveInt",
          "$ref": "#/definitions/Element"
        },
        "valueString": {
          "description": "Conveys the content if the parameter is a data type.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueTime": {
          "description": "Conveys the content if the parameter is a data type.",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?$",
          "type": "string"
        },
        "_valueTime": {
          "description": "Extensions for valueTime",
          "$ref": "#/definitions/Element"
        },
        "valueUnsignedInt": {
          "description": "Conveys the content if the parameter is a data type.",
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_valueUnsignedInt": {
          "description": "Extensions for valueUnsignedInt",
          "$ref": "#/definitions/Element"
        },
        "valueUri": {
          "description": "Conveys the content if the parameter is a data type.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUri": {
          "description": "Extensions for valueUri",
          "$ref": "#/definitions/Element"
        },
        "valueUrl": {
          "description": "Conveys the content if the parameter is a data type.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUrl": {
          "description": "Extensions for valueUrl",
          "$ref": "#/definitions/Element"
        },
        "valueUuid": {
          "description": "Conveys the content if the parameter is a data type.",
          "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
          "type": "string"
        },
        "_valueUuid": {
          "description": "Extensions for valueUuid",
          "$ref": "#/definitions/Element"
        },
        "valueAddress": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/Address"
        },
        "valueAge": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/Age"
        },
        "valueAnnotation": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/Annotation"
        },
        "valueAttachment": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/Attachment"
        },
        "valueCodeableConcept": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCodeableReference": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/CodeableReference"
        },
        "valueCoding": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/Coding"
        },
        "valueContactPoint": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/ContactPoint"
        },
        "valueCount": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/Count"
        },
        "valueDistance": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/Distance"
        },
        "valueDuration": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/Duration"
        },
        "valueHumanName": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/HumanName"
        },
        "valueIdentifier": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/Identifier"
        },
        "valueMoney": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/Money"
        },
        "valuePeriod": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/Period"
        },
        "valueQuantity": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/Range"
        },
        "valueRatio": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/Ratio"
        },
        "valueRatioRange": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/RatioRange"
        },
        "valueReference": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/Reference"
        },
        "valueSampledData": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/SampledData"
        },
        "valueSignature": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/Signature"
        },
        "valueTiming": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/Timing"
        },
        "valueContactDetail": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/ContactDetail"
        },
        "valueDataRequirement": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/DataRequirement"
        },
        "valueExpression": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/Expression"
        },
        "valueParameterDefinition": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/ParameterDefinition"
        },
        "valueRelatedArtifact": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/RelatedArtifact"
        },
        "valueTriggerDefinition": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/TriggerDefinition"
        },
        "valueUsageContext": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/UsageContext"
        },
        "valueAvailability": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/Availability"
        },
        "valueExtendedContactDetail": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/ExtendedContactDetail"
        },
        "valueDosage": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/Dosage"
        },
        "valueMeta": {
          "description": "Conveys the content if the parameter is a data type.",
          "$ref": "#/definitions/Meta"
        },
        "resource": {
          "description": "Conveys the content if the parameter is a whole resource.",
          "$ref": "#/definitions/ResourceList"
        },
        "part": {
          "description": "A named part of a multi-part parameter.",
          "items": {
            "$ref": "#/definitions/Parameters_Parameter"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Patient": {
      "description": "Demographics and other administrative information about an individual or animal receiving care or other health-related services.",
      "properties": {
        "resourceType": {
          "description": "This is a Patient resource",
          "const": "Patient"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "An identifier for this patient.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "active": {
          "description": "Whether this patient record is in active use. \nMany systems use this property to mark as non-current patients, such as those that have not been seen for a period of time based on an organization\u0027s business rules.\n\nIt is often used to filter patient lists to exclude inactive patients\n\nDeceased patients may also be marked as inactive for the same reasons, but may be active for some time after death.",
          "$ref": "#/definitions/boolean"
        },
        "_active": {
          "description": "Extensions for active",
          "$ref": "#/definitions/Element"
        },
        "name": {
          "description": "A name associated with the individual.",
          "items": {
            "$ref": "#/definitions/HumanName"
          },
          "type": "array"
        },
        "telecom": {
          "description": "A contact detail (e.g. a telephone number or an email address) by which the individual may be contacted.",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          },
          "type": "array"
        },
        "gender": {
          "description": "Administrative Gender - the gender that the patient is considered to have for administration and record keeping purposes.",
          "$ref": "#/definitions/code"
        },
        "_gender": {
          "description": "Extensions for gender",
          "$ref": "#/definitions/Element"
        },
        "birthDate": {
          "description": "The date of birth for the individual.",
          "$ref": "#/definitions/date"
        },
        "_birthDate": {
          "description": "Extensions for birthDate",
          "$ref": "#/definitions/Element"
        },
        "deceasedBoolean": {
          "description": "Indicates if the individual is deceased or not.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_deceasedBoolean": {
          "description": "Extensions for deceasedBoolean",
          "$ref": "#/definitions/Element"
        },
        "deceasedDateTime": {
          "description": "Indicates if the individual is deceased or not.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_deceasedDateTime": {
          "description": "Extensions for deceasedDateTime",
          "$ref": "#/definitions/Element"
        },
        "address": {
          "description": "An address for the individual.",
          "items": {
            "$ref": "#/definitions/Address"
          },
          "type": "array"
        },
        "maritalStatus": {
          "description": "This field contains a patient\u0027s most recent marital (civil) status.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "multipleBirthBoolean": {
          "description": "Indicates whether the patient is part of a multiple (boolean) or indicates the actual birth order (integer).",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_multipleBirthBoolean": {
          "description": "Extensions for multipleBirthBoolean",
          "$ref": "#/definitions/Element"
        },
        "multipleBirthInteger": {
          "description": "Indicates whether the patient is part of a multiple (boolean) or indicates the actual birth order (integer).",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_multipleBirthInteger": {
          "description": "Extensions for multipleBirthInteger",
          "$ref": "#/definitions/Element"
        },
        "photo": {
          "description": "Image of the patient.",
          "items": {
            "$ref": "#/definitions/Attachment"
          },
          "type": "array"
        },
        "contact": {
          "description": "A contact party (e.g. guardian, partner, friend) for the patient.",
          "items": {
            "$ref": "#/definitions/Patient_Contact"
          },
          "type": "array"
        },
        "communication": {
          "description": "A language which may be used to communicate with the patient about his or her health.",
          "items": {
            "$ref": "#/definitions/Patient_Communication"
          },
          "type": "array"
        },
        "generalPractitioner": {
          "description": "Patient\u0027s nominated care provider.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "managingOrganization": {
          "description": "Organization that is the custodian of the patient record.",
          "$ref": "#/definitions/Reference"
        },
        "link": {
          "description": "Link to a Patient or RelatedPerson resource that concerns the same actual individual.",
          "items": {
            "$ref": "#/definitions/Patient_Link"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Patient_Contact": {
      "description": "Demographics and other administrative information about an individual or animal receiving care or other health-related services.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "relationship": {
          "description": "The nature of the relationship between the patient and the contact person.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "name": {
          "description": "A name associated with the contact person.",
          "$ref": "#/definitions/HumanName"
        },
        "telecom": {
          "description": "A contact detail for the person, e.g. a telephone number or an email address.",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          },
          "type": "array"
        },
        "address": {
          "description": "Address for the contact person.",
          "$ref": "#/definitions/Address"
        },
        "gender": {
          "description": "Administrative Gender - the gender that the contact person is considered to have for administration and record keeping purposes.",
          "$ref": "#/definitions/code"
        },
        "_gender": {
          "description": "Extensions for gender",
          "$ref": "#/definitions/Element"
        },
        "organization": {
          "description": "Organization on behalf of which the contact is acting or for which the contact is working.",
          "$ref": "#/definitions/Reference"
        },
        "period": {
          "description": "The period during which this contact person or organization is valid to be contacted relating to this patient.",
          "$ref": "#/definitions/Period"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Patient_Communication": {
      "description": "Demographics and other administrative information about an individual or animal receiving care or other health-related services.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "language": {
          "description": "The ISO-639-1 alpha 2 code in lower case for the language, optionally followed by a hyphen and the ISO-3166-1 alpha 2 code for the region in upper case; e.g. \"en\" for English, or \"en-US\" for American English versus \"en-AU\" for Australian English.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "preferred": {
          "description": "Indicates whether or not the patient prefers this language (over other languages he masters up a certain level).",
          "$ref": "#/definitions/boolean"
        },
        "_preferred": {
          "description": "Extensions for preferred",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "language"
      ]
    },
    "Patient_Link": {
      "description": "Demographics and other administrative information about an individual or animal receiving care or other health-related services.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "other": {
          "description": "Link to a Patient or RelatedPerson resource that concerns the same actual individual.",
          "$ref": "#/definitions/Reference"
        },
        "type": {
          "description": "The type of link between this patient resource and another patient resource.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "other"
      ]
    },
    "PaymentNotice": {
      "description": "This resource provides the status of the payment for goods and services rendered, and the request and response resource references.",
      "properties": {
        "resourceType": {
          "description": "This is a PaymentNotice resource",
          "const": "PaymentNotice"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "A unique identifier assigned to this payment notice.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of the resource instance.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "request": {
          "description": "Reference of resource for which payment is being made.",
          "$ref": "#/definitions/Reference"
        },
        "response": {
          "description": "Reference of response to resource for which payment is being made.",
          "$ref": "#/definitions/Reference"
        },
        "created": {
          "description": "The date when this resource was created.",
          "$ref": "#/definitions/dateTime"
        },
        "_created": {
          "description": "Extensions for created",
          "$ref": "#/definitions/Element"
        },
        "provider": {
          "description": "The practitioner who is responsible for the services rendered to the patient.",
          "$ref": "#/definitions/Reference"
        },
        "payment": {
          "description": "A reference to the payment which is the subject of this notice.",
          "$ref": "#/definitions/Reference"
        },
        "paymentDate": {
          "description": "The date when the above payment action occurred.",
          "$ref": "#/definitions/date"
        },
        "_paymentDate": {
          "description": "Extensions for paymentDate",
          "$ref": "#/definitions/Element"
        },
        "payee": {
          "description": "The party who will receive or has received payment that is the subject of this notification.",
          "$ref": "#/definitions/Reference"
        },
        "recipient": {
          "description": "The party who is notified of the payment status.",
          "$ref": "#/definitions/Reference"
        },
        "amount": {
          "description": "The amount sent to the payee.",
          "$ref": "#/definitions/Money"
        },
        "paymentStatus": {
          "description": "A code indicating whether payment has been sent or cleared.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "amount",
        "recipient",
        "payment",
        "resourceType"
      ]
    },
    "PaymentReconciliation": {
      "description": "This resource provides the details including amount of a payment and allocates the payment items being paid.",
      "properties": {
        "resourceType": {
          "description": "This is a PaymentReconciliation resource",
          "const": "PaymentReconciliation"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "A unique identifier assigned to this payment reconciliation.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "type": {
          "description": "Code to indicate the nature of the payment such as payment, adjustment.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "status": {
          "description": "The status of the resource instance.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "kind": {
          "description": "The workflow or activity which gave rise to or during which the payment ocurred such as a kiosk, deposit on account, periodic payment etc.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "period": {
          "description": "The period of time for which payments have been gathered into this bulk payment for settlement.",
          "$ref": "#/definitions/Period"
        },
        "created": {
          "description": "The date when the resource was created.",
          "$ref": "#/definitions/dateTime"
        },
        "_created": {
          "description": "Extensions for created",
          "$ref": "#/definitions/Element"
        },
        "enterer": {
          "description": "Payment enterer if not the actual payment issuer.",
          "$ref": "#/definitions/Reference"
        },
        "issuerType": {
          "description": "The type of the source such as patient or insurance.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "paymentIssuer": {
          "description": "The party who generated the payment.",
          "$ref": "#/definitions/Reference"
        },
        "request": {
          "description": "Original request resource reference.",
          "$ref": "#/definitions/Reference"
        },
        "requestor": {
          "description": "The practitioner who is responsible for the services rendered to the patient.",
          "$ref": "#/definitions/Reference"
        },
        "outcome": {
          "description": "The outcome of a request for a reconciliation.",
          "$ref": "#/definitions/code"
        },
        "_outcome": {
          "description": "Extensions for outcome",
          "$ref": "#/definitions/Element"
        },
        "disposition": {
          "description": "A human readable description of the status of the request for the reconciliation.",
          "$ref": "#/definitions/string"
        },
        "_disposition": {
          "description": "Extensions for disposition",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date of payment as indicated on the financial instrument.",
          "$ref": "#/definitions/date"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "location": {
          "description": "The location of the site or device for electronic transfers or physical location for cash payments.",
          "$ref": "#/definitions/Reference"
        },
        "method": {
          "description": "The means of payment such as check, card cash, or electronic funds transfer.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "cardBrand": {
          "description": "The card brand such as debit, Visa, Amex etc. used if a card is the method of payment.",
          "$ref": "#/definitions/string"
        },
        "_cardBrand": {
          "description": "Extensions for cardBrand",
          "$ref": "#/definitions/Element"
        },
        "accountNumber": {
          "description": "A portion of the account number, often the last 4 digits, used for verification not charging purposes.",
          "$ref": "#/definitions/string"
        },
        "_accountNumber": {
          "description": "Extensions for accountNumber",
          "$ref": "#/definitions/Element"
        },
        "expirationDate": {
          "description": "The year and month (YYYY-MM) when the instrument, typically card, expires.",
          "$ref": "#/definitions/date"
        },
        "_expirationDate": {
          "description": "Extensions for expirationDate",
          "$ref": "#/definitions/Element"
        },
        "processor": {
          "description": "The name of the card processor, etf processor, bank for checks.",
          "$ref": "#/definitions/string"
        },
        "_processor": {
          "description": "Extensions for processor",
          "$ref": "#/definitions/Element"
        },
        "referenceNumber": {
          "description": "The check number, eft reference, car processor reference.",
          "$ref": "#/definitions/string"
        },
        "_referenceNumber": {
          "description": "Extensions for referenceNumber",
          "$ref": "#/definitions/Element"
        },
        "authorization": {
          "description": "An alphanumeric issued by the processor to confirm the successful issuance of payment.",
          "$ref": "#/definitions/string"
        },
        "_authorization": {
          "description": "Extensions for authorization",
          "$ref": "#/definitions/Element"
        },
        "tenderedAmount": {
          "description": "The amount offered by the issuer, typically applies to cash when the issuer provides an amount in bank note denominations equal to or excess of the amount actually being paid.",
          "$ref": "#/definitions/Money"
        },
        "returnedAmount": {
          "description": "The amount returned by the receiver which is excess to the amount payable, often referred to as \u0027change\u0027.",
          "$ref": "#/definitions/Money"
        },
        "amount": {
          "description": "Total payment amount as indicated on the financial instrument.",
          "$ref": "#/definitions/Money"
        },
        "paymentIdentifier": {
          "description": "Issuer\u0027s unique identifier for the payment instrument.",
          "$ref": "#/definitions/Identifier"
        },
        "allocation": {
          "description": "Distribution of the payment amount for a previously acknowledged payable.",
          "items": {
            "$ref": "#/definitions/PaymentReconciliation_Allocation"
          },
          "type": "array"
        },
        "formCode": {
          "description": "A code for the form to be used for printing the content.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "processNote": {
          "description": "A note that describes or explains the processing in a human readable form.",
          "items": {
            "$ref": "#/definitions/PaymentReconciliation_ProcessNote"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "amount",
        "type",
        "resourceType"
      ]
    },
    "PaymentReconciliation_Allocation": {
      "description": "This resource provides the details including amount of a payment and allocates the payment items being paid.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Unique identifier for the current payment item for the referenced payable.",
          "$ref": "#/definitions/Identifier"
        },
        "predecessor": {
          "description": "Unique identifier for the prior payment item for the referenced payable.",
          "$ref": "#/definitions/Identifier"
        },
        "target": {
          "description": "Specific resource to which the payment/adjustment/advance applies.",
          "$ref": "#/definitions/Reference"
        },
        "targetItemString": {
          "description": " Identifies the claim line item, encounter or other sub-element being paid. Note payment may be partial, that is not match the then outstanding balance or amount incurred.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_targetItemString": {
          "description": "Extensions for targetItemString",
          "$ref": "#/definitions/Element"
        },
        "targetItemIdentifier": {
          "description": " Identifies the claim line item, encounter or other sub-element being paid. Note payment may be partial, that is not match the then outstanding balance or amount incurred.",
          "$ref": "#/definitions/Identifier"
        },
        "targetItemPositiveInt": {
          "description": " Identifies the claim line item, encounter or other sub-element being paid. Note payment may be partial, that is not match the then outstanding balance or amount incurred.",
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_targetItemPositiveInt": {
          "description": "Extensions for targetItemPositiveInt",
          "$ref": "#/definitions/Element"
        },
        "encounter": {
          "description": "The Encounter to which this payment applies, may be completed by the receiver, used for search.",
          "$ref": "#/definitions/Reference"
        },
        "account": {
          "description": "The Account to which this payment applies, may be completed by the receiver, used for search.",
          "$ref": "#/definitions/Reference"
        },
        "type": {
          "description": "Code to indicate the nature of the payment.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "submitter": {
          "description": "The party which submitted the claim or financial transaction.",
          "$ref": "#/definitions/Reference"
        },
        "response": {
          "description": "A resource, such as a ClaimResponse, which contains a commitment to payment.",
          "$ref": "#/definitions/Reference"
        },
        "date": {
          "description": "The date from the response resource containing a commitment to pay.",
          "$ref": "#/definitions/date"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "responsible": {
          "description": "A reference to the individual who is responsible for inquiries regarding the response and its payment.",
          "$ref": "#/definitions/Reference"
        },
        "payee": {
          "description": "The party which is receiving the payment.",
          "$ref": "#/definitions/Reference"
        },
        "amount": {
          "description": "The monetary amount allocated from the total payment to the payable.",
          "$ref": "#/definitions/Money"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "PaymentReconciliation_ProcessNote": {
      "description": "This resource provides the details including amount of a payment and allocates the payment items being paid.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The business purpose of the note text.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "The explanation or description associated with the processing.",
          "$ref": "#/definitions/string"
        },
        "_text": {
          "description": "Extensions for text",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Permission": {
      "description": "Permission resource holds access rules for a given data and context.",
      "properties": {
        "resourceType": {
          "description": "This is a Permission resource",
          "const": "Permission"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "status": {
          "description": "Status.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "asserter": {
          "description": "The person or entity that asserts the permission.",
          "$ref": "#/definitions/Reference"
        },
        "date": {
          "description": "The date that permission was asserted.",
          "items": {
            "$ref": "#/definitions/dateTime"
          },
          "type": "array"
        },
        "_date": {
          "description": "Extensions for date",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "validity": {
          "description": "The period in which the permission is active.",
          "$ref": "#/definitions/Period"
        },
        "justification": {
          "description": "The asserted justification for using the data.",
          "$ref": "#/definitions/Permission_Justification"
        },
        "combining": {
          "description": "Defines a procedure for arriving at an access decision given the set of rules.",
          "$ref": "#/definitions/code"
        },
        "_combining": {
          "description": "Extensions for combining",
          "$ref": "#/definitions/Element"
        },
        "rule": {
          "description": "A set of rules.",
          "items": {
            "$ref": "#/definitions/Permission_Rule"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Permission_Justification": {
      "description": "Permission resource holds access rules for a given data and context.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "basis": {
          "description": "This would be a codeableconcept, or a coding, which can be constrained to , for example, the 6 grounds for processing in GDPR.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "evidence": {
          "description": "Justifing rational.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Permission_Rule": {
      "description": "Permission resource holds access rules for a given data and context.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "deny | permit.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "data": {
          "description": "A description or definition of which activities are allowed to be done on the data.",
          "items": {
            "$ref": "#/definitions/Permission_Data"
          },
          "type": "array"
        },
        "activity": {
          "description": "A description or definition of which activities are allowed to be done on the data.",
          "items": {
            "$ref": "#/definitions/Permission_Activity"
          },
          "type": "array"
        },
        "limit": {
          "description": "What limits apply to the use of the data.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Permission_Data": {
      "description": "Permission resource holds access rules for a given data and context.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "resource": {
          "description": "Explicit FHIR Resource references.",
          "items": {
            "$ref": "#/definitions/Permission_Resource"
          },
          "type": "array"
        },
        "security": {
          "description": "The data in scope are those with the given codes present in that data .meta.security element.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        },
        "period": {
          "description": "Clinical or Operational Relevant period of time that bounds the data controlled by this rule.",
          "items": {
            "$ref": "#/definitions/Period"
          },
          "type": "array"
        },
        "expression": {
          "description": "Used when other data selection elements are insufficient.",
          "$ref": "#/definitions/Expression"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Permission_Resource": {
      "description": "Permission resource holds access rules for a given data and context.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "meaning": {
          "description": "How the resource reference is interpreted when testing consent restrictions.",
          "$ref": "#/definitions/code"
        },
        "_meaning": {
          "description": "Extensions for meaning",
          "$ref": "#/definitions/Element"
        },
        "reference": {
          "description": "A reference to a specific resource that defines which resources are covered by this consent.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "reference"
      ]
    },
    "Permission_Activity": {
      "description": "Permission resource holds access rules for a given data and context.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "actor": {
          "description": "The actor(s) authorized for the defined activity.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "action": {
          "description": "Actions controlled by this Rule.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "The purpose for which the permission is given.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Person": {
      "description": "Demographics and administrative information about a person independent of a specific health-related context.",
      "properties": {
        "resourceType": {
          "description": "This is a Person resource",
          "const": "Person"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifier for a person within a particular scope.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "active": {
          "description": "Whether this person\u0027s record is in active use.",
          "$ref": "#/definitions/boolean"
        },
        "_active": {
          "description": "Extensions for active",
          "$ref": "#/definitions/Element"
        },
        "name": {
          "description": "A name associated with the person.",
          "items": {
            "$ref": "#/definitions/HumanName"
          },
          "type": "array"
        },
        "telecom": {
          "description": "A contact detail for the person, e.g. a telephone number or an email address.",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          },
          "type": "array"
        },
        "gender": {
          "description": "Administrative Gender.",
          "$ref": "#/definitions/code"
        },
        "_gender": {
          "description": "Extensions for gender",
          "$ref": "#/definitions/Element"
        },
        "birthDate": {
          "description": "The birth date for the person.",
          "$ref": "#/definitions/date"
        },
        "_birthDate": {
          "description": "Extensions for birthDate",
          "$ref": "#/definitions/Element"
        },
        "deceasedBoolean": {
          "description": "Indicates if the individual is deceased or not.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_deceasedBoolean": {
          "description": "Extensions for deceasedBoolean",
          "$ref": "#/definitions/Element"
        },
        "deceasedDateTime": {
          "description": "Indicates if the individual is deceased or not.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_deceasedDateTime": {
          "description": "Extensions for deceasedDateTime",
          "$ref": "#/definitions/Element"
        },
        "address": {
          "description": "One or more addresses for the person.",
          "items": {
            "$ref": "#/definitions/Address"
          },
          "type": "array"
        },
        "maritalStatus": {
          "description": "This field contains a person\u0027s most recent marital (civil) status.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "photo": {
          "description": "An image that can be displayed as a thumbnail of the person to enhance the identification of the individual.",
          "items": {
            "$ref": "#/definitions/Attachment"
          },
          "type": "array"
        },
        "communication": {
          "description": "A language which may be used to communicate with the person about his or her health.",
          "items": {
            "$ref": "#/definitions/Person_Communication"
          },
          "type": "array"
        },
        "managingOrganization": {
          "description": "The organization that is the custodian of the person record.",
          "$ref": "#/definitions/Reference"
        },
        "link": {
          "description": "Link to a resource that concerns the same actual person.",
          "items": {
            "$ref": "#/definitions/Person_Link"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Person_Communication": {
      "description": "Demographics and administrative information about a person independent of a specific health-related context.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "language": {
          "description": "The ISO-639-1 alpha 2 code in lower case for the language, optionally followed by a hyphen and the ISO-3166-1 alpha 2 code for the region in upper case; e.g. \"en\" for English, or \"en-US\" for American English versus \"en-AU\" for Australian English.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "preferred": {
          "description": "Indicates whether or not the person prefers this language (over other languages he masters up a certain level).",
          "$ref": "#/definitions/boolean"
        },
        "_preferred": {
          "description": "Extensions for preferred",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "language"
      ]
    },
    "Person_Link": {
      "description": "Demographics and administrative information about a person independent of a specific health-related context.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "target": {
          "description": "The resource to which this actual person is associated.",
          "$ref": "#/definitions/Reference"
        },
        "assurance": {
          "description": "Level of assurance that this link is associated with the target resource.",
          "$ref": "#/definitions/code"
        },
        "_assurance": {
          "description": "Extensions for assurance",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "target"
      ]
    },
    "PlanDefinition": {
      "description": "This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications.",
      "properties": {
        "resourceType": {
          "description": "This is a PlanDefinition resource",
          "const": "PlanDefinition"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this plan definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this plan definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the plan definition is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this plan definition when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the plan definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the plan definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active artifacts.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the plan definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the plan definition.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this plan definition. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this plan definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the plan definition was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the plan definition changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the plan definition.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the plan definition from a consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate plan definition instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the plan definition is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this plan definition is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the plan definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the plan definition.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "approvalDate": {
          "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
          "$ref": "#/definitions/date"
        },
        "_approvalDate": {
          "description": "Extensions for approvalDate",
          "$ref": "#/definitions/Element"
        },
        "lastReviewDate": {
          "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
          "$ref": "#/definitions/date"
        },
        "_lastReviewDate": {
          "description": "Extensions for lastReviewDate",
          "$ref": "#/definitions/Element"
        },
        "effectivePeriod": {
          "description": "The period during which the plan definition content was or is planned to be in active use.",
          "$ref": "#/definitions/Period"
        },
        "topic": {
          "description": "Descriptive topics related to the content of the plan definition. Topics provide a high-level categorization of the definition that can be useful for filtering and searching.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "author": {
          "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "editor": {
          "description": "An individual or organization primarily responsible for internal coherence of the content.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "reviewer": {
          "description": "An individual or organization primarily responsible for review of some aspect of the content.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "endorser": {
          "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "relatedArtifact": {
          "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          },
          "type": "array"
        },
        "subtitle": {
          "description": "An explanatory or alternate title for the plan definition giving additional information about its content.",
          "$ref": "#/definitions/string"
        },
        "_subtitle": {
          "description": "Extensions for subtitle",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "A high-level category for the plan definition that distinguishes the kinds of systems that would be interested in the plan definition.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subjectCodeableConcept": {
          "description": "A code, group definition, or canonical reference that describes  or identifies the intended subject of the plan definition. Canonical references are allowed to support the definition of protocols for drug and substance quality specifications, and is allowed to reference a MedicinalProductDefinition, SubstanceDefinition, AdministrableProductDefinition, ManufacturedItemDefinition, or PackagedProductDefinition resource.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subjectReference": {
          "description": "A code, group definition, or canonical reference that describes  or identifies the intended subject of the plan definition. Canonical references are allowed to support the definition of protocols for drug and substance quality specifications, and is allowed to reference a MedicinalProductDefinition, SubstanceDefinition, AdministrableProductDefinition, ManufacturedItemDefinition, or PackagedProductDefinition resource.",
          "$ref": "#/definitions/Reference"
        },
        "subjectCanonical": {
          "description": "A code, group definition, or canonical reference that describes  or identifies the intended subject of the plan definition. Canonical references are allowed to support the definition of protocols for drug and substance quality specifications, and is allowed to reference a MedicinalProductDefinition, SubstanceDefinition, AdministrableProductDefinition, ManufacturedItemDefinition, or PackagedProductDefinition resource.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_subjectCanonical": {
          "description": "Extensions for subjectCanonical",
          "$ref": "#/definitions/Element"
        },
        "usage": {
          "description": "A detailed description of how the plan definition is used from a clinical perspective.",
          "$ref": "#/definitions/string"
        },
        "_usage": {
          "description": "Extensions for usage",
          "$ref": "#/definitions/Element"
        },
        "library": {
          "description": "A reference to a Library resource containing any formal logic used by the plan definition.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "goal": {
          "description": "A goal describes an expected outcome that activities within the plan are intended to achieve. For example, weight loss, restoring an activity of daily living, obtaining herd immunity via immunization, meeting a process improvement objective, meeting the acceptance criteria for a test as specified by a quality specification, etc.",
          "items": {
            "$ref": "#/definitions/PlanDefinition_Goal"
          },
          "type": "array"
        },
        "actor": {
          "description": "Actors represent the individuals or groups involved in the execution of the defined set of activities.",
          "items": {
            "$ref": "#/definitions/PlanDefinition_Actor"
          },
          "type": "array"
        },
        "action": {
          "description": "An action or group of actions to be taken as part of the plan. For example, in clinical care, an action would be to prescribe a particular indicated medication, or perform a particular test as appropriate. In pharmaceutical quality, an action would be the test that needs to be performed on a drug product as defined in the quality specification.",
          "items": {
            "$ref": "#/definitions/PlanDefinition_Action"
          },
          "type": "array"
        },
        "asNeededBoolean": {
          "description": "If a CodeableConcept is present, it indicates the pre-condition for performing the service.  For example \"pain\", \"on flare-up\", etc.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_asNeededBoolean": {
          "description": "Extensions for asNeededBoolean",
          "$ref": "#/definitions/Element"
        },
        "asNeededCodeableConcept": {
          "description": "If a CodeableConcept is present, it indicates the pre-condition for performing the service.  For example \"pain\", \"on flare-up\", etc.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "PlanDefinition_Goal": {
      "description": "This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "category": {
          "description": "Indicates a category the goal falls within.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "description": {
          "description": "Human-readable and/or coded description of a specific desired objective of care, such as \"control blood pressure\" or \"negotiate an obstacle course\" or \"dance with child at wedding\".",
          "$ref": "#/definitions/CodeableConcept"
        },
        "priority": {
          "description": "Identifies the expected level of importance associated with reaching/sustaining the defined goal.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "start": {
          "description": "The event after which the goal should begin being pursued.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "addresses": {
          "description": "Identifies problems, conditions, issues, or concerns the goal is intended to address.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "documentation": {
          "description": "Didactic or other informational resources associated with the goal that provide further supporting information about the goal. Information resources can include inline text commentary and links to web resources.",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          },
          "type": "array"
        },
        "target": {
          "description": "Indicates what should be done and within what timeframe.",
          "items": {
            "$ref": "#/definitions/PlanDefinition_Target"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "description"
      ]
    },
    "PlanDefinition_Target": {
      "description": "This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "measure": {
          "description": "The parameter whose value is to be tracked, e.g. body weight, blood pressure, or hemoglobin A1c level.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "detailQuantity": {
          "description": "The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%, or in the case of pharmaceutical quality - NMT 0.6%, Clear solution, etc. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.",
          "$ref": "#/definitions/Quantity"
        },
        "detailRange": {
          "description": "The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%, or in the case of pharmaceutical quality - NMT 0.6%, Clear solution, etc. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.",
          "$ref": "#/definitions/Range"
        },
        "detailCodeableConcept": {
          "description": "The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%, or in the case of pharmaceutical quality - NMT 0.6%, Clear solution, etc. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "detailString": {
          "description": "The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%, or in the case of pharmaceutical quality - NMT 0.6%, Clear solution, etc. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_detailString": {
          "description": "Extensions for detailString",
          "$ref": "#/definitions/Element"
        },
        "detailBoolean": {
          "description": "The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%, or in the case of pharmaceutical quality - NMT 0.6%, Clear solution, etc. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_detailBoolean": {
          "description": "Extensions for detailBoolean",
          "$ref": "#/definitions/Element"
        },
        "detailInteger": {
          "description": "The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%, or in the case of pharmaceutical quality - NMT 0.6%, Clear solution, etc. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_detailInteger": {
          "description": "Extensions for detailInteger",
          "$ref": "#/definitions/Element"
        },
        "detailRatio": {
          "description": "The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%, or in the case of pharmaceutical quality - NMT 0.6%, Clear solution, etc. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.",
          "$ref": "#/definitions/Ratio"
        },
        "due": {
          "description": "Indicates the timeframe after the start of the goal in which the goal should be met.",
          "$ref": "#/definitions/Duration"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "PlanDefinition_Actor": {
      "description": "This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "title": {
          "description": "A descriptive label for the actor.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "A description of how the actor fits into the overall actions of the plan definition.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "option": {
          "description": "The characteristics of the candidates that could serve as the actor.",
          "items": {
            "$ref": "#/definitions/PlanDefinition_Option"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "option"
      ]
    },
    "PlanDefinition_Option": {
      "description": "This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of participant in the action.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "typeCanonical": {
          "description": "The type of participant in the action.",
          "$ref": "#/definitions/canonical"
        },
        "typeReference": {
          "description": "The type of participant in the action.",
          "$ref": "#/definitions/Reference"
        },
        "role": {
          "description": "The role the participant should play in performing the described action.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "PlanDefinition_Action": {
      "description": "This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "linkId": {
          "description": "An identifier that is unique within the PlanDefinition to allow linkage within the realized CarePlan and/or RequestOrchestration.",
          "$ref": "#/definitions/string"
        },
        "_linkId": {
          "description": "Extensions for linkId",
          "$ref": "#/definitions/Element"
        },
        "prefix": {
          "description": "A user-visible prefix for the action. For example a section or item numbering such as 1. or A.",
          "$ref": "#/definitions/string"
        },
        "_prefix": {
          "description": "Extensions for prefix",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "The textual description of the action displayed to a user. For example, when the action is a test to be performed, the title would be the title of the test such as Assay by HPLC.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "A brief description of the action used to provide a summary to display to the user.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "textEquivalent": {
          "description": "A text equivalent of the action to be performed. This provides a human-interpretable description of the action when the definition is consumed by a system that might not be capable of interpreting it dynamically.",
          "$ref": "#/definitions/string"
        },
        "_textEquivalent": {
          "description": "Extensions for textEquivalent",
          "$ref": "#/definitions/Element"
        },
        "priority": {
          "description": "Indicates how quickly the action should be addressed with respect to other actions.",
          "$ref": "#/definitions/code"
        },
        "_priority": {
          "description": "Extensions for priority",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "A code that provides a meaning, grouping, or classification for the action or action group. For example, a section may have a LOINC code for the section of a documentation template. In pharmaceutical quality, an action (Test) such as pH could be classified as a physical property.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "reason": {
          "description": "A description of why this action is necessary or appropriate.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "documentation": {
          "description": "Didactic or other informational resources associated with the action that can be provided to the CDS recipient. Information resources can include inline text commentary and links to web resources.",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          },
          "type": "array"
        },
        "goalId": {
          "description": "Identifies goals that this action supports. The reference must be to a goal element defined within this plan definition. In pharmaceutical quality, a goal represents acceptance criteria (Goal) for a given action (Test), so the goalId would be the unique id of a defined goal element establishing the acceptance criteria for the action.",
          "items": {
            "$ref": "#/definitions/id"
          },
          "type": "array"
        },
        "_goalId": {
          "description": "Extensions for goalId",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "subjectCodeableConcept": {
          "description": "A code, group definition, or canonical reference that describes the intended subject of the action and its children, if any. Canonical references are allowed to support the definition of protocols for drug and substance quality specifications, and is allowed to reference a MedicinalProductDefinition, SubstanceDefinition, AdministrableProductDefinition, ManufacturedItemDefinition, or PackagedProductDefinition resource.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subjectReference": {
          "description": "A code, group definition, or canonical reference that describes the intended subject of the action and its children, if any. Canonical references are allowed to support the definition of protocols for drug and substance quality specifications, and is allowed to reference a MedicinalProductDefinition, SubstanceDefinition, AdministrableProductDefinition, ManufacturedItemDefinition, or PackagedProductDefinition resource.",
          "$ref": "#/definitions/Reference"
        },
        "subjectCanonical": {
          "description": "A code, group definition, or canonical reference that describes the intended subject of the action and its children, if any. Canonical references are allowed to support the definition of protocols for drug and substance quality specifications, and is allowed to reference a MedicinalProductDefinition, SubstanceDefinition, AdministrableProductDefinition, ManufacturedItemDefinition, or PackagedProductDefinition resource.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_subjectCanonical": {
          "description": "Extensions for subjectCanonical",
          "$ref": "#/definitions/Element"
        },
        "trigger": {
          "description": "A description of when the action should be triggered. When multiple triggers are specified on an action, any triggering event invokes the action.",
          "items": {
            "$ref": "#/definitions/TriggerDefinition"
          },
          "type": "array"
        },
        "condition": {
          "description": "An expression that describes applicability criteria or start/stop conditions for the action.",
          "items": {
            "$ref": "#/definitions/PlanDefinition_Condition"
          },
          "type": "array"
        },
        "input": {
          "description": "Defines input data requirements for the action.",
          "items": {
            "$ref": "#/definitions/PlanDefinition_Input"
          },
          "type": "array"
        },
        "output": {
          "description": "Defines the outputs of the action, if any.",
          "items": {
            "$ref": "#/definitions/PlanDefinition_Output"
          },
          "type": "array"
        },
        "relatedAction": {
          "description": "A relationship to another action such as \"before\" or \"30-60 minutes after start of\".",
          "items": {
            "$ref": "#/definitions/PlanDefinition_RelatedAction"
          },
          "type": "array"
        },
        "timingAge": {
          "description": "An optional value describing when the action should be performed.",
          "$ref": "#/definitions/Age"
        },
        "timingDuration": {
          "description": "An optional value describing when the action should be performed.",
          "$ref": "#/definitions/Duration"
        },
        "timingRange": {
          "description": "An optional value describing when the action should be performed.",
          "$ref": "#/definitions/Range"
        },
        "timingTiming": {
          "description": "An optional value describing when the action should be performed.",
          "$ref": "#/definitions/Timing"
        },
        "location": {
          "description": "Identifies the facility where the action will occur; e.g. home, hospital, specific clinic, etc.",
          "$ref": "#/definitions/CodeableReference"
        },
        "participant": {
          "description": "Indicates who should participate in performing the action described.",
          "items": {
            "$ref": "#/definitions/PlanDefinition_Participant"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of action to perform (create, update, remove).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "groupingBehavior": {
          "description": "Defines the grouping behavior for the action and its children.",
          "$ref": "#/definitions/code"
        },
        "_groupingBehavior": {
          "description": "Extensions for groupingBehavior",
          "$ref": "#/definitions/Element"
        },
        "selectionBehavior": {
          "description": "Defines the selection behavior for the action and its children.",
          "$ref": "#/definitions/code"
        },
        "_selectionBehavior": {
          "description": "Extensions for selectionBehavior",
          "$ref": "#/definitions/Element"
        },
        "requiredBehavior": {
          "description": "Defines the required behavior for the action.",
          "$ref": "#/definitions/code"
        },
        "_requiredBehavior": {
          "description": "Extensions for requiredBehavior",
          "$ref": "#/definitions/Element"
        },
        "precheckBehavior": {
          "description": "Defines whether the action should usually be preselected.",
          "$ref": "#/definitions/code"
        },
        "_precheckBehavior": {
          "description": "Extensions for precheckBehavior",
          "$ref": "#/definitions/Element"
        },
        "cardinalityBehavior": {
          "description": "Defines whether the action can be selected multiple times.",
          "$ref": "#/definitions/code"
        },
        "_cardinalityBehavior": {
          "description": "Extensions for cardinalityBehavior",
          "$ref": "#/definitions/Element"
        },
        "definitionCanonical": {
          "description": "A reference to an ActivityDefinition that describes the action to be taken in detail, a PlanDefinition that describes a series of actions to be taken, a Questionnaire that should be filled out, a SpecimenDefinition describing a specimen to be collected, or an ObservationDefinition that specifies what observation should be captured.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_definitionCanonical": {
          "description": "Extensions for definitionCanonical",
          "$ref": "#/definitions/Element"
        },
        "definitionUri": {
          "description": "A reference to an ActivityDefinition that describes the action to be taken in detail, a PlanDefinition that describes a series of actions to be taken, a Questionnaire that should be filled out, a SpecimenDefinition describing a specimen to be collected, or an ObservationDefinition that specifies what observation should be captured.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_definitionUri": {
          "description": "Extensions for definitionUri",
          "$ref": "#/definitions/Element"
        },
        "transform": {
          "description": "A reference to a StructureMap resource that defines a transform that can be executed to produce the intent resource using the ActivityDefinition instance as the input.",
          "$ref": "#/definitions/canonical"
        },
        "dynamicValue": {
          "description": "Customizations that should be applied to the statically defined resource. For example, if the dosage of a medication must be computed based on the patient\u0027s weight, a customization would be used to specify an expression that calculated the weight, and the path on the resource that would contain the result.",
          "items": {
            "$ref": "#/definitions/PlanDefinition_DynamicValue"
          },
          "type": "array"
        },
        "action": {
          "description": "Sub actions that are contained within the action. The behavior of this action determines the functionality of the sub-actions. For example, a selection behavior of at-most-one indicates that of the sub-actions, at most one may be chosen as part of realizing the action definition.",
          "items": {
            "$ref": "#/definitions/PlanDefinition_Action"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "PlanDefinition_Condition": {
      "description": "This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "kind": {
          "description": "The kind of condition.",
          "$ref": "#/definitions/code"
        },
        "_kind": {
          "description": "Extensions for kind",
          "$ref": "#/definitions/Element"
        },
        "expression": {
          "description": "An expression that returns true or false, indicating whether the condition is satisfied.",
          "$ref": "#/definitions/Expression"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "PlanDefinition_Input": {
      "description": "This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "title": {
          "description": "A human-readable label for the data requirement used to label data flows in BPMN or similar diagrams. Also provides a human readable label when rendering the data requirement that conveys its purpose to human readers.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "requirement": {
          "description": "Defines the data that is to be provided as input to the action.",
          "$ref": "#/definitions/DataRequirement"
        },
        "relatedData": {
          "description": "Points to an existing input or output element that provides data to this input.",
          "$ref": "#/definitions/id"
        },
        "_relatedData": {
          "description": "Extensions for relatedData",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "PlanDefinition_Output": {
      "description": "This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "title": {
          "description": "A human-readable label for the data requirement used to label data flows in BPMN or similar diagrams. Also provides a human readable label when rendering the data requirement that conveys its purpose to human readers.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "requirement": {
          "description": "Defines the data that results as output from the action.",
          "$ref": "#/definitions/DataRequirement"
        },
        "relatedData": {
          "description": "Points to an existing input or output element that is results as output from the action.",
          "$ref": "#/definitions/string"
        },
        "_relatedData": {
          "description": "Extensions for relatedData",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "PlanDefinition_RelatedAction": {
      "description": "This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "targetId": {
          "description": "The element id of the target related action.",
          "$ref": "#/definitions/id"
        },
        "_targetId": {
          "description": "Extensions for targetId",
          "$ref": "#/definitions/Element"
        },
        "relationship": {
          "description": "The relationship of this action to the related action.",
          "$ref": "#/definitions/code"
        },
        "_relationship": {
          "description": "Extensions for relationship",
          "$ref": "#/definitions/Element"
        },
        "offsetDuration": {
          "description": "A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.",
          "$ref": "#/definitions/Duration"
        },
        "offsetRange": {
          "description": "A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.",
          "$ref": "#/definitions/Range"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "PlanDefinition_Participant": {
      "description": "This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "actorId": {
          "description": "A reference to the id element of the actor who will participate in this action.",
          "$ref": "#/definitions/string"
        },
        "_actorId": {
          "description": "Extensions for actorId",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "The type of participant in the action.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "typeCanonical": {
          "description": "The type of participant in the action.",
          "$ref": "#/definitions/canonical"
        },
        "typeReference": {
          "description": "The type of participant in the action.",
          "$ref": "#/definitions/Reference"
        },
        "role": {
          "description": "The role the participant should play in performing the described action.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "function": {
          "description": "Indicates how the actor will be involved in the action - author, reviewer, witness, etc.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "PlanDefinition_DynamicValue": {
      "description": "This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "path": {
          "description": "The path to the element to be customized. This is the path on the resource that will hold the result of the calculation defined by the expression. The specified path SHALL be a FHIRPath resolveable on the specified target type of the ActivityDefinition, and SHALL consist only of identifiers, constant indexers, and a restricted subset of functions. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).",
          "$ref": "#/definitions/string"
        },
        "_path": {
          "description": "Extensions for path",
          "$ref": "#/definitions/Element"
        },
        "expression": {
          "description": "An expression specifying the value of the customized element.",
          "$ref": "#/definitions/Expression"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Practitioner": {
      "description": "A person who is directly or indirectly involved in the provisioning of healthcare or related services.",
      "properties": {
        "resourceType": {
          "description": "This is a Practitioner resource",
          "const": "Practitioner"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "An identifier that applies to this person in this role.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "active": {
          "description": "Whether this practitioner\u0027s record is in active use.",
          "$ref": "#/definitions/boolean"
        },
        "_active": {
          "description": "Extensions for active",
          "$ref": "#/definitions/Element"
        },
        "name": {
          "description": "The name(s) associated with the practitioner.",
          "items": {
            "$ref": "#/definitions/HumanName"
          },
          "type": "array"
        },
        "telecom": {
          "description": "A contact detail for the practitioner, e.g. a telephone number or an email address.",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          },
          "type": "array"
        },
        "gender": {
          "description": "Administrative Gender - the gender that the person is considered to have for administration and record keeping purposes.",
          "$ref": "#/definitions/code"
        },
        "_gender": {
          "description": "Extensions for gender",
          "$ref": "#/definitions/Element"
        },
        "birthDate": {
          "description": "The date of birth for the practitioner.",
          "$ref": "#/definitions/date"
        },
        "_birthDate": {
          "description": "Extensions for birthDate",
          "$ref": "#/definitions/Element"
        },
        "deceasedBoolean": {
          "description": "Indicates if the practitioner is deceased or not.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_deceasedBoolean": {
          "description": "Extensions for deceasedBoolean",
          "$ref": "#/definitions/Element"
        },
        "deceasedDateTime": {
          "description": "Indicates if the practitioner is deceased or not.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_deceasedDateTime": {
          "description": "Extensions for deceasedDateTime",
          "$ref": "#/definitions/Element"
        },
        "address": {
          "description": "Address(es) of the practitioner that are not role specific (typically home address). \rWork addresses are not typically entered in this property as they are usually role dependent.",
          "items": {
            "$ref": "#/definitions/Address"
          },
          "type": "array"
        },
        "photo": {
          "description": "Image of the person.",
          "items": {
            "$ref": "#/definitions/Attachment"
          },
          "type": "array"
        },
        "qualification": {
          "description": "The official qualifications, certifications, accreditations, training, licenses (and other types of educations/skills/capabilities) that authorize or otherwise pertain to the provision of care by the practitioner.\r\rFor example, a medical license issued by a medical board of licensure authorizing the practitioner to practice medicine within a certain locality.",
          "items": {
            "$ref": "#/definitions/Practitioner_Qualification"
          },
          "type": "array"
        },
        "communication": {
          "description": "A language the practitioner can use in patient communication.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Practitioner_Qualification": {
      "description": "A person who is directly or indirectly involved in the provisioning of healthcare or related services.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "An identifier that applies to this person\u0027s qualification.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "code": {
          "description": "Coded representation of the qualification.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "period": {
          "description": "Period during which the qualification is valid.",
          "$ref": "#/definitions/Period"
        },
        "issuer": {
          "description": "Organization that regulates and issues the qualification.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "PractitionerRole": {
      "description": "A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time.",
      "properties": {
        "resourceType": {
          "description": "This is a PractitionerRole resource",
          "const": "PractitionerRole"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Business Identifiers that are specific to a role/location.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "active": {
          "description": "Whether this practitioner role record is in active use.",
          "$ref": "#/definitions/boolean"
        },
        "_active": {
          "description": "Extensions for active",
          "$ref": "#/definitions/Element"
        },
        "period": {
          "description": "The period during which the person is authorized to act as a practitioner in these role(s) for the organization.",
          "$ref": "#/definitions/Period"
        },
        "practitioner": {
          "description": "Practitioner that is able to provide the defined services for the organization.",
          "$ref": "#/definitions/Reference"
        },
        "organization": {
          "description": "The organization where the Practitioner performs the roles associated.",
          "$ref": "#/definitions/Reference"
        },
        "code": {
          "description": "Roles which this practitioner is authorized to perform for the organization.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "specialty": {
          "description": "The specialty of a practitioner that describes the functional role they are practicing at a given organization or location.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "location": {
          "description": "The location(s) at which this practitioner provides care.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "healthcareService": {
          "description": "The list of healthcare services that this worker provides for this role\u0027s Organization/Location(s).",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "contact": {
          "description": "The contact details of communication devices available relevant to the specific PractitionerRole. This can include addresses, phone numbers, fax numbers, mobile numbers, email addresses and web sites.",
          "items": {
            "$ref": "#/definitions/ExtendedContactDetail"
          },
          "type": "array"
        },
        "availability": {
          "description": "A collection of times the practitioner is available or performing this role at the location and/or healthcareservice.",
          "items": {
            "$ref": "#/definitions/Availability"
          },
          "type": "array"
        },
        "endpoint": {
          "description": "Technical endpoints providing access to services operated for the practitioner with this role.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Procedure": {
      "description": "An action that is or was performed on or for a patient, practitioner, device, organization, or location. For example, this can be a physical intervention on a patient like an operation, or less invasive like long term services, counseling, or hypnotherapy.  This can be a quality or safety inspection for a location, organization, or device.  This can be an accreditation procedure on a practitioner for licensing.",
      "properties": {
        "resourceType": {
          "description": "This is a Procedure resource",
          "const": "Procedure"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Business identifiers assigned to this procedure by the performer or other systems which remain constant as the resource is updated and is propagated from server to server.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "instantiatesCanonical": {
          "description": "The URL pointing to a FHIR-defined protocol, guideline, order set or other definition that is adhered to in whole or in part by this Procedure.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "instantiatesUri": {
          "description": "The URL pointing to an externally maintained protocol, guideline, order set or other definition that is adhered to in whole or in part by this Procedure.",
          "items": {
            "$ref": "#/definitions/uri"
          },
          "type": "array"
        },
        "_instantiatesUri": {
          "description": "Extensions for instantiatesUri",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "basedOn": {
          "description": "A reference to a resource that contains details of the request for this procedure.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "partOf": {
          "description": "A larger event of which this particular procedure is a component or step.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "status": {
          "description": "A code specifying the state of the procedure. Generally, this will be the in-progress or completed state.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "statusReason": {
          "description": "Captures the reason for the current state of the procedure.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "category": {
          "description": "A code that classifies the procedure for searching, sorting and display purposes (e.g. \"Surgical Procedure\").",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "code": {
          "description": "The specific procedure that is performed. Use text if the exact nature of the procedure cannot be coded (e.g. \"Laparoscopic Appendectomy\").",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subject": {
          "description": "On whom or on what the procedure was performed. This is usually an individual human, but can also be performed on animals, groups of humans or animals, organizations or practitioners (for licensing), locations or devices (for safety inspections or regulatory authorizations).  If the actual focus of the procedure is different from the subject, the focus element specifies the actual focus of the procedure.",
          "$ref": "#/definitions/Reference"
        },
        "focus": {
          "description": "Who is the target of the procedure when it is not the subject of record only.  If focus is not present, then subject is the focus.  If focus is present and the subject is one of the targets of the procedure, include subject as a focus as well. If focus is present and the subject is not included in focus, it implies that the procedure was only targeted on the focus. For example, when a caregiver is given education for a patient, the caregiver would be the focus and the procedure record is associated with the subject (e.g. patient).  For example, use focus when recording the target of the education, training, or counseling is the parent or relative of a patient.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "The Encounter during which this Procedure was created or performed or to which the creation of this record is tightly associated.",
          "$ref": "#/definitions/Reference"
        },
        "occurrenceDateTime": {
          "description": "Estimated or actual date, date-time, period, or age when the procedure did occur or is occurring.  Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_occurrenceDateTime": {
          "description": "Extensions for occurrenceDateTime",
          "$ref": "#/definitions/Element"
        },
        "occurrencePeriod": {
          "description": "Estimated or actual date, date-time, period, or age when the procedure did occur or is occurring.  Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.",
          "$ref": "#/definitions/Period"
        },
        "occurrenceString": {
          "description": "Estimated or actual date, date-time, period, or age when the procedure did occur or is occurring.  Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_occurrenceString": {
          "description": "Extensions for occurrenceString",
          "$ref": "#/definitions/Element"
        },
        "occurrenceAge": {
          "description": "Estimated or actual date, date-time, period, or age when the procedure did occur or is occurring.  Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.",
          "$ref": "#/definitions/Age"
        },
        "occurrenceRange": {
          "description": "Estimated or actual date, date-time, period, or age when the procedure did occur or is occurring.  Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.",
          "$ref": "#/definitions/Range"
        },
        "occurrenceTiming": {
          "description": "Estimated or actual date, date-time, period, or age when the procedure did occur or is occurring.  Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.",
          "$ref": "#/definitions/Timing"
        },
        "recorded": {
          "description": "The date the occurrence of the procedure was first captured in the record regardless of Procedure.status (potentially after the occurrence of the event).",
          "$ref": "#/definitions/dateTime"
        },
        "_recorded": {
          "description": "Extensions for recorded",
          "$ref": "#/definitions/Element"
        },
        "recorder": {
          "description": "Individual who recorded the record and takes responsibility for its content.",
          "$ref": "#/definitions/Reference"
        },
        "reportedBoolean": {
          "description": "Indicates if this record was captured as a secondary \u0027reported\u0027 record rather than as an original primary source-of-truth record.  It may also indicate the source of the report.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_reportedBoolean": {
          "description": "Extensions for reportedBoolean",
          "$ref": "#/definitions/Element"
        },
        "reportedReference": {
          "description": "Indicates if this record was captured as a secondary \u0027reported\u0027 record rather than as an original primary source-of-truth record.  It may also indicate the source of the report.",
          "$ref": "#/definitions/Reference"
        },
        "performer": {
          "description": "Limited to \"real\" people rather than equipment.",
          "items": {
            "$ref": "#/definitions/Procedure_Performer"
          },
          "type": "array"
        },
        "location": {
          "description": "The location where the procedure actually happened.  E.g. a newborn at home, a tracheostomy at a restaurant.",
          "$ref": "#/definitions/Reference"
        },
        "reason": {
          "description": "The coded reason or reference why the procedure was performed. This may be a coded entity of some type, be present as text, or be a reference to one of several resources that justify the procedure.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "bodySite": {
          "description": "Detailed and structured anatomical location information. Multiple locations are allowed - e.g. multiple punch biopsies of a lesion.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "outcome": {
          "description": "The outcome of the procedure - did it resolve the reasons for the procedure being performed?",
          "$ref": "#/definitions/CodeableConcept"
        },
        "report": {
          "description": "This could be a histology result, pathology report, surgical report, etc.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "complication": {
          "description": "Any complications that occurred during the procedure, or in the immediate post-performance period. These are generally tracked separately from the notes, which will typically describe the procedure itself rather than any \u0027post procedure\u0027 issues.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "followUp": {
          "description": "If the procedure required specific follow up - e.g. removal of sutures. The follow up may be represented as a simple note or could potentially be more complex, in which case the CarePlan resource can be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "note": {
          "description": "Any other notes and comments about the procedure.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "focalDevice": {
          "description": "A device that is implanted, removed or otherwise manipulated (calibration, battery replacement, fitting a prosthesis, attaching a wound-vac, etc.) as a focal portion of the Procedure.",
          "items": {
            "$ref": "#/definitions/Procedure_FocalDevice"
          },
          "type": "array"
        },
        "used": {
          "description": "Identifies medications, devices and any other substance used as part of the procedure.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "supportingInfo": {
          "description": "Other resources from the patient record that may be relevant to the procedure.  The information from these resources was either used to create the instance or is provided to help with its interpretation. This extension should not be used if more specific inline elements or extensions are available.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "subject",
        "resourceType"
      ]
    },
    "Procedure_Performer": {
      "description": "An action that is or was performed on or for a patient, practitioner, device, organization, or location. For example, this can be a physical intervention on a patient like an operation, or less invasive like long term services, counseling, or hypnotherapy.  This can be a quality or safety inspection for a location, organization, or device.  This can be an accreditation procedure on a practitioner for licensing.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "function": {
          "description": "Distinguishes the type of involvement of the performer in the procedure. For example, surgeon, anaesthetist, endoscopist.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "actor": {
          "description": "Indicates who or what performed the procedure.",
          "$ref": "#/definitions/Reference"
        },
        "onBehalfOf": {
          "description": "The organization the device or practitioner was acting on behalf of.",
          "$ref": "#/definitions/Reference"
        },
        "period": {
          "description": "Time period during which the performer performed the procedure.",
          "$ref": "#/definitions/Period"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "actor"
      ]
    },
    "Procedure_FocalDevice": {
      "description": "An action that is or was performed on or for a patient, practitioner, device, organization, or location. For example, this can be a physical intervention on a patient like an operation, or less invasive like long term services, counseling, or hypnotherapy.  This can be a quality or safety inspection for a location, organization, or device.  This can be an accreditation procedure on a practitioner for licensing.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "action": {
          "description": "The kind of change that happened to the device during the procedure.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "manipulated": {
          "description": "The device that was manipulated (changed) during the procedure.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "manipulated"
      ]
    },
    "Provenance": {
      "description": "Provenance of a resource is a record that describes entities and processes involved in producing and delivering or otherwise influencing that resource. Provenance provides a critical foundation for assessing authenticity, enabling trust, and allowing reproducibility. Provenance assertions are a form of contextual metadata and can themselves become important records with their own provenance. Provenance statement indicates clinical significance in terms of confidence in authenticity, reliability, and trustworthiness, integrity, and stage in lifecycle (e.g. Document Completion - has the artifact been legally authenticated), all of which may impact security, privacy, and trust policies.",
      "properties": {
        "resourceType": {
          "description": "This is a Provenance resource",
          "const": "Provenance"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "target": {
          "description": "The Reference(s) that were generated or updated by  the activity described in this resource. A provenance can point to more than one target if multiple resources were created/updated by the same activity.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "occurredPeriod": {
          "description": "The period during which the activity occurred.",
          "$ref": "#/definitions/Period"
        },
        "occurredDateTime": {
          "description": "The period during which the activity occurred.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_occurredDateTime": {
          "description": "Extensions for occurredDateTime",
          "$ref": "#/definitions/Element"
        },
        "recorded": {
          "description": "The instant of time at which the activity was recorded.",
          "$ref": "#/definitions/instant"
        },
        "_recorded": {
          "description": "Extensions for recorded",
          "$ref": "#/definitions/Element"
        },
        "policy": {
          "description": "Policy or plan the activity was defined by. Typically, a single activity may have multiple applicable policy documents, such as patient consent, guarantor funding, etc.",
          "items": {
            "$ref": "#/definitions/uri"
          },
          "type": "array"
        },
        "_policy": {
          "description": "Extensions for policy",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "location": {
          "description": "Where the activity occurred, if relevant.",
          "$ref": "#/definitions/Reference"
        },
        "authorization": {
          "description": "The authorization (e.g., PurposeOfUse) that was used during the event being recorded.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "activity": {
          "description": "An activity is something that occurs over a period of time and acts upon or with entities; it may include consuming, processing, transforming, modifying, relocating, using, or generating entities.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "basedOn": {
          "description": "Allows tracing of authorizatino for the events and tracking whether proposals/recommendations were acted upon.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "patient": {
          "description": "The patient element is available to enable deterministic tracking of activities that involve the patient as the subject of the data used in an activity.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "This will typically be the encounter the event occurred, but some events may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission lab tests).",
          "$ref": "#/definitions/Reference"
        },
        "agent": {
          "description": "An actor taking a role in an activity  for which it can be assigned some degree of responsibility for the activity taking place.",
          "items": {
            "$ref": "#/definitions/Provenance_Agent"
          },
          "type": "array"
        },
        "entity": {
          "description": "An entity used in this activity.",
          "items": {
            "$ref": "#/definitions/Provenance_Entity"
          },
          "type": "array"
        },
        "signature": {
          "description": "A digital signature on the target Reference(s). The signer should match a Provenance.agent. The purpose of the signature is indicated.",
          "items": {
            "$ref": "#/definitions/Signature"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "agent",
        "resourceType",
        "target"
      ]
    },
    "Provenance_Agent": {
      "description": "Provenance of a resource is a record that describes entities and processes involved in producing and delivering or otherwise influencing that resource. Provenance provides a critical foundation for assessing authenticity, enabling trust, and allowing reproducibility. Provenance assertions are a form of contextual metadata and can themselves become important records with their own provenance. Provenance statement indicates clinical significance in terms of confidence in authenticity, reliability, and trustworthiness, integrity, and stage in lifecycle (e.g. Document Completion - has the artifact been legally authenticated), all of which may impact security, privacy, and trust policies.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The Functional Role of the agent with respect to the activity.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "role": {
          "description": "The structural roles of the agent indicating the agent\u0027s competency. The security role enabling the agent with respect to the activity.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "who": {
          "description": "Indicates who or what performed in the event.",
          "$ref": "#/definitions/Reference"
        },
        "onBehalfOf": {
          "description": "The agent that delegated authority to perform the activity performed by the agent.who element.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "who"
      ]
    },
    "Provenance_Entity": {
      "description": "Provenance of a resource is a record that describes entities and processes involved in producing and delivering or otherwise influencing that resource. Provenance provides a critical foundation for assessing authenticity, enabling trust, and allowing reproducibility. Provenance assertions are a form of contextual metadata and can themselves become important records with their own provenance. Provenance statement indicates clinical significance in terms of confidence in authenticity, reliability, and trustworthiness, integrity, and stage in lifecycle (e.g. Document Completion - has the artifact been legally authenticated), all of which may impact security, privacy, and trust policies.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "role": {
          "description": "How the entity was used during the activity.",
          "$ref": "#/definitions/code"
        },
        "_role": {
          "description": "Extensions for role",
          "$ref": "#/definitions/Element"
        },
        "what": {
          "description": "Identity of the  Entity used. May be a logical or physical uri and maybe absolute or relative.",
          "$ref": "#/definitions/Reference"
        },
        "agent": {
          "description": "The entity is attributed to an agent to express the agent\u0027s responsibility for that entity, possibly along with other agents. This description can be understood as shorthand for saying that the agent was responsible for the activity which used the entity.",
          "items": {
            "$ref": "#/definitions/Provenance_Agent"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "what"
      ]
    },
    "Questionnaire": {
      "description": "A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection.",
      "properties": {
        "resourceType": {
          "description": "This is a Questionnaire resource",
          "const": "Questionnaire"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this questionnaire when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this questionnaire is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the questionnaire is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this questionnaire when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the questionnaire when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the questionnaire author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the questionnaire. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the questionnaire.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this questionnaire. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this questionnaire is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the questionnaire was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the questionnaire changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the questionnaire.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the questionnaire from a consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate questionnaire instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the questionnaire is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this questionnaire is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the questionnaire and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the questionnaire.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "approvalDate": {
          "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
          "$ref": "#/definitions/date"
        },
        "_approvalDate": {
          "description": "Extensions for approvalDate",
          "$ref": "#/definitions/Element"
        },
        "lastReviewDate": {
          "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
          "$ref": "#/definitions/date"
        },
        "_lastReviewDate": {
          "description": "Extensions for lastReviewDate",
          "$ref": "#/definitions/Element"
        },
        "effectivePeriod": {
          "description": "The period during which the questionnaire content was or is planned to be in active use.",
          "$ref": "#/definitions/Period"
        },
        "topic": {
          "description": "Descriptive topics related to the content of the {{title}}. Topics provide a high-level categorization as well as keywords for the {{title}} that can be useful for filtering and searching.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "author": {
          "description": "An individiual or organization primarily involved in the creation and maintenance of the {{title}}.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "editor": {
          "description": "An individual or organization primarily responsible for internal coherence of the {{title}}.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "reviewer": {
          "description": "An individual or organization primarily responsible for review of some aspect of the {{title}}.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "endorser": {
          "description": "An individual or organization responsible for officially endorsing the {{title}} for use in some setting.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "relatedArtifact": {
          "description": "Related artifacts such as additional documentation, justification, dependencies, bibliographic references, and predecessor and successor artifacts.",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          },
          "type": "array"
        },
        "derivedFrom": {
          "description": "The URL of a Questionnaire that this Questionnaire is based on.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "subjectType": {
          "description": "The types of subjects that can be the subject of responses created for the questionnaire.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_subjectType": {
          "description": "Extensions for subjectType",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "code": {
          "description": "An identifier for this question or group of questions in a particular terminology such as LOINC.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        },
        "item": {
          "description": "A particular question, question grouping or display text that is part of the questionnaire.",
          "items": {
            "$ref": "#/definitions/Questionnaire_Item"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Questionnaire_Item": {
      "description": "A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "linkId": {
          "description": "An identifier that is unique within the Questionnaire allowing linkage to the equivalent item in a QuestionnaireResponse resource.",
          "$ref": "#/definitions/string"
        },
        "_linkId": {
          "description": "Extensions for linkId",
          "$ref": "#/definitions/Element"
        },
        "definition": {
          "description": "This element is a URI that refers to an [ElementDefinition](elementdefinition.html) or to an [ObservationDefinition](observationdefinition.html) that provides information about this item, including information that might otherwise be included in the instance of the Questionnaire resource. A detailed description of the construction of the URI is shown in [Comments](questionnaire.html#definition), below.",
          "$ref": "#/definitions/uri"
        },
        "_definition": {
          "description": "Extensions for definition",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "A terminology code that corresponds to this group or question (e.g. a code from LOINC, which defines many questions and answers).",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        },
        "prefix": {
          "description": "A short label for a particular group, question or set of display text within the questionnaire used for reference by the individual completing the questionnaire.",
          "$ref": "#/definitions/string"
        },
        "_prefix": {
          "description": "Extensions for prefix",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "The name of a section, the text of a question or text content for a display item.",
          "$ref": "#/definitions/string"
        },
        "_text": {
          "description": "Extensions for text",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "The type of questionnaire item this is - whether text for display, a grouping of other items or a particular type of data to be captured (string, integer, Coding, etc.).",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "enableWhen": {
          "description": "A constraint indicating that this item should only be enabled (displayed/allow answers to be captured) when the specified condition is true.",
          "items": {
            "$ref": "#/definitions/Questionnaire_EnableWhen"
          },
          "type": "array"
        },
        "enableBehavior": {
          "description": "Controls how multiple enableWhen values are interpreted -  whether all or any must be true.",
          "$ref": "#/definitions/code"
        },
        "_enableBehavior": {
          "description": "Extensions for enableBehavior",
          "$ref": "#/definitions/Element"
        },
        "disabledDisplay": {
          "description": "Indicates if and how items that are disabled (because enableWhen evaluates to \u0027false\u0027) should be displayed.",
          "$ref": "#/definitions/code"
        },
        "_disabledDisplay": {
          "description": "Extensions for disabledDisplay",
          "$ref": "#/definitions/Element"
        },
        "required": {
          "description": "An indication, if true, that the item must be present in a \"completed\" QuestionnaireResponse.  If false, the item may be skipped when answering the questionnaire.",
          "$ref": "#/definitions/boolean"
        },
        "_required": {
          "description": "Extensions for required",
          "$ref": "#/definitions/Element"
        },
        "repeats": {
          "description": "An indication, if true, that a QuestionnaireResponse for this item may include multiple answers associated with a single instance of this item (for question-type items) or multiple repetitions of the item (for group-type items).",
          "$ref": "#/definitions/boolean"
        },
        "_repeats": {
          "description": "Extensions for repeats",
          "$ref": "#/definitions/Element"
        },
        "readOnly": {
          "description": "An indication, when true, that the value cannot be changed by a human respondent to the Questionnaire.",
          "$ref": "#/definitions/boolean"
        },
        "_readOnly": {
          "description": "Extensions for readOnly",
          "$ref": "#/definitions/Element"
        },
        "maxLength": {
          "description": "The maximum number of characters that are permitted in the answer to be considered a \"valid\" QuestionnaireResponse.",
          "$ref": "#/definitions/integer"
        },
        "_maxLength": {
          "description": "Extensions for maxLength",
          "$ref": "#/definitions/Element"
        },
        "answerConstraint": {
          "description": "For items that have a defined set of allowed answers (via answerOption or answerValueset), indicates whether values *other* than those specified can be selected.",
          "$ref": "#/definitions/code"
        },
        "_answerConstraint": {
          "description": "Extensions for answerConstraint",
          "$ref": "#/definitions/Element"
        },
        "answerValueSet": {
          "description": "A reference to a value set containing a list of values representing permitted answers for a question.",
          "$ref": "#/definitions/canonical"
        },
        "answerOption": {
          "description": "One of the permitted answers for the question.",
          "items": {
            "$ref": "#/definitions/Questionnaire_AnswerOption"
          },
          "type": "array"
        },
        "initial": {
          "description": "One or more values that should be pre-populated in the answer when initially rendering the questionnaire for user input.",
          "items": {
            "$ref": "#/definitions/Questionnaire_Initial"
          },
          "type": "array"
        },
        "item": {
          "description": "Text, questions and other groups to be nested beneath a question or group.",
          "items": {
            "$ref": "#/definitions/Questionnaire_Item"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Questionnaire_EnableWhen": {
      "description": "A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "question": {
          "description": "The linkId for the question whose answer (or lack of answer) governs whether this item is enabled.",
          "$ref": "#/definitions/string"
        },
        "_question": {
          "description": "Extensions for question",
          "$ref": "#/definitions/Element"
        },
        "operator": {
          "description": "Specifies the criteria by which the question is enabled.",
          "$ref": "#/definitions/code"
        },
        "_operator": {
          "description": "Extensions for operator",
          "$ref": "#/definitions/Element"
        },
        "answerBoolean": {
          "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.  If there are multiple answers, a match on any of the answers suffices.  If different behavior is desired (all must match, at least 2 must match, etc.), consider using the enableWhenExpression extension.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_answerBoolean": {
          "description": "Extensions for answerBoolean",
          "$ref": "#/definitions/Element"
        },
        "answerDecimal": {
          "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.  If there are multiple answers, a match on any of the answers suffices.  If different behavior is desired (all must match, at least 2 must match, etc.), consider using the enableWhenExpression extension.",
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_answerDecimal": {
          "description": "Extensions for answerDecimal",
          "$ref": "#/definitions/Element"
        },
        "answerInteger": {
          "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.  If there are multiple answers, a match on any of the answers suffices.  If different behavior is desired (all must match, at least 2 must match, etc.), consider using the enableWhenExpression extension.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_answerInteger": {
          "description": "Extensions for answerInteger",
          "$ref": "#/definitions/Element"
        },
        "answerDate": {
          "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.  If there are multiple answers, a match on any of the answers suffices.  If different behavior is desired (all must match, at least 2 must match, etc.), consider using the enableWhenExpression extension.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_answerDate": {
          "description": "Extensions for answerDate",
          "$ref": "#/definitions/Element"
        },
        "answerDateTime": {
          "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.  If there are multiple answers, a match on any of the answers suffices.  If different behavior is desired (all must match, at least 2 must match, etc.), consider using the enableWhenExpression extension.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_answerDateTime": {
          "description": "Extensions for answerDateTime",
          "$ref": "#/definitions/Element"
        },
        "answerTime": {
          "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.  If there are multiple answers, a match on any of the answers suffices.  If different behavior is desired (all must match, at least 2 must match, etc.), consider using the enableWhenExpression extension.",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?$",
          "type": "string"
        },
        "_answerTime": {
          "description": "Extensions for answerTime",
          "$ref": "#/definitions/Element"
        },
        "answerString": {
          "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.  If there are multiple answers, a match on any of the answers suffices.  If different behavior is desired (all must match, at least 2 must match, etc.), consider using the enableWhenExpression extension.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_answerString": {
          "description": "Extensions for answerString",
          "$ref": "#/definitions/Element"
        },
        "answerCoding": {
          "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.  If there are multiple answers, a match on any of the answers suffices.  If different behavior is desired (all must match, at least 2 must match, etc.), consider using the enableWhenExpression extension.",
          "$ref": "#/definitions/Coding"
        },
        "answerQuantity": {
          "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.  If there are multiple answers, a match on any of the answers suffices.  If different behavior is desired (all must match, at least 2 must match, etc.), consider using the enableWhenExpression extension.",
          "$ref": "#/definitions/Quantity"
        },
        "answerReference": {
          "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.  If there are multiple answers, a match on any of the answers suffices.  If different behavior is desired (all must match, at least 2 must match, etc.), consider using the enableWhenExpression extension.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Questionnaire_AnswerOption": {
      "description": "A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "valueInteger": {
          "description": "A potential answer that\u0027s allowed as the answer to this question.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": {
          "description": "Extensions for valueInteger",
          "$ref": "#/definitions/Element"
        },
        "valueDate": {
          "description": "A potential answer that\u0027s allowed as the answer to this question.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_valueDate": {
          "description": "Extensions for valueDate",
          "$ref": "#/definitions/Element"
        },
        "valueTime": {
          "description": "A potential answer that\u0027s allowed as the answer to this question.",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?$",
          "type": "string"
        },
        "_valueTime": {
          "description": "Extensions for valueTime",
          "$ref": "#/definitions/Element"
        },
        "valueString": {
          "description": "A potential answer that\u0027s allowed as the answer to this question.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueCoding": {
          "description": "A potential answer that\u0027s allowed as the answer to this question.",
          "$ref": "#/definitions/Coding"
        },
        "valueReference": {
          "description": "A potential answer that\u0027s allowed as the answer to this question.",
          "$ref": "#/definitions/Reference"
        },
        "initialSelected": {
          "description": "Indicates whether the answer value is selected when the list of possible answers is initially shown.",
          "$ref": "#/definitions/boolean"
        },
        "_initialSelected": {
          "description": "Extensions for initialSelected",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Questionnaire_Initial": {
      "description": "A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "valueBoolean": {
          "description": "The actual value to for an initial answer.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueDecimal": {
          "description": "The actual value to for an initial answer.",
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_valueDecimal": {
          "description": "Extensions for valueDecimal",
          "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "description": "The actual value to for an initial answer.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": {
          "description": "Extensions for valueInteger",
          "$ref": "#/definitions/Element"
        },
        "valueDate": {
          "description": "The actual value to for an initial answer.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_valueDate": {
          "description": "Extensions for valueDate",
          "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "description": "The actual value to for an initial answer.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_valueDateTime": {
          "description": "Extensions for valueDateTime",
          "$ref": "#/definitions/Element"
        },
        "valueTime": {
          "description": "The actual value to for an initial answer.",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?$",
          "type": "string"
        },
        "_valueTime": {
          "description": "Extensions for valueTime",
          "$ref": "#/definitions/Element"
        },
        "valueString": {
          "description": "The actual value to for an initial answer.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueUri": {
          "description": "The actual value to for an initial answer.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUri": {
          "description": "Extensions for valueUri",
          "$ref": "#/definitions/Element"
        },
        "valueAttachment": {
          "description": "The actual value to for an initial answer.",
          "$ref": "#/definitions/Attachment"
        },
        "valueCoding": {
          "description": "The actual value to for an initial answer.",
          "$ref": "#/definitions/Coding"
        },
        "valueQuantity": {
          "description": "The actual value to for an initial answer.",
          "$ref": "#/definitions/Quantity"
        },
        "valueReference": {
          "description": "The actual value to for an initial answer.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "QuestionnaireResponse": {
      "description": "A structured set of questions and their answers. The questions are ordered and grouped into coherent subsets, corresponding to the structure of the grouping of the questionnaire being responded to.",
      "properties": {
        "resourceType": {
          "description": "This is a QuestionnaireResponse resource",
          "const": "QuestionnaireResponse"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "A business identifier assigned to a particular completed (or partially completed) questionnaire.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "basedOn": {
          "description": "The order, proposal or plan that is fulfilled in whole or in part by this QuestionnaireResponse.  For example, a ServiceRequest seeking an intake assessment or a decision support recommendation to assess for post-partum depression.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "partOf": {
          "description": "A procedure or observation that this questionnaire was performed as part of the execution of.  For example, the surgery a checklist was executed as part of.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "questionnaire": {
          "description": "The Questionnaire that defines and organizes the questions for which answers are being provided.",
          "$ref": "#/definitions/canonical"
        },
        "status": {
          "description": "The position of the questionnaire response within its overall lifecycle.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "subject": {
          "description": "The subject of the questionnaire response.  This could be a patient, organization, practitioner, device, etc.  This is who/what the answers apply to, but is not necessarily the source of information.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "The Encounter during which this questionnaire response was created or to which the creation of this record is tightly associated.",
          "$ref": "#/definitions/Reference"
        },
        "authored": {
          "description": "The date and/or time that this questionnaire response was last modified by the user - e.g. changing answers or revising status.",
          "$ref": "#/definitions/dateTime"
        },
        "_authored": {
          "description": "Extensions for authored",
          "$ref": "#/definitions/Element"
        },
        "author": {
          "description": "The individual or device that received the answers to the questions in the QuestionnaireResponse and recorded them in the system.",
          "$ref": "#/definitions/Reference"
        },
        "source": {
          "description": "The individual or device that answered the questions about the subject.",
          "$ref": "#/definitions/Reference"
        },
        "item": {
          "description": "A group or question item from the original questionnaire for which answers are provided.",
          "items": {
            "$ref": "#/definitions/QuestionnaireResponse_Item"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "questionnaire",
        "resourceType"
      ]
    },
    "QuestionnaireResponse_Item": {
      "description": "A structured set of questions and their answers. The questions are ordered and grouped into coherent subsets, corresponding to the structure of the grouping of the questionnaire being responded to.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "linkId": {
          "description": "The item from the Questionnaire that corresponds to this item in the QuestionnaireResponse resource.",
          "$ref": "#/definitions/string"
        },
        "_linkId": {
          "description": "Extensions for linkId",
          "$ref": "#/definitions/Element"
        },
        "definition": {
          "description": "A reference to an [ElementDefinition](elementdefinition.html) that provides the details for the item.",
          "$ref": "#/definitions/uri"
        },
        "_definition": {
          "description": "Extensions for definition",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "Text that is displayed above the contents of the group or as the text of the question being answered.",
          "$ref": "#/definitions/string"
        },
        "_text": {
          "description": "Extensions for text",
          "$ref": "#/definitions/Element"
        },
        "answer": {
          "description": "The respondent\u0027s answer(s) to the question.",
          "items": {
            "$ref": "#/definitions/QuestionnaireResponse_Answer"
          },
          "type": "array"
        },
        "item": {
          "description": "Sub-questions, sub-groups or display items nested beneath a group.",
          "items": {
            "$ref": "#/definitions/QuestionnaireResponse_Item"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "QuestionnaireResponse_Answer": {
      "description": "A structured set of questions and their answers. The questions are ordered and grouped into coherent subsets, corresponding to the structure of the grouping of the questionnaire being responded to.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "valueBoolean": {
          "description": "The answer (or one of the answers) provided by the respondent to the question.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueDecimal": {
          "description": "The answer (or one of the answers) provided by the respondent to the question.",
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_valueDecimal": {
          "description": "Extensions for valueDecimal",
          "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "description": "The answer (or one of the answers) provided by the respondent to the question.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": {
          "description": "Extensions for valueInteger",
          "$ref": "#/definitions/Element"
        },
        "valueDate": {
          "description": "The answer (or one of the answers) provided by the respondent to the question.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_valueDate": {
          "description": "Extensions for valueDate",
          "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "description": "The answer (or one of the answers) provided by the respondent to the question.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_valueDateTime": {
          "description": "Extensions for valueDateTime",
          "$ref": "#/definitions/Element"
        },
        "valueTime": {
          "description": "The answer (or one of the answers) provided by the respondent to the question.",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?$",
          "type": "string"
        },
        "_valueTime": {
          "description": "Extensions for valueTime",
          "$ref": "#/definitions/Element"
        },
        "valueString": {
          "description": "The answer (or one of the answers) provided by the respondent to the question.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueUri": {
          "description": "The answer (or one of the answers) provided by the respondent to the question.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUri": {
          "description": "Extensions for valueUri",
          "$ref": "#/definitions/Element"
        },
        "valueAttachment": {
          "description": "The answer (or one of the answers) provided by the respondent to the question.",
          "$ref": "#/definitions/Attachment"
        },
        "valueCoding": {
          "description": "The answer (or one of the answers) provided by the respondent to the question.",
          "$ref": "#/definitions/Coding"
        },
        "valueQuantity": {
          "description": "The answer (or one of the answers) provided by the respondent to the question.",
          "$ref": "#/definitions/Quantity"
        },
        "valueReference": {
          "description": "The answer (or one of the answers) provided by the respondent to the question.",
          "$ref": "#/definitions/Reference"
        },
        "item": {
          "description": "Nested groups and/or questions found within this particular answer.",
          "items": {
            "$ref": "#/definitions/QuestionnaireResponse_Item"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "RegulatedAuthorization": {
      "description": "Regulatory approval, clearance or licencing related to a regulated product, treatment, facility or activity that is cited in a guidance, regulation, rule or legislative act. An example is Market Authorization relating to a Medicinal Product.",
      "properties": {
        "resourceType": {
          "description": "This is a RegulatedAuthorization resource",
          "const": "RegulatedAuthorization"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Business identifier for the authorization, typically assigned by the authorizing body.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "subject": {
          "description": "The product type, treatment, facility or activity that is being authorized.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "type": {
          "description": "Overall type of this authorization, for example drug marketing approval, orphan drug designation.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "description": {
          "description": "General textual supporting information.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "region": {
          "description": "The territory (e.g., country, jurisdiction etc.) in which the authorization has been granted.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "status": {
          "description": "The status that is authorised e.g. approved. Intermediate states and actions can be tracked with cases and applications.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "statusDate": {
          "description": "The date at which the current status was assigned.",
          "$ref": "#/definitions/dateTime"
        },
        "_statusDate": {
          "description": "Extensions for statusDate",
          "$ref": "#/definitions/Element"
        },
        "validityPeriod": {
          "description": "The time period in which the regulatory approval, clearance or licencing is in effect. As an example, a Marketing Authorization includes the date of authorization and/or an expiration date.",
          "$ref": "#/definitions/Period"
        },
        "indication": {
          "description": "Condition for which the use of the regulated product applies.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "intendedUse": {
          "description": "The intended use of the product, e.g. prevention, treatment, diagnosis.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "basis": {
          "description": "The legal or regulatory framework against which this authorization is granted, or other reasons for it.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "holder": {
          "description": "The organization that has been granted this authorization, by some authoritative body (the \u0027regulator\u0027).",
          "$ref": "#/definitions/Reference"
        },
        "regulator": {
          "description": "The regulatory authority or authorizing body granting the authorization. For example, European Medicines Agency (EMA), Food and Drug Administration (FDA), Health Canada (HC), etc.",
          "$ref": "#/definitions/Reference"
        },
        "attachedDocument": {
          "description": "Additional information or supporting documentation about the authorization.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "case": {
          "description": "The case or regulatory procedure for granting or amending a regulated authorization. An authorization is granted in response to submissions/applications by those seeking authorization. A case is the administrative process that deals with the application(s) that relate to this and assesses them. Note: This area is subject to ongoing review and the workgroup is seeking implementer feedback on its use (see link at bottom of page).",
          "$ref": "#/definitions/RegulatedAuthorization_Case"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "RegulatedAuthorization_Case": {
      "description": "Regulatory approval, clearance or licencing related to a regulated product, treatment, facility or activity that is cited in a guidance, regulation, rule or legislative act. An example is Market Authorization relating to a Medicinal Product.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifier by which this case can be referenced.",
          "$ref": "#/definitions/Identifier"
        },
        "type": {
          "description": "The defining type of case.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "status": {
          "description": "The status associated with the case.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "datePeriod": {
          "description": "Relevant date for this case.",
          "$ref": "#/definitions/Period"
        },
        "dateDateTime": {
          "description": "Relevant date for this case.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_dateDateTime": {
          "description": "Extensions for dateDateTime",
          "$ref": "#/definitions/Element"
        },
        "application": {
          "description": "A regulatory submission from an organization to a regulator, as part of an assessing case. Multiple applications may occur over time, with more or different information to support or modify the submission or the authorization. The applications can be considered as steps within the longer running case or procedure for this authorization process.",
          "items": {
            "$ref": "#/definitions/RegulatedAuthorization_Case"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "RelatedPerson": {
      "description": "Information about a person that is involved in a patient\u0027s health or the care for a patient, but who is not the target of healthcare, nor has a formal responsibility in the care process.",
      "properties": {
        "resourceType": {
          "description": "This is a RelatedPerson resource",
          "const": "RelatedPerson"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifier for a person within a particular scope.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "active": {
          "description": "Whether this related person record is in active use.",
          "$ref": "#/definitions/boolean"
        },
        "_active": {
          "description": "Extensions for active",
          "$ref": "#/definitions/Element"
        },
        "patient": {
          "description": "The patient this person is related to.",
          "$ref": "#/definitions/Reference"
        },
        "relationship": {
          "description": "The nature of the relationship between the related person and the patient.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "name": {
          "description": "A name associated with the person.",
          "items": {
            "$ref": "#/definitions/HumanName"
          },
          "type": "array"
        },
        "telecom": {
          "description": "A contact detail for the person, e.g. a telephone number or an email address.",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          },
          "type": "array"
        },
        "gender": {
          "description": "Administrative Gender - the gender that the person is considered to have for administration and record keeping purposes.",
          "$ref": "#/definitions/code"
        },
        "_gender": {
          "description": "Extensions for gender",
          "$ref": "#/definitions/Element"
        },
        "birthDate": {
          "description": "The date on which the related person was born.",
          "$ref": "#/definitions/date"
        },
        "_birthDate": {
          "description": "Extensions for birthDate",
          "$ref": "#/definitions/Element"
        },
        "address": {
          "description": "Address where the related person can be contacted or visited.",
          "items": {
            "$ref": "#/definitions/Address"
          },
          "type": "array"
        },
        "photo": {
          "description": "Image of the person.",
          "items": {
            "$ref": "#/definitions/Attachment"
          },
          "type": "array"
        },
        "period": {
          "description": "The period of time during which this relationship is or was active. If there are no dates defined, then the interval is unknown.",
          "$ref": "#/definitions/Period"
        },
        "communication": {
          "description": "A language which may be used to communicate with the related person about the patient\u0027s health.",
          "items": {
            "$ref": "#/definitions/RelatedPerson_Communication"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "patient",
        "resourceType"
      ]
    },
    "RelatedPerson_Communication": {
      "description": "Information about a person that is involved in a patient\u0027s health or the care for a patient, but who is not the target of healthcare, nor has a formal responsibility in the care process.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "language": {
          "description": "The ISO-639-1 alpha 2 code in lower case for the language, optionally followed by a hyphen and the ISO-3166-1 alpha 2 code for the region in upper case; e.g. \"en\" for English, or \"en-US\" for American English versus \"en-AU\" for Australian English.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "preferred": {
          "description": "Indicates whether or not the related person prefers this language (over other languages he or she masters up a certain level).",
          "$ref": "#/definitions/boolean"
        },
        "_preferred": {
          "description": "Extensions for preferred",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "language"
      ]
    },
    "RequestOrchestration": {
      "description": "A set of related requests that can be used to capture intended activities that have inter-dependencies such as \"give this medication after that one\".",
      "properties": {
        "resourceType": {
          "description": "This is a RequestOrchestration resource",
          "const": "RequestOrchestration"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Allows a service to provide a unique, business identifier for the request.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "instantiatesCanonical": {
          "description": "A canonical URL referencing a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this request.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "_instantiatesCanonical": {
          "description": "Extensions for instantiatesCanonical",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "instantiatesUri": {
          "description": "A URL referencing an externally defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this request.",
          "items": {
            "$ref": "#/definitions/uri"
          },
          "type": "array"
        },
        "_instantiatesUri": {
          "description": "Extensions for instantiatesUri",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "basedOn": {
          "description": "A plan, proposal or order that is fulfilled in whole or in part by this request.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "replaces": {
          "description": "Completed or terminated request(s) whose function is taken by this new request.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "groupIdentifier": {
          "description": "A shared identifier common to all requests that were authorized more or less simultaneously by a single author, representing the identifier of the requisition, prescription or similar form.",
          "$ref": "#/definitions/Identifier"
        },
        "status": {
          "description": "The current state of the request. For request orchestrations, the status reflects the status of all the requests in the orchestration.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "intent": {
          "description": "Indicates the level of authority/intentionality associated with the request and where the request fits into the workflow chain.",
          "$ref": "#/definitions/code"
        },
        "_intent": {
          "description": "Extensions for intent",
          "$ref": "#/definitions/Element"
        },
        "priority": {
          "description": "Indicates how quickly the request should be addressed with respect to other requests.",
          "$ref": "#/definitions/code"
        },
        "_priority": {
          "description": "Extensions for priority",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "A code that identifies what the overall request orchestration is.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subject": {
          "description": "The subject for which the request orchestration was created.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "Describes the context of the request orchestration, if any.",
          "$ref": "#/definitions/Reference"
        },
        "authoredOn": {
          "description": "Indicates when the request orchestration was created.",
          "$ref": "#/definitions/dateTime"
        },
        "_authoredOn": {
          "description": "Extensions for authoredOn",
          "$ref": "#/definitions/Element"
        },
        "author": {
          "description": "Provides a reference to the author of the request orchestration.",
          "$ref": "#/definitions/Reference"
        },
        "reason": {
          "description": "Describes the reason for the request orchestration in coded or textual form.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "goal": {
          "description": "Goals that are intended to be achieved by following the requests in this RequestOrchestration.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "note": {
          "description": "Provides a mechanism to communicate additional information about the response.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "action": {
          "description": "The actions, if any, produced by the evaluation of the artifact.",
          "items": {
            "$ref": "#/definitions/RequestOrchestration_Action"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "RequestOrchestration_Action": {
      "description": "A set of related requests that can be used to capture intended activities that have inter-dependencies such as \"give this medication after that one\".",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "linkId": {
          "description": "The linkId of the action from the PlanDefinition that corresponds to this action in the RequestOrchestration resource.",
          "$ref": "#/definitions/string"
        },
        "_linkId": {
          "description": "Extensions for linkId",
          "$ref": "#/definitions/Element"
        },
        "prefix": {
          "description": "A user-visible prefix for the action. For example a section or item numbering such as 1. or A.",
          "$ref": "#/definitions/string"
        },
        "_prefix": {
          "description": "Extensions for prefix",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "The title of the action displayed to a user.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "A short description of the action used to provide a summary to display to the user.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "textEquivalent": {
          "description": "A text equivalent of the action to be performed. This provides a human-interpretable description of the action when the definition is consumed by a system that might not be capable of interpreting it dynamically.",
          "$ref": "#/definitions/string"
        },
        "_textEquivalent": {
          "description": "Extensions for textEquivalent",
          "$ref": "#/definitions/Element"
        },
        "priority": {
          "description": "Indicates how quickly the action should be addressed with respect to other actions.",
          "$ref": "#/definitions/code"
        },
        "_priority": {
          "description": "Extensions for priority",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "A code that provides meaning for the action or action group. For example, a section may have a LOINC code for a section of a documentation template.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "documentation": {
          "description": "Didactic or other informational resources associated with the action that can be provided to the CDS recipient. Information resources can include inline text commentary and links to web resources.",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          },
          "type": "array"
        },
        "goal": {
          "description": "Goals that are intended to be achieved by following the requests in this action.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "condition": {
          "description": "An expression that describes applicability criteria, or start/stop conditions for the action.",
          "items": {
            "$ref": "#/definitions/RequestOrchestration_Condition"
          },
          "type": "array"
        },
        "input": {
          "description": "Defines input data requirements for the action.",
          "items": {
            "$ref": "#/definitions/RequestOrchestration_Input"
          },
          "type": "array"
        },
        "output": {
          "description": "Defines the outputs of the action, if any.",
          "items": {
            "$ref": "#/definitions/RequestOrchestration_Output"
          },
          "type": "array"
        },
        "relatedAction": {
          "description": "A relationship to another action such as \"before\" or \"30-60 minutes after start of\".",
          "items": {
            "$ref": "#/definitions/RequestOrchestration_RelatedAction"
          },
          "type": "array"
        },
        "timingDateTime": {
          "description": "An optional value describing when the action should be performed.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_timingDateTime": {
          "description": "Extensions for timingDateTime",
          "$ref": "#/definitions/Element"
        },
        "timingAge": {
          "description": "An optional value describing when the action should be performed.",
          "$ref": "#/definitions/Age"
        },
        "timingPeriod": {
          "description": "An optional value describing when the action should be performed.",
          "$ref": "#/definitions/Period"
        },
        "timingDuration": {
          "description": "An optional value describing when the action should be performed.",
          "$ref": "#/definitions/Duration"
        },
        "timingRange": {
          "description": "An optional value describing when the action should be performed.",
          "$ref": "#/definitions/Range"
        },
        "timingTiming": {
          "description": "An optional value describing when the action should be performed.",
          "$ref": "#/definitions/Timing"
        },
        "location": {
          "description": "Identifies the facility where the action will occur; e.g. home, hospital, specific clinic, etc.",
          "$ref": "#/definitions/CodeableReference"
        },
        "participant": {
          "description": "The participant that should perform or be responsible for this action.",
          "items": {
            "$ref": "#/definitions/RequestOrchestration_Participant"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of action to perform (create, update, remove).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "groupingBehavior": {
          "description": "Defines the grouping behavior for the action and its children.",
          "$ref": "#/definitions/code"
        },
        "_groupingBehavior": {
          "description": "Extensions for groupingBehavior",
          "$ref": "#/definitions/Element"
        },
        "selectionBehavior": {
          "description": "Defines the selection behavior for the action and its children.",
          "$ref": "#/definitions/code"
        },
        "_selectionBehavior": {
          "description": "Extensions for selectionBehavior",
          "$ref": "#/definitions/Element"
        },
        "requiredBehavior": {
          "description": "Defines expectations around whether an action is required.",
          "$ref": "#/definitions/code"
        },
        "_requiredBehavior": {
          "description": "Extensions for requiredBehavior",
          "$ref": "#/definitions/Element"
        },
        "precheckBehavior": {
          "description": "Defines whether the action should usually be preselected.",
          "$ref": "#/definitions/code"
        },
        "_precheckBehavior": {
          "description": "Extensions for precheckBehavior",
          "$ref": "#/definitions/Element"
        },
        "cardinalityBehavior": {
          "description": "Defines whether the action can be selected multiple times.",
          "$ref": "#/definitions/code"
        },
        "_cardinalityBehavior": {
          "description": "Extensions for cardinalityBehavior",
          "$ref": "#/definitions/Element"
        },
        "resource": {
          "description": "The resource that is the target of the action (e.g. CommunicationRequest).",
          "$ref": "#/definitions/Reference"
        },
        "definitionCanonical": {
          "description": "A reference to an ActivityDefinition that describes the action to be taken in detail, a PlanDefinition that describes a series of actions to be taken, a Questionnaire that should be filled out, a SpecimenDefinition describing a specimen to be collected, or an ObservationDefinition that specifies what observation should be captured.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_definitionCanonical": {
          "description": "Extensions for definitionCanonical",
          "$ref": "#/definitions/Element"
        },
        "definitionUri": {
          "description": "A reference to an ActivityDefinition that describes the action to be taken in detail, a PlanDefinition that describes a series of actions to be taken, a Questionnaire that should be filled out, a SpecimenDefinition describing a specimen to be collected, or an ObservationDefinition that specifies what observation should be captured.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_definitionUri": {
          "description": "Extensions for definitionUri",
          "$ref": "#/definitions/Element"
        },
        "transform": {
          "description": "A reference to a StructureMap resource that defines a transform that can be executed to produce the intent resource using the ActivityDefinition instance as the input.",
          "$ref": "#/definitions/canonical"
        },
        "dynamicValue": {
          "description": "Customizations that should be applied to the statically defined resource. For example, if the dosage of a medication must be computed based on the patient\u0027s weight, a customization would be used to specify an expression that calculated the weight, and the path on the resource that would contain the result.",
          "items": {
            "$ref": "#/definitions/RequestOrchestration_DynamicValue"
          },
          "type": "array"
        },
        "action": {
          "description": "Sub actions.",
          "items": {
            "$ref": "#/definitions/RequestOrchestration_Action"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "RequestOrchestration_Condition": {
      "description": "A set of related requests that can be used to capture intended activities that have inter-dependencies such as \"give this medication after that one\".",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "kind": {
          "description": "The kind of condition.",
          "$ref": "#/definitions/code"
        },
        "_kind": {
          "description": "Extensions for kind",
          "$ref": "#/definitions/Element"
        },
        "expression": {
          "description": "An expression that returns true or false, indicating whether or not the condition is satisfied.",
          "$ref": "#/definitions/Expression"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "RequestOrchestration_Input": {
      "description": "A set of related requests that can be used to capture intended activities that have inter-dependencies such as \"give this medication after that one\".",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "title": {
          "description": "A human-readable label for the data requirement used to label data flows in BPMN or similar diagrams. Also provides a human readable label when rendering the data requirement that conveys its purpose to human readers.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "requirement": {
          "description": "Defines the data that is to be provided as input to the action.",
          "$ref": "#/definitions/DataRequirement"
        },
        "relatedData": {
          "description": "Points to an existing input or output element that provides data to this input.",
          "$ref": "#/definitions/id"
        },
        "_relatedData": {
          "description": "Extensions for relatedData",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "RequestOrchestration_Output": {
      "description": "A set of related requests that can be used to capture intended activities that have inter-dependencies such as \"give this medication after that one\".",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "title": {
          "description": "A human-readable label for the data requirement used to label data flows in BPMN or similar diagrams. Also provides a human readable label when rendering the data requirement that conveys its purpose to human readers.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "requirement": {
          "description": "Defines the data that results as output from the action.",
          "$ref": "#/definitions/DataRequirement"
        },
        "relatedData": {
          "description": "Points to an existing input or output element that is results as output from the action.",
          "$ref": "#/definitions/string"
        },
        "_relatedData": {
          "description": "Extensions for relatedData",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "RequestOrchestration_RelatedAction": {
      "description": "A set of related requests that can be used to capture intended activities that have inter-dependencies such as \"give this medication after that one\".",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "targetId": {
          "description": "The element id of the target related action.",
          "$ref": "#/definitions/id"
        },
        "_targetId": {
          "description": "Extensions for targetId",
          "$ref": "#/definitions/Element"
        },
        "relationship": {
          "description": "The relationship of this action to the related action.",
          "$ref": "#/definitions/code"
        },
        "_relationship": {
          "description": "Extensions for relationship",
          "$ref": "#/definitions/Element"
        },
        "offsetDuration": {
          "description": "A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.",
          "$ref": "#/definitions/Duration"
        },
        "offsetRange": {
          "description": "A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.",
          "$ref": "#/definitions/Range"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "RequestOrchestration_Participant": {
      "description": "A set of related requests that can be used to capture intended activities that have inter-dependencies such as \"give this medication after that one\".",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of participant in the action.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "typeCanonical": {
          "description": "The type of participant in the action.",
          "$ref": "#/definitions/canonical"
        },
        "typeReference": {
          "description": "The type of participant in the action.",
          "$ref": "#/definitions/Reference"
        },
        "role": {
          "description": "The role the participant should play in performing the described action.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "function": {
          "description": "Indicates how the actor will be involved in the action - author, reviewer, witness, etc.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "actorCanonical": {
          "description": "A reference to the actual participant.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_actorCanonical": {
          "description": "Extensions for actorCanonical",
          "$ref": "#/definitions/Element"
        },
        "actorReference": {
          "description": "A reference to the actual participant.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "RequestOrchestration_DynamicValue": {
      "description": "A set of related requests that can be used to capture intended activities that have inter-dependencies such as \"give this medication after that one\".",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "path": {
          "description": "The path to the element to be customized. This is the path on the resource that will hold the result of the calculation defined by the expression. The specified path SHALL be a FHIRPath resolveable on the specified target type of the ActivityDefinition, and SHALL consist only of identifiers, constant indexers, and a restricted subset of functions. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).",
          "$ref": "#/definitions/string"
        },
        "_path": {
          "description": "Extensions for path",
          "$ref": "#/definitions/Element"
        },
        "expression": {
          "description": "An expression specifying the value of the customized element.",
          "$ref": "#/definitions/Expression"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Requirements": {
      "description": "A set of requirements - a list of features or behaviors of designed systems that are necessary to achieve organizational or regulatory goals.",
      "properties": {
        "resourceType": {
          "description": "This is a Requirements resource",
          "const": "Requirements"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this Requirements when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this Requirements is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the Requirements is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this Requirements when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the Requirements when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the Requirements author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the Requirements. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the Requirements.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this Requirements. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this Requirements is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the Requirements was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the Requirements changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the Requirements.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the actor.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate Requirements instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the Requirements is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this Requirements is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the Requirements and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the Requirements.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "derivedFrom": {
          "description": "Another set of Requirements that this set of Requirements builds on and updates.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "actor": {
          "description": "An actor these requirements are in regard to.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "statement": {
          "description": "The actual statement of requirement, in markdown format.",
          "items": {
            "$ref": "#/definitions/Requirements_Statement"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Requirements_Statement": {
      "description": "A set of requirements - a list of features or behaviors of designed systems that are necessary to achieve organizational or regulatory goals.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "key": {
          "description": "Key that identifies this statement (unique within this resource).",
          "$ref": "#/definitions/id"
        },
        "_key": {
          "description": "Extensions for key",
          "$ref": "#/definitions/Element"
        },
        "label": {
          "description": "A short human usable label for this statement.",
          "$ref": "#/definitions/string"
        },
        "_label": {
          "description": "Extensions for label",
          "$ref": "#/definitions/Element"
        },
        "conformance": {
          "description": "A short human usable label for this statement.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_conformance": {
          "description": "Extensions for conformance",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "conditionality": {
          "description": "This boolean flag is set to true of the text of the requirement is conditional on something e.g. it includes lanauage like \u0027if x then y\u0027. This conditionality flag is introduced for purposes of filtering and colour highlighting etc.",
          "$ref": "#/definitions/boolean"
        },
        "_conditionality": {
          "description": "Extensions for conditionality",
          "$ref": "#/definitions/Element"
        },
        "requirement": {
          "description": "The actual requirement for human consumption.",
          "$ref": "#/definitions/markdown"
        },
        "_requirement": {
          "description": "Extensions for requirement",
          "$ref": "#/definitions/Element"
        },
        "derivedFrom": {
          "description": "Another statement on one of the requirements that this requirement clarifies or restricts.",
          "$ref": "#/definitions/string"
        },
        "_derivedFrom": {
          "description": "Extensions for derivedFrom",
          "$ref": "#/definitions/Element"
        },
        "parent": {
          "description": "A larger requirement that this requirement helps to refine and enable.",
          "$ref": "#/definitions/string"
        },
        "_parent": {
          "description": "Extensions for parent",
          "$ref": "#/definitions/Element"
        },
        "satisfiedBy": {
          "description": "A reference to another artifact that satisfies this requirement. This could be a Profile, extension, or an element in one of those, or a CapabilityStatement, OperationDefinition, SearchParameter, CodeSystem(/code), ValueSet, Libary etc.",
          "items": {
            "$ref": "#/definitions/url"
          },
          "type": "array"
        },
        "_satisfiedBy": {
          "description": "Extensions for satisfiedBy",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "reference": {
          "description": "A reference to another artifact that created this requirement. This could be a Profile, etc, or external regulation, or business requirements expressed elsewhere.",
          "items": {
            "$ref": "#/definitions/url"
          },
          "type": "array"
        },
        "_reference": {
          "description": "Extensions for reference",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "source": {
          "description": "Who asked for this statement to be a requirement. By default, it\u0027s assumed that the publisher knows who it is if it matters.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ResearchStudy": {
      "description": "A scientific study of nature that sometimes includes processes involved in health and disease. For example, clinical trials are research studies that involve people. These studies may be related to new ways to screen, prevent, diagnose, and treat disease. They may also study certain outcomes and certain groups of people by looking at data collected in the past or future.",
      "properties": {
        "resourceType": {
          "description": "This is a ResearchStudy resource",
          "const": "ResearchStudy"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "Canonical identifier for this study resource, represented as a globally unique URI.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "Identifiers assigned to this research study by the sponsor or other systems.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The business version for the study record.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "name": {
          "description": "Name for this study (computer friendly).",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "The human readable name of the research study.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "label": {
          "description": "Additional names for the study.",
          "items": {
            "$ref": "#/definitions/ResearchStudy_Label"
          },
          "type": "array"
        },
        "protocol": {
          "description": "The set of steps expected to be performed as part of the execution of the study.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "partOf": {
          "description": "A larger research study of which this particular study is a component or step.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "relatedArtifact": {
          "description": "Citations, references, URLs and other related documents.  When using relatedArtifact to share URLs, the relatedArtifact.type will often be set to one of \"documentation\" or \"supported-with\" and the URL value will often be in relatedArtifact.document.url but another possible location is relatedArtifact.resource when it is a canonical URL.",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          },
          "type": "array"
        },
        "date": {
          "description": "The date (and optionally time) when the ResearchStudy Resource was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the ResearchStudy Resource changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The publication state of the resource (not of the study).",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "primaryPurposeType": {
          "description": "The type of study based upon the intent of the study activities. A classification of the intent of the study.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "phase": {
          "description": "The stage in the progression of a therapy from initial experimental use in humans in clinical trials to post-market evaluation.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "studyDesign": {
          "description": "Codes categorizing the type of study such as investigational vs. observational, type of blinding, type of randomization, safety vs. efficacy, etc.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "focus": {
          "description": "The medication(s), food(s), therapy(ies), device(s) or other concerns or interventions that the study is seeking to gain more information about.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "condition": {
          "description": "The condition that is the focus of the study.  For example, In a study to examine risk factors for Lupus, might have as an inclusion criterion \"healthy volunteer\", but the target condition code would be a Lupus SNOMED code.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "keyword": {
          "description": "Key terms to aid in searching for or filtering the study.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "region": {
          "description": "A country, state or other area where the study is taking place rather than its precise geographic location or address.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "descriptionSummary": {
          "description": "A brief text for explaining the study.",
          "$ref": "#/definitions/markdown"
        },
        "_descriptionSummary": {
          "description": "Extensions for descriptionSummary",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "A detailed and human-readable narrative of the study. E.g., study abstract.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "period": {
          "description": "Identifies the start date and the expected (or actual, depending on status) end date for the study.",
          "$ref": "#/definitions/Period"
        },
        "site": {
          "description": "A facility in which study activities are conducted.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "note": {
          "description": "Comments made about the study by the performer, subject or other participants.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "classifier": {
          "description": "Additional grouping mechanism or categorization of a research study. Example: FDA regulated device, FDA regulated drug, MPG Paragraph 23b (a German legal requirement), IRB-exempt, etc. Implementation Note: do not use the classifier element to support existing semantics that are already supported thru explicit elements in the resource.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "associatedParty": {
          "description": "Sponsors, collaborators, and other parties.",
          "items": {
            "$ref": "#/definitions/ResearchStudy_AssociatedParty"
          },
          "type": "array"
        },
        "progressStatus": {
          "description": "Status of study with time for that status.",
          "items": {
            "$ref": "#/definitions/ResearchStudy_ProgressStatus"
          },
          "type": "array"
        },
        "whyStopped": {
          "description": "A description and/or code explaining the premature termination of the study.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "recruitment": {
          "description": "Target or actual group of participants enrolled in study.",
          "$ref": "#/definitions/ResearchStudy_Recruitment"
        },
        "comparisonGroup": {
          "description": "Describes an expected event or sequence of events for one of the subjects of a study. E.g. for a living subject: exposure to drug A, wash-out, exposure to drug B, wash-out, follow-up. E.g. for a stability study: {store sample from lot A at 25 degrees for 1 month}, {store sample from lot A at 40 degrees for 1 month}.",
          "items": {
            "$ref": "#/definitions/ResearchStudy_ComparisonGroup"
          },
          "type": "array"
        },
        "objective": {
          "description": "A goal that the study is aiming to achieve in terms of a scientific question to be answered by the analysis of data collected during the study.",
          "items": {
            "$ref": "#/definitions/ResearchStudy_Objective"
          },
          "type": "array"
        },
        "outcomeMeasure": {
          "description": "An \"outcome measure\", \"endpoint\", \"effect measure\" or \"measure of effect\" is a specific measurement or observation used to quantify the effect of experimental variables on the participants in a study, or for observational studies, to describe patterns of diseases or traits or associations with exposures, risk factors or treatment.",
          "items": {
            "$ref": "#/definitions/ResearchStudy_OutcomeMeasure"
          },
          "type": "array"
        },
        "result": {
          "description": "Link to one or more sets of results generated by the study.  Could also link to a research registry holding the results such as ClinicalTrials.gov.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "ResearchStudy_Label": {
      "description": "A scientific study of nature that sometimes includes processes involved in health and disease. For example, clinical trials are research studies that involve people. These studies may be related to new ways to screen, prevent, diagnose, and treat disease. They may also study certain outcomes and certain groups of people by looking at data collected in the past or future.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Kind of name.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "value": {
          "description": "The name.",
          "$ref": "#/definitions/string"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ResearchStudy_AssociatedParty": {
      "description": "A scientific study of nature that sometimes includes processes involved in health and disease. For example, clinical trials are research studies that involve people. These studies may be related to new ways to screen, prevent, diagnose, and treat disease. They may also study certain outcomes and certain groups of people by looking at data collected in the past or future.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "Name of associated party.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "role": {
          "description": "Type of association.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "period": {
          "description": "Identifies the start date and the end date of the associated party in the role.",
          "items": {
            "$ref": "#/definitions/Period"
          },
          "type": "array"
        },
        "classifier": {
          "description": "A categorization other than role for the associated party.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "party": {
          "description": "Individual or organization associated with study (use practitionerRole to specify their organisation).",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "role"
      ]
    },
    "ResearchStudy_ProgressStatus": {
      "description": "A scientific study of nature that sometimes includes processes involved in health and disease. For example, clinical trials are research studies that involve people. These studies may be related to new ways to screen, prevent, diagnose, and treat disease. They may also study certain outcomes and certain groups of people by looking at data collected in the past or future.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "state": {
          "description": "Label for status or state (e.g. recruitment status).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "actual": {
          "description": "An indication of whether or not the date is a known date when the state changed or will change. A value of true indicates a known date. A value of false indicates an estimated date.",
          "$ref": "#/definitions/boolean"
        },
        "_actual": {
          "description": "Extensions for actual",
          "$ref": "#/definitions/Element"
        },
        "period": {
          "description": "Date range.",
          "$ref": "#/definitions/Period"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "state"
      ]
    },
    "ResearchStudy_Recruitment": {
      "description": "A scientific study of nature that sometimes includes processes involved in health and disease. For example, clinical trials are research studies that involve people. These studies may be related to new ways to screen, prevent, diagnose, and treat disease. They may also study certain outcomes and certain groups of people by looking at data collected in the past or future.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "targetNumber": {
          "description": "Estimated total number of participants to be enrolled.",
          "$ref": "#/definitions/unsignedInt"
        },
        "_targetNumber": {
          "description": "Extensions for targetNumber",
          "$ref": "#/definitions/Element"
        },
        "actualNumber": {
          "description": "Actual total number of participants enrolled in study.",
          "$ref": "#/definitions/unsignedInt"
        },
        "_actualNumber": {
          "description": "Extensions for actualNumber",
          "$ref": "#/definitions/Element"
        },
        "eligibility": {
          "description": "Inclusion and exclusion criteria.",
          "$ref": "#/definitions/Reference"
        },
        "actualGroup": {
          "description": "Group of participants who were enrolled in study.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ResearchStudy_ComparisonGroup": {
      "description": "A scientific study of nature that sometimes includes processes involved in health and disease. For example, clinical trials are research studies that involve people. These studies may be related to new ways to screen, prevent, diagnose, and treat disease. They may also study certain outcomes and certain groups of people by looking at data collected in the past or future.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Allows the comparisonGroup for the study and the comparisonGroup for the subject to be linked easily.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "name": {
          "description": "Unique, human-readable label for this comparisonGroup of the study.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "Categorization of study comparisonGroup, e.g. experimental, active comparator, placebo comparater.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "description": {
          "description": "A succinct description of the path through the study that would be followed by a subject adhering to this comparisonGroup.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "intendedExposure": {
          "description": "Interventions or exposures in this comparisonGroup or cohort.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "observedGroup": {
          "description": "Group of participants who were enrolled in study comparisonGroup.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ResearchStudy_Objective": {
      "description": "A scientific study of nature that sometimes includes processes involved in health and disease. For example, clinical trials are research studies that involve people. These studies may be related to new ways to screen, prevent, diagnose, and treat disease. They may also study certain outcomes and certain groups of people by looking at data collected in the past or future.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "Unique, human-readable label for this objective of the study.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "The kind of study objective.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "description": {
          "description": "Free text description of the objective of the study.  This is what the study is trying to achieve rather than how it is going to achieve it (see ResearchStudy.description).",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ResearchStudy_OutcomeMeasure": {
      "description": "A scientific study of nature that sometimes includes processes involved in health and disease. For example, clinical trials are research studies that involve people. These studies may be related to new ways to screen, prevent, diagnose, and treat disease. They may also study certain outcomes and certain groups of people by looking at data collected in the past or future.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "Label for the outcome.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "The parameter or characteristic being assessed as one of the values by which the study is assessed.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "description": {
          "description": "Description of the outcome.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "reference": {
          "description": "Structured outcome definition.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ResearchSubject": {
      "description": "A physical entity which is the primary unit of operational and/or administrative interest in a study.",
      "properties": {
        "resourceType": {
          "description": "This is a ResearchSubject resource",
          "const": "ResearchSubject"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifiers assigned to this research subject for a study.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "The publication state of the resource (not of the subject).",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "progress": {
          "description": "The current state (status) of the subject and resons for status change where appropriate.",
          "items": {
            "$ref": "#/definitions/ResearchSubject_Progress"
          },
          "type": "array"
        },
        "period": {
          "description": "The dates the subject began and ended their participation in the study.",
          "$ref": "#/definitions/Period"
        },
        "study": {
          "description": "Reference to the study the subject is participating in.",
          "$ref": "#/definitions/Reference"
        },
        "subject": {
          "description": "The record of the person, animal or other entity involved in the study.",
          "$ref": "#/definitions/Reference"
        },
        "assignedArm": {
          "description": "The name of the arm in the study the subject is expected to follow as part of this study.",
          "$ref": "#/definitions/string"
        },
        "_assignedArm": {
          "description": "Extensions for assignedArm",
          "$ref": "#/definitions/Element"
        },
        "actualArm": {
          "description": "The name of the arm in the study the subject actually followed as part of this study.",
          "$ref": "#/definitions/string"
        },
        "_actualArm": {
          "description": "Extensions for actualArm",
          "$ref": "#/definitions/Element"
        },
        "consent": {
          "description": "A record of the patient\u0027s informed agreement to participate in the study.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "study",
        "subject",
        "resourceType"
      ]
    },
    "ResearchSubject_Progress": {
      "description": "A physical entity which is the primary unit of operational and/or administrative interest in a study.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Identifies the aspect of the subject\u0027s journey that the state refers to.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subjectState": {
          "description": "The current state of the subject.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "milestone": {
          "description": "The milestones the subject has passed through.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "reason": {
          "description": "The reason for the state change.  If coded it should follow the formal subject state model.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "startDate": {
          "description": "The date when the new status started.",
          "$ref": "#/definitions/dateTime"
        },
        "_startDate": {
          "description": "Extensions for startDate",
          "$ref": "#/definitions/Element"
        },
        "endDate": {
          "description": "The date when the state ended.",
          "$ref": "#/definitions/dateTime"
        },
        "_endDate": {
          "description": "Extensions for endDate",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "RiskAssessment": {
      "description": "An assessment of the likely outcome(s) for a patient or other subject as well as the likelihood of each outcome.",
      "properties": {
        "resourceType": {
          "description": "This is a RiskAssessment resource",
          "const": "RiskAssessment"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Business identifier assigned to the risk assessment.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "basedOn": {
          "description": "A reference to the request that is fulfilled by this risk assessment.",
          "$ref": "#/definitions/Reference"
        },
        "parent": {
          "description": "A reference to a resource that this risk assessment is part of, such as a Procedure.",
          "$ref": "#/definitions/Reference"
        },
        "status": {
          "description": "The status of the RiskAssessment, using the same statuses as an Observation.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "method": {
          "description": "The algorithm, process or mechanism used to evaluate the risk.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "code": {
          "description": "The type of the risk assessment performed.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subject": {
          "description": "The patient or group the risk assessment applies to.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "The encounter where the assessment was performed.",
          "$ref": "#/definitions/Reference"
        },
        "occurrenceDateTime": {
          "description": "The date (and possibly time) the risk assessment was performed.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_occurrenceDateTime": {
          "description": "Extensions for occurrenceDateTime",
          "$ref": "#/definitions/Element"
        },
        "occurrencePeriod": {
          "description": "The date (and possibly time) the risk assessment was performed.",
          "$ref": "#/definitions/Period"
        },
        "condition": {
          "description": "For assessments or prognosis specific to a particular condition, indicates the condition being assessed.",
          "$ref": "#/definitions/Reference"
        },
        "performer": {
          "description": "The provider, patient, related person, or software application that performed the assessment.",
          "$ref": "#/definitions/Reference"
        },
        "reason": {
          "description": "The reason the risk assessment was performed.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "basis": {
          "description": "Indicates the source data considered as part of the assessment (for example, FamilyHistory, Observations, Procedures, Conditions, etc.).",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "prediction": {
          "description": "Describes the expected outcome for the subject.",
          "items": {
            "$ref": "#/definitions/RiskAssessment_Prediction"
          },
          "type": "array"
        },
        "mitigation": {
          "description": "A description of the steps that might be taken to reduce the identified risk(s).",
          "$ref": "#/definitions/string"
        },
        "_mitigation": {
          "description": "Extensions for mitigation",
          "$ref": "#/definitions/Element"
        },
        "note": {
          "description": "Additional comments about the risk assessment.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "subject",
        "resourceType"
      ]
    },
    "RiskAssessment_Prediction": {
      "description": "An assessment of the likely outcome(s) for a patient or other subject as well as the likelihood of each outcome.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "outcome": {
          "description": "One of the potential outcomes for the patient (e.g. remission, death,  a particular condition).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "probabilityDecimal": {
          "description": "Indicates how likely the outcome is (in the specified timeframe).",
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_probabilityDecimal": {
          "description": "Extensions for probabilityDecimal",
          "$ref": "#/definitions/Element"
        },
        "probabilityRange": {
          "description": "Indicates how likely the outcome is (in the specified timeframe).",
          "$ref": "#/definitions/Range"
        },
        "qualitativeRisk": {
          "description": "Indicates how likely the outcome is (in the specified timeframe), expressed as a qualitative value (e.g. low, medium, or high).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "relativeRisk": {
          "description": "Indicates the risk for this particular subject (with their specific characteristics) divided by the risk of the population in general.  (Numbers greater than 1 \u003d higher risk than the population, numbers less than 1 \u003d lower risk.).",
          "$ref": "#/definitions/decimal"
        },
        "_relativeRisk": {
          "description": "Extensions for relativeRisk",
          "$ref": "#/definitions/Element"
        },
        "whenPeriod": {
          "description": "Indicates the period of time or age range of the subject to which the specified probability applies.",
          "$ref": "#/definitions/Period"
        },
        "whenRange": {
          "description": "Indicates the period of time or age range of the subject to which the specified probability applies.",
          "$ref": "#/definitions/Range"
        },
        "rationale": {
          "description": "Additional information explaining the basis for the prediction.",
          "$ref": "#/definitions/string"
        },
        "_rationale": {
          "description": "Extensions for rationale",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Schedule": {
      "description": "A container for slots of time that may be available for booking appointments.",
      "properties": {
        "resourceType": {
          "description": "This is a Schedule resource",
          "const": "Schedule"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "External Ids for this item.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "active": {
          "description": "Whether this schedule record is in active use or should not be used (such as was entered in error).",
          "$ref": "#/definitions/boolean"
        },
        "_active": {
          "description": "Extensions for active",
          "$ref": "#/definitions/Element"
        },
        "serviceCategory": {
          "description": "A broad categorization of the service that is to be performed during this appointment.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "serviceType": {
          "description": "The specific service that is to be performed during this appointment.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "specialty": {
          "description": "The specialty of a practitioner that would be required to perform the service requested in this appointment.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "name": {
          "description": "Further description of the schedule as it would be presented to a consumer while searching.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "actor": {
          "description": "Slots that reference this schedule resource provide the availability details to these referenced resource(s).",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "planningHorizon": {
          "description": "The period of time that the slots that reference this Schedule resource cover (even if none exist). These  cover the amount of time that an organization\u0027s planning horizon; the interval for which they are currently accepting appointments. This does not define a \"template\" for planning outside these dates.",
          "$ref": "#/definitions/Period"
        },
        "comment": {
          "description": "Comments on the availability to describe any extended information. Such as custom constraints on the slots that may be associated.",
          "$ref": "#/definitions/string"
        },
        "_comment": {
          "description": "Extensions for comment",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "actor",
        "resourceType"
      ]
    },
    "SearchParameter": {
      "description": "A search parameter that defines a named search item that can be used to search/filter on a resource.",
      "properties": {
        "resourceType": {
          "description": "This is a SearchParameter resource",
          "const": "SearchParameter"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this search parameter when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this search parameter is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the search parameter is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this {{title}} when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the search parameter when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the search parameter author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the search parameter. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the search parameter.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this search parameter. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this search parameter is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the search parameter was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the search parameter changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual tresponsible for the release and ongoing maintenance of the search parameter.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "And how it used.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate search parameter instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the search parameter is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this search parameter is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the {{title}} and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the {{title}}.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "derivedFrom": {
          "description": "Where this search parameter is originally defined. If a derivedFrom is provided, then the details in the search parameter must be consistent with the definition from which it is defined. i.e. the parameter should have the same meaning, and (usually) the functionality should be a proper subset of the underlying search parameter.",
          "$ref": "#/definitions/canonical"
        },
        "code": {
          "description": "The label that is recommended to be used in the URL or the parameter name in a parameters resource for this search parameter.  In some cases, servers may need to use a different CapabilityStatement searchParam.name to differentiate between multiple SearchParameters that happen to have the same code.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "base": {
          "description": "The base resource type(s) that this search parameter can be used against.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_base": {
          "description": "Extensions for base",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of value that a search parameter may contain, and how the content is interpreted.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "expression": {
          "description": "A FHIRPath expression that returns a set of elements for the search parameter.",
          "$ref": "#/definitions/string"
        },
        "_expression": {
          "description": "Extensions for expression",
          "$ref": "#/definitions/Element"
        },
        "processingMode": {
          "description": "How the search parameter relates to the set of elements returned by evaluating the expression query.",
          "$ref": "#/definitions/code"
        },
        "_processingMode": {
          "description": "Extensions for processingMode",
          "$ref": "#/definitions/Element"
        },
        "constraint": {
          "description": "FHIRPath expression that defines/sets a complex constraint for when this SearchParameter is applicable.",
          "$ref": "#/definitions/string"
        },
        "_constraint": {
          "description": "Extensions for constraint",
          "$ref": "#/definitions/Element"
        },
        "target": {
          "description": "Types of resource (if a resource is referenced).",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_target": {
          "description": "Extensions for target",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "multipleOr": {
          "description": "Whether multiple values are allowed for each time the parameter exists. Values are separated by commas, and the parameter matches if any of the values match.",
          "$ref": "#/definitions/boolean"
        },
        "_multipleOr": {
          "description": "Extensions for multipleOr",
          "$ref": "#/definitions/Element"
        },
        "multipleAnd": {
          "description": "Whether multiple parameters are allowed - e.g. more than one parameter with the same name. The search matches if all the parameters match.",
          "$ref": "#/definitions/boolean"
        },
        "_multipleAnd": {
          "description": "Extensions for multipleAnd",
          "$ref": "#/definitions/Element"
        },
        "comparator": {
          "description": "Comparators supported for the search parameter.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_comparator": {
          "description": "Extensions for comparator",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "modifier": {
          "description": "A modifier supported for the search parameter.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_modifier": {
          "description": "Extensions for modifier",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "chain": {
          "description": "Contains the names of any search parameters which may be chained to the containing search parameter. Chained parameters may be added to search parameters of type reference and specify that resources will only be returned if they contain a reference to a resource which matches the chained parameter value. Values for this field should be drawn from SearchParameter.code for a parameter on the target resource type.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_chain": {
          "description": "Extensions for chain",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "component": {
          "description": "Used to define the parts of a composite search parameter.",
          "items": {
            "$ref": "#/definitions/SearchParameter_Component"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "SearchParameter_Component": {
      "description": "A search parameter that defines a named search item that can be used to search/filter on a resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "definition": {
          "description": "The definition of the search parameter that describes this part.",
          "$ref": "#/definitions/canonical"
        },
        "expression": {
          "description": "A sub-expression that defines how to extract values for this component from the output of the main SearchParameter.expression.",
          "$ref": "#/definitions/string"
        },
        "_expression": {
          "description": "Extensions for expression",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "definition"
      ]
    },
    "ServiceRequest": {
      "description": "A record of a request for service such as diagnostic investigations, treatments, or operations to be performed.",
      "properties": {
        "resourceType": {
          "description": "This is a ServiceRequest resource",
          "const": "ServiceRequest"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifiers assigned to this order instance by the orderer and/or the receiver and/or order fulfiller.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "instantiatesCanonical": {
          "description": "The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this ServiceRequest.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "instantiatesUri": {
          "description": "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this ServiceRequest.",
          "items": {
            "$ref": "#/definitions/uri"
          },
          "type": "array"
        },
        "_instantiatesUri": {
          "description": "Extensions for instantiatesUri",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "basedOn": {
          "description": "Plan/proposal/order fulfilled by this request.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "replaces": {
          "description": "The request takes the place of the referenced completed or terminated request(s).",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "requisition": {
          "description": "A shared identifier common to all service requests that were authorized more or less simultaneously by a single author, representing the composite or group identifier.",
          "$ref": "#/definitions/Identifier"
        },
        "status": {
          "description": "The status of the order.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "intent": {
          "description": "Whether the request is a proposal, plan, an original order or a reflex order.",
          "$ref": "#/definitions/code"
        },
        "_intent": {
          "description": "Extensions for intent",
          "$ref": "#/definitions/Element"
        },
        "category": {
          "description": "A code that classifies the service for searching, sorting and display purposes (e.g. \"Surgical Procedure\").",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "priority": {
          "description": "Indicates how quickly the ServiceRequest should be addressed with respect to other requests.",
          "$ref": "#/definitions/code"
        },
        "_priority": {
          "description": "Extensions for priority",
          "$ref": "#/definitions/Element"
        },
        "doNotPerform": {
          "description": "Set this to true if the record is saying that the service/procedure should NOT be performed.",
          "$ref": "#/definitions/boolean"
        },
        "_doNotPerform": {
          "description": "Extensions for doNotPerform",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "A code or reference that identifies a particular service (i.e., procedure, diagnostic investigation, or panel of investigations) that have been requested.",
          "$ref": "#/definitions/CodeableReference"
        },
        "orderDetail": {
          "description": "Additional details and instructions about the how the services are to be delivered.   For example, and order for a urinary catheter may have an order detail for an external or indwelling catheter, or an order for a bandage may require additional instructions specifying how the bandage should be applied.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "quantityQuantity": {
          "description": "An amount of service being requested which can be a quantity ( for example $1,500 home modification), a ratio ( for example, 20 half day visits per month), or a range (2.0 to 1.8 Gy per fraction).",
          "$ref": "#/definitions/Quantity"
        },
        "quantityRatio": {
          "description": "An amount of service being requested which can be a quantity ( for example $1,500 home modification), a ratio ( for example, 20 half day visits per month), or a range (2.0 to 1.8 Gy per fraction).",
          "$ref": "#/definitions/Ratio"
        },
        "quantityRange": {
          "description": "An amount of service being requested which can be a quantity ( for example $1,500 home modification), a ratio ( for example, 20 half day visits per month), or a range (2.0 to 1.8 Gy per fraction).",
          "$ref": "#/definitions/Range"
        },
        "subject": {
          "description": "On whom or what the service is to be performed. This is usually a human patient, but can also be requested on animals, groups of humans or animals, devices such as dialysis machines, or even locations (typically for environmental scans).",
          "$ref": "#/definitions/Reference"
        },
        "focus": {
          "description": "The actual focus of a service request when it is not the subject of record representing something or someone associated with the subject such as a spouse, parent, fetus, or donor. The focus of a service request could also be an existing condition,  an intervention, the subject\u0027s diet,  another service request on the subject,  or a body structure such as tumor or implanted device.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "encounter": {
          "description": "An encounter that provides additional information about the healthcare context in which this request is made.",
          "$ref": "#/definitions/Reference"
        },
        "occurrenceDateTime": {
          "description": "The date/time at which the requested service should occur.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_occurrenceDateTime": {
          "description": "Extensions for occurrenceDateTime",
          "$ref": "#/definitions/Element"
        },
        "occurrencePeriod": {
          "description": "The date/time at which the requested service should occur.",
          "$ref": "#/definitions/Period"
        },
        "occurrenceTiming": {
          "description": "The date/time at which the requested service should occur.",
          "$ref": "#/definitions/Timing"
        },
        "asNeededBoolean": {
          "description": "If a CodeableConcept is present, it indicates the pre-condition for performing the service.  For example \"pain\", \"on flare-up\", etc.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_asNeededBoolean": {
          "description": "Extensions for asNeededBoolean",
          "$ref": "#/definitions/Element"
        },
        "asNeededCodeableConcept": {
          "description": "If a CodeableConcept is present, it indicates the pre-condition for performing the service.  For example \"pain\", \"on flare-up\", etc.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "authoredOn": {
          "description": "When the request transitioned to being actionable.",
          "$ref": "#/definitions/dateTime"
        },
        "_authoredOn": {
          "description": "Extensions for authoredOn",
          "$ref": "#/definitions/Element"
        },
        "requester": {
          "description": "The individual who initiated the request and has responsibility for its activation.",
          "$ref": "#/definitions/Reference"
        },
        "performerType": {
          "description": "Desired type of performer for doing the requested service.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "performer": {
          "description": "The desired performer for doing the requested service.  For example, the surgeon, dermatopathologist, endoscopist, etc.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "location": {
          "description": "The preferred location(s) where the procedure should actually happen in coded or free text form. E.g. at home or nursing day care center.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "reason": {
          "description": "An explanation or justification for why this service is being requested in coded or textual form.   This is often for billing purposes.  May relate to the resources referred to in `supportingInfo`.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "insurance": {
          "description": "Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be needed for delivering the requested service.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "supportingInfo": {
          "description": "Additional clinical information about the patient or specimen that may influence the services or their interpretations.     This information includes diagnosis, clinical findings and other observations.  In laboratory ordering these are typically referred to as \"ask at order entry questions (AOEs)\".  This includes observations explicitly requested by the producer (filler) to provide context or supporting information needed to complete the order. For example,  reporting the amount of inspired oxygen for blood gas measurements.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "specimen": {
          "description": "One or more specimens that the laboratory procedure will use.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "bodySite": {
          "description": "Anatomic location where the procedure should be performed. This is the target site.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "bodyStructure": {
          "description": "Anatomic location where the procedure should be performed. This is the target site.",
          "$ref": "#/definitions/Reference"
        },
        "note": {
          "description": "Any other notes and comments made about the service request. For example, internal billing notes.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "patientInstruction": {
          "description": "Instructions in terms that are understood by the patient or consumer.",
          "$ref": "#/definitions/string"
        },
        "_patientInstruction": {
          "description": "Extensions for patientInstruction",
          "$ref": "#/definitions/Element"
        },
        "relevantHistory": {
          "description": "Key events in the history of the request.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "subject",
        "resourceType"
      ]
    },
    "Slot": {
      "description": "A slot of time on a schedule that may be available for booking appointments.",
      "properties": {
        "resourceType": {
          "description": "This is a Slot resource",
          "const": "Slot"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "External Ids for this item.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "serviceCategory": {
          "description": "A broad categorization of the service that is to be performed during this appointment.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "serviceType": {
          "description": "The type of appointments that can be booked into this slot (ideally this would be an identifiable service - which is at a location, rather than the location itself). If provided then this overrides the value provided on the Schedule resource.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "specialty": {
          "description": "The specialty of a practitioner that would be required to perform the service requested in this appointment.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "appointmentType": {
          "description": "The style of appointment or patient that may be booked in the slot (not service type).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "schedule": {
          "description": "The schedule resource that this slot defines an interval of status information.",
          "$ref": "#/definitions/Reference"
        },
        "status": {
          "description": "busy | free | busy-unavailable | busy-tentative | entered-in-error.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "start": {
          "description": "Date/Time that the slot is to begin.",
          "$ref": "#/definitions/instant"
        },
        "_start": {
          "description": "Extensions for start",
          "$ref": "#/definitions/Element"
        },
        "end": {
          "description": "Date/Time that the slot is to conclude.",
          "$ref": "#/definitions/instant"
        },
        "_end": {
          "description": "Extensions for end",
          "$ref": "#/definitions/Element"
        },
        "overbooked": {
          "description": "This slot has already been overbooked, appointments are unlikely to be accepted for this time.",
          "$ref": "#/definitions/boolean"
        },
        "_overbooked": {
          "description": "Extensions for overbooked",
          "$ref": "#/definitions/Element"
        },
        "comment": {
          "description": "Comments on the slot to describe any extended information. Such as custom constraints on the slot.",
          "$ref": "#/definitions/string"
        },
        "_comment": {
          "description": "Extensions for comment",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "schedule",
        "resourceType"
      ]
    },
    "Specimen": {
      "description": "A sample to be used for analysis.",
      "properties": {
        "resourceType": {
          "description": "This is a Specimen resource",
          "const": "Specimen"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Id for specimen.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "accessionIdentifier": {
          "description": "The identifier assigned by the lab when accessioning specimen(s). This is not necessarily the same as the specimen identifier, depending on local lab procedures.",
          "$ref": "#/definitions/Identifier"
        },
        "status": {
          "description": "The availability of the specimen.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "The kind of material that forms the specimen.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subject": {
          "description": "Where the specimen came from. This may be from patient(s), from a location (e.g., the source of an environmental sample), or a sampling of a substance, a biologically-derived product, or a device.",
          "$ref": "#/definitions/Reference"
        },
        "receivedTime": {
          "description": "Time when specimen is received by the testing laboratory for processing or testing.",
          "$ref": "#/definitions/dateTime"
        },
        "_receivedTime": {
          "description": "Extensions for receivedTime",
          "$ref": "#/definitions/Element"
        },
        "parent": {
          "description": "Reference to the parent (source) specimen which is used when the specimen was either derived from or a component of another specimen.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "request": {
          "description": "Details concerning a service request that required a specimen to be collected.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "combined": {
          "description": "This element signifies if the specimen is part of a group or pooled.",
          "$ref": "#/definitions/code"
        },
        "_combined": {
          "description": "Extensions for combined",
          "$ref": "#/definitions/Element"
        },
        "role": {
          "description": "The role or reason for the specimen in the testing workflow.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "feature": {
          "description": "A physical feature or landmark on a specimen, highlighted for context by the collector of the specimen (e.g. surgeon), that identifies the type of feature as well as its meaning (e.g. the red ink indicating the resection margin of the right lobe of the excised prostate tissue or wire loop at radiologically suspected tumor location).",
          "items": {
            "$ref": "#/definitions/Specimen_Feature"
          },
          "type": "array"
        },
        "collection": {
          "description": "Details concerning the specimen collection.",
          "$ref": "#/definitions/Specimen_Collection"
        },
        "processing": {
          "description": "Details concerning processing and processing steps for the specimen.",
          "items": {
            "$ref": "#/definitions/Specimen_Processing"
          },
          "type": "array"
        },
        "container": {
          "description": "The container holding the specimen.  The recursive nature of containers; i.e. blood in tube in tray in rack is not addressed here.",
          "items": {
            "$ref": "#/definitions/Specimen_Container"
          },
          "type": "array"
        },
        "condition": {
          "description": "A mode or state of being that describes the nature of the specimen.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "note": {
          "description": "To communicate any details or issues about the specimen or during the specimen collection. (for example: broken vial, sent with patient, frozen).",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Specimen_Feature": {
      "description": "A sample to be used for analysis.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The landmark or feature being highlighted.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "description": {
          "description": "Description of the feature of the specimen.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "Specimen_Collection": {
      "description": "A sample to be used for analysis.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "collector": {
          "description": "Person who collected the specimen.",
          "$ref": "#/definitions/Reference"
        },
        "collectedDateTime": {
          "description": "Time when specimen was collected from subject - the physiologically relevant time.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_collectedDateTime": {
          "description": "Extensions for collectedDateTime",
          "$ref": "#/definitions/Element"
        },
        "collectedPeriod": {
          "description": "Time when specimen was collected from subject - the physiologically relevant time.",
          "$ref": "#/definitions/Period"
        },
        "duration": {
          "description": "The span of time over which the collection of a specimen occurred.",
          "$ref": "#/definitions/Duration"
        },
        "quantity": {
          "description": "The quantity of specimen collected; for instance the volume of a blood sample, or the physical measurement of an anatomic pathology sample.",
          "$ref": "#/definitions/Quantity"
        },
        "method": {
          "description": "A coded value specifying the technique that is used to perform the procedure.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "device": {
          "description": "A coded value specifying the technique that is used to perform the procedure.",
          "$ref": "#/definitions/CodeableReference"
        },
        "procedure": {
          "description": "The procedure event during which the specimen was collected (e.g. the surgery leading to the collection of a pathology sample).",
          "$ref": "#/definitions/Reference"
        },
        "bodySite": {
          "description": "Anatomical location from which the specimen was collected (if subject is a patient). This is the target site.  This element is not used for environmental specimens.",
          "$ref": "#/definitions/CodeableReference"
        },
        "fastingStatusCodeableConcept": {
          "description": "Abstinence or reduction from some or all food, drink, or both, for a period of time prior to sample collection.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "fastingStatusDuration": {
          "description": "Abstinence or reduction from some or all food, drink, or both, for a period of time prior to sample collection.",
          "$ref": "#/definitions/Duration"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Specimen_Processing": {
      "description": "A sample to be used for analysis.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "description": {
          "description": "Textual description of procedure.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "method": {
          "description": "A coded value specifying the method used to process the specimen.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "additive": {
          "description": "Material used in the processing step.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "timeDateTime": {
          "description": "A record of the time or period when the specimen processing occurred.  For example the time of sample fixation or the period of time the sample was in formalin.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_timeDateTime": {
          "description": "Extensions for timeDateTime",
          "$ref": "#/definitions/Element"
        },
        "timePeriod": {
          "description": "A record of the time or period when the specimen processing occurred.  For example the time of sample fixation or the period of time the sample was in formalin.",
          "$ref": "#/definitions/Period"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Specimen_Container": {
      "description": "A sample to be used for analysis.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "device": {
          "description": "The device resource for the the container holding the specimen. If the container is in a holder then the referenced device will point to a parent device.",
          "$ref": "#/definitions/Reference"
        },
        "location": {
          "description": "The location of the container holding the specimen.",
          "$ref": "#/definitions/Reference"
        },
        "specimenQuantity": {
          "description": "The quantity of specimen in the container; may be volume, dimensions, or other appropriate measurements, depending on the specimen type.",
          "$ref": "#/definitions/Quantity"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "device"
      ]
    },
    "SpecimenDefinition": {
      "description": "A kind of specimen with associated set of requirements.",
      "properties": {
        "resourceType": {
          "description": "This is a SpecimenDefinition resource",
          "const": "SpecimenDefinition"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URL that is used to identify this SpecimenDefinition when it is referenced in a specification, model, design or an instance. This SHALL be a URL, SHOULD be globally unique, and SHOULD be an address at which this SpecimenDefinition is (or will be) published. The URL SHOULD include the major version of the SpecimenDefinition. For more information see Technical and Business Versions.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A business identifier assigned to this SpecimenDefinition.",
          "$ref": "#/definitions/Identifier"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the SpecimenDefinition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the SpecimenDefinition author and is not expected to be globally unique.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the {{title}}. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the SpecimenDefinition.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The current state of theSpecimenDefinition.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A flag to indicate that this SpecimenDefinition is not authored for  genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "For draft definitions, indicates the date of initial creation. For active definitions, represents the date of activation. For withdrawn definitions, indicates the date of withdrawal.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "Helps establish the \"authority/credibility\" of the SpecimenDefinition. May also allow for contact.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the SpecimenDefinition from the consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching of specimen definitions.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A jurisdiction in which the SpecimenDefinition is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explains why this SpecimeDefinition is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "Copyright statement relating to the SpecimenDefinition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the SpecimenDefinition.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "approvalDate": {
          "description": "The date on which the asset content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
          "$ref": "#/definitions/date"
        },
        "_approvalDate": {
          "description": "Extensions for approvalDate",
          "$ref": "#/definitions/Element"
        },
        "lastReviewDate": {
          "description": "The date on which the asset content was last reviewed. Review happens periodically after that, but doesn\u0027t change the original approval date.",
          "$ref": "#/definitions/date"
        },
        "_lastReviewDate": {
          "description": "Extensions for lastReviewDate",
          "$ref": "#/definitions/Element"
        },
        "effectivePeriod": {
          "description": "The period during which the SpecimenDefinition content was or is planned to be effective.",
          "$ref": "#/definitions/Period"
        },
        "topic": {
          "description": "Descriptive topics related to the content of the {{title}}. Topics provide a high-level categorization as well as keywords for the {{title}} that can be useful for filtering and searching.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "author": {
          "description": "An individiual or organization primarily involved in the creation and maintenance of the {{title}}.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "editor": {
          "description": "An individual or organization primarily responsible for internal coherence of the {{title}}.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "reviewer": {
          "description": "An individual or organization primarily responsible for review of some aspect of the {{title}}.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "endorser": {
          "description": "An individual or organization responsible for officially endorsing the {{title}} for use in some setting.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "relatedArtifact": {
          "description": "Related artifacts such as additional documentation, justification, dependencies, bibliographic references, and predecessor and successor artifacts.",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          },
          "type": "array"
        },
        "derivedFromCanonical": {
          "description": "The canonical URL pointing to another FHIR-defined SpecimenDefinition that is adhered to in whole or in part by this definition.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "derivedFromUri": {
          "description": "The URL pointing to an externally-defined type of specimen, guideline or other definition that is adhered to in whole or in part by this definition.",
          "items": {
            "$ref": "#/definitions/uri"
          },
          "type": "array"
        },
        "_derivedFromUri": {
          "description": "Extensions for derivedFromUri",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "subjectCodeableConcept": {
          "description": "A code or group definition that describes the intended subject  from which this kind of specimen is to be collected.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subjectReference": {
          "description": "A code or group definition that describes the intended subject  from which this kind of specimen is to be collected.",
          "$ref": "#/definitions/Reference"
        },
        "typeCollected": {
          "description": "The kind of material to be collected.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "patientPreparation": {
          "description": "Preparation of the patient for specimen collection.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "timeAspect": {
          "description": "Time aspect of specimen collection (duration or offset).",
          "$ref": "#/definitions/string"
        },
        "_timeAspect": {
          "description": "Extensions for timeAspect",
          "$ref": "#/definitions/Element"
        },
        "collection": {
          "description": "The action to be performed for collecting the specimen.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "typeTested": {
          "description": "Specimen conditioned in a container as expected by the testing laboratory.",
          "items": {
            "$ref": "#/definitions/SpecimenDefinition_TypeTested"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "SpecimenDefinition_TypeTested": {
      "description": "A kind of specimen with associated set of requirements.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "isDerived": {
          "description": "Primary of secondary specimen.",
          "$ref": "#/definitions/boolean"
        },
        "_isDerived": {
          "description": "Extensions for isDerived",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "The kind of specimen conditioned for testing expected by lab.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "preference": {
          "description": "The preference for this type of conditioned specimen.",
          "$ref": "#/definitions/code"
        },
        "_preference": {
          "description": "Extensions for preference",
          "$ref": "#/definitions/Element"
        },
        "container": {
          "description": "The specimen\u0027s container.",
          "$ref": "#/definitions/SpecimenDefinition_Container"
        },
        "requirement": {
          "description": "Requirements for delivery and special handling of this kind of conditioned specimen.",
          "$ref": "#/definitions/string"
        },
        "_requirement": {
          "description": "Extensions for requirement",
          "$ref": "#/definitions/Element"
        },
        "retentionTime": {
          "description": "The usual time that a specimen of this kind is retained after the ordered tests are completed, for the purpose of additional testing.",
          "$ref": "#/definitions/Duration"
        },
        "singleUse": {
          "description": "Specimen can be used by only one test or panel if the value is \"true\".",
          "$ref": "#/definitions/boolean"
        },
        "_singleUse": {
          "description": "Extensions for singleUse",
          "$ref": "#/definitions/Element"
        },
        "rejectionCriterion": {
          "description": "Criterion for rejection of the specimen in its container by the laboratory.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "handling": {
          "description": "Set of instructions for preservation/transport of the specimen at a defined temperature interval, prior the testing process.",
          "items": {
            "$ref": "#/definitions/SpecimenDefinition_Handling"
          },
          "type": "array"
        },
        "testingDestination": {
          "description": "Where the specimen will be tested: e.g., lab, sector, device or any combination of these.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SpecimenDefinition_Container": {
      "description": "A kind of specimen with associated set of requirements.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "material": {
          "description": "The type of material of the container.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "type": {
          "description": "The type of container used to contain this kind of specimen.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "cap": {
          "description": "Color of container cap.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "description": {
          "description": "The textual description of the kind of container.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "capacity": {
          "description": "The capacity (volume or other measure) of this kind of container.",
          "$ref": "#/definitions/Quantity"
        },
        "minimumVolumeQuantity": {
          "description": "The minimum volume to be conditioned in the container.",
          "$ref": "#/definitions/Quantity"
        },
        "minimumVolumeString": {
          "description": "The minimum volume to be conditioned in the container.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_minimumVolumeString": {
          "description": "Extensions for minimumVolumeString",
          "$ref": "#/definitions/Element"
        },
        "additive": {
          "description": "Substance introduced in the kind of container to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA.",
          "items": {
            "$ref": "#/definitions/SpecimenDefinition_Additive"
          },
          "type": "array"
        },
        "preparation": {
          "description": "Special processing that should be applied to the container for this kind of specimen.",
          "$ref": "#/definitions/string"
        },
        "_preparation": {
          "description": "Extensions for preparation",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SpecimenDefinition_Additive": {
      "description": "A kind of specimen with associated set of requirements.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "additiveCodeableConcept": {
          "description": "Substance introduced in the kind of container to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "additiveReference": {
          "description": "Substance introduced in the kind of container to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SpecimenDefinition_Handling": {
      "description": "A kind of specimen with associated set of requirements.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "temperatureQualifier": {
          "description": "It qualifies the interval of temperature, which characterizes an occurrence of handling. Conditions that are not related to temperature may be handled in the instruction element.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "temperatureRange": {
          "description": "The temperature interval for this set of handling instructions.",
          "$ref": "#/definitions/Range"
        },
        "maxDuration": {
          "description": "The maximum time interval of preservation of the specimen with these conditions.",
          "$ref": "#/definitions/Duration"
        },
        "instruction": {
          "description": "Additional textual instructions for the preservation or transport of the specimen. For instance, \u0027Protect from light exposure\u0027.",
          "$ref": "#/definitions/string"
        },
        "_instruction": {
          "description": "Extensions for instruction",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "StructureDefinition": {
      "description": "A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.",
      "properties": {
        "resourceType": {
          "description": "This is a StructureDefinition resource",
          "const": "StructureDefinition"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this structure definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this structure definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the structure definition is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this structure definition when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the structure definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the structure definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the structure definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the structure definition.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this structure definition. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this structure definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the structure definition was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the structure definition changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the structure definition.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the structure definition from a consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate structure definition instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the structure definition is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this structure definition is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the structure definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the structure definition.  The short copyright declaration (e.g. (c) \u00272015+ xyz organization\u0027 should be sent in the copyrightLabel element.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "keyword": {
          "description": "(DEPRECATED) A set of key words or terms from external terminologies that may be used to assist with indexing and searching of templates nby describing the use of this structure definition, or the content it describes.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        },
        "fhirVersion": {
          "description": "The version of the FHIR specification on which this StructureDefinition is based - this is the formal version of the specification, without the revision number, e.g. [publication].[major].[minor], which is 4.6.0. for this version.",
          "$ref": "#/definitions/code"
        },
        "_fhirVersion": {
          "description": "Extensions for fhirVersion",
          "$ref": "#/definitions/Element"
        },
        "mapping": {
          "description": "An external specification that the content is mapped to.",
          "items": {
            "$ref": "#/definitions/StructureDefinition_Mapping"
          },
          "type": "array"
        },
        "kind": {
          "description": "Defines the kind of structure that this definition is describing.",
          "$ref": "#/definitions/code"
        },
        "_kind": {
          "description": "Extensions for kind",
          "$ref": "#/definitions/Element"
        },
        "abstract": {
          "description": "Whether structure this definition describes is abstract or not  - that is, whether the structure is not intended to be instantiated. For Resources and Data types, abstract types will never be exchanged  between systems.",
          "$ref": "#/definitions/boolean"
        },
        "_abstract": {
          "description": "Extensions for abstract",
          "$ref": "#/definitions/Element"
        },
        "context": {
          "description": "Identifies the types of resource or data type elements to which the extension can be applied.",
          "items": {
            "$ref": "#/definitions/StructureDefinition_Context"
          },
          "type": "array"
        },
        "contextInvariant": {
          "description": "A set of rules as FHIRPath Invariants about when the extension can be used (e.g. co-occurrence variants for the extension). All the rules must be true.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_contextInvariant": {
          "description": "Extensions for contextInvariant",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "type": {
          "description": "The type this structure describes. If the derivation kind is \u0027specialization\u0027 then this is the master definition for a type, and there is always one of these (a data type, an extension, a resource, including abstract ones). Otherwise the structure definition is a constraint on the stated type (and in this case, the type cannot be an abstract type).  References are URLs that are relative to http://hl7.org/fhir/StructureDefinition e.g. \"string\" is a reference to http://hl7.org/fhir/StructureDefinition/string. Absolute URLs are only allowed in logical models, where they are required.",
          "$ref": "#/definitions/uri"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "baseDefinition": {
          "description": "An absolute URI that is the base structure from which this type is derived, either by specialization or constraint.",
          "$ref": "#/definitions/canonical"
        },
        "derivation": {
          "description": "How the type relates to the baseDefinition.",
          "$ref": "#/definitions/code"
        },
        "_derivation": {
          "description": "Extensions for derivation",
          "$ref": "#/definitions/Element"
        },
        "snapshot": {
          "description": "A snapshot view is expressed in a standalone form that can be used and interpreted without considering the base StructureDefinition.",
          "$ref": "#/definitions/StructureDefinition_Snapshot"
        },
        "differential": {
          "description": "A differential view is expressed relative to the base StructureDefinition - a statement of differences that it applies.",
          "$ref": "#/definitions/StructureDefinition_Differential"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "StructureDefinition_Mapping": {
      "description": "A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identity": {
          "description": "An Internal id that is used to identify this mapping set when specific mappings are made.",
          "$ref": "#/definitions/id"
        },
        "_identity": {
          "description": "Extensions for identity",
          "$ref": "#/definitions/Element"
        },
        "uri": {
          "description": "An absolute URI that identifies the specification that this mapping is expressed to.",
          "$ref": "#/definitions/uri"
        },
        "_uri": {
          "description": "Extensions for uri",
          "$ref": "#/definitions/Element"
        },
        "name": {
          "description": "A name for the specification that is being mapped to.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "comment": {
          "description": "Comments about this mapping, including version notes, issues, scope limitations, and other important notes for usage.",
          "$ref": "#/definitions/string"
        },
        "_comment": {
          "description": "Extensions for comment",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "StructureDefinition_Context": {
      "description": "A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Defines how to interpret the expression that defines what the context of the extension is.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "expression": {
          "description": "An expression that defines where an extension can be used in resources.",
          "$ref": "#/definitions/string"
        },
        "_expression": {
          "description": "Extensions for expression",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "StructureDefinition_Snapshot": {
      "description": "A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "element": {
          "description": "Captures constraints on each element within the resource.",
          "items": {
            "$ref": "#/definitions/ElementDefinition"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "element"
      ]
    },
    "StructureDefinition_Differential": {
      "description": "A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "element": {
          "description": "Captures constraints on each element within the resource.",
          "items": {
            "$ref": "#/definitions/ElementDefinition"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "element"
      ]
    },
    "StructureMap": {
      "description": "A Map of relationships between 2 structures that can be used to transform data.",
      "properties": {
        "resourceType": {
          "description": "This is a StructureMap resource",
          "const": "StructureMap"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this structure map when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this structure map is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the structure map is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this structure map when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the structure map when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the structure map author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the structure map. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the structure map.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this structure map. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this structure map is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the structure map was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the structure map changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the structure map.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the structure map from a consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate structure map instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the structure map is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this structure map is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the structure map and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the structure map.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "structure": {
          "description": "A structure definition used by this map. The structure definition may describe instances that are converted, or the instances that are produced.",
          "items": {
            "$ref": "#/definitions/StructureMap_Structure"
          },
          "type": "array"
        },
        "import": {
          "description": "Other maps used by this map (canonical URLs).",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "group": {
          "description": "Organizes the mapping into manageable chunks for human review/ease of maintenance.",
          "items": {
            "$ref": "#/definitions/StructureMap_Group"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType",
        "group"
      ]
    },
    "StructureMap_Structure": {
      "description": "A Map of relationships between 2 structures that can be used to transform data.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "The canonical reference to the structure.",
          "$ref": "#/definitions/canonical"
        },
        "mode": {
          "description": "How the referenced structure is used in this mapping.",
          "$ref": "#/definitions/code"
        },
        "_mode": {
          "description": "Extensions for mode",
          "$ref": "#/definitions/Element"
        },
        "alias": {
          "description": "The name used for this type in the map.",
          "$ref": "#/definitions/string"
        },
        "_alias": {
          "description": "Extensions for alias",
          "$ref": "#/definitions/Element"
        },
        "documentation": {
          "description": "Documentation that describes how the structure is used in the mapping.",
          "$ref": "#/definitions/string"
        },
        "_documentation": {
          "description": "Extensions for documentation",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "url"
      ]
    },
    "StructureMap_Group": {
      "description": "A Map of relationships between 2 structures that can be used to transform data.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "A unique name for the group for the convenience of human readers.",
          "$ref": "#/definitions/id"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "extends": {
          "description": "Another group that this group adds rules to.",
          "$ref": "#/definitions/id"
        },
        "_extends": {
          "description": "Extensions for extends",
          "$ref": "#/definitions/Element"
        },
        "typeMode": {
          "description": "If this is the default rule set to apply for the source type or this combination of types.",
          "$ref": "#/definitions/code"
        },
        "_typeMode": {
          "description": "Extensions for typeMode",
          "$ref": "#/definitions/Element"
        },
        "documentation": {
          "description": "Additional supporting documentation that explains the purpose of the group and the types of mappings within it.",
          "$ref": "#/definitions/string"
        },
        "_documentation": {
          "description": "Extensions for documentation",
          "$ref": "#/definitions/Element"
        },
        "input": {
          "description": "A name assigned to an instance of data. The instance must be provided when the mapping is invoked.",
          "items": {
            "$ref": "#/definitions/StructureMap_Input"
          },
          "type": "array"
        },
        "rule": {
          "description": "Transform Rule from source to target.",
          "items": {
            "$ref": "#/definitions/StructureMap_Rule"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "input"
      ]
    },
    "StructureMap_Input": {
      "description": "A Map of relationships between 2 structures that can be used to transform data.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "Name for this instance of data.",
          "$ref": "#/definitions/id"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "Type for this instance of data.",
          "$ref": "#/definitions/string"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "mode": {
          "description": "Mode for this instance of data.",
          "$ref": "#/definitions/code"
        },
        "_mode": {
          "description": "Extensions for mode",
          "$ref": "#/definitions/Element"
        },
        "documentation": {
          "description": "Documentation for this instance of data.",
          "$ref": "#/definitions/string"
        },
        "_documentation": {
          "description": "Extensions for documentation",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "StructureMap_Rule": {
      "description": "A Map of relationships between 2 structures that can be used to transform data.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "Name of the rule for internal references.",
          "$ref": "#/definitions/id"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "source": {
          "description": "Source inputs to the mapping.",
          "items": {
            "$ref": "#/definitions/StructureMap_Source"
          },
          "type": "array"
        },
        "target": {
          "description": "Content to create because of this mapping rule.",
          "items": {
            "$ref": "#/definitions/StructureMap_Target"
          },
          "type": "array"
        },
        "rule": {
          "description": "Rules contained in this rule.",
          "items": {
            "$ref": "#/definitions/StructureMap_Rule"
          },
          "type": "array"
        },
        "dependent": {
          "description": "Which other rules to apply in the context of this rule.",
          "items": {
            "$ref": "#/definitions/StructureMap_Dependent"
          },
          "type": "array"
        },
        "documentation": {
          "description": "Documentation for this instance of data.",
          "$ref": "#/definitions/string"
        },
        "_documentation": {
          "description": "Extensions for documentation",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "source"
      ]
    },
    "StructureMap_Source": {
      "description": "A Map of relationships between 2 structures that can be used to transform data.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "context": {
          "description": "Type or variable this rule applies to.",
          "$ref": "#/definitions/id"
        },
        "_context": {
          "description": "Extensions for context",
          "$ref": "#/definitions/Element"
        },
        "min": {
          "description": "Specified minimum cardinality for the element. This is optional; if present, it acts an implicit check on the input content.",
          "$ref": "#/definitions/integer"
        },
        "_min": {
          "description": "Extensions for min",
          "$ref": "#/definitions/Element"
        },
        "max": {
          "description": "Specified maximum cardinality for the element - a number or a \"*\". This is optional; if present, it acts an implicit check on the input content (* just serves as documentation; it\u0027s the default value).",
          "$ref": "#/definitions/string"
        },
        "_max": {
          "description": "Extensions for max",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "Specified type for the element. This works as a condition on the mapping - use for polymorphic elements.",
          "$ref": "#/definitions/string"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "defaultValue": {
          "description": "A value to use if there is no existing value in the source object.",
          "$ref": "#/definitions/string"
        },
        "_defaultValue": {
          "description": "Extensions for defaultValue",
          "$ref": "#/definitions/Element"
        },
        "element": {
          "description": "Optional field for this source.",
          "$ref": "#/definitions/string"
        },
        "_element": {
          "description": "Extensions for element",
          "$ref": "#/definitions/Element"
        },
        "listMode": {
          "description": "How to handle the list mode for this element.",
          "$ref": "#/definitions/code"
        },
        "_listMode": {
          "description": "Extensions for listMode",
          "$ref": "#/definitions/Element"
        },
        "variable": {
          "description": "Named context for field, if a field is specified.",
          "$ref": "#/definitions/id"
        },
        "_variable": {
          "description": "Extensions for variable",
          "$ref": "#/definitions/Element"
        },
        "condition": {
          "description": "FHIRPath expression  - must be true or the rule does not apply.",
          "$ref": "#/definitions/string"
        },
        "_condition": {
          "description": "Extensions for condition",
          "$ref": "#/definitions/Element"
        },
        "check": {
          "description": "FHIRPath expression  - must be true or the mapping engine throws an error instead of completing.",
          "$ref": "#/definitions/string"
        },
        "_check": {
          "description": "Extensions for check",
          "$ref": "#/definitions/Element"
        },
        "logMessage": {
          "description": "A FHIRPath expression which specifies a message to put in the transform log when content matching the source rule is found.",
          "$ref": "#/definitions/string"
        },
        "_logMessage": {
          "description": "Extensions for logMessage",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "StructureMap_Target": {
      "description": "A Map of relationships between 2 structures that can be used to transform data.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "context": {
          "description": "Variable this rule applies to.",
          "$ref": "#/definitions/id"
        },
        "_context": {
          "description": "Extensions for context",
          "$ref": "#/definitions/Element"
        },
        "element": {
          "description": "Field to create in the context.",
          "$ref": "#/definitions/string"
        },
        "_element": {
          "description": "Extensions for element",
          "$ref": "#/definitions/Element"
        },
        "variable": {
          "description": "Named context for field, if desired, and a field is specified.",
          "$ref": "#/definitions/id"
        },
        "_variable": {
          "description": "Extensions for variable",
          "$ref": "#/definitions/Element"
        },
        "listMode": {
          "description": "If field is a list, how to manage the list.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_listMode": {
          "description": "Extensions for listMode",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "listRuleId": {
          "description": "Internal rule reference for shared list items.",
          "$ref": "#/definitions/id"
        },
        "_listRuleId": {
          "description": "Extensions for listRuleId",
          "$ref": "#/definitions/Element"
        },
        "transform": {
          "description": "How the data is copied / created.",
          "$ref": "#/definitions/code"
        },
        "_transform": {
          "description": "Extensions for transform",
          "$ref": "#/definitions/Element"
        },
        "parameter": {
          "description": "Parameters to the transform.",
          "items": {
            "$ref": "#/definitions/StructureMap_Parameter"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "StructureMap_Parameter": {
      "description": "A Map of relationships between 2 structures that can be used to transform data.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "valueId": {
          "description": "Parameter value - variable or literal.",
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string"
        },
        "_valueId": {
          "description": "Extensions for valueId",
          "$ref": "#/definitions/Element"
        },
        "valueString": {
          "description": "Parameter value - variable or literal.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "description": "Parameter value - variable or literal.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "description": "Parameter value - variable or literal.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": {
          "description": "Extensions for valueInteger",
          "$ref": "#/definitions/Element"
        },
        "valueDecimal": {
          "description": "Parameter value - variable or literal.",
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_valueDecimal": {
          "description": "Extensions for valueDecimal",
          "$ref": "#/definitions/Element"
        },
        "valueDate": {
          "description": "Parameter value - variable or literal.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_valueDate": {
          "description": "Extensions for valueDate",
          "$ref": "#/definitions/Element"
        },
        "valueTime": {
          "description": "Parameter value - variable or literal.",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?$",
          "type": "string"
        },
        "_valueTime": {
          "description": "Extensions for valueTime",
          "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "description": "Parameter value - variable or literal.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_valueDateTime": {
          "description": "Extensions for valueDateTime",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "StructureMap_Dependent": {
      "description": "A Map of relationships between 2 structures that can be used to transform data.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "Name of a rule or group to apply.",
          "$ref": "#/definitions/id"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "parameter": {
          "description": "Parameter to pass to the rule or group.",
          "items": {
            "$ref": "#/definitions/StructureMap_Parameter"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "parameter"
      ]
    },
    "Subscription": {
      "description": "The subscription resource describes a particular client\u0027s request to be notified about a SubscriptionTopic.",
      "properties": {
        "resourceType": {
          "description": "This is a Subscription resource",
          "const": "Subscription"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this code system when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "name": {
          "description": "A natural language name identifying the subscription.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of the subscription, which marks the server state for managing the subscription.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "topic": {
          "description": "The reference to the subscription topic to be notified about.",
          "$ref": "#/definitions/canonical"
        },
        "contact": {
          "description": "Contact details for a human to contact about the subscription. The primary use of this for system administrator troubleshooting.",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          },
          "type": "array"
        },
        "end": {
          "description": "The time for the server to turn the subscription off.",
          "$ref": "#/definitions/instant"
        },
        "_end": {
          "description": "Extensions for end",
          "$ref": "#/definitions/Element"
        },
        "managingEntity": {
          "description": "Entity with authorization to make subsequent revisions to the Subscription and also determines what data the subscription is authorized to disclose.",
          "$ref": "#/definitions/Reference"
        },
        "reason": {
          "description": "A description of why this subscription is defined.",
          "$ref": "#/definitions/string"
        },
        "_reason": {
          "description": "Extensions for reason",
          "$ref": "#/definitions/Element"
        },
        "filterBy": {
          "description": "The filter properties to be applied to narrow the subscription topic stream.  When multiple filters are applied, evaluates to true if all the conditions are met; otherwise it returns false.   (i.e., logical AND).",
          "items": {
            "$ref": "#/definitions/Subscription_FilterBy"
          },
          "type": "array"
        },
        "channelType": {
          "description": "The type of channel to send notifications on.",
          "$ref": "#/definitions/Coding"
        },
        "endpoint": {
          "description": "The url that describes the actual end-point to send messages to.",
          "$ref": "#/definitions/url"
        },
        "_endpoint": {
          "description": "Extensions for endpoint",
          "$ref": "#/definitions/Element"
        },
        "header": {
          "description": "Additional headers / information to send as part of the notification.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_header": {
          "description": "Extensions for header",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "heartbeatPeriod": {
          "description": "If present,  a \u0027hearbeat\" notification (keepalive) is sent via this channel with an the interval period equal to this elements integer value in seconds.    If not present, a heartbeat notification is not sent.",
          "$ref": "#/definitions/unsignedInt"
        },
        "_heartbeatPeriod": {
          "description": "Extensions for heartbeatPeriod",
          "$ref": "#/definitions/Element"
        },
        "timeout": {
          "description": "If present, the maximum amount of time a server will allow before failing a notification attempt.",
          "$ref": "#/definitions/unsignedInt"
        },
        "_timeout": {
          "description": "Extensions for timeout",
          "$ref": "#/definitions/Element"
        },
        "contentType": {
          "description": "The mime type to send the payload in - either application/fhir+xml, or application/fhir+json. The MIME types \"text/plain\" and \"text/html\" may also be used for Email subscriptions.",
          "$ref": "#/definitions/code"
        },
        "_contentType": {
          "description": "Extensions for contentType",
          "$ref": "#/definitions/Element"
        },
        "content": {
          "description": "How much of the resource content to deliver in the notification payload. The choices are an empty payload, only the resource id, or the full resource content.",
          "$ref": "#/definitions/code"
        },
        "_content": {
          "description": "Extensions for content",
          "$ref": "#/definitions/Element"
        },
        "maxCount": {
          "description": "If present, the maximum number of triggering resources that will be included in a notification bundle (e.g., a server will not include more than this number of trigger resources in a single notification).  Note that this is not a strict limit on the number of entries in a bundle, as dependent resources can be included.",
          "$ref": "#/definitions/positiveInt"
        },
        "_maxCount": {
          "description": "Extensions for maxCount",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "topic",
        "channelType",
        "resourceType"
      ]
    },
    "Subscription_FilterBy": {
      "description": "The subscription resource describes a particular client\u0027s request to be notified about a SubscriptionTopic.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "resourceType": {
          "description": "If the element is a reference to another resource, this element contains \"Reference\", and the targetProfile element defines what resources can be referenced. The targetProfile may be a reference to the general definition of a resource (e.g. http://hl7.org/fhir/StructureDefinition/Patient).",
          "$ref": "#/definitions/uri"
        },
        "_resourceType": {
          "description": "Extensions for resourceType",
          "$ref": "#/definitions/Element"
        },
        "filterParameter": {
          "description": "The filter as defined in the `SubscriptionTopic.canfilterBy.filterParameter` element.",
          "$ref": "#/definitions/string"
        },
        "_filterParameter": {
          "description": "Extensions for filterParameter",
          "$ref": "#/definitions/Element"
        },
        "modifier": {
          "description": "Operator to apply when determining matches (Search Modifiers), from the list of allowed modifiers for this filter in the relevant SubscriptionTopic.",
          "$ref": "#/definitions/code"
        },
        "_modifier": {
          "description": "Extensions for modifier",
          "$ref": "#/definitions/Element"
        },
        "value": {
          "description": "The literal value or resource path as is legal in search - for example, \"Patient/123\" or \"le1950\".",
          "$ref": "#/definitions/string"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubscriptionStatus": {
      "description": "The SubscriptionStatus resource describes the state of a Subscription during notifications.",
      "properties": {
        "resourceType": {
          "description": "This is a SubscriptionStatus resource",
          "const": "SubscriptionStatus"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of the subscription, which marks the server state for managing the subscription.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "The type of event being conveyed with this notificaiton.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "eventsSinceSubscriptionStart": {
          "description": "The total number of actual events which have been generated since the Subscription was created (inclusive of this notification) - regardless of how many have been successfully communicated.  This number is NOT incremented for handshake and heartbeat notifications.",
          "$ref": "#/definitions/integer64"
        },
        "_eventsSinceSubscriptionStart": {
          "description": "Extensions for eventsSinceSubscriptionStart",
          "$ref": "#/definitions/Element"
        },
        "notificationEvent": {
          "description": "Detailed information about events relevant to this subscription notification.",
          "items": {
            "$ref": "#/definitions/SubscriptionStatus_NotificationEvent"
          },
          "type": "array"
        },
        "subscription": {
          "description": "The reference to the Subscription which generated this notification.",
          "$ref": "#/definitions/Reference"
        },
        "topic": {
          "description": "The reference to the SubscriptionTopic for the Subscription which generated this notification.",
          "$ref": "#/definitions/canonical"
        },
        "error": {
          "description": "A record of errors that occurred when the server processed a notification.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "subscription",
        "resourceType"
      ]
    },
    "SubscriptionStatus_NotificationEvent": {
      "description": "The SubscriptionStatus resource describes the state of a Subscription during notifications.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "eventNumber": {
          "description": "The sequential number of this event in this subscription context.",
          "$ref": "#/definitions/integer64"
        },
        "_eventNumber": {
          "description": "Extensions for eventNumber",
          "$ref": "#/definitions/Element"
        },
        "timestamp": {
          "description": "The actual time this event occured on the server.",
          "$ref": "#/definitions/instant"
        },
        "_timestamp": {
          "description": "Extensions for timestamp",
          "$ref": "#/definitions/Element"
        },
        "focus": {
          "description": "The focus of this event. While this will usually be a reference to the focus resource of the event, it MAY contain a reference to a non-FHIR object.",
          "$ref": "#/definitions/Reference"
        },
        "additionalContext": {
          "description": "Additional context information for this event. Generally, this will contain references to additional resources included with the event (e.g., the Patient relevant to an Encounter), however it MAY refer to non-FHIR objects.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubscriptionTopic": {
      "description": "Describes a stream of resource state changes or events and annotated with labels useful to filter projections from this topic.",
      "properties": {
        "resourceType": {
          "description": "This is a SubscriptionTopic resource",
          "const": "SubscriptionTopic"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this subscription topic when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this subscription topic is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the subscription topic is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "Business identifiers assigned to this subscription topic by the performer and/or other systems.  These identifiers remain constant as the resource is updated and propagates from server to server.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the subscription topic when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the Topic author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions are orderable.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the {{title}}. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the SubscriptionTopic, for example, \"admission\".",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The current state of the SubscriptionTopic.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A flag to indicate that this TopSubscriptionTopicic is authored for testing purposes (or education/evaluation/marketing), and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "For draft definitions, indicates the date of initial creation.  For active definitions, represents the date of activation.  For withdrawn definitions, indicates the date of withdrawal.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "Helps establish the \"authority/credibility\" of the SubscriptionTopic.  May also allow for contact.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the Topic from the consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching of code system definitions.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A jurisdiction in which the Topic is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explains why this Topic is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the SubscriptionTopic and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the SubscriptionTopic.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "derivedFrom": {
          "description": "The canonical URL pointing to another FHIR-defined SubscriptionTopic that is adhered to in whole or in part by this SubscriptionTopic.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "approvalDate": {
          "description": "The date on which the asset content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
          "$ref": "#/definitions/date"
        },
        "_approvalDate": {
          "description": "Extensions for approvalDate",
          "$ref": "#/definitions/Element"
        },
        "lastReviewDate": {
          "description": "The date on which the asset content was last reviewed. Review happens periodically after that, but doesn\u0027t change the original approval date.",
          "$ref": "#/definitions/date"
        },
        "_lastReviewDate": {
          "description": "Extensions for lastReviewDate",
          "$ref": "#/definitions/Element"
        },
        "effectivePeriod": {
          "description": "The period during which the SubscriptionTopic content was or is planned to be effective.",
          "$ref": "#/definitions/Period"
        },
        "resourceTrigger": {
          "description": "A definition of a resource-based event that triggers a notification based on the SubscriptionTopic. The criteria may be just a human readable description and/or a full FHIR search string or FHIRPath expression. Multiple triggers are considered OR joined (e.g., a resource update matching ANY of the definitions will trigger a notification).",
          "items": {
            "$ref": "#/definitions/SubscriptionTopic_ResourceTrigger"
          },
          "type": "array"
        },
        "eventTrigger": {
          "description": "Event definition which can be used to trigger the SubscriptionTopic.",
          "items": {
            "$ref": "#/definitions/SubscriptionTopic_EventTrigger"
          },
          "type": "array"
        },
        "canFilterBy": {
          "description": "List of properties by which Subscriptions on the SubscriptionTopic can be filtered. May be defined Search Parameters (e.g., Encounter.patient) or parameters defined within this SubscriptionTopic context (e.g., hub.event).",
          "items": {
            "$ref": "#/definitions/SubscriptionTopic_CanFilterBy"
          },
          "type": "array"
        },
        "notificationShape": {
          "description": "List of properties to describe the shape (e.g., resources) included in notifications from this Subscription Topic.",
          "items": {
            "$ref": "#/definitions/SubscriptionTopic_NotificationShape"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "SubscriptionTopic_ResourceTrigger": {
      "description": "Describes a stream of resource state changes or events and annotated with labels useful to filter projections from this topic.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "description": {
          "description": "The human readable description of this resource trigger for the SubscriptionTopic -  for example, \"An Encounter enters the \u0027in-progress\u0027 state\".",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "resource": {
          "description": "URL of the Resource that is the type used in this resource trigger.  Relative URLs are relative to the StructureDefinition root of the implemented FHIR version (e.g., http://hl7.org/fhir/StructureDefinition). For example, \"Patient\" maps to http://hl7.org/fhir/StructureDefinition/Patient.  For more information, see \u003ca href\u003d\"elementdefinition-definitions.html#ElementDefinition.type.code\"\u003eElementDefinition.type.code\u003c/a\u003e.",
          "$ref": "#/definitions/uri"
        },
        "_resource": {
          "description": "Extensions for resource",
          "$ref": "#/definitions/Element"
        },
        "supportedInteraction": {
          "description": "The FHIR RESTful interaction which can be used to trigger a notification for the SubscriptionTopic. Multiple values are considered OR joined (e.g., CREATE or UPDATE).",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_supportedInteraction": {
          "description": "Extensions for supportedInteraction",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "queryCriteria": {
          "description": "The FHIR query based rules that the server should use to determine when to trigger a notification for this subscription topic.",
          "$ref": "#/definitions/SubscriptionTopic_QueryCriteria"
        },
        "fhirPathCriteria": {
          "description": "The FHIRPath based rules that the server should use to determine when to trigger a notification for this topic.",
          "$ref": "#/definitions/string"
        },
        "_fhirPathCriteria": {
          "description": "Extensions for fhirPathCriteria",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubscriptionTopic_QueryCriteria": {
      "description": "Describes a stream of resource state changes or events and annotated with labels useful to filter projections from this topic.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "previous": {
          "description": "The FHIR query based rules are applied to the previous resource state (e.g., state before an update).",
          "$ref": "#/definitions/string"
        },
        "_previous": {
          "description": "Extensions for previous",
          "$ref": "#/definitions/Element"
        },
        "resultForCreate": {
          "description": "For \"create\" interactions, should the \"previous\" criteria count as an automatic pass or an automatic fail.",
          "$ref": "#/definitions/code"
        },
        "_resultForCreate": {
          "description": "Extensions for resultForCreate",
          "$ref": "#/definitions/Element"
        },
        "current": {
          "description": "The FHIR query based rules are applied to the current resource state (e.g., state after an update).",
          "$ref": "#/definitions/string"
        },
        "_current": {
          "description": "Extensions for current",
          "$ref": "#/definitions/Element"
        },
        "resultForDelete": {
          "description": "For \"delete\" interactions, should the \"current\" criteria count as an automatic pass or an automatic fail.",
          "$ref": "#/definitions/code"
        },
        "_resultForDelete": {
          "description": "Extensions for resultForDelete",
          "$ref": "#/definitions/Element"
        },
        "requireBoth": {
          "description": "If set to true, both current and previous criteria must evaluate true to  trigger a notification for this topic.  Otherwise a notification for this topic will be triggered if either one evaluates to true.",
          "$ref": "#/definitions/boolean"
        },
        "_requireBoth": {
          "description": "Extensions for requireBoth",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubscriptionTopic_EventTrigger": {
      "description": "Describes a stream of resource state changes or events and annotated with labels useful to filter projections from this topic.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "description": {
          "description": "The human readable description of an event to trigger a notification for the SubscriptionTopic - for example, \"Patient Admission, as defined in HL7v2 via message ADT^A01\". Multiple values are considered OR joined (e.g., matching any single event listed).",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "event": {
          "description": "A well-defined event which can be used to trigger notifications from the SubscriptionTopic.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "resource": {
          "description": "URL of the Resource that is the focus type used in this event trigger.  Relative URLs are relative to the StructureDefinition root of the implemented FHIR version (e.g., http://hl7.org/fhir/StructureDefinition). For example, \"Patient\" maps to http://hl7.org/fhir/StructureDefinition/Patient.  For more information, see \u003ca href\u003d\"elementdefinition-definitions.html#ElementDefinition.type.code\"\u003eElementDefinition.type.code\u003c/a\u003e.",
          "$ref": "#/definitions/uri"
        },
        "_resource": {
          "description": "Extensions for resource",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "event"
      ]
    },
    "SubscriptionTopic_CanFilterBy": {
      "description": "Describes a stream of resource state changes or events and annotated with labels useful to filter projections from this topic.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "description": {
          "description": "Description of how this filtering parameter is intended to be used.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "resource": {
          "description": "URL of the Resource that is the type used in this filter. This is the \"focus\" of the topic (or one of them if there are more than one). It will be the same, a generality, or a specificity of SubscriptionTopic.resourceTrigger.resource or SubscriptionTopic.eventTrigger.resource when they are present.",
          "$ref": "#/definitions/uri"
        },
        "_resource": {
          "description": "Extensions for resource",
          "$ref": "#/definitions/Element"
        },
        "filterParameter": {
          "description": "Either the canonical URL to a search parameter (like \"http://hl7.org/fhir/SearchParameter/encounter-patient\") or topic-defined parameter (like \"hub.event\") which is a label for the filter.",
          "$ref": "#/definitions/string"
        },
        "_filterParameter": {
          "description": "Extensions for filterParameter",
          "$ref": "#/definitions/Element"
        },
        "filterDefinition": {
          "description": "Either the canonical URL to a search parameter (like \"http://hl7.org/fhir/SearchParameter/encounter-patient\") or the officially-defined URI for a shared filter concept (like \"http://example.org/concepts/shared-common-event\").",
          "$ref": "#/definitions/uri"
        },
        "_filterDefinition": {
          "description": "Extensions for filterDefinition",
          "$ref": "#/definitions/Element"
        },
        "modifier": {
          "description": "Allowable operators to apply when determining matches (Search Modifiers).  If the filterParameter is a SearchParameter, this list of modifiers SHALL be a strict subset of the modifiers defined on that SearchParameter.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_modifier": {
          "description": "Extensions for modifier",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubscriptionTopic_NotificationShape": {
      "description": "Describes a stream of resource state changes or events and annotated with labels useful to filter projections from this topic.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "resource": {
          "description": "URL of the Resource that is the type used in this shape. This is the \"focus\" of the topic (or one of them if there are more than one) and the root resource for this shape definition. It will be the same, a generality, or a specificity of SubscriptionTopic.resourceTrigger.resource or SubscriptionTopic.eventTrigger.resource when they are present.",
          "$ref": "#/definitions/uri"
        },
        "_resource": {
          "description": "Extensions for resource",
          "$ref": "#/definitions/Element"
        },
        "include": {
          "description": "Search-style _include directives, rooted in the resource for this shape. Servers SHOULD include resources listed here, if they exist and the user is authorized to receive them.  Clients SHOULD be prepared to receive these additional resources, but SHALL function properly without them.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_include": {
          "description": "Extensions for include",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "revInclude": {
          "description": "Search-style _revinclude directives, rooted in the resource for this shape. Servers SHOULD include resources listed here, if they exist and the user is authorized to receive them.  Clients SHOULD be prepared to receive these additional resources, but SHALL function properly without them.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_revInclude": {
          "description": "Extensions for revInclude",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Substance": {
      "description": "A homogeneous material with a definite composition.",
      "properties": {
        "resourceType": {
          "description": "This is a Substance resource",
          "const": "Substance"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Unique identifier for the substance. For an instance, an identifier associated with the package/container (usually a label affixed directly).",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "instance": {
          "description": "A boolean to indicate if this an instance of a substance or a kind of one (a definition).",
          "$ref": "#/definitions/boolean"
        },
        "_instance": {
          "description": "Extensions for instance",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "A code to indicate if the substance is actively used.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "category": {
          "description": "A code that classifies the general type of substance.  This is used  for searching, sorting and display purposes.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "code": {
          "description": "A code (or set of codes) that identify this substance.",
          "$ref": "#/definitions/CodeableReference"
        },
        "description": {
          "description": "A description of the substance - its appearance, handling requirements, and other usage notes.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "expiry": {
          "description": "When the substance is no longer valid to use. For some substances, a single arbitrary date is used for expiry.",
          "$ref": "#/definitions/dateTime"
        },
        "_expiry": {
          "description": "Extensions for expiry",
          "$ref": "#/definitions/Element"
        },
        "quantity": {
          "description": "The amount of the substance.",
          "$ref": "#/definitions/Quantity"
        },
        "ingredient": {
          "description": "A substance can be composed of other substances.",
          "items": {
            "$ref": "#/definitions/Substance_Ingredient"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code",
        "resourceType"
      ]
    },
    "Substance_Ingredient": {
      "description": "A homogeneous material with a definite composition.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "quantity": {
          "description": "The amount of the ingredient in the substance - a concentration ratio.",
          "$ref": "#/definitions/Ratio"
        },
        "substanceCodeableConcept": {
          "description": "Another substance that is a component of this substance.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "substanceReference": {
          "description": "Another substance that is a component of this substance.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubstanceDefinition": {
      "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
      "properties": {
        "resourceType": {
          "description": "This is a SubstanceDefinition resource",
          "const": "SubstanceDefinition"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifier by which this substance is known.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "A business level version identifier of the substance.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "Status of substance within the catalogue e.g. active, retired.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "classification": {
          "description": "A high level categorization, e.g. polymer or nucleic acid, or food, chemical, biological, or a lower level such as the general types of polymer (linear or branch chain) or type of impurity (process related or contaminant).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "domain": {
          "description": "If the substance applies to human or veterinary use.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "grade": {
          "description": "The quality standard, established benchmark, to which substance complies (e.g. USP/NF, Ph. Eur, JP, BP, Company Standard).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "description": {
          "description": "Textual description of the substance.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "informationSource": {
          "description": "Supporting literature.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "note": {
          "description": "Textual comment about the substance\u0027s catalogue or registry record.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "manufacturer": {
          "description": "The entity that creates, makes, produces or fabricates the substance. This is a set of potential manufacturers but is not necessarily comprehensive.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "supplier": {
          "description": "An entity that is the source for the substance. It may be different from the manufacturer. Supplier is synonymous to a distributor.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "moiety": {
          "description": "Moiety, for structural modifications.",
          "items": {
            "$ref": "#/definitions/SubstanceDefinition_Moiety"
          },
          "type": "array"
        },
        "characterization": {
          "description": "General specifications for this substance.",
          "items": {
            "$ref": "#/definitions/SubstanceDefinition_Characterization"
          },
          "type": "array"
        },
        "property": {
          "description": "General specifications for this substance.",
          "items": {
            "$ref": "#/definitions/SubstanceDefinition_Property"
          },
          "type": "array"
        },
        "referenceInformation": {
          "description": "General information detailing this substance.",
          "$ref": "#/definitions/Reference"
        },
        "molecularWeight": {
          "description": "The average mass of a molecule of a compound compared to 1/12 the mass of carbon 12 and calculated as the sum of the atomic weights of the constituent atoms.",
          "items": {
            "$ref": "#/definitions/SubstanceDefinition_MolecularWeight"
          },
          "type": "array"
        },
        "structure": {
          "description": "Structural information.",
          "$ref": "#/definitions/SubstanceDefinition_Structure"
        },
        "code": {
          "description": "Codes associated with the substance.",
          "items": {
            "$ref": "#/definitions/SubstanceDefinition_Code"
          },
          "type": "array"
        },
        "name": {
          "description": "Names applicable to this substance.",
          "items": {
            "$ref": "#/definitions/SubstanceDefinition_Name"
          },
          "type": "array"
        },
        "relationship": {
          "description": "A link between this substance and another, with details of the relationship.",
          "items": {
            "$ref": "#/definitions/SubstanceDefinition_Relationship"
          },
          "type": "array"
        },
        "nucleicAcid": {
          "description": "Data items specific to nucleic acids.",
          "$ref": "#/definitions/Reference"
        },
        "polymer": {
          "description": "Data items specific to polymers.",
          "$ref": "#/definitions/Reference"
        },
        "protein": {
          "description": "Data items specific to proteins.",
          "$ref": "#/definitions/Reference"
        },
        "sourceMaterial": {
          "description": "Material or taxonomic/anatomical source for the substance.",
          "$ref": "#/definitions/SubstanceDefinition_SourceMaterial"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "SubstanceDefinition_Moiety": {
      "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "role": {
          "description": "Role that the moiety is playing.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "identifier": {
          "description": "Identifier by which this moiety substance is known.",
          "$ref": "#/definitions/Identifier"
        },
        "name": {
          "description": "Textual name for this moiety substance.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "stereochemistry": {
          "description": "Stereochemistry type.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "opticalActivity": {
          "description": "Optical activity type.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "molecularFormula": {
          "description": "Molecular formula for this moiety of this substance, typically using the Hill system.",
          "$ref": "#/definitions/string"
        },
        "_molecularFormula": {
          "description": "Extensions for molecularFormula",
          "$ref": "#/definitions/Element"
        },
        "amountQuantity": {
          "description": "Quantitative value for this moiety.",
          "$ref": "#/definitions/Quantity"
        },
        "amountString": {
          "description": "Quantitative value for this moiety.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_amountString": {
          "description": "Extensions for amountString",
          "$ref": "#/definitions/Element"
        },
        "measurementType": {
          "description": "The measurement type of the quantitative value. In capturing the actual relative amounts of substances or molecular fragments it may be necessary to indicate whether the amount refers to, for example, a mole ratio or weight ratio.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubstanceDefinition_Characterization": {
      "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "technique": {
          "description": "The method used to elucidate the characterization of the drug substance. Example: HPLC.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "form": {
          "description": "The specific chemical entity of the substance being characterized, to distinguish for example salt or base.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "description": {
          "description": "Narrative text, data, tables about the characterization.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "file": {
          "description": "An image or data file that characterizes this substance.",
          "items": {
            "$ref": "#/definitions/Attachment"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubstanceDefinition_Property": {
      "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "A code expressing the type of property.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCodeableConcept": {
          "description": "A value for the property.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": {
          "description": "A value for the property.",
          "$ref": "#/definitions/Quantity"
        },
        "valueDate": {
          "description": "A value for the property.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_valueDate": {
          "description": "Extensions for valueDate",
          "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "description": "A value for the property.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueAttachment": {
          "description": "A value for the property.",
          "$ref": "#/definitions/Attachment"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "SubstanceDefinition_MolecularWeight": {
      "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "method": {
          "description": "The method by which the molecular weight was determined.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "type": {
          "description": "Type of molecular weight such as exact, average (also known as. number average), weight average.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "amount": {
          "description": "Used to capture quantitative values for a variety of elements. If only limits are given, the arithmetic mean would be the average. If only a single definite value for a given element is given, it would be captured in this field.",
          "$ref": "#/definitions/Quantity"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "amount"
      ]
    },
    "SubstanceDefinition_Structure": {
      "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "stereochemistry": {
          "description": "Stereochemistry type.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "opticalActivity": {
          "description": "Optical activity type.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "molecularFormula": {
          "description": "An expression which states the number and type of atoms present in a molecule of a substance.",
          "$ref": "#/definitions/string"
        },
        "_molecularFormula": {
          "description": "Extensions for molecularFormula",
          "$ref": "#/definitions/Element"
        },
        "molecularFormulaByMoiety": {
          "description": "Specified per moiety according to the Hill system, i.e. first C, then H, then alphabetical, each moiety separated by a dot.",
          "$ref": "#/definitions/string"
        },
        "_molecularFormulaByMoiety": {
          "description": "Extensions for molecularFormulaByMoiety",
          "$ref": "#/definitions/Element"
        },
        "molecularWeight": {
          "description": "The molecular weight or weight range (for proteins, polymers or nucleic acids).",
          "$ref": "#/definitions/SubstanceDefinition_MolecularWeight"
        },
        "technique": {
          "description": "The method used to elucidate the structure of the drug substance. Examples: X-ray, NMR, Peptide mapping, Ligand binding assay.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "sourceDocument": {
          "description": "The source of information about the structure.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "representation": {
          "description": "A depiction of the structure of the substance.",
          "items": {
            "$ref": "#/definitions/SubstanceDefinition_Representation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubstanceDefinition_Representation": {
      "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The kind of structural representation (e.g. full, partial).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "representation": {
          "description": "The structural representation as a text string in a standard format.",
          "$ref": "#/definitions/string"
        },
        "_representation": {
          "description": "Extensions for representation",
          "$ref": "#/definitions/Element"
        },
        "format": {
          "description": "The format of the representation e.g. InChI, SMILES, MOLFILE, CDX, SDF, PDB, mmCIF. The logical content type rather than the physical file format of a document.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "document": {
          "description": "An attached file with the structural representation e.g. a molecular structure graphic of the substance, a JCAMP or AnIML file.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubstanceDefinition_Code": {
      "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "The specific code.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "status": {
          "description": "Status of the code assignment, for example \u0027provisional\u0027, \u0027approved\u0027.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "statusDate": {
          "description": "The date at which the code status was changed as part of the terminology maintenance.",
          "$ref": "#/definitions/dateTime"
        },
        "_statusDate": {
          "description": "Extensions for statusDate",
          "$ref": "#/definitions/Element"
        },
        "note": {
          "description": "Any comment can be provided in this field, if necessary.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "source": {
          "description": "Supporting literature.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubstanceDefinition_Name": {
      "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "The actual name.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "Name type, for example \u0027systematic\u0027,  \u0027scientific, \u0027brand\u0027.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "status": {
          "description": "The status of the name, for example \u0027current\u0027, \u0027proposed\u0027.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "preferred": {
          "description": "If this is the preferred name for this substance.",
          "$ref": "#/definitions/boolean"
        },
        "_preferred": {
          "description": "Extensions for preferred",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "Human language that the name is written in.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "domain": {
          "description": "The use context of this name for example if there is a different name a drug active ingredient as opposed to a food colour additive.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "The jurisdiction where this name applies.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "synonym": {
          "description": "A synonym of this particular name, by which the substance is also known.",
          "items": {
            "$ref": "#/definitions/SubstanceDefinition_Name"
          },
          "type": "array"
        },
        "translation": {
          "description": "A translation for this name into another human language.",
          "items": {
            "$ref": "#/definitions/SubstanceDefinition_Name"
          },
          "type": "array"
        },
        "official": {
          "description": "Details of the official nature of this name.",
          "items": {
            "$ref": "#/definitions/SubstanceDefinition_Official"
          },
          "type": "array"
        },
        "source": {
          "description": "Supporting literature.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubstanceDefinition_Official": {
      "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "authority": {
          "description": "Which authority uses this official name.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "status": {
          "description": "The status of the official name, for example \u0027draft\u0027, \u0027active\u0027, \u0027retired\u0027.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "date": {
          "description": "Date of the official name change.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubstanceDefinition_Relationship": {
      "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "substanceDefinitionReference": {
          "description": "A pointer to another substance, as a resource or just a representational code.",
          "$ref": "#/definitions/Reference"
        },
        "substanceDefinitionCodeableConcept": {
          "description": "A pointer to another substance, as a resource or just a representational code.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "type": {
          "description": "For example \"salt to parent\", \"active moiety\", \"starting material\", \"polymorph\", \"impurity of\".",
          "$ref": "#/definitions/CodeableConcept"
        },
        "isDefining": {
          "description": "For example where an enzyme strongly bonds with a particular substance, this is a defining relationship for that enzyme, out of several possible substance relationships.",
          "$ref": "#/definitions/boolean"
        },
        "_isDefining": {
          "description": "Extensions for isDefining",
          "$ref": "#/definitions/Element"
        },
        "amountQuantity": {
          "description": "A numeric factor for the relationship, for instance to express that the salt of a substance has some percentage of the active substance in relation to some other.",
          "$ref": "#/definitions/Quantity"
        },
        "amountRatio": {
          "description": "A numeric factor for the relationship, for instance to express that the salt of a substance has some percentage of the active substance in relation to some other.",
          "$ref": "#/definitions/Ratio"
        },
        "amountString": {
          "description": "A numeric factor for the relationship, for instance to express that the salt of a substance has some percentage of the active substance in relation to some other.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_amountString": {
          "description": "Extensions for amountString",
          "$ref": "#/definitions/Element"
        },
        "ratioHighLimitAmount": {
          "description": "For use when the numeric has an uncertain range.",
          "$ref": "#/definitions/Ratio"
        },
        "comparator": {
          "description": "An operator for the amount, for example \"average\", \"approximately\", \"less than\".",
          "$ref": "#/definitions/CodeableConcept"
        },
        "source": {
          "description": "Supporting literature.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "SubstanceDefinition_SourceMaterial": {
      "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "A classification that provides the origin of the raw material. Example: cat hair would be an Animal source type.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "genus": {
          "description": "The genus of an organism, typically referring to the Latin epithet of the genus element of the plant/animal scientific name.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "species": {
          "description": "The species of an organism, typically referring to the Latin epithet of the species of the plant/animal.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "part": {
          "description": "An anatomical origin of the source material within an organism.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "countryOfOrigin": {
          "description": "The country or countries where the material is harvested.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubstanceNucleicAcid": {
      "description": "Nucleic acids are defined by three distinct elements: the base, sugar and linkage. Individual substance/moiety IDs will be created for each of these elements. The nucleotide sequence will be always entered in the 5’-3’ direction.",
      "properties": {
        "resourceType": {
          "description": "This is a SubstanceNucleicAcid resource",
          "const": "SubstanceNucleicAcid"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "sequenceType": {
          "description": "The type of the sequence shall be specified based on a controlled vocabulary.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "numberOfSubunits": {
          "description": "The number of linear sequences of nucleotides linked through phosphodiester bonds shall be described. Subunits would be strands of nucleic acids that are tightly associated typically through Watson-Crick base pairing. NOTE: If not specified in the reference source, the assumption is that there is 1 subunit.",
          "$ref": "#/definitions/integer"
        },
        "_numberOfSubunits": {
          "description": "Extensions for numberOfSubunits",
          "$ref": "#/definitions/Element"
        },
        "areaOfHybridisation": {
          "description": "The area of hybridisation shall be described if applicable for double stranded RNA or DNA. The number associated with the subunit followed by the number associated to the residue shall be specified in increasing order. The underscore “” shall be used as separator as follows: “Subunitnumber Residue”.",
          "$ref": "#/definitions/string"
        },
        "_areaOfHybridisation": {
          "description": "Extensions for areaOfHybridisation",
          "$ref": "#/definitions/Element"
        },
        "oligoNucleotideType": {
          "description": "(TBC).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subunit": {
          "description": "Subunits are listed in order of decreasing length; sequences of the same length will be ordered by molecular weight; subunits that have identical sequences will be repeated multiple times.",
          "items": {
            "$ref": "#/definitions/SubstanceNucleicAcid_Subunit"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "SubstanceNucleicAcid_Subunit": {
      "description": "Nucleic acids are defined by three distinct elements: the base, sugar and linkage. Individual substance/moiety IDs will be created for each of these elements. The nucleotide sequence will be always entered in the 5’-3’ direction.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "subunit": {
          "description": "Index of linear sequences of nucleic acids in order of decreasing length. Sequences of the same length will be ordered by molecular weight. Subunits that have identical sequences will be repeated and have sequential subscripts.",
          "$ref": "#/definitions/integer"
        },
        "_subunit": {
          "description": "Extensions for subunit",
          "$ref": "#/definitions/Element"
        },
        "sequence": {
          "description": "Actual nucleotide sequence notation from 5\u0027 to 3\u0027 end using standard single letter codes. In addition to the base sequence, sugar and type of phosphate or non-phosphate linkage should also be captured.",
          "$ref": "#/definitions/string"
        },
        "_sequence": {
          "description": "Extensions for sequence",
          "$ref": "#/definitions/Element"
        },
        "length": {
          "description": "The length of the sequence shall be captured.",
          "$ref": "#/definitions/integer"
        },
        "_length": {
          "description": "Extensions for length",
          "$ref": "#/definitions/Element"
        },
        "sequenceAttachment": {
          "description": "(TBC).",
          "$ref": "#/definitions/Attachment"
        },
        "fivePrime": {
          "description": "The nucleotide present at the 5’ terminal shall be specified based on a controlled vocabulary. Since the sequence is represented from the 5\u0027 to the 3\u0027 end, the 5’ prime nucleotide is the letter at the first position in the sequence. A separate representation would be redundant.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "threePrime": {
          "description": "The nucleotide present at the 3’ terminal shall be specified based on a controlled vocabulary. Since the sequence is represented from the 5\u0027 to the 3\u0027 end, the 5’ prime nucleotide is the letter at the last position in the sequence. A separate representation would be redundant.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "linkage": {
          "description": "The linkages between sugar residues will also be captured.",
          "items": {
            "$ref": "#/definitions/SubstanceNucleicAcid_Linkage"
          },
          "type": "array"
        },
        "sugar": {
          "description": "5.3.6.8.1 Sugar ID (Mandatory).",
          "items": {
            "$ref": "#/definitions/SubstanceNucleicAcid_Sugar"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubstanceNucleicAcid_Linkage": {
      "description": "Nucleic acids are defined by three distinct elements: the base, sugar and linkage. Individual substance/moiety IDs will be created for each of these elements. The nucleotide sequence will be always entered in the 5’-3’ direction.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "connectivity": {
          "description": "The entity that links the sugar residues together should also be captured for nearly all naturally occurring nucleic acid the linkage is a phosphate group. For many synthetic oligonucleotides phosphorothioate linkages are often seen. Linkage connectivity is assumed to be 3’-5’. If the linkage is either 3’-3’ or 5’-5’ this should be specified.",
          "$ref": "#/definitions/string"
        },
        "_connectivity": {
          "description": "Extensions for connectivity",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "Each linkage will be registered as a fragment and have an ID.",
          "$ref": "#/definitions/Identifier"
        },
        "name": {
          "description": "Each linkage will be registered as a fragment and have at least one name. A single name shall be assigned to each linkage.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "residueSite": {
          "description": "Residues shall be captured as described in 5.3.6.8.3.",
          "$ref": "#/definitions/string"
        },
        "_residueSite": {
          "description": "Extensions for residueSite",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubstanceNucleicAcid_Sugar": {
      "description": "Nucleic acids are defined by three distinct elements: the base, sugar and linkage. Individual substance/moiety IDs will be created for each of these elements. The nucleotide sequence will be always entered in the 5’-3’ direction.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "The Substance ID of the sugar or sugar-like component that make up the nucleotide.",
          "$ref": "#/definitions/Identifier"
        },
        "name": {
          "description": "The name of the sugar or sugar-like component that make up the nucleotide.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "residueSite": {
          "description": "The residues that contain a given sugar will be captured. The order of given residues will be captured in the 5‘-3‘direction consistent with the base sequences listed above.",
          "$ref": "#/definitions/string"
        },
        "_residueSite": {
          "description": "Extensions for residueSite",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubstancePolymer": {
      "description": "Properties of a substance specific to it being a polymer.",
      "properties": {
        "resourceType": {
          "description": "This is a SubstancePolymer resource",
          "const": "SubstancePolymer"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "A business idenfier for this polymer, but typically this is handled by a SubstanceDefinition identifier.",
          "$ref": "#/definitions/Identifier"
        },
        "class": {
          "description": "Overall type of the polymer.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "geometry": {
          "description": "Polymer geometry, e.g. linear, branched, cross-linked, network or dendritic.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "copolymerConnectivity": {
          "description": "Descrtibes the copolymer sequence type (polymer connectivity).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "modification": {
          "description": "Todo - this is intended to connect to a repeating full modification structure, also used by Protein and Nucleic Acid . String is just a placeholder.",
          "$ref": "#/definitions/string"
        },
        "_modification": {
          "description": "Extensions for modification",
          "$ref": "#/definitions/Element"
        },
        "monomerSet": {
          "description": "Todo.",
          "items": {
            "$ref": "#/definitions/SubstancePolymer_MonomerSet"
          },
          "type": "array"
        },
        "repeat": {
          "description": "Specifies and quantifies the repeated units and their configuration.",
          "items": {
            "$ref": "#/definitions/SubstancePolymer_Repeat"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "SubstancePolymer_MonomerSet": {
      "description": "Properties of a substance specific to it being a polymer.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "ratioType": {
          "description": "Captures the type of ratio to the entire polymer, e.g. Monomer/Polymer ratio, SRU/Polymer Ratio.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "startingMaterial": {
          "description": "The starting materials - monomer(s) used in the synthesis of the polymer.",
          "items": {
            "$ref": "#/definitions/SubstancePolymer_StartingMaterial"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubstancePolymer_StartingMaterial": {
      "description": "Properties of a substance specific to it being a polymer.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "The type of substance for this starting material.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "category": {
          "description": "Substance high level category, e.g. chemical substance.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "isDefining": {
          "description": "Used to specify whether the attribute described is a defining element for the unique identification of the polymer.",
          "$ref": "#/definitions/boolean"
        },
        "_isDefining": {
          "description": "Extensions for isDefining",
          "$ref": "#/definitions/Element"
        },
        "amount": {
          "description": "A percentage.",
          "$ref": "#/definitions/Quantity"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubstancePolymer_Repeat": {
      "description": "Properties of a substance specific to it being a polymer.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "averageMolecularFormula": {
          "description": "A representation of an (average) molecular formula from a polymer.",
          "$ref": "#/definitions/string"
        },
        "_averageMolecularFormula": {
          "description": "Extensions for averageMolecularFormula",
          "$ref": "#/definitions/Element"
        },
        "repeatUnitAmountType": {
          "description": "How the quantitative amount of Structural Repeat Units is captured (e.g. Exact, Numeric, Average).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "repeatUnit": {
          "description": "An SRU - Structural Repeat Unit.",
          "items": {
            "$ref": "#/definitions/SubstancePolymer_RepeatUnit"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubstancePolymer_RepeatUnit": {
      "description": "Properties of a substance specific to it being a polymer.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "unit": {
          "description": "Structural repeat units are essential elements for defining polymers.",
          "$ref": "#/definitions/string"
        },
        "_unit": {
          "description": "Extensions for unit",
          "$ref": "#/definitions/Element"
        },
        "orientation": {
          "description": "The orientation of the polymerisation, e.g. head-tail, head-head, random.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "amount": {
          "description": "Number of repeats of this unit.",
          "$ref": "#/definitions/integer"
        },
        "_amount": {
          "description": "Extensions for amount",
          "$ref": "#/definitions/Element"
        },
        "degreeOfPolymerisation": {
          "description": "Applies to homopolymer and block co-polymers where the degree of polymerisation within a block can be described.",
          "items": {
            "$ref": "#/definitions/SubstancePolymer_DegreeOfPolymerisation"
          },
          "type": "array"
        },
        "structuralRepresentation": {
          "description": "A graphical structure for this SRU.",
          "items": {
            "$ref": "#/definitions/SubstancePolymer_StructuralRepresentation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubstancePolymer_DegreeOfPolymerisation": {
      "description": "Properties of a substance specific to it being a polymer.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of the degree of polymerisation shall be described, e.g. SRU/Polymer Ratio.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "average": {
          "description": "An average amount of polymerisation.",
          "$ref": "#/definitions/integer"
        },
        "_average": {
          "description": "Extensions for average",
          "$ref": "#/definitions/Element"
        },
        "low": {
          "description": "A low expected limit of the amount.",
          "$ref": "#/definitions/integer"
        },
        "_low": {
          "description": "Extensions for low",
          "$ref": "#/definitions/Element"
        },
        "high": {
          "description": "A high expected limit of the amount.",
          "$ref": "#/definitions/integer"
        },
        "_high": {
          "description": "Extensions for high",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubstancePolymer_StructuralRepresentation": {
      "description": "Properties of a substance specific to it being a polymer.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of structure (e.g. Full, Partial, Representative).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "representation": {
          "description": "The structural representation as text string in a standard format e.g. InChI, SMILES, MOLFILE, CDX, SDF, PDB, mmCIF.",
          "$ref": "#/definitions/string"
        },
        "_representation": {
          "description": "Extensions for representation",
          "$ref": "#/definitions/Element"
        },
        "format": {
          "description": "The format of the representation e.g. InChI, SMILES, MOLFILE, CDX, SDF, PDB, mmCIF.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "attachment": {
          "description": "An attached file with the structural representation.",
          "$ref": "#/definitions/Attachment"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubstanceProtein": {
      "description": "A SubstanceProtein is defined as a single unit of a linear amino acid sequence, or a combination of subunits that are either covalently linked or have a defined invariant stoichiometric relationship. This includes all synthetic, recombinant and purified SubstanceProteins of defined sequence, whether the use is therapeutic or prophylactic. This set of elements will be used to describe albumins, coagulation factors, cytokines, growth factors, peptide/SubstanceProtein hormones, enzymes, toxins, toxoids, recombinant vaccines, and immunomodulators.",
      "properties": {
        "resourceType": {
          "description": "This is a SubstanceProtein resource",
          "const": "SubstanceProtein"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "sequenceType": {
          "description": "The SubstanceProtein descriptive elements will only be used when a complete or partial amino acid sequence is available or derivable from a nucleic acid sequence.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "numberOfSubunits": {
          "description": "Number of linear sequences of amino acids linked through peptide bonds. The number of subunits constituting the SubstanceProtein shall be described. It is possible that the number of subunits can be variable.",
          "$ref": "#/definitions/integer"
        },
        "_numberOfSubunits": {
          "description": "Extensions for numberOfSubunits",
          "$ref": "#/definitions/Element"
        },
        "disulfideLinkage": {
          "description": "The disulphide bond between two cysteine residues either on the same subunit or on two different subunits shall be described. The position of the disulfide bonds in the SubstanceProtein shall be listed in increasing order of subunit number and position within subunit followed by the abbreviation of the amino acids involved. The disulfide linkage positions shall actually contain the amino acid Cysteine at the respective positions.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_disulfideLinkage": {
          "description": "Extensions for disulfideLinkage",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "subunit": {
          "description": "This subclause refers to the description of each subunit constituting the SubstanceProtein. A subunit is a linear sequence of amino acids linked through peptide bonds. The Subunit information shall be provided when the finished SubstanceProtein is a complex of multiple sequences; subunits are not used to delineate domains within a single sequence. Subunits are listed in order of decreasing length; sequences of the same length will be ordered by decreasing molecular weight; subunits that have identical sequences will be repeated multiple times.",
          "items": {
            "$ref": "#/definitions/SubstanceProtein_Subunit"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "SubstanceProtein_Subunit": {
      "description": "A SubstanceProtein is defined as a single unit of a linear amino acid sequence, or a combination of subunits that are either covalently linked or have a defined invariant stoichiometric relationship. This includes all synthetic, recombinant and purified SubstanceProteins of defined sequence, whether the use is therapeutic or prophylactic. This set of elements will be used to describe albumins, coagulation factors, cytokines, growth factors, peptide/SubstanceProtein hormones, enzymes, toxins, toxoids, recombinant vaccines, and immunomodulators.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "subunit": {
          "description": "Index of primary sequences of amino acids linked through peptide bonds in order of decreasing length. Sequences of the same length will be ordered by molecular weight. Subunits that have identical sequences will be repeated and have sequential subscripts.",
          "$ref": "#/definitions/integer"
        },
        "_subunit": {
          "description": "Extensions for subunit",
          "$ref": "#/definitions/Element"
        },
        "sequence": {
          "description": "The sequence information shall be provided enumerating the amino acids from N- to C-terminal end using standard single-letter amino acid codes. Uppercase shall be used for L-amino acids and lowercase for D-amino acids. Transcribed SubstanceProteins will always be described using the translated sequence; for synthetic peptide containing amino acids that are not represented with a single letter code an X should be used within the sequence. The modified amino acids will be distinguished by their position in the sequence.",
          "$ref": "#/definitions/string"
        },
        "_sequence": {
          "description": "Extensions for sequence",
          "$ref": "#/definitions/Element"
        },
        "length": {
          "description": "Length of linear sequences of amino acids contained in the subunit.",
          "$ref": "#/definitions/integer"
        },
        "_length": {
          "description": "Extensions for length",
          "$ref": "#/definitions/Element"
        },
        "sequenceAttachment": {
          "description": "The sequence information shall be provided enumerating the amino acids from N- to C-terminal end using standard single-letter amino acid codes. Uppercase shall be used for L-amino acids and lowercase for D-amino acids. Transcribed SubstanceProteins will always be described using the translated sequence; for synthetic peptide containing amino acids that are not represented with a single letter code an X should be used within the sequence. The modified amino acids will be distinguished by their position in the sequence.",
          "$ref": "#/definitions/Attachment"
        },
        "nTerminalModificationId": {
          "description": "Unique identifier for molecular fragment modification based on the ISO 11238 Substance ID.",
          "$ref": "#/definitions/Identifier"
        },
        "nTerminalModification": {
          "description": "The name of the fragment modified at the N-terminal of the SubstanceProtein shall be specified.",
          "$ref": "#/definitions/string"
        },
        "_nTerminalModification": {
          "description": "Extensions for nTerminalModification",
          "$ref": "#/definitions/Element"
        },
        "cTerminalModificationId": {
          "description": "Unique identifier for molecular fragment modification based on the ISO 11238 Substance ID.",
          "$ref": "#/definitions/Identifier"
        },
        "cTerminalModification": {
          "description": "The modification at the C-terminal shall be specified.",
          "$ref": "#/definitions/string"
        },
        "_cTerminalModification": {
          "description": "Extensions for cTerminalModification",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubstanceReferenceInformation": {
      "description": "Todo.",
      "properties": {
        "resourceType": {
          "description": "This is a SubstanceReferenceInformation resource",
          "const": "SubstanceReferenceInformation"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "comment": {
          "description": "Todo.",
          "$ref": "#/definitions/string"
        },
        "_comment": {
          "description": "Extensions for comment",
          "$ref": "#/definitions/Element"
        },
        "gene": {
          "description": "Todo.",
          "items": {
            "$ref": "#/definitions/SubstanceReferenceInformation_Gene"
          },
          "type": "array"
        },
        "geneElement": {
          "description": "Todo.",
          "items": {
            "$ref": "#/definitions/SubstanceReferenceInformation_GeneElement"
          },
          "type": "array"
        },
        "target": {
          "description": "Todo.",
          "items": {
            "$ref": "#/definitions/SubstanceReferenceInformation_Target"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "SubstanceReferenceInformation_Gene": {
      "description": "Todo.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "geneSequenceOrigin": {
          "description": "Todo.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "gene": {
          "description": "Todo.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "source": {
          "description": "Todo.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubstanceReferenceInformation_GeneElement": {
      "description": "Todo.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Todo.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "element": {
          "description": "Todo.",
          "$ref": "#/definitions/Identifier"
        },
        "source": {
          "description": "Todo.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubstanceReferenceInformation_Target": {
      "description": "Todo.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "target": {
          "description": "Todo.",
          "$ref": "#/definitions/Identifier"
        },
        "type": {
          "description": "Todo.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "interaction": {
          "description": "Todo.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "organism": {
          "description": "Todo.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "organismType": {
          "description": "Todo.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "amountQuantity": {
          "description": "Todo.",
          "$ref": "#/definitions/Quantity"
        },
        "amountRange": {
          "description": "Todo.",
          "$ref": "#/definitions/Range"
        },
        "amountString": {
          "description": "Todo.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_amountString": {
          "description": "Extensions for amountString",
          "$ref": "#/definitions/Element"
        },
        "amountType": {
          "description": "Todo.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "source": {
          "description": "Todo.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubstanceSourceMaterial": {
      "description": "Source material shall capture information on the taxonomic and anatomical origins as well as the fraction of a material that can result in or can be modified to form a substance. This set of data elements shall be used to define polymer substances isolated from biological matrices. Taxonomic and anatomical origins shall be described using a controlled vocabulary as required. This information is captured for naturally derived polymers ( . starch) and structurally diverse substances. For Organisms belonging to the Kingdom Plantae the Substance level defines the fresh material of a single species or infraspecies, the Herbal Drug and the Herbal preparation. For Herbal preparations, the fraction information will be captured at the Substance information level and additional information for herbal extracts will be captured at the Specified Substance Group 1 information level. See for further explanation the Substance Class: Structurally Diverse and the herbal annex.",
      "properties": {
        "resourceType": {
          "description": "This is a SubstanceSourceMaterial resource",
          "const": "SubstanceSourceMaterial"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "sourceMaterialClass": {
          "description": "General high level classification of the source material specific to the origin of the material.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "sourceMaterialType": {
          "description": "The type of the source material shall be specified based on a controlled vocabulary. For vaccines, this subclause refers to the class of infectious agent.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "sourceMaterialState": {
          "description": "The state of the source material when extracted.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "organismId": {
          "description": "The unique identifier associated with the source material parent organism shall be specified.",
          "$ref": "#/definitions/Identifier"
        },
        "organismName": {
          "description": "The organism accepted Scientific name shall be provided based on the organism taxonomy.",
          "$ref": "#/definitions/string"
        },
        "_organismName": {
          "description": "Extensions for organismName",
          "$ref": "#/definitions/Element"
        },
        "parentSubstanceId": {
          "description": "The parent of the herbal drug Ginkgo biloba, Leaf is the substance ID of the substance (fresh) of Ginkgo biloba L. or Ginkgo biloba L. (Whole plant).",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "parentSubstanceName": {
          "description": "The parent substance of the Herbal Drug, or Herbal preparation.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_parentSubstanceName": {
          "description": "Extensions for parentSubstanceName",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "countryOfOrigin": {
          "description": "The country where the plant material is harvested or the countries where the plasma is sourced from as laid down in accordance with the Plasma Master File. For “Plasma-derived substances” the attribute country of origin provides information about the countries used for the manufacturing of the Cryopoor plama or Crioprecipitate.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "geographicalLocation": {
          "description": "The place/region where the plant is harvested or the places/regions where the animal source material has its habitat.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_geographicalLocation": {
          "description": "Extensions for geographicalLocation",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "developmentStage": {
          "description": "Stage of life for animals, plants, insects and microorganisms. This information shall be provided only when the substance is significantly different in these stages (e.g. foetal bovine serum).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "fractionDescription": {
          "description": "Many complex materials are fractions of parts of plants, animals, or minerals. Fraction elements are often necessary to define both Substances and Specified Group 1 Substances. For substances derived from Plants, fraction information will be captured at the Substance information level ( . Oils, Juices and Exudates). Additional information for Extracts, such as extraction solvent composition, will be captured at the Specified Substance Group 1 information level. For plasma-derived products fraction information will be captured at the Substance and the Specified Substance Group 1 levels.",
          "items": {
            "$ref": "#/definitions/SubstanceSourceMaterial_FractionDescription"
          },
          "type": "array"
        },
        "organism": {
          "description": "This subclause describes the organism which the substance is derived from. For vaccines, the parent organism shall be specified based on these subclause elements. As an example, full taxonomy will be described for the Substance Name: ., Leaf.",
          "$ref": "#/definitions/SubstanceSourceMaterial_Organism"
        },
        "partDescription": {
          "description": "To do.",
          "items": {
            "$ref": "#/definitions/SubstanceSourceMaterial_PartDescription"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "SubstanceSourceMaterial_FractionDescription": {
      "description": "Source material shall capture information on the taxonomic and anatomical origins as well as the fraction of a material that can result in or can be modified to form a substance. This set of data elements shall be used to define polymer substances isolated from biological matrices. Taxonomic and anatomical origins shall be described using a controlled vocabulary as required. This information is captured for naturally derived polymers ( . starch) and structurally diverse substances. For Organisms belonging to the Kingdom Plantae the Substance level defines the fresh material of a single species or infraspecies, the Herbal Drug and the Herbal preparation. For Herbal preparations, the fraction information will be captured at the Substance information level and additional information for herbal extracts will be captured at the Specified Substance Group 1 information level. See for further explanation the Substance Class: Structurally Diverse and the herbal annex.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "fraction": {
          "description": "This element is capturing information about the fraction of a plant part, or human plasma for fractionation.",
          "$ref": "#/definitions/string"
        },
        "_fraction": {
          "description": "Extensions for fraction",
          "$ref": "#/definitions/Element"
        },
        "materialType": {
          "description": "The specific type of the material constituting the component. For Herbal preparations the particulars of the extracts (liquid/dry) is described in Specified Substance Group 1.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubstanceSourceMaterial_Organism": {
      "description": "Source material shall capture information on the taxonomic and anatomical origins as well as the fraction of a material that can result in or can be modified to form a substance. This set of data elements shall be used to define polymer substances isolated from biological matrices. Taxonomic and anatomical origins shall be described using a controlled vocabulary as required. This information is captured for naturally derived polymers ( . starch) and structurally diverse substances. For Organisms belonging to the Kingdom Plantae the Substance level defines the fresh material of a single species or infraspecies, the Herbal Drug and the Herbal preparation. For Herbal preparations, the fraction information will be captured at the Substance information level and additional information for herbal extracts will be captured at the Specified Substance Group 1 information level. See for further explanation the Substance Class: Structurally Diverse and the herbal annex.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "family": {
          "description": "The family of an organism shall be specified.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "genus": {
          "description": "The genus of an organism shall be specified; refers to the Latin epithet of the genus element of the plant/animal scientific name; it is present in names for genera, species and infraspecies.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "species": {
          "description": "The species of an organism shall be specified; refers to the Latin epithet of the species of the plant/animal; it is present in names for species and infraspecies.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "intraspecificType": {
          "description": "The Intraspecific type of an organism shall be specified.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "intraspecificDescription": {
          "description": "The intraspecific description of an organism shall be specified based on a controlled vocabulary. For Influenza Vaccine, the intraspecific description shall contain the syntax of the antigen in line with the WHO convention.",
          "$ref": "#/definitions/string"
        },
        "_intraspecificDescription": {
          "description": "Extensions for intraspecificDescription",
          "$ref": "#/definitions/Element"
        },
        "author": {
          "description": "4.9.13.6.1 Author type (Conditional).",
          "items": {
            "$ref": "#/definitions/SubstanceSourceMaterial_Author"
          },
          "type": "array"
        },
        "hybrid": {
          "description": "4.9.13.8.1 Hybrid species maternal organism ID (Optional).",
          "$ref": "#/definitions/SubstanceSourceMaterial_Hybrid"
        },
        "organismGeneral": {
          "description": "4.9.13.7.1 Kingdom (Conditional).",
          "$ref": "#/definitions/SubstanceSourceMaterial_OrganismGeneral"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubstanceSourceMaterial_Author": {
      "description": "Source material shall capture information on the taxonomic and anatomical origins as well as the fraction of a material that can result in or can be modified to form a substance. This set of data elements shall be used to define polymer substances isolated from biological matrices. Taxonomic and anatomical origins shall be described using a controlled vocabulary as required. This information is captured for naturally derived polymers ( . starch) and structurally diverse substances. For Organisms belonging to the Kingdom Plantae the Substance level defines the fresh material of a single species or infraspecies, the Herbal Drug and the Herbal preparation. For Herbal preparations, the fraction information will be captured at the Substance information level and additional information for herbal extracts will be captured at the Specified Substance Group 1 information level. See for further explanation the Substance Class: Structurally Diverse and the herbal annex.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "authorType": {
          "description": "The type of author of an organism species shall be specified. The parenthetical author of an organism species refers to the first author who published the plant/animal name (of any rank). The primary author of an organism species refers to the first author(s), who validly published the plant/animal name.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "authorDescription": {
          "description": "The author of an organism species shall be specified. The author year of an organism shall also be specified when applicable; refers to the year in which the first author(s) published the infraspecific plant/animal name (of any rank).",
          "$ref": "#/definitions/string"
        },
        "_authorDescription": {
          "description": "Extensions for authorDescription",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubstanceSourceMaterial_Hybrid": {
      "description": "Source material shall capture information on the taxonomic and anatomical origins as well as the fraction of a material that can result in or can be modified to form a substance. This set of data elements shall be used to define polymer substances isolated from biological matrices. Taxonomic and anatomical origins shall be described using a controlled vocabulary as required. This information is captured for naturally derived polymers ( . starch) and structurally diverse substances. For Organisms belonging to the Kingdom Plantae the Substance level defines the fresh material of a single species or infraspecies, the Herbal Drug and the Herbal preparation. For Herbal preparations, the fraction information will be captured at the Substance information level and additional information for herbal extracts will be captured at the Specified Substance Group 1 information level. See for further explanation the Substance Class: Structurally Diverse and the herbal annex.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "maternalOrganismId": {
          "description": "The identifier of the maternal species constituting the hybrid organism shall be specified based on a controlled vocabulary. For plants, the parents aren’t always known, and it is unlikely that it will be known which is maternal and which is paternal.",
          "$ref": "#/definitions/string"
        },
        "_maternalOrganismId": {
          "description": "Extensions for maternalOrganismId",
          "$ref": "#/definitions/Element"
        },
        "maternalOrganismName": {
          "description": "The name of the maternal species constituting the hybrid organism shall be specified. For plants, the parents aren’t always known, and it is unlikely that it will be known which is maternal and which is paternal.",
          "$ref": "#/definitions/string"
        },
        "_maternalOrganismName": {
          "description": "Extensions for maternalOrganismName",
          "$ref": "#/definitions/Element"
        },
        "paternalOrganismId": {
          "description": "The identifier of the paternal species constituting the hybrid organism shall be specified based on a controlled vocabulary.",
          "$ref": "#/definitions/string"
        },
        "_paternalOrganismId": {
          "description": "Extensions for paternalOrganismId",
          "$ref": "#/definitions/Element"
        },
        "paternalOrganismName": {
          "description": "The name of the paternal species constituting the hybrid organism shall be specified.",
          "$ref": "#/definitions/string"
        },
        "_paternalOrganismName": {
          "description": "Extensions for paternalOrganismName",
          "$ref": "#/definitions/Element"
        },
        "hybridType": {
          "description": "The hybrid type of an organism shall be specified.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubstanceSourceMaterial_OrganismGeneral": {
      "description": "Source material shall capture information on the taxonomic and anatomical origins as well as the fraction of a material that can result in or can be modified to form a substance. This set of data elements shall be used to define polymer substances isolated from biological matrices. Taxonomic and anatomical origins shall be described using a controlled vocabulary as required. This information is captured for naturally derived polymers ( . starch) and structurally diverse substances. For Organisms belonging to the Kingdom Plantae the Substance level defines the fresh material of a single species or infraspecies, the Herbal Drug and the Herbal preparation. For Herbal preparations, the fraction information will be captured at the Substance information level and additional information for herbal extracts will be captured at the Specified Substance Group 1 information level. See for further explanation the Substance Class: Structurally Diverse and the herbal annex.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "kingdom": {
          "description": "The kingdom of an organism shall be specified.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "phylum": {
          "description": "The phylum of an organism shall be specified.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "class": {
          "description": "The class of an organism shall be specified.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "order": {
          "description": "The order of an organism shall be specified,.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SubstanceSourceMaterial_PartDescription": {
      "description": "Source material shall capture information on the taxonomic and anatomical origins as well as the fraction of a material that can result in or can be modified to form a substance. This set of data elements shall be used to define polymer substances isolated from biological matrices. Taxonomic and anatomical origins shall be described using a controlled vocabulary as required. This information is captured for naturally derived polymers ( . starch) and structurally diverse substances. For Organisms belonging to the Kingdom Plantae the Substance level defines the fresh material of a single species or infraspecies, the Herbal Drug and the Herbal preparation. For Herbal preparations, the fraction information will be captured at the Substance information level and additional information for herbal extracts will be captured at the Specified Substance Group 1 information level. See for further explanation the Substance Class: Structurally Diverse and the herbal annex.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "part": {
          "description": "Entity of anatomical origin of source material within an organism.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "partLocation": {
          "description": "The detailed anatomic location when the part can be extracted from different anatomical locations of the organism. Multiple alternative locations may apply.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SupplyDelivery": {
      "description": "Record of delivery of what is supplied.",
      "properties": {
        "resourceType": {
          "description": "This is a SupplyDelivery resource",
          "const": "SupplyDelivery"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifier for the supply delivery event that is used to identify it across multiple disparate systems.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "basedOn": {
          "description": "A plan, proposal or order that is fulfilled in whole or in part by this event.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "partOf": {
          "description": "A larger event of which this particular event is a component or step.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "status": {
          "description": "A code specifying the state of the dispense event.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "patient": {
          "description": "A link to a resource representing the person whom the delivered item is for.",
          "$ref": "#/definitions/Reference"
        },
        "type": {
          "description": "Indicates the type of supply being provided.  Examples include: Medication, Device, Biologically Derived Product.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "suppliedItem": {
          "description": "The item that is being delivered or has been supplied.",
          "items": {
            "$ref": "#/definitions/SupplyDelivery_SuppliedItem"
          },
          "type": "array"
        },
        "occurrenceDateTime": {
          "description": "The date or time(s) the activity occurred.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_occurrenceDateTime": {
          "description": "Extensions for occurrenceDateTime",
          "$ref": "#/definitions/Element"
        },
        "occurrencePeriod": {
          "description": "The date or time(s) the activity occurred.",
          "$ref": "#/definitions/Period"
        },
        "occurrenceTiming": {
          "description": "The date or time(s) the activity occurred.",
          "$ref": "#/definitions/Timing"
        },
        "supplier": {
          "description": "The individual or organization responsible for supplying the delivery.",
          "$ref": "#/definitions/Reference"
        },
        "destination": {
          "description": "Identification of the facility/location where the delivery was shipped to.",
          "$ref": "#/definitions/Reference"
        },
        "receiver": {
          "description": "Identifies the individual or organization that received the delivery.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "SupplyDelivery_SuppliedItem": {
      "description": "Record of delivery of what is supplied.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "quantity": {
          "description": "The amount of the item that has been supplied.  Unit of measure may be included.",
          "$ref": "#/definitions/Quantity"
        },
        "itemCodeableConcept": {
          "description": "Identifies the medication, substance, device or biologically derived product being supplied. This is either a link to a resource representing the details of the item or a code that identifies the item from a known list.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "itemReference": {
          "description": "Identifies the medication, substance, device or biologically derived product being supplied. This is either a link to a resource representing the details of the item or a code that identifies the item from a known list.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SupplyRequest": {
      "description": "A record of a request to deliver a medication, substance or device used in the healthcare setting to a particular destination for a particular person or organization.",
      "properties": {
        "resourceType": {
          "description": "This is a SupplyRequest resource",
          "const": "SupplyRequest"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Business identifiers assigned to this SupplyRequest by the author and/or other systems. These identifiers remain constant as the resource is updated and propagates from server to server.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "Status of the supply request.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "basedOn": {
          "description": "Plan/proposal/order fulfilled by this request.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "category": {
          "description": "Category of supply, e.g.  central, non-stock, etc. This is used to support work flows associated with the supply process.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "priority": {
          "description": "Indicates how quickly this SupplyRequest should be addressed with respect to other requests.",
          "$ref": "#/definitions/code"
        },
        "_priority": {
          "description": "Extensions for priority",
          "$ref": "#/definitions/Element"
        },
        "deliverFor": {
          "description": "The patient to whom the supply will be given or for whom they will be used.",
          "$ref": "#/definitions/Reference"
        },
        "item": {
          "description": "The item that is requested to be supplied. This is either a link to a resource representing the details of the item or a code that identifies the item from a known list.",
          "$ref": "#/definitions/CodeableReference"
        },
        "quantity": {
          "description": "The amount that is being ordered of the indicated item.",
          "$ref": "#/definitions/Quantity"
        },
        "parameter": {
          "description": "Specific parameters for the ordered item.  For example, the size of the indicated item.",
          "items": {
            "$ref": "#/definitions/SupplyRequest_Parameter"
          },
          "type": "array"
        },
        "occurrenceDateTime": {
          "description": "When the request should be fulfilled.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_occurrenceDateTime": {
          "description": "Extensions for occurrenceDateTime",
          "$ref": "#/definitions/Element"
        },
        "occurrencePeriod": {
          "description": "When the request should be fulfilled.",
          "$ref": "#/definitions/Period"
        },
        "occurrenceTiming": {
          "description": "When the request should be fulfilled.",
          "$ref": "#/definitions/Timing"
        },
        "authoredOn": {
          "description": "When the request was made.",
          "$ref": "#/definitions/dateTime"
        },
        "_authoredOn": {
          "description": "Extensions for authoredOn",
          "$ref": "#/definitions/Element"
        },
        "requester": {
          "description": "The device, practitioner, etc. who initiated the request.",
          "$ref": "#/definitions/Reference"
        },
        "supplier": {
          "description": "Who is intended to fulfill the request.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "reason": {
          "description": "The reason why the supply item was requested.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "deliverFrom": {
          "description": "Where the supply is expected to come from.",
          "$ref": "#/definitions/Reference"
        },
        "deliverTo": {
          "description": "Where the supply is destined to go.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "item",
        "quantity",
        "resourceType"
      ]
    },
    "SupplyRequest_Parameter": {
      "description": "A record of a request to deliver a medication, substance or device used in the healthcare setting to a particular destination for a particular person or organization.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "A code or string that identifies the device detail being asserted.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCodeableConcept": {
          "description": "The value of the device detail.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": {
          "description": "The value of the device detail.",
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "description": "The value of the device detail.",
          "$ref": "#/definitions/Range"
        },
        "valueBoolean": {
          "description": "The value of the device detail.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Task": {
      "description": "A task to be performed.",
      "properties": {
        "resourceType": {
          "description": "This is a Task resource",
          "const": "Task"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "The business identifier for this task.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "instantiatesCanonical": {
          "description": "The URL pointing to a *FHIR*-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Task.",
          "$ref": "#/definitions/canonical"
        },
        "instantiatesUri": {
          "description": "The URL pointing to an *externally* maintained  protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Task.",
          "$ref": "#/definitions/uri"
        },
        "_instantiatesUri": {
          "description": "Extensions for instantiatesUri",
          "$ref": "#/definitions/Element"
        },
        "basedOn": {
          "description": "BasedOn refers to a higher-level authorization that triggered the creation of the task.  It references a \"request\" resource such as a ServiceRequest, MedicationRequest, CarePlan, etc. which is distinct from the \"request\" resource the task is seeking to fulfill.  This latter resource is referenced by focus.  For example, based on a CarePlan (\u003d basedOn), a task is created to fulfill a ServiceRequest ( \u003d focus ) to collect a specimen from a patient.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "groupIdentifier": {
          "description": "An identifier that links together multiple tasks and other requests that were created in the same context.",
          "$ref": "#/definitions/Identifier"
        },
        "partOf": {
          "description": "Task that this particular task is part of.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "status": {
          "description": "The current status of the task.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "statusReason": {
          "description": "An explanation as to why this task is held, failed, was refused, etc.",
          "$ref": "#/definitions/CodeableReference"
        },
        "businessStatus": {
          "description": "Contains business-specific nuances of the business state.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "intent": {
          "description": "Indicates the \"level\" of actionability associated with the Task, i.e. i+R[9]Cs this a proposed task, a planned task, an actionable task, etc.",
          "$ref": "#/definitions/code"
        },
        "_intent": {
          "description": "Extensions for intent",
          "$ref": "#/definitions/Element"
        },
        "priority": {
          "description": "Indicates how quickly the Task should be addressed with respect to other requests.",
          "$ref": "#/definitions/code"
        },
        "_priority": {
          "description": "Extensions for priority",
          "$ref": "#/definitions/Element"
        },
        "doNotPerform": {
          "description": "If true indicates that the Task is asking for the specified action to *not* occur.",
          "$ref": "#/definitions/boolean"
        },
        "_doNotPerform": {
          "description": "Extensions for doNotPerform",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "A name or code (or both) briefly describing what the task involves.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "description": {
          "description": "A free-text description of what is to be performed.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "focus": {
          "description": "The request being fulfilled or the resource being manipulated (changed, suspended, etc.) by this task.",
          "$ref": "#/definitions/Reference"
        },
        "for": {
          "description": "The entity who benefits from the performance of the service specified in the task (e.g., the patient).",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "The healthcare event  (e.g. a patient and healthcare provider interaction) during which this task was created.",
          "$ref": "#/definitions/Reference"
        },
        "requestedPeriod": {
          "description": "Indicates the start and/or end of the period of time when completion of the task is desired to take place.",
          "$ref": "#/definitions/Period"
        },
        "executionPeriod": {
          "description": "Identifies the time action was first taken against the task (start) and/or the time final action was taken against the task prior to marking it as completed (end).",
          "$ref": "#/definitions/Period"
        },
        "authoredOn": {
          "description": "The date and time this task was created.",
          "$ref": "#/definitions/dateTime"
        },
        "_authoredOn": {
          "description": "Extensions for authoredOn",
          "$ref": "#/definitions/Element"
        },
        "lastModified": {
          "description": "The date and time of last modification to this task.",
          "$ref": "#/definitions/dateTime"
        },
        "_lastModified": {
          "description": "Extensions for lastModified",
          "$ref": "#/definitions/Element"
        },
        "requester": {
          "description": "The creator of the task.",
          "$ref": "#/definitions/Reference"
        },
        "requestedPerformer": {
          "description": "The kind of participant or specific participant that should perform the task.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "owner": {
          "description": "Individual organization or Device currently responsible for task execution.",
          "$ref": "#/definitions/Reference"
        },
        "location": {
          "description": "Principal physical location where the this task is performed.",
          "$ref": "#/definitions/Reference"
        },
        "reason": {
          "description": "A description, code, or reference indicating why this task needs to be performed.",
          "items": {
            "$ref": "#/definitions/CodeableReference"
          },
          "type": "array"
        },
        "insurance": {
          "description": "Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be relevant to the Task.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "note": {
          "description": "Free-text information captured about the task as it progresses.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "relevantHistory": {
          "description": "Links to Provenance records for past versions of this Task that identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the task.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "restriction": {
          "description": "If the Task.focus is a request resource and the task is seeking fulfillment (i.e. is asking for the request to be actioned), this element identifies any limitations on what parts of the referenced request should be actioned.",
          "$ref": "#/definitions/Task_Restriction"
        },
        "input": {
          "description": "Additional information that may be needed in the execution of the task.",
          "items": {
            "$ref": "#/definitions/Task_Input"
          },
          "type": "array"
        },
        "output": {
          "description": "Outputs produced by the Task.",
          "items": {
            "$ref": "#/definitions/Task_Output"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Task_Restriction": {
      "description": "A task to be performed.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "repetitions": {
          "description": "Indicates the number of times the requested action should occur.",
          "$ref": "#/definitions/positiveInt"
        },
        "_repetitions": {
          "description": "Extensions for repetitions",
          "$ref": "#/definitions/Element"
        },
        "period": {
          "description": "The time-period for which fulfillment is sought. This must fall within the overall time period authorized in the referenced request.  E.g. ServiceRequest.occurance[x].",
          "$ref": "#/definitions/Period"
        },
        "recipient": {
          "description": "For requests that are targeted to more than one potential recipient/target, to identify who is fulfillment is sought for.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Task_Input": {
      "description": "A task to be performed.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "A code or description indicating how the input is intended to be used as part of the task execution.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueBase64Binary": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^\\s*([A-Za-z0-9+\\\\/]{4})*(([A-Za-z0-9+\\\\/]{2}\u003d\u003d)|([A-Za-z0-9+\\\\/]{3}\u003d)|([A-Za-z0-9+\\\\/]{4}))\\s*$",
          "type": "string"
        },
        "_valueBase64Binary": {
          "description": "Extensions for valueBase64Binary",
          "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueCanonical": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueCanonical": {
          "description": "Extensions for valueCanonical",
          "$ref": "#/definitions/Element"
        },
        "valueCode": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^[^\\s]+( [^\\s]+)*$",
          "type": "string"
        },
        "_valueCode": {
          "description": "Extensions for valueCode",
          "$ref": "#/definitions/Element"
        },
        "valueDate": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_valueDate": {
          "description": "Extensions for valueDate",
          "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_valueDateTime": {
          "description": "Extensions for valueDateTime",
          "$ref": "#/definitions/Element"
        },
        "valueDecimal": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_valueDecimal": {
          "description": "Extensions for valueDecimal",
          "$ref": "#/definitions/Element"
        },
        "valueId": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string"
        },
        "_valueId": {
          "description": "Extensions for valueId",
          "$ref": "#/definitions/Element"
        },
        "valueInstant": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string"
        },
        "_valueInstant": {
          "description": "Extensions for valueInstant",
          "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": {
          "description": "Extensions for valueInteger",
          "$ref": "#/definitions/Element"
        },
        "valueInteger64": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "string"
        },
        "_valueInteger64": {
          "description": "Extensions for valueInteger64",
          "$ref": "#/definitions/Element"
        },
        "valueMarkdown": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^\\s*(\\S|\\s)*$",
          "type": "string"
        },
        "_valueMarkdown": {
          "description": "Extensions for valueMarkdown",
          "$ref": "#/definitions/Element"
        },
        "valueOid": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
          "type": "string"
        },
        "_valueOid": {
          "description": "Extensions for valueOid",
          "$ref": "#/definitions/Element"
        },
        "valuePositiveInt": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_valuePositiveInt": {
          "description": "Extensions for valuePositiveInt",
          "$ref": "#/definitions/Element"
        },
        "valueString": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueTime": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?$",
          "type": "string"
        },
        "_valueTime": {
          "description": "Extensions for valueTime",
          "$ref": "#/definitions/Element"
        },
        "valueUnsignedInt": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_valueUnsignedInt": {
          "description": "Extensions for valueUnsignedInt",
          "$ref": "#/definitions/Element"
        },
        "valueUri": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUri": {
          "description": "Extensions for valueUri",
          "$ref": "#/definitions/Element"
        },
        "valueUrl": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUrl": {
          "description": "Extensions for valueUrl",
          "$ref": "#/definitions/Element"
        },
        "valueUuid": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
          "type": "string"
        },
        "_valueUuid": {
          "description": "Extensions for valueUuid",
          "$ref": "#/definitions/Element"
        },
        "valueAddress": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Address"
        },
        "valueAge": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Age"
        },
        "valueAnnotation": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Annotation"
        },
        "valueAttachment": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Attachment"
        },
        "valueCodeableConcept": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCodeableReference": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/CodeableReference"
        },
        "valueCoding": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Coding"
        },
        "valueContactPoint": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/ContactPoint"
        },
        "valueCount": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Count"
        },
        "valueDistance": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Distance"
        },
        "valueDuration": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Duration"
        },
        "valueHumanName": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/HumanName"
        },
        "valueIdentifier": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Identifier"
        },
        "valueMoney": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Money"
        },
        "valuePeriod": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Period"
        },
        "valueQuantity": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Range"
        },
        "valueRatio": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Ratio"
        },
        "valueRatioRange": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/RatioRange"
        },
        "valueReference": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Reference"
        },
        "valueSampledData": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/SampledData"
        },
        "valueSignature": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Signature"
        },
        "valueTiming": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Timing"
        },
        "valueContactDetail": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/ContactDetail"
        },
        "valueDataRequirement": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/DataRequirement"
        },
        "valueExpression": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Expression"
        },
        "valueParameterDefinition": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/ParameterDefinition"
        },
        "valueRelatedArtifact": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/RelatedArtifact"
        },
        "valueTriggerDefinition": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/TriggerDefinition"
        },
        "valueUsageContext": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/UsageContext"
        },
        "valueAvailability": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Availability"
        },
        "valueExtendedContactDetail": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/ExtendedContactDetail"
        },
        "valueDosage": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Dosage"
        },
        "valueMeta": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Meta"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "Task_Output": {
      "description": "A task to be performed.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The name of the Output parameter.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueBase64Binary": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^\\s*([A-Za-z0-9+\\\\/]{4})*(([A-Za-z0-9+\\\\/]{2}\u003d\u003d)|([A-Za-z0-9+\\\\/]{3}\u003d)|([A-Za-z0-9+\\\\/]{4}))\\s*$",
          "type": "string"
        },
        "_valueBase64Binary": {
          "description": "Extensions for valueBase64Binary",
          "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueCanonical": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueCanonical": {
          "description": "Extensions for valueCanonical",
          "$ref": "#/definitions/Element"
        },
        "valueCode": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^[^\\s]+( [^\\s]+)*$",
          "type": "string"
        },
        "_valueCode": {
          "description": "Extensions for valueCode",
          "$ref": "#/definitions/Element"
        },
        "valueDate": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_valueDate": {
          "description": "Extensions for valueDate",
          "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_valueDateTime": {
          "description": "Extensions for valueDateTime",
          "$ref": "#/definitions/Element"
        },
        "valueDecimal": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_valueDecimal": {
          "description": "Extensions for valueDecimal",
          "$ref": "#/definitions/Element"
        },
        "valueId": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string"
        },
        "_valueId": {
          "description": "Extensions for valueId",
          "$ref": "#/definitions/Element"
        },
        "valueInstant": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string"
        },
        "_valueInstant": {
          "description": "Extensions for valueInstant",
          "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": {
          "description": "Extensions for valueInteger",
          "$ref": "#/definitions/Element"
        },
        "valueInteger64": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "string"
        },
        "_valueInteger64": {
          "description": "Extensions for valueInteger64",
          "$ref": "#/definitions/Element"
        },
        "valueMarkdown": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^\\s*(\\S|\\s)*$",
          "type": "string"
        },
        "_valueMarkdown": {
          "description": "Extensions for valueMarkdown",
          "$ref": "#/definitions/Element"
        },
        "valueOid": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
          "type": "string"
        },
        "_valueOid": {
          "description": "Extensions for valueOid",
          "$ref": "#/definitions/Element"
        },
        "valuePositiveInt": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_valuePositiveInt": {
          "description": "Extensions for valuePositiveInt",
          "$ref": "#/definitions/Element"
        },
        "valueString": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueTime": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?$",
          "type": "string"
        },
        "_valueTime": {
          "description": "Extensions for valueTime",
          "$ref": "#/definitions/Element"
        },
        "valueUnsignedInt": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_valueUnsignedInt": {
          "description": "Extensions for valueUnsignedInt",
          "$ref": "#/definitions/Element"
        },
        "valueUri": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUri": {
          "description": "Extensions for valueUri",
          "$ref": "#/definitions/Element"
        },
        "valueUrl": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUrl": {
          "description": "Extensions for valueUrl",
          "$ref": "#/definitions/Element"
        },
        "valueUuid": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
          "type": "string"
        },
        "_valueUuid": {
          "description": "Extensions for valueUuid",
          "$ref": "#/definitions/Element"
        },
        "valueAddress": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Address"
        },
        "valueAge": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Age"
        },
        "valueAnnotation": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Annotation"
        },
        "valueAttachment": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Attachment"
        },
        "valueCodeableConcept": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCodeableReference": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/CodeableReference"
        },
        "valueCoding": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Coding"
        },
        "valueContactPoint": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/ContactPoint"
        },
        "valueCount": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Count"
        },
        "valueDistance": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Distance"
        },
        "valueDuration": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Duration"
        },
        "valueHumanName": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/HumanName"
        },
        "valueIdentifier": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Identifier"
        },
        "valueMoney": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Money"
        },
        "valuePeriod": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Period"
        },
        "valueQuantity": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Range"
        },
        "valueRatio": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Ratio"
        },
        "valueRatioRange": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/RatioRange"
        },
        "valueReference": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Reference"
        },
        "valueSampledData": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/SampledData"
        },
        "valueSignature": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Signature"
        },
        "valueTiming": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Timing"
        },
        "valueContactDetail": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/ContactDetail"
        },
        "valueDataRequirement": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/DataRequirement"
        },
        "valueExpression": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Expression"
        },
        "valueParameterDefinition": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/ParameterDefinition"
        },
        "valueRelatedArtifact": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/RelatedArtifact"
        },
        "valueTriggerDefinition": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/TriggerDefinition"
        },
        "valueUsageContext": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/UsageContext"
        },
        "valueAvailability": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Availability"
        },
        "valueExtendedContactDetail": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/ExtendedContactDetail"
        },
        "valueDosage": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Dosage"
        },
        "valueMeta": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Meta"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "TerminologyCapabilities": {
      "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "resourceType": {
          "description": "This is a TerminologyCapabilities resource",
          "const": "TerminologyCapabilities"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this terminology capabilities when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this terminology capabilities is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the terminology capabilities is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this terminology capabilities when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the terminology capabilities when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the terminology capabilities author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the terminology capabilities. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the terminology capabilities.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this terminology capabilities. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this terminology capabilities is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the terminology capabilities was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the terminology capabilities changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the terminology capabilities.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the terminology capabilities from a consumer\u0027s perspective. Typically, this is used when the capability statement describes a desired rather than an actual solution, for example as a formal expression of requirements as part of an RFP.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate terminology capabilities instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the terminology capabilities is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this terminology capabilities is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the terminology capabilities and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the terminology capabilities.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "kind": {
          "description": "The way that this statement is intended to be used, to describe an actual running instance of software, a particular product (kind, not instance of software) or a class of implementation (e.g. a desired purchase).",
          "$ref": "#/definitions/code"
        },
        "_kind": {
          "description": "Extensions for kind",
          "$ref": "#/definitions/Element"
        },
        "software": {
          "description": "Software that is covered by this terminology capability statement.  It is used when the statement describes the capabilities of a particular software version, independent of an installation.",
          "$ref": "#/definitions/TerminologyCapabilities_Software"
        },
        "implementation": {
          "description": "Identifies a specific implementation instance that is described by the terminology capability statement - i.e. a particular installation, rather than the capabilities of a software program.",
          "$ref": "#/definitions/TerminologyCapabilities_Implementation"
        },
        "lockedDate": {
          "description": "Whether the server supports lockedDate.",
          "$ref": "#/definitions/boolean"
        },
        "_lockedDate": {
          "description": "Extensions for lockedDate",
          "$ref": "#/definitions/Element"
        },
        "codeSystem": {
          "description": "Identifies a code system that is supported by the server. If there is a no code system URL, then this declares the general assumptions a client can make about support for any CodeSystem resource.",
          "items": {
            "$ref": "#/definitions/TerminologyCapabilities_CodeSystem"
          },
          "type": "array"
        },
        "expansion": {
          "description": "Information about the [ValueSet/$expand](valueset-operation-expand.html) operation.",
          "$ref": "#/definitions/TerminologyCapabilities_Expansion"
        },
        "codeSearch": {
          "description": "The degree to which the server supports the code search parameter on ValueSet, if it is supported.",
          "$ref": "#/definitions/code"
        },
        "_codeSearch": {
          "description": "Extensions for codeSearch",
          "$ref": "#/definitions/Element"
        },
        "validateCode": {
          "description": "Information about the [ValueSet/$validate-code](valueset-operation-validate-code.html) operation.",
          "$ref": "#/definitions/TerminologyCapabilities_ValidateCode"
        },
        "translation": {
          "description": "Information about the [ConceptMap/$translate](conceptmap-operation-translate.html) operation.",
          "$ref": "#/definitions/TerminologyCapabilities_Translation"
        },
        "closure": {
          "description": "Whether the $closure operation is supported.",
          "$ref": "#/definitions/TerminologyCapabilities_Closure"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "TerminologyCapabilities_Software": {
      "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "Name the software is known by.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "version": {
          "description": "The version identifier for the software covered by this statement.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "TerminologyCapabilities_Implementation": {
      "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "description": {
          "description": "Information about the specific installation that this terminology capability statement relates to.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "url": {
          "description": "An absolute base URL for the implementation.",
          "$ref": "#/definitions/url"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "TerminologyCapabilities_CodeSystem": {
      "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "uri": {
          "description": "Canonical identifier for the code system, represented as a URI.",
          "$ref": "#/definitions/canonical"
        },
        "version": {
          "description": "For the code system, a list of versions that are supported by the server.",
          "items": {
            "$ref": "#/definitions/TerminologyCapabilities_Version"
          },
          "type": "array"
        },
        "content": {
          "description": "The extent of the content of the code system (the concepts and codes it defines) are represented in this resource instance.",
          "$ref": "#/definitions/code"
        },
        "_content": {
          "description": "Extensions for content",
          "$ref": "#/definitions/Element"
        },
        "subsumption": {
          "description": "True if subsumption is supported for this version of the code system.",
          "$ref": "#/definitions/boolean"
        },
        "_subsumption": {
          "description": "Extensions for subsumption",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "TerminologyCapabilities_Version": {
      "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "For version-less code systems, there should be a single version with no identifier.",
          "$ref": "#/definitions/string"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "isDefault": {
          "description": "If this is the default version for this code system.",
          "$ref": "#/definitions/boolean"
        },
        "_isDefault": {
          "description": "Extensions for isDefault",
          "$ref": "#/definitions/Element"
        },
        "compositional": {
          "description": "If the compositional grammar defined by the code system is supported.",
          "$ref": "#/definitions/boolean"
        },
        "_compositional": {
          "description": "Extensions for compositional",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "Language Displays supported.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_language": {
          "description": "Extensions for language",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "filter": {
          "description": "Filter Properties supported.",
          "items": {
            "$ref": "#/definitions/TerminologyCapabilities_Filter"
          },
          "type": "array"
        },
        "property": {
          "description": "Properties supported for $lookup.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_property": {
          "description": "Extensions for property",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "TerminologyCapabilities_Filter": {
      "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "Code of the property supported.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "op": {
          "description": "Operations supported for the property.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "_op": {
          "description": "Extensions for op",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "TerminologyCapabilities_Expansion": {
      "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "hierarchical": {
          "description": "Whether the server can return nested value sets.",
          "$ref": "#/definitions/boolean"
        },
        "_hierarchical": {
          "description": "Extensions for hierarchical",
          "$ref": "#/definitions/Element"
        },
        "paging": {
          "description": "Whether the server supports paging on expansion.",
          "$ref": "#/definitions/boolean"
        },
        "_paging": {
          "description": "Extensions for paging",
          "$ref": "#/definitions/Element"
        },
        "incomplete": {
          "description": "True if requests for incomplete expansions are allowed.",
          "$ref": "#/definitions/boolean"
        },
        "_incomplete": {
          "description": "Extensions for incomplete",
          "$ref": "#/definitions/Element"
        },
        "parameter": {
          "description": "Supported expansion parameter.",
          "items": {
            "$ref": "#/definitions/TerminologyCapabilities_Parameter"
          },
          "type": "array"
        },
        "textFilter": {
          "description": "Documentation about text searching works.",
          "$ref": "#/definitions/markdown"
        },
        "_textFilter": {
          "description": "Extensions for textFilter",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "TerminologyCapabilities_Parameter": {
      "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "Name of the supported expansion parameter.",
          "$ref": "#/definitions/code"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "documentation": {
          "description": "Description of support for parameter.",
          "$ref": "#/definitions/string"
        },
        "_documentation": {
          "description": "Extensions for documentation",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "TerminologyCapabilities_ValidateCode": {
      "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "translations": {
          "description": "Whether translations are validated.",
          "$ref": "#/definitions/boolean"
        },
        "_translations": {
          "description": "Extensions for translations",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "TerminologyCapabilities_Translation": {
      "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "needsMap": {
          "description": "Whether the client must identify the map.",
          "$ref": "#/definitions/boolean"
        },
        "_needsMap": {
          "description": "Extensions for needsMap",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "TerminologyCapabilities_Closure": {
      "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "translation": {
          "description": "If cross-system closure is supported.",
          "$ref": "#/definitions/boolean"
        },
        "_translation": {
          "description": "Extensions for translation",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "TestReport": {
      "description": "A summary of information based on the results of executing a TestScript.",
      "properties": {
        "resourceType": {
          "description": "This is a TestReport resource",
          "const": "TestReport"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifier for the TestReport assigned for external purposes outside the context of FHIR.",
          "$ref": "#/definitions/Identifier"
        },
        "name": {
          "description": "A free text natural language name identifying the executed TestReport.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The current state of this test report.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "testScript": {
          "description": "Ideally this is an absolute URL that is used to identify the version-specific TestScript that was executed, matching the `TestScript.url`.",
          "$ref": "#/definitions/canonical"
        },
        "result": {
          "description": "The overall result from the execution of the TestScript.",
          "$ref": "#/definitions/code"
        },
        "_result": {
          "description": "Extensions for result",
          "$ref": "#/definitions/Element"
        },
        "score": {
          "description": "The final score (percentage of tests passed) resulting from the execution of the TestScript.",
          "$ref": "#/definitions/decimal"
        },
        "_score": {
          "description": "Extensions for score",
          "$ref": "#/definitions/Element"
        },
        "tester": {
          "description": "Name of the tester producing this report (Organization or individual).",
          "$ref": "#/definitions/string"
        },
        "_tester": {
          "description": "Extensions for tester",
          "$ref": "#/definitions/Element"
        },
        "issued": {
          "description": "When the TestScript was executed and this TestReport was generated.",
          "$ref": "#/definitions/dateTime"
        },
        "_issued": {
          "description": "Extensions for issued",
          "$ref": "#/definitions/Element"
        },
        "participant": {
          "description": "A participant in the test execution, either the execution engine, a client, or a server.",
          "items": {
            "$ref": "#/definitions/TestReport_Participant"
          },
          "type": "array"
        },
        "setup": {
          "description": "The results of the series of required setup operations before the tests were executed.",
          "$ref": "#/definitions/TestReport_Setup"
        },
        "test": {
          "description": "A test executed from the test script.",
          "items": {
            "$ref": "#/definitions/TestReport_Test"
          },
          "type": "array"
        },
        "teardown": {
          "description": "The results of the series of operations required to clean up after all the tests were executed (successfully or otherwise).",
          "$ref": "#/definitions/TestReport_Teardown"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "testScript",
        "resourceType"
      ]
    },
    "TestReport_Participant": {
      "description": "A summary of information based on the results of executing a TestScript.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of participant.",
          "$ref": "#/definitions/code"
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "uri": {
          "description": "The uri of the participant. An absolute URL is preferred.",
          "$ref": "#/definitions/uri"
        },
        "_uri": {
          "description": "Extensions for uri",
          "$ref": "#/definitions/Element"
        },
        "display": {
          "description": "The display name of the participant.",
          "$ref": "#/definitions/string"
        },
        "_display": {
          "description": "Extensions for display",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "TestReport_Setup": {
      "description": "A summary of information based on the results of executing a TestScript.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "action": {
          "description": "Action would contain either an operation or an assertion.",
          "items": {
            "$ref": "#/definitions/TestReport_Action"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "action"
      ]
    },
    "TestReport_Action": {
      "description": "A summary of information based on the results of executing a TestScript.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "operation": {
          "description": "The operation performed.",
          "$ref": "#/definitions/TestReport_Operation"
        },
        "assert": {
          "description": "The results of the assertion performed on the previous operations.",
          "$ref": "#/definitions/TestReport_Assert"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "TestReport_Operation": {
      "description": "A summary of information based on the results of executing a TestScript.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "result": {
          "description": "The result of this operation.",
          "$ref": "#/definitions/code"
        },
        "_result": {
          "description": "Extensions for result",
          "$ref": "#/definitions/Element"
        },
        "message": {
          "description": "An explanatory message associated with the result.",
          "$ref": "#/definitions/markdown"
        },
        "_message": {
          "description": "Extensions for message",
          "$ref": "#/definitions/Element"
        },
        "detail": {
          "description": "A link to further details on the result.",
          "$ref": "#/definitions/uri"
        },
        "_detail": {
          "description": "Extensions for detail",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "TestReport_Assert": {
      "description": "A summary of information based on the results of executing a TestScript.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "result": {
          "description": "The result of this assertion.",
          "$ref": "#/definitions/code"
        },
        "_result": {
          "description": "Extensions for result",
          "$ref": "#/definitions/Element"
        },
        "message": {
          "description": "An explanatory message associated with the result.",
          "$ref": "#/definitions/markdown"
        },
        "_message": {
          "description": "Extensions for message",
          "$ref": "#/definitions/Element"
        },
        "detail": {
          "description": "A link to further details on the result.",
          "$ref": "#/definitions/string"
        },
        "_detail": {
          "description": "Extensions for detail",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "TestReport_Test": {
      "description": "A summary of information based on the results of executing a TestScript.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "The name of this test used for tracking/logging purposes by test engines.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "A short description of the test used by test engines for tracking and reporting purposes.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "action": {
          "description": "Action would contain either an operation or an assertion.",
          "items": {
            "$ref": "#/definitions/TestReport_Action1"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "action"
      ]
    },
    "TestReport_Action1": {
      "description": "A summary of information based on the results of executing a TestScript.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "operation": {
          "description": "An operation would involve a REST request to a server.",
          "$ref": "#/definitions/TestReport_Operation"
        },
        "assert": {
          "description": "The results of the assertion performed on the previous operations.",
          "$ref": "#/definitions/TestReport_Assert"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "TestReport_Teardown": {
      "description": "A summary of information based on the results of executing a TestScript.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "action": {
          "description": "The teardown action will only contain an operation.",
          "items": {
            "$ref": "#/definitions/TestReport_Action2"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "action"
      ]
    },
    "TestReport_Action2": {
      "description": "A summary of information based on the results of executing a TestScript.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "operation": {
          "description": "An operation would involve a REST request to a server.",
          "$ref": "#/definitions/TestReport_Operation"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "operation"
      ]
    },
    "TestScript": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "resourceType": {
          "description": "This is a TestScript resource",
          "const": "TestScript"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this test script when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this test script is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the test script is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this test script when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the test script when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the test script author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the test script. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the test script.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this test script. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this test script is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the test script was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the test script changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the test script.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the test script from a consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate test script instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the test script is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this test script is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the test script and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the test script.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "origin": {
          "description": "An abstract server used in operations within this test script in the origin element.",
          "items": {
            "$ref": "#/definitions/TestScript_Origin"
          },
          "type": "array"
        },
        "destination": {
          "description": "An abstract server used in operations within this test script in the destination element.",
          "items": {
            "$ref": "#/definitions/TestScript_Destination"
          },
          "type": "array"
        },
        "metadata": {
          "description": "The required capability must exist and are assumed to function correctly on the FHIR server being tested.",
          "$ref": "#/definitions/TestScript_Metadata"
        },
        "scope": {
          "description": "The scope indicates a conformance artifact that is tested by the test(s) within this test case and the expectation of the test outcome(s) as well as the intended test phase inclusion.",
          "items": {
            "$ref": "#/definitions/TestScript_Scope"
          },
          "type": "array"
        },
        "fixture": {
          "description": "Fixture in the test script - by reference (uri). All fixtures are required for the test script to execute.",
          "items": {
            "$ref": "#/definitions/TestScript_Fixture"
          },
          "type": "array"
        },
        "profile": {
          "description": "Reference to the profile to be used for validation.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "variable": {
          "description": "Variable is set based either on element value in response body or on header field value in the response headers.",
          "items": {
            "$ref": "#/definitions/TestScript_Variable"
          },
          "type": "array"
        },
        "setup": {
          "description": "A series of required setup operations before tests are executed.",
          "$ref": "#/definitions/TestScript_Setup"
        },
        "test": {
          "description": "A test in this script.",
          "items": {
            "$ref": "#/definitions/TestScript_Test"
          },
          "type": "array"
        },
        "teardown": {
          "description": "A series of operations required to clean up after all the tests are executed (successfully or otherwise).",
          "$ref": "#/definitions/TestScript_Teardown"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "TestScript_Origin": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "index": {
          "description": "Abstract name given to an origin server in this test script.  The name is provided as a number starting at 1.",
          "$ref": "#/definitions/integer"
        },
        "_index": {
          "description": "Extensions for index",
          "$ref": "#/definitions/Element"
        },
        "profile": {
          "description": "The type of origin profile the test system supports.",
          "$ref": "#/definitions/Coding"
        },
        "url": {
          "description": "The explicit url path of the origin server used in this test script.",
          "$ref": "#/definitions/url"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "profile"
      ]
    },
    "TestScript_Destination": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "index": {
          "description": "Abstract name given to a destination server in this test script.  The name is provided as a number starting at 1.",
          "$ref": "#/definitions/integer"
        },
        "_index": {
          "description": "Extensions for index",
          "$ref": "#/definitions/Element"
        },
        "profile": {
          "description": "The type of destination profile the test system supports.",
          "$ref": "#/definitions/Coding"
        },
        "url": {
          "description": "The explicit url path of the destination server used in this test script.",
          "$ref": "#/definitions/url"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "profile"
      ]
    },
    "TestScript_Metadata": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "link": {
          "description": "A link to the FHIR specification that this test is covering.",
          "items": {
            "$ref": "#/definitions/TestScript_Link"
          },
          "type": "array"
        },
        "capability": {
          "description": "Capabilities that must exist and are assumed to function correctly on the FHIR server being tested.",
          "items": {
            "$ref": "#/definitions/TestScript_Capability"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "capability"
      ]
    },
    "TestScript_Link": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "URL to a particular requirement or feature within the FHIR specification.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "Short description of the link.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "TestScript_Capability": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "required": {
          "description": "Whether or not the test execution will require the given capabilities of the server in order for this test script to execute.",
          "$ref": "#/definitions/boolean"
        },
        "_required": {
          "description": "Extensions for required",
          "$ref": "#/definitions/Element"
        },
        "validated": {
          "description": "Whether or not the test execution will validate the given capabilities of the server in order for this test script to execute.",
          "$ref": "#/definitions/boolean"
        },
        "_validated": {
          "description": "Extensions for validated",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "Description of the capabilities that this test script is requiring the server to support.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "origin": {
          "description": "Which origin server these requirements apply to.",
          "items": {
            "$ref": "#/definitions/integer"
          },
          "type": "array"
        },
        "_origin": {
          "description": "Extensions for origin",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "destination": {
          "description": "Which server these requirements apply to.",
          "$ref": "#/definitions/integer"
        },
        "_destination": {
          "description": "Extensions for destination",
          "$ref": "#/definitions/Element"
        },
        "link": {
          "description": "Links to the FHIR specification that describes this interaction and the resources involved in more detail.",
          "items": {
            "$ref": "#/definitions/uri"
          },
          "type": "array"
        },
        "_link": {
          "description": "Extensions for link",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "capabilities": {
          "description": "Minimum capabilities required of server for test script to execute successfully.   If server does not meet at a minimum the referenced capability statement, then all tests in this script are skipped.",
          "$ref": "#/definitions/canonical"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "capabilities"
      ]
    },
    "TestScript_Scope": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "artifact": {
          "description": "The specific conformance artifact being tested. The canonical reference can be version-specific.",
          "$ref": "#/definitions/canonical"
        },
        "conformance": {
          "description": "The expectation of whether the test must pass for the system to be considered conformant with the artifact: required - all tests are expected to pass, optional - all test are expected to pass but non-pass status may be allowed, strict - all tests are expected to pass and warnings are treated as a failure.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "phase": {
          "description": "The phase of testing for this artifact: unit - development / implementation phase, integration - internal system to system phase, production - live system to system phase (Note, this may involve pii/phi data).",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "artifact"
      ]
    },
    "TestScript_Fixture": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "autocreate": {
          "description": "Whether or not to implicitly create the fixture during setup. If true, the fixture is automatically created on each server being tested during setup, therefore no create operation is required for this fixture in the TestScript.setup section.",
          "$ref": "#/definitions/boolean"
        },
        "_autocreate": {
          "description": "Extensions for autocreate",
          "$ref": "#/definitions/Element"
        },
        "autodelete": {
          "description": "Whether or not to implicitly delete the fixture during teardown. If true, the fixture is automatically deleted on each server being tested during teardown, therefore no delete operation is required for this fixture in the TestScript.teardown section.",
          "$ref": "#/definitions/boolean"
        },
        "_autodelete": {
          "description": "Extensions for autodelete",
          "$ref": "#/definitions/Element"
        },
        "resource": {
          "description": "Reference to the resource (containing the contents of the resource needed for operations). This is allowed to be a Parameters resource.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "TestScript_Variable": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "Descriptive name for this variable.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "defaultValue": {
          "description": "A default, hard-coded, or user-defined value for this variable.",
          "$ref": "#/definitions/string"
        },
        "_defaultValue": {
          "description": "Extensions for defaultValue",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "A free text natural language description of the variable and its purpose.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "expression": {
          "description": "The FHIRPath expression to evaluate against the fixture body. When variables are defined, only one of either expression, headerField or path must be specified.",
          "$ref": "#/definitions/string"
        },
        "_expression": {
          "description": "Extensions for expression",
          "$ref": "#/definitions/Element"
        },
        "headerField": {
          "description": "Will be used to grab the HTTP header field value from the headers that sourceId is pointing to.",
          "$ref": "#/definitions/string"
        },
        "_headerField": {
          "description": "Extensions for headerField",
          "$ref": "#/definitions/Element"
        },
        "hint": {
          "description": "Displayable text string with hint help information to the user when entering a default value.",
          "$ref": "#/definitions/string"
        },
        "_hint": {
          "description": "Extensions for hint",
          "$ref": "#/definitions/Element"
        },
        "path": {
          "description": "XPath or JSONPath to evaluate against the fixture body.  When variables are defined, only one of either expression, headerField or path must be specified.",
          "$ref": "#/definitions/string"
        },
        "_path": {
          "description": "Extensions for path",
          "$ref": "#/definitions/Element"
        },
        "sourceId": {
          "description": "Fixture to evaluate the XPath/JSONPath expression or the headerField  against within this variable.",
          "$ref": "#/definitions/id"
        },
        "_sourceId": {
          "description": "Extensions for sourceId",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "TestScript_Setup": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "action": {
          "description": "Action would contain either an operation or an assertion.",
          "items": {
            "$ref": "#/definitions/TestScript_Action"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "action"
      ]
    },
    "TestScript_Action": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "operation": {
          "description": "The operation to perform.",
          "$ref": "#/definitions/TestScript_Operation"
        },
        "assert": {
          "description": "Evaluates the results of previous operations to determine if the server under test behaves appropriately.",
          "$ref": "#/definitions/TestScript_Assert"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "TestScript_Operation": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Server interaction or operation type.",
          "$ref": "#/definitions/Coding"
        },
        "resource": {
          "description": "The type of the FHIR resource. See the [resource list](resourcelist.html). Data type of uri is needed when non-HL7 artifacts are identified.",
          "$ref": "#/definitions/uri"
        },
        "_resource": {
          "description": "Extensions for resource",
          "$ref": "#/definitions/Element"
        },
        "label": {
          "description": "The label would be used for tracking/logging purposes by test engines.",
          "$ref": "#/definitions/string"
        },
        "_label": {
          "description": "Extensions for label",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "The description would be used by test engines for tracking and reporting purposes.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "accept": {
          "description": "The mime-type to use for RESTful operation in the \u0027Accept\u0027 header.",
          "$ref": "#/definitions/code"
        },
        "_accept": {
          "description": "Extensions for accept",
          "$ref": "#/definitions/Element"
        },
        "contentType": {
          "description": "The mime-type to use for RESTful operation in the \u0027Content-Type\u0027 header.",
          "$ref": "#/definitions/code"
        },
        "_contentType": {
          "description": "Extensions for contentType",
          "$ref": "#/definitions/Element"
        },
        "destination": {
          "description": "The server where the request message is destined for.  Must be one of the server numbers listed in TestScript.destination section.",
          "$ref": "#/definitions/integer"
        },
        "_destination": {
          "description": "Extensions for destination",
          "$ref": "#/definitions/Element"
        },
        "encodeRequestUrl": {
          "description": "Whether or not to implicitly send the request url in encoded format. The default is true to match the standard RESTful client behavior. Set to false when communicating with a server that does not support encoded url paths.",
          "$ref": "#/definitions/boolean"
        },
        "_encodeRequestUrl": {
          "description": "Extensions for encodeRequestUrl",
          "$ref": "#/definitions/Element"
        },
        "method": {
          "description": "The HTTP method the test engine MUST use for this operation regardless of any other operation details.",
          "$ref": "#/definitions/code"
        },
        "_method": {
          "description": "Extensions for method",
          "$ref": "#/definitions/Element"
        },
        "origin": {
          "description": "The server where the request message originates from.  Must be one of the server numbers listed in TestScript.origin section.",
          "$ref": "#/definitions/integer"
        },
        "_origin": {
          "description": "Extensions for origin",
          "$ref": "#/definitions/Element"
        },
        "params": {
          "description": "Path plus parameters after [type].  Used to set parts of the request URL explicitly.",
          "$ref": "#/definitions/string"
        },
        "_params": {
          "description": "Extensions for params",
          "$ref": "#/definitions/Element"
        },
        "requestHeader": {
          "description": "Header elements would be used to set HTTP headers.",
          "items": {
            "$ref": "#/definitions/TestScript_RequestHeader"
          },
          "type": "array"
        },
        "requestId": {
          "description": "The fixture id (maybe new) to map to the request.",
          "$ref": "#/definitions/id"
        },
        "_requestId": {
          "description": "Extensions for requestId",
          "$ref": "#/definitions/Element"
        },
        "responseId": {
          "description": "The fixture id (maybe new) to map to the response.",
          "$ref": "#/definitions/id"
        },
        "_responseId": {
          "description": "Extensions for responseId",
          "$ref": "#/definitions/Element"
        },
        "sourceId": {
          "description": "The id of the fixture used as the body of a PUT or POST request.",
          "$ref": "#/definitions/id"
        },
        "_sourceId": {
          "description": "Extensions for sourceId",
          "$ref": "#/definitions/Element"
        },
        "targetId": {
          "description": "Id of fixture used for extracting the [id],  [type], and [vid] for GET requests.",
          "$ref": "#/definitions/id"
        },
        "_targetId": {
          "description": "Extensions for targetId",
          "$ref": "#/definitions/Element"
        },
        "url": {
          "description": "Complete request URL.",
          "$ref": "#/definitions/string"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "TestScript_RequestHeader": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "field": {
          "description": "The HTTP header field e.g. \"Accept\".",
          "$ref": "#/definitions/string"
        },
        "_field": {
          "description": "Extensions for field",
          "$ref": "#/definitions/Element"
        },
        "value": {
          "description": "The value of the header e.g. \"application/fhir+xml\".",
          "$ref": "#/definitions/string"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "TestScript_Assert": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "label": {
          "description": "The label would be used for tracking/logging purposes by test engines.",
          "$ref": "#/definitions/string"
        },
        "_label": {
          "description": "Extensions for label",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "The description would be used by test engines for tracking and reporting purposes.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "direction": {
          "description": "The direction to use for the assertion.",
          "$ref": "#/definitions/code"
        },
        "_direction": {
          "description": "Extensions for direction",
          "$ref": "#/definitions/Element"
        },
        "compareToSourceId": {
          "description": "Id of the source fixture used as the contents to be evaluated by either the \"source/expression\" or \"sourceId/path\" definition.",
          "$ref": "#/definitions/string"
        },
        "_compareToSourceId": {
          "description": "Extensions for compareToSourceId",
          "$ref": "#/definitions/Element"
        },
        "compareToSourceExpression": {
          "description": "The FHIRPath expression to evaluate against the source fixture. When compareToSourceId is defined, either compareToSourceExpression or compareToSourcePath must be defined, but not both.",
          "$ref": "#/definitions/string"
        },
        "_compareToSourceExpression": {
          "description": "Extensions for compareToSourceExpression",
          "$ref": "#/definitions/Element"
        },
        "compareToSourcePath": {
          "description": "XPath or JSONPath expression to evaluate against the source fixture. When compareToSourceId is defined, either compareToSourceExpression or compareToSourcePath must be defined, but not both.",
          "$ref": "#/definitions/string"
        },
        "_compareToSourcePath": {
          "description": "Extensions for compareToSourcePath",
          "$ref": "#/definitions/Element"
        },
        "contentType": {
          "description": "The mime-type contents to compare against the request or response message \u0027Content-Type\u0027 header.",
          "$ref": "#/definitions/code"
        },
        "_contentType": {
          "description": "Extensions for contentType",
          "$ref": "#/definitions/Element"
        },
        "expression": {
          "description": "The FHIRPath expression to be evaluated against the request or response message contents - HTTP headers and payload.",
          "$ref": "#/definitions/string"
        },
        "_expression": {
          "description": "Extensions for expression",
          "$ref": "#/definitions/Element"
        },
        "headerField": {
          "description": "The HTTP header field name e.g. \u0027Location\u0027.",
          "$ref": "#/definitions/string"
        },
        "_headerField": {
          "description": "Extensions for headerField",
          "$ref": "#/definitions/Element"
        },
        "minimumId": {
          "description": "The ID of a fixture.  Asserts that the response contains at a minimum the fixture specified by minimumId.",
          "$ref": "#/definitions/string"
        },
        "_minimumId": {
          "description": "Extensions for minimumId",
          "$ref": "#/definitions/Element"
        },
        "navigationLinks": {
          "description": "Whether or not the test execution performs validation on the bundle navigation links.",
          "$ref": "#/definitions/boolean"
        },
        "_navigationLinks": {
          "description": "Extensions for navigationLinks",
          "$ref": "#/definitions/Element"
        },
        "operator": {
          "description": "The operator type defines the conditional behavior of the assert. If not defined, the default is equals.",
          "$ref": "#/definitions/code"
        },
        "_operator": {
          "description": "Extensions for operator",
          "$ref": "#/definitions/Element"
        },
        "path": {
          "description": "The XPath or JSONPath expression to be evaluated against the fixture representing the response received from server.",
          "$ref": "#/definitions/string"
        },
        "_path": {
          "description": "Extensions for path",
          "$ref": "#/definitions/Element"
        },
        "requestMethod": {
          "description": "The request method or HTTP operation code to compare against that used by the client system under test.",
          "$ref": "#/definitions/code"
        },
        "_requestMethod": {
          "description": "Extensions for requestMethod",
          "$ref": "#/definitions/Element"
        },
        "requestURL": {
          "description": "The value to use in a comparison against the request URL path string.",
          "$ref": "#/definitions/string"
        },
        "_requestURL": {
          "description": "Extensions for requestURL",
          "$ref": "#/definitions/Element"
        },
        "resource": {
          "description": "The type of the resource.  See the [resource list](resourcelist.html).",
          "$ref": "#/definitions/uri"
        },
        "_resource": {
          "description": "Extensions for resource",
          "$ref": "#/definitions/Element"
        },
        "response": {
          "description": "okay | created | noContent | notModified | bad | forbidden | notFound | methodNotAllowed | conflict | gone | preconditionFailed | unprocessable.",
          "$ref": "#/definitions/code"
        },
        "_response": {
          "description": "Extensions for response",
          "$ref": "#/definitions/Element"
        },
        "responseCode": {
          "description": "The value of the HTTP response code to be tested.",
          "$ref": "#/definitions/string"
        },
        "_responseCode": {
          "description": "Extensions for responseCode",
          "$ref": "#/definitions/Element"
        },
        "sourceId": {
          "description": "Fixture to evaluate the XPath/JSONPath expression or the headerField  against.",
          "$ref": "#/definitions/id"
        },
        "_sourceId": {
          "description": "Extensions for sourceId",
          "$ref": "#/definitions/Element"
        },
        "stopTestOnFail": {
          "description": "Whether or not the current test execution will stop on failure for this assert.",
          "$ref": "#/definitions/boolean"
        },
        "_stopTestOnFail": {
          "description": "Extensions for stopTestOnFail",
          "$ref": "#/definitions/Element"
        },
        "validateProfileId": {
          "description": "The ID of the Profile to validate against.",
          "$ref": "#/definitions/id"
        },
        "_validateProfileId": {
          "description": "Extensions for validateProfileId",
          "$ref": "#/definitions/Element"
        },
        "value": {
          "description": "The value to compare to.",
          "$ref": "#/definitions/string"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        },
        "warningOnly": {
          "description": "Whether or not the test execution will produce a warning only on error for this assert.",
          "$ref": "#/definitions/boolean"
        },
        "_warningOnly": {
          "description": "Extensions for warningOnly",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "TestScript_Test": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "The name of this test used for tracking/logging purposes by test engines.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "A short description of the test used by test engines for tracking and reporting purposes.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "action": {
          "description": "Action would contain either an operation or an assertion.",
          "items": {
            "$ref": "#/definitions/TestScript_Action1"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "action"
      ]
    },
    "TestScript_Action1": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "operation": {
          "description": "An operation would involve a REST request to a server.",
          "$ref": "#/definitions/TestScript_Operation"
        },
        "assert": {
          "description": "Evaluates the results of previous operations to determine if the server under test behaves appropriately.",
          "$ref": "#/definitions/TestScript_Assert"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "TestScript_Teardown": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "action": {
          "description": "The teardown action will only contain an operation.",
          "items": {
            "$ref": "#/definitions/TestScript_Action2"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "action"
      ]
    },
    "TestScript_Action2": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "operation": {
          "description": "An operation would involve a REST request to a server.",
          "$ref": "#/definitions/TestScript_Operation"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "operation"
      ]
    },
    "Transport": {
      "description": "Record of transport of item.",
      "properties": {
        "resourceType": {
          "description": "This is a Transport resource",
          "const": "Transport"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Identifier for the transport event that is used to identify it across multiple disparate systems.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "instantiatesCanonical": {
          "description": "The URL pointing to a *FHIR*-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Transport.",
          "$ref": "#/definitions/canonical"
        },
        "instantiatesUri": {
          "description": "The URL pointing to an *externally* maintained  protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Transport.",
          "$ref": "#/definitions/uri"
        },
        "_instantiatesUri": {
          "description": "Extensions for instantiatesUri",
          "$ref": "#/definitions/Element"
        },
        "basedOn": {
          "description": "BasedOn refers to a higher-level authorization that triggered the creation of the transport.  It references a \"request\" resource such as a ServiceRequest or Transport, which is distinct from the \"request\" resource the Transport is seeking to fulfill.  This latter resource is referenced by FocusOn.  For example, based on a ServiceRequest (\u003d BasedOn), a transport is created to fulfill a procedureRequest ( \u003d FocusOn ) to transport a specimen to the lab.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "groupIdentifier": {
          "description": "An identifier that links together multiple transports and other requests that were created in the same context.",
          "$ref": "#/definitions/Identifier"
        },
        "partOf": {
          "description": "A larger event of which this particular event is a component or step.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "status": {
          "description": "A code specifying the state of the transport event.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "statusReason": {
          "description": "An explanation as to why this transport is held, failed, was refused, etc.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "intent": {
          "description": "Indicates the \"level\" of actionability associated with the Transport, i.e. i+R[9]Cs this a proposed transport, a planned transport, an actionable transport, etc.",
          "$ref": "#/definitions/code"
        },
        "_intent": {
          "description": "Extensions for intent",
          "$ref": "#/definitions/Element"
        },
        "priority": {
          "description": "Indicates how quickly the Transport should be addressed with respect to other requests.",
          "$ref": "#/definitions/code"
        },
        "_priority": {
          "description": "Extensions for priority",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "A name or code (or both) briefly describing what the transport involves.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "description": {
          "description": "A free-text description of what is to be performed.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "focus": {
          "description": "The request being actioned or the resource being manipulated by this transport.",
          "$ref": "#/definitions/Reference"
        },
        "for": {
          "description": "The entity who benefits from the performance of the service specified in the transport (e.g., the patient).",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "The healthcare event  (e.g. a patient and healthcare provider interaction) during which this transport was created.",
          "$ref": "#/definitions/Reference"
        },
        "completionTime": {
          "description": "Identifies the completion time of the event (the occurrence).",
          "$ref": "#/definitions/dateTime"
        },
        "_completionTime": {
          "description": "Extensions for completionTime",
          "$ref": "#/definitions/Element"
        },
        "authoredOn": {
          "description": "The date and time this transport was created.",
          "$ref": "#/definitions/dateTime"
        },
        "_authoredOn": {
          "description": "Extensions for authoredOn",
          "$ref": "#/definitions/Element"
        },
        "lastModified": {
          "description": "The date and time of last modification to this transport.",
          "$ref": "#/definitions/dateTime"
        },
        "_lastModified": {
          "description": "Extensions for lastModified",
          "$ref": "#/definitions/Element"
        },
        "requester": {
          "description": "The creator of the transport.",
          "$ref": "#/definitions/Reference"
        },
        "performerType": {
          "description": "The kind of participant that should perform the transport.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "owner": {
          "description": "Individual organization or Device currently responsible for transport execution.",
          "$ref": "#/definitions/Reference"
        },
        "location": {
          "description": "Principal physical location where this transport is performed.",
          "$ref": "#/definitions/Reference"
        },
        "insurance": {
          "description": "Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be relevant to the Transport.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "note": {
          "description": "Free-text information captured about the transport as it progresses.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "relevantHistory": {
          "description": "Links to Provenance records for past versions of this Transport that identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the transport.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "restriction": {
          "description": "If the Transport.focus is a request resource and the transport is seeking fulfillment (i.e. is asking for the request to be actioned), this element identifies any limitations on what parts of the referenced request should be actioned.",
          "$ref": "#/definitions/Transport_Restriction"
        },
        "input": {
          "description": "Additional information that may be needed in the execution of the transport.",
          "items": {
            "$ref": "#/definitions/Transport_Input"
          },
          "type": "array"
        },
        "output": {
          "description": "Outputs produced by the Transport.",
          "items": {
            "$ref": "#/definitions/Transport_Output"
          },
          "type": "array"
        },
        "requestedLocation": {
          "description": "The desired or final location for the transport.",
          "$ref": "#/definitions/Reference"
        },
        "currentLocation": {
          "description": "The current location for the entity to be transported.",
          "$ref": "#/definitions/Reference"
        },
        "reasonCode": {
          "description": "A description or code indicating why this transport needs to be performed.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "reasonReference": {
          "description": "A resource reference indicating why this transport needs to be performed.",
          "$ref": "#/definitions/Reference"
        },
        "history": {
          "description": "The transport event prior to this one.",
          "$ref": "#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "requestedLocation",
        "resourceType",
        "currentLocation"
      ]
    },
    "Transport_Restriction": {
      "description": "Record of transport of item.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "repetitions": {
          "description": "Indicates the number of times the requested action should occur.",
          "$ref": "#/definitions/positiveInt"
        },
        "_repetitions": {
          "description": "Extensions for repetitions",
          "$ref": "#/definitions/Element"
        },
        "period": {
          "description": "Over what time-period is fulfillment sought.",
          "$ref": "#/definitions/Period"
        },
        "recipient": {
          "description": "For requests that are targeted to more than one potential recipient/target, to identify who is fulfillment is sought for.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Transport_Input": {
      "description": "Record of transport of item.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "A code or description indicating how the input is intended to be used as part of the transport execution.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueBase64Binary": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^\\s*([A-Za-z0-9+\\\\/]{4})*(([A-Za-z0-9+\\\\/]{2}\u003d\u003d)|([A-Za-z0-9+\\\\/]{3}\u003d)|([A-Za-z0-9+\\\\/]{4}))\\s*$",
          "type": "string"
        },
        "_valueBase64Binary": {
          "description": "Extensions for valueBase64Binary",
          "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueCanonical": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueCanonical": {
          "description": "Extensions for valueCanonical",
          "$ref": "#/definitions/Element"
        },
        "valueCode": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^[^\\s]+( [^\\s]+)*$",
          "type": "string"
        },
        "_valueCode": {
          "description": "Extensions for valueCode",
          "$ref": "#/definitions/Element"
        },
        "valueDate": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_valueDate": {
          "description": "Extensions for valueDate",
          "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_valueDateTime": {
          "description": "Extensions for valueDateTime",
          "$ref": "#/definitions/Element"
        },
        "valueDecimal": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_valueDecimal": {
          "description": "Extensions for valueDecimal",
          "$ref": "#/definitions/Element"
        },
        "valueId": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string"
        },
        "_valueId": {
          "description": "Extensions for valueId",
          "$ref": "#/definitions/Element"
        },
        "valueInstant": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string"
        },
        "_valueInstant": {
          "description": "Extensions for valueInstant",
          "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": {
          "description": "Extensions for valueInteger",
          "$ref": "#/definitions/Element"
        },
        "valueInteger64": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "string"
        },
        "_valueInteger64": {
          "description": "Extensions for valueInteger64",
          "$ref": "#/definitions/Element"
        },
        "valueMarkdown": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^\\s*(\\S|\\s)*$",
          "type": "string"
        },
        "_valueMarkdown": {
          "description": "Extensions for valueMarkdown",
          "$ref": "#/definitions/Element"
        },
        "valueOid": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
          "type": "string"
        },
        "_valueOid": {
          "description": "Extensions for valueOid",
          "$ref": "#/definitions/Element"
        },
        "valuePositiveInt": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_valuePositiveInt": {
          "description": "Extensions for valuePositiveInt",
          "$ref": "#/definitions/Element"
        },
        "valueString": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueTime": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?$",
          "type": "string"
        },
        "_valueTime": {
          "description": "Extensions for valueTime",
          "$ref": "#/definitions/Element"
        },
        "valueUnsignedInt": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_valueUnsignedInt": {
          "description": "Extensions for valueUnsignedInt",
          "$ref": "#/definitions/Element"
        },
        "valueUri": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUri": {
          "description": "Extensions for valueUri",
          "$ref": "#/definitions/Element"
        },
        "valueUrl": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUrl": {
          "description": "Extensions for valueUrl",
          "$ref": "#/definitions/Element"
        },
        "valueUuid": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
          "type": "string"
        },
        "_valueUuid": {
          "description": "Extensions for valueUuid",
          "$ref": "#/definitions/Element"
        },
        "valueAddress": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Address"
        },
        "valueAge": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Age"
        },
        "valueAnnotation": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Annotation"
        },
        "valueAttachment": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Attachment"
        },
        "valueCodeableConcept": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCodeableReference": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/CodeableReference"
        },
        "valueCoding": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Coding"
        },
        "valueContactPoint": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/ContactPoint"
        },
        "valueCount": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Count"
        },
        "valueDistance": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Distance"
        },
        "valueDuration": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Duration"
        },
        "valueHumanName": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/HumanName"
        },
        "valueIdentifier": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Identifier"
        },
        "valueMoney": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Money"
        },
        "valuePeriod": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Period"
        },
        "valueQuantity": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Range"
        },
        "valueRatio": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Ratio"
        },
        "valueRatioRange": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/RatioRange"
        },
        "valueReference": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Reference"
        },
        "valueSampledData": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/SampledData"
        },
        "valueSignature": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Signature"
        },
        "valueTiming": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Timing"
        },
        "valueContactDetail": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/ContactDetail"
        },
        "valueDataRequirement": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/DataRequirement"
        },
        "valueExpression": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Expression"
        },
        "valueParameterDefinition": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/ParameterDefinition"
        },
        "valueRelatedArtifact": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/RelatedArtifact"
        },
        "valueTriggerDefinition": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/TriggerDefinition"
        },
        "valueUsageContext": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/UsageContext"
        },
        "valueAvailability": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Availability"
        },
        "valueExtendedContactDetail": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/ExtendedContactDetail"
        },
        "valueDosage": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Dosage"
        },
        "valueMeta": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Meta"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "Transport_Output": {
      "description": "Record of transport of item.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "The name of the Output parameter.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueBase64Binary": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^\\s*([A-Za-z0-9+\\\\/]{4})*(([A-Za-z0-9+\\\\/]{2}\u003d\u003d)|([A-Za-z0-9+\\\\/]{3}\u003d)|([A-Za-z0-9+\\\\/]{4}))\\s*$",
          "type": "string"
        },
        "_valueBase64Binary": {
          "description": "Extensions for valueBase64Binary",
          "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueCanonical": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueCanonical": {
          "description": "Extensions for valueCanonical",
          "$ref": "#/definitions/Element"
        },
        "valueCode": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^[^\\s]+( [^\\s]+)*$",
          "type": "string"
        },
        "_valueCode": {
          "description": "Extensions for valueCode",
          "$ref": "#/definitions/Element"
        },
        "valueDate": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_valueDate": {
          "description": "Extensions for valueDate",
          "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_valueDateTime": {
          "description": "Extensions for valueDateTime",
          "$ref": "#/definitions/Element"
        },
        "valueDecimal": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_valueDecimal": {
          "description": "Extensions for valueDecimal",
          "$ref": "#/definitions/Element"
        },
        "valueId": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string"
        },
        "_valueId": {
          "description": "Extensions for valueId",
          "$ref": "#/definitions/Element"
        },
        "valueInstant": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string"
        },
        "_valueInstant": {
          "description": "Extensions for valueInstant",
          "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": {
          "description": "Extensions for valueInteger",
          "$ref": "#/definitions/Element"
        },
        "valueInteger64": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "string"
        },
        "_valueInteger64": {
          "description": "Extensions for valueInteger64",
          "$ref": "#/definitions/Element"
        },
        "valueMarkdown": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^\\s*(\\S|\\s)*$",
          "type": "string"
        },
        "_valueMarkdown": {
          "description": "Extensions for valueMarkdown",
          "$ref": "#/definitions/Element"
        },
        "valueOid": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
          "type": "string"
        },
        "_valueOid": {
          "description": "Extensions for valueOid",
          "$ref": "#/definitions/Element"
        },
        "valuePositiveInt": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_valuePositiveInt": {
          "description": "Extensions for valuePositiveInt",
          "$ref": "#/definitions/Element"
        },
        "valueString": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueTime": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?$",
          "type": "string"
        },
        "_valueTime": {
          "description": "Extensions for valueTime",
          "$ref": "#/definitions/Element"
        },
        "valueUnsignedInt": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_valueUnsignedInt": {
          "description": "Extensions for valueUnsignedInt",
          "$ref": "#/definitions/Element"
        },
        "valueUri": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUri": {
          "description": "Extensions for valueUri",
          "$ref": "#/definitions/Element"
        },
        "valueUrl": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUrl": {
          "description": "Extensions for valueUrl",
          "$ref": "#/definitions/Element"
        },
        "valueUuid": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
          "type": "string"
        },
        "_valueUuid": {
          "description": "Extensions for valueUuid",
          "$ref": "#/definitions/Element"
        },
        "valueAddress": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Address"
        },
        "valueAge": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Age"
        },
        "valueAnnotation": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Annotation"
        },
        "valueAttachment": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Attachment"
        },
        "valueCodeableConcept": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCodeableReference": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/CodeableReference"
        },
        "valueCoding": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Coding"
        },
        "valueContactPoint": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/ContactPoint"
        },
        "valueCount": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Count"
        },
        "valueDistance": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Distance"
        },
        "valueDuration": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Duration"
        },
        "valueHumanName": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/HumanName"
        },
        "valueIdentifier": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Identifier"
        },
        "valueMoney": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Money"
        },
        "valuePeriod": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Period"
        },
        "valueQuantity": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Range"
        },
        "valueRatio": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Ratio"
        },
        "valueRatioRange": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/RatioRange"
        },
        "valueReference": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Reference"
        },
        "valueSampledData": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/SampledData"
        },
        "valueSignature": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Signature"
        },
        "valueTiming": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Timing"
        },
        "valueContactDetail": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/ContactDetail"
        },
        "valueDataRequirement": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/DataRequirement"
        },
        "valueExpression": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Expression"
        },
        "valueParameterDefinition": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/ParameterDefinition"
        },
        "valueRelatedArtifact": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/RelatedArtifact"
        },
        "valueTriggerDefinition": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/TriggerDefinition"
        },
        "valueUsageContext": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/UsageContext"
        },
        "valueAvailability": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Availability"
        },
        "valueExtendedContactDetail": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/ExtendedContactDetail"
        },
        "valueDosage": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Dosage"
        },
        "valueMeta": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Meta"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "ValueSet": {
      "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html).",
      "properties": {
        "resourceType": {
          "description": "This is a ValueSet resource",
          "const": "ValueSet"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this value set when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this value set is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the value set is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this value set when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the value set when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the value set author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the value set. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the value set.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this value set. Enables tracking the life-cycle of the content. The status of the value set applies to the value set definition (ValueSet.compose) and the associated ValueSet metadata. Expansions do not have a state.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this value set is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date (and optionally time) when the value set metadata or content logical definition (.compose) was created or revised.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the value set.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the value set from a consumer\u0027s perspective. The textual description specifies the span of meanings for concepts to be included within the Value Set Expansion, and also may specify the intended use and limitations of the Value Set.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate value set instances.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the value set is intended to be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this value set is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the value set and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the value set.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "$ref": "#/definitions/string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "#/definitions/Element"
        },
        "approvalDate": {
          "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
          "$ref": "#/definitions/date"
        },
        "_approvalDate": {
          "description": "Extensions for approvalDate",
          "$ref": "#/definitions/Element"
        },
        "lastReviewDate": {
          "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
          "$ref": "#/definitions/date"
        },
        "_lastReviewDate": {
          "description": "Extensions for lastReviewDate",
          "$ref": "#/definitions/Element"
        },
        "effectivePeriod": {
          "description": "The period during which the ValueSet content was or is planned to be in active use.",
          "$ref": "#/definitions/Period"
        },
        "topic": {
          "description": "Descriptions related to the content of the ValueSet. Topics provide a high-level categorization as well as keywords for the ValueSet that can be useful for filtering and searching.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "author": {
          "description": "An individiual or organization primarily involved in the creation and maintenance of the ValueSet.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "editor": {
          "description": "An individual or organization primarily responsible for internal coherence of the ValueSet.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "reviewer": {
          "description": "An individual or organization primarily responsible for review of some aspect of the ValueSet.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "endorser": {
          "description": "An individual or organization responsible for officially endorsing the ValueSet for use in some setting.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "relatedArtifact": {
          "description": "Related artifacts such as additional documentation, justification, dependencies, bibliographic references, and predecessor and successor artifacts.",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          },
          "type": "array"
        },
        "immutable": {
          "description": "If this is set to \u0027true\u0027, then no new versions of the content logical definition can be created.  Note: Other metadata might still change.",
          "$ref": "#/definitions/boolean"
        },
        "_immutable": {
          "description": "Extensions for immutable",
          "$ref": "#/definitions/Element"
        },
        "compose": {
          "description": "A set of criteria that define the contents of the value set by including or excluding codes selected from the specified code system(s) that the value set draws from. This is also known as the Content Logical Definition (CLD).",
          "$ref": "#/definitions/ValueSet_Compose"
        },
        "expansion": {
          "description": "A value set can also be \"expanded\", where the value set is turned into a simple collection of enumerated codes. This element holds the expansion, if it has been performed.",
          "$ref": "#/definitions/ValueSet_Expansion"
        },
        "scope": {
          "description": "Description of the semantic space the Value Set Expansion is intended to cover and should further clarify the text in ValueSet.description.",
          "$ref": "#/definitions/ValueSet_Scope"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "ValueSet_Compose": {
      "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "lockedDate": {
          "description": "The Locked Date is  the effective date that is used to determine the version of all referenced Code Systems and Value Set Definitions included in the compose that are not already tied to a specific version.",
          "$ref": "#/definitions/date"
        },
        "_lockedDate": {
          "description": "Extensions for lockedDate",
          "$ref": "#/definitions/Element"
        },
        "inactive": {
          "description": "Whether inactive codes - codes that are not approved for current use - are in the value set. If inactive \u003d true, inactive codes are to be included in the expansion, if inactive \u003d false, the inactive codes will not be included in the expansion. If absent, the behavior is determined by the implementation, or by the applicable $expand parameters (but generally, inactive codes would be expected to be included).",
          "$ref": "#/definitions/boolean"
        },
        "_inactive": {
          "description": "Extensions for inactive",
          "$ref": "#/definitions/Element"
        },
        "include": {
          "description": "Include one or more codes from a code system or other value set(s).",
          "items": {
            "$ref": "#/definitions/ValueSet_Include"
          },
          "type": "array"
        },
        "exclude": {
          "description": "Exclude one or more codes from the value set based on code system filters and/or other value sets.",
          "items": {
            "$ref": "#/definitions/ValueSet_Include"
          },
          "type": "array"
        },
        "property": {
          "description": "A property to return in the expansion, if the client doesn\u0027t ask for any particular properties. May be either a code from the code system definition (convenient) or a the formal URI that refers to the property. The special value \u0027*\u0027 means all properties known to the server.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_property": {
          "description": "Extensions for property",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "include"
      ]
    },
    "ValueSet_Include": {
      "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "system": {
          "description": "An absolute URI which is the code system from which the selected codes come from.",
          "$ref": "#/definitions/uri"
        },
        "_system": {
          "description": "Extensions for system",
          "$ref": "#/definitions/Element"
        },
        "version": {
          "description": "The version of the code system that the codes are selected from, or the special version \u0027*\u0027 for all versions.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "concept": {
          "description": "Specifies a concept to be included or excluded.",
          "items": {
            "$ref": "#/definitions/ValueSet_Concept"
          },
          "type": "array"
        },
        "filter": {
          "description": "Select concepts by specifying a matching criterion based on the properties (including relationships) defined by the system, or on filters defined by the system. If multiple filters are specified within the include, they SHALL all be true.",
          "items": {
            "$ref": "#/definitions/ValueSet_Filter"
          },
          "type": "array"
        },
        "valueSet": {
          "description": "Selects the concepts found in this value set (based on its value set definition). This is an absolute URI that is a reference to ValueSet.url.  If multiple value sets are specified this includes the intersection of the contents of all of the referenced value sets.",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "copyright": {
          "description": "A copyright statement for the specific code system asserted by the containing ValueSet.compose.include element\u0027s system value (if the associated ValueSet.compose.include.version element is not present); or the code system and version combination (if the associated ValueSet.compose.include.version element is present).",
          "$ref": "#/definitions/string"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ValueSet_Concept": {
      "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "Specifies a code for the concept to be included or excluded.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "display": {
          "description": "The text to display to the user for this concept in the context of this valueset. If no display is provided, then applications using the value set use the display specified for the code by the system.",
          "$ref": "#/definitions/string"
        },
        "_display": {
          "description": "Extensions for display",
          "$ref": "#/definitions/Element"
        },
        "designation": {
          "description": "Additional representations for this concept when used in this value set - other languages, aliases, specialized purposes, used for particular purposes, etc.",
          "items": {
            "$ref": "#/definitions/ValueSet_Designation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ValueSet_Designation": {
      "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "language": {
          "description": "The language this designation is defined for.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "use": {
          "description": "A code that represents types of uses of designations.",
          "$ref": "#/definitions/Coding"
        },
        "additionalUse": {
          "description": "Additional codes that detail how this designation would be used, if there is more than one use.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        },
        "value": {
          "description": "The text value for this designation.",
          "$ref": "#/definitions/string"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ValueSet_Filter": {
      "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "property": {
          "description": "A code that identifies a property or a filter defined in the code system.",
          "$ref": "#/definitions/code"
        },
        "_property": {
          "description": "Extensions for property",
          "$ref": "#/definitions/Element"
        },
        "op": {
          "description": "The kind of operation to perform as a part of the filter criteria.",
          "$ref": "#/definitions/code"
        },
        "_op": {
          "description": "Extensions for op",
          "$ref": "#/definitions/Element"
        },
        "value": {
          "description": "The match value may be either a code defined by the system, or a string value, which is a regex match on the literal string of the property value  (if the filter represents a property defined in CodeSystem) or of the system filter value (if the filter represents a filter defined in CodeSystem) when the operation is \u0027regex\u0027, or one of the values (true and false), when the operation is \u0027exists\u0027.",
          "$ref": "#/definitions/string"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ValueSet_Expansion": {
      "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "An identifier that uniquely identifies this expansion of the valueset, based on a unique combination of the provided parameters, the system default parameters, and the underlying system code system versions etc. Systems may re-use the same identifier as long as those factors remain the same, and the expansion is the same, but are not required to do so. This is a business identifier.",
          "$ref": "#/definitions/uri"
        },
        "_identifier": {
          "description": "Extensions for identifier",
          "$ref": "#/definitions/Element"
        },
        "next": {
          "description": "As per paging Search results, the next URLs are opaque to the client, have no dictated structure, and only the server understands them.",
          "$ref": "#/definitions/uri"
        },
        "_next": {
          "description": "Extensions for next",
          "$ref": "#/definitions/Element"
        },
        "timestamp": {
          "description": "The time at which the expansion was produced by the expanding system.",
          "$ref": "#/definitions/dateTime"
        },
        "_timestamp": {
          "description": "Extensions for timestamp",
          "$ref": "#/definitions/Element"
        },
        "total": {
          "description": "The total number of concepts in the expansion. If the number of concept nodes in this resource is less than the stated number, then the server can return more using the offset parameter.",
          "$ref": "#/definitions/integer"
        },
        "_total": {
          "description": "Extensions for total",
          "$ref": "#/definitions/Element"
        },
        "offset": {
          "description": "If paging is being used, the offset at which this resource starts.  I.e. this resource is a partial view into the expansion. If paging is not being used, this element SHALL NOT be present.",
          "$ref": "#/definitions/integer"
        },
        "_offset": {
          "description": "Extensions for offset",
          "$ref": "#/definitions/Element"
        },
        "parameter": {
          "description": "A parameter that controlled the expansion process. These parameters may be used by users of expanded value sets to check whether the expansion is suitable for a particular purpose, or to pick the correct expansion.",
          "items": {
            "$ref": "#/definitions/ValueSet_Parameter"
          },
          "type": "array"
        },
        "property": {
          "description": "A property defines an additional slot through which additional information can be provided about a concept.",
          "items": {
            "$ref": "#/definitions/ValueSet_Property"
          },
          "type": "array"
        },
        "contains": {
          "description": "The codes that are contained in the value set expansion.",
          "items": {
            "$ref": "#/definitions/ValueSet_Contains"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ValueSet_Parameter": {
      "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "Name of the input parameter to the $expand operation; may be a server-assigned name for additional default or other server-supplied parameters used to control the expansion process.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "valueString": {
          "description": "The value of the parameter.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "description": "The value of the parameter.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "description": "The value of the parameter.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": {
          "description": "Extensions for valueInteger",
          "$ref": "#/definitions/Element"
        },
        "valueDecimal": {
          "description": "The value of the parameter.",
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_valueDecimal": {
          "description": "Extensions for valueDecimal",
          "$ref": "#/definitions/Element"
        },
        "valueUri": {
          "description": "The value of the parameter.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUri": {
          "description": "Extensions for valueUri",
          "$ref": "#/definitions/Element"
        },
        "valueCode": {
          "description": "The value of the parameter.",
          "pattern": "^[^\\s]+( [^\\s]+)*$",
          "type": "string"
        },
        "_valueCode": {
          "description": "Extensions for valueCode",
          "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "description": "The value of the parameter.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_valueDateTime": {
          "description": "Extensions for valueDateTime",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ValueSet_Property": {
      "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "A code that is used to identify the property. The code is used in ValueSet.expansion.contains.property.code.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "uri": {
          "description": "Reference to the formal meaning of the property. One possible source of meaning is the [Concept Properties](codesystem-concept-properties.html) code system.",
          "$ref": "#/definitions/uri"
        },
        "_uri": {
          "description": "Extensions for uri",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ValueSet_Contains": {
      "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "system": {
          "description": "An absolute URI which is the code system in which the code for this item in the expansion is defined.",
          "$ref": "#/definitions/uri"
        },
        "_system": {
          "description": "Extensions for system",
          "$ref": "#/definitions/Element"
        },
        "abstract": {
          "description": "If true, this entry is included in the expansion for navigational purposes, and the user cannot select the code directly as a proper value.",
          "$ref": "#/definitions/boolean"
        },
        "_abstract": {
          "description": "Extensions for abstract",
          "$ref": "#/definitions/Element"
        },
        "inactive": {
          "description": "If the concept is inactive in the code system that defines it. Inactive codes are those that are no longer to be used, but are maintained by the code system for understanding legacy data. It might not be known or specified whether an concept is inactive (and it may depend on the context of use).",
          "$ref": "#/definitions/boolean"
        },
        "_inactive": {
          "description": "Extensions for inactive",
          "$ref": "#/definitions/Element"
        },
        "version": {
          "description": "The version of the code system from this code was taken. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "The code for this item in the expansion hierarchy. If this code is missing the entry in the hierarchy is a place holder (abstract) and does not represent a valid code in the value set.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "display": {
          "description": "The recommended display for this item in the expansion.",
          "$ref": "#/definitions/string"
        },
        "_display": {
          "description": "Extensions for display",
          "$ref": "#/definitions/Element"
        },
        "designation": {
          "description": "Additional representations for this item - other languages, aliases, specialized purposes, used for particular purposes, etc. These are relevant when the conditions of the expansion do not fix to a single correct representation.",
          "items": {
            "$ref": "#/definitions/ValueSet_Designation"
          },
          "type": "array"
        },
        "property": {
          "description": "A property value for this concept.",
          "items": {
            "$ref": "#/definitions/ValueSet_Property1"
          },
          "type": "array"
        },
        "contains": {
          "description": "Other codes and entries contained under this entry in the hierarchy.",
          "items": {
            "$ref": "#/definitions/ValueSet_Contains"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ValueSet_Property1": {
      "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "A code that is a reference to ValueSet.expansion.property.code.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "valueCode": {
          "description": "The value of this property.",
          "pattern": "^[^\\s]+( [^\\s]+)*$",
          "type": "string"
        },
        "_valueCode": {
          "description": "Extensions for valueCode",
          "$ref": "#/definitions/Element"
        },
        "valueCoding": {
          "description": "The value of this property.",
          "$ref": "#/definitions/Coding"
        },
        "valueString": {
          "description": "The value of this property.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "description": "The value of this property.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": {
          "description": "Extensions for valueInteger",
          "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "description": "The value of this property.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "description": "The value of this property.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_valueDateTime": {
          "description": "Extensions for valueDateTime",
          "$ref": "#/definitions/Element"
        },
        "valueDecimal": {
          "description": "The value of this property.",
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_valueDecimal": {
          "description": "Extensions for valueDecimal",
          "$ref": "#/definitions/Element"
        },
        "subProperty": {
          "description": "A subproperty value for this concept.",
          "items": {
            "$ref": "#/definitions/ValueSet_SubProperty"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ValueSet_SubProperty": {
      "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "A code that is a reference to ValueSet.expansion.property.code.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "valueCode": {
          "description": "The value of this subproperty.",
          "pattern": "^[^\\s]+( [^\\s]+)*$",
          "type": "string"
        },
        "_valueCode": {
          "description": "Extensions for valueCode",
          "$ref": "#/definitions/Element"
        },
        "valueCoding": {
          "description": "The value of this subproperty.",
          "$ref": "#/definitions/Coding"
        },
        "valueString": {
          "description": "The value of this subproperty.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "description": "The value of this subproperty.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": {
          "description": "Extensions for valueInteger",
          "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "description": "The value of this subproperty.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "description": "The value of this subproperty.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?$",
          "type": "string"
        },
        "_valueDateTime": {
          "description": "Extensions for valueDateTime",
          "$ref": "#/definitions/Element"
        },
        "valueDecimal": {
          "description": "The value of this subproperty.",
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_valueDecimal": {
          "description": "Extensions for valueDecimal",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ValueSet_Scope": {
      "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "inclusionCriteria": {
          "description": "Criteria describing which concepts or codes should be included and why.",
          "$ref": "#/definitions/string"
        },
        "_inclusionCriteria": {
          "description": "Extensions for inclusionCriteria",
          "$ref": "#/definitions/Element"
        },
        "exclusionCriteria": {
          "description": "Criteria describing which concepts or codes should be excluded and why.",
          "$ref": "#/definitions/string"
        },
        "_exclusionCriteria": {
          "description": "Extensions for exclusionCriteria",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "VerificationResult": {
      "description": "Describes validation requirements, source(s), status and dates for one or more elements.",
      "properties": {
        "resourceType": {
          "description": "This is a VerificationResult resource",
          "const": "VerificationResult"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "target": {
          "description": "A resource that was validated.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "targetLocation": {
          "description": "The fhirpath location(s) within the resource that was validated.",
          "items": {
            "$ref": "#/definitions/string"
          },
          "type": "array"
        },
        "_targetLocation": {
          "description": "Extensions for targetLocation",
          "items": {
            "$ref": "#/definitions/Element"
          },
          "type": "array"
        },
        "need": {
          "description": "The frequency with which the target must be validated (none; initial; periodic).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "status": {
          "description": "The validation status of the target (attested; validated; in process; requires revalidation; validation failed; revalidation failed).",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "statusDate": {
          "description": "When the validation status was updated.",
          "$ref": "#/definitions/dateTime"
        },
        "_statusDate": {
          "description": "Extensions for statusDate",
          "$ref": "#/definitions/Element"
        },
        "validationType": {
          "description": "What the target is validated against (nothing; primary source; multiple sources).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "validationProcess": {
          "description": "The primary process by which the target is validated (edit check; value set; primary source; multiple sources; standalone; in context).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "frequency": {
          "description": "Frequency of revalidation.",
          "$ref": "#/definitions/Timing"
        },
        "lastPerformed": {
          "description": "The date/time validation was last completed (including failed validations).",
          "$ref": "#/definitions/dateTime"
        },
        "_lastPerformed": {
          "description": "Extensions for lastPerformed",
          "$ref": "#/definitions/Element"
        },
        "nextScheduled": {
          "description": "The date when target is next validated, if appropriate.",
          "$ref": "#/definitions/date"
        },
        "_nextScheduled": {
          "description": "Extensions for nextScheduled",
          "$ref": "#/definitions/Element"
        },
        "failureAction": {
          "description": "The result if validation fails (fatal; warning; record only; none).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "primarySource": {
          "description": "Information about the primary source(s) involved in validation.",
          "items": {
            "$ref": "#/definitions/VerificationResult_PrimarySource"
          },
          "type": "array"
        },
        "attestation": {
          "description": "Information about the entity attesting to information.",
          "$ref": "#/definitions/VerificationResult_Attestation"
        },
        "validator": {
          "description": "Information about the entity validating information.",
          "items": {
            "$ref": "#/definitions/VerificationResult_Validator"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "VerificationResult_PrimarySource": {
      "description": "Describes validation requirements, source(s), status and dates for one or more elements.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "who": {
          "description": "Reference to the primary source.",
          "$ref": "#/definitions/Reference"
        },
        "type": {
          "description": "Type of primary source (License Board; Primary Education; Continuing Education; Postal Service; Relationship owner; Registration Authority; legal source; issuing source; authoritative source).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "communicationMethod": {
          "description": "Method for communicating with the primary source (manual; API; Push).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "validationStatus": {
          "description": "Status of the validation of the target against the primary source (successful; failed; unknown).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "validationDate": {
          "description": "When the target was validated against the primary source.",
          "$ref": "#/definitions/dateTime"
        },
        "_validationDate": {
          "description": "Extensions for validationDate",
          "$ref": "#/definitions/Element"
        },
        "canPushUpdates": {
          "description": "Ability of the primary source to push updates/alerts (yes; no; undetermined).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "pushTypeAvailable": {
          "description": "Type of alerts/updates the primary source can send (specific requested changes; any changes; as defined by source).",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "VerificationResult_Attestation": {
      "description": "Describes validation requirements, source(s), status and dates for one or more elements.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "who": {
          "description": "The individual or organization attesting to information.",
          "$ref": "#/definitions/Reference"
        },
        "onBehalfOf": {
          "description": "When the who is asserting on behalf of another (organization or individual).",
          "$ref": "#/definitions/Reference"
        },
        "communicationMethod": {
          "description": "The method by which attested information was submitted/retrieved (manual; API; Push).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "date": {
          "description": "The date the information was attested to.",
          "$ref": "#/definitions/date"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "sourceIdentityCertificate": {
          "description": "A digital identity certificate associated with the attestation source.",
          "$ref": "#/definitions/string"
        },
        "_sourceIdentityCertificate": {
          "description": "Extensions for sourceIdentityCertificate",
          "$ref": "#/definitions/Element"
        },
        "proxyIdentityCertificate": {
          "description": "A digital identity certificate associated with the proxy entity submitting attested information on behalf of the attestation source.",
          "$ref": "#/definitions/string"
        },
        "_proxyIdentityCertificate": {
          "description": "Extensions for proxyIdentityCertificate",
          "$ref": "#/definitions/Element"
        },
        "proxySignature": {
          "description": "Signed assertion by the proxy entity indicating that they have the right to submit attested information on behalf of the attestation source.",
          "$ref": "#/definitions/Signature"
        },
        "sourceSignature": {
          "description": "Signed assertion by the attestation source that they have attested to the information.",
          "$ref": "#/definitions/Signature"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "VerificationResult_Validator": {
      "description": "Describes validation requirements, source(s), status and dates for one or more elements.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "organization": {
          "description": "Reference to the organization validating information.",
          "$ref": "#/definitions/Reference"
        },
        "identityCertificate": {
          "description": "A digital identity certificate associated with the validator.",
          "$ref": "#/definitions/string"
        },
        "_identityCertificate": {
          "description": "Extensions for identityCertificate",
          "$ref": "#/definitions/Element"
        },
        "attestationSignature": {
          "description": "Signed assertion by the validator that they have validated the information.",
          "$ref": "#/definitions/Signature"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "organization"
      ]
    },
    "VisionPrescription": {
      "description": "An authorization for the provision of glasses and/or contact lenses to a patient.",
      "properties": {
        "resourceType": {
          "description": "This is a VisionPrescription resource",
          "const": "VisionPrescription"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "A unique identifier assigned to this vision prescription.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of the resource instance.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "created": {
          "description": "The date this resource was created.",
          "$ref": "#/definitions/dateTime"
        },
        "_created": {
          "description": "Extensions for created",
          "$ref": "#/definitions/Element"
        },
        "patient": {
          "description": "A resource reference to the person to whom the vision prescription applies.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "A reference to a resource that identifies the particular occurrence of contact between patient and health care provider during which the prescription was issued.",
          "$ref": "#/definitions/Reference"
        },
        "dateWritten": {
          "description": "The date (and perhaps time) when the prescription was written.",
          "$ref": "#/definitions/dateTime"
        },
        "_dateWritten": {
          "description": "Extensions for dateWritten",
          "$ref": "#/definitions/Element"
        },
        "prescriber": {
          "description": "The healthcare professional responsible for authorizing the prescription.",
          "$ref": "#/definitions/Reference"
        },
        "lensSpecification": {
          "description": "Contain the details of  the individual lens specifications and serves as the authorization for the fullfillment by certified professionals.",
          "items": {
            "$ref": "#/definitions/VisionPrescription_LensSpecification"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "prescriber",
        "patient",
        "lensSpecification",
        "resourceType"
      ]
    },
    "VisionPrescription_LensSpecification": {
      "description": "An authorization for the provision of glasses and/or contact lenses to a patient.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "product": {
          "description": "Identifies the type of vision correction product which is required for the patient.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "eye": {
          "description": "The eye for which the lens specification applies.",
          "$ref": "#/definitions/code"
        },
        "_eye": {
          "description": "Extensions for eye",
          "$ref": "#/definitions/Element"
        },
        "sphere": {
          "description": "Lens power measured in dioptres (0.25 units).",
          "$ref": "#/definitions/decimal"
        },
        "_sphere": {
          "description": "Extensions for sphere",
          "$ref": "#/definitions/Element"
        },
        "cylinder": {
          "description": "Power adjustment for astigmatism measured in dioptres (0.25 units).",
          "$ref": "#/definitions/decimal"
        },
        "_cylinder": {
          "description": "Extensions for cylinder",
          "$ref": "#/definitions/Element"
        },
        "axis": {
          "description": "Adjustment for astigmatism measured in integer degrees.",
          "$ref": "#/definitions/integer"
        },
        "_axis": {
          "description": "Extensions for axis",
          "$ref": "#/definitions/Element"
        },
        "prism": {
          "description": "Allows for adjustment on two axis.",
          "items": {
            "$ref": "#/definitions/VisionPrescription_Prism"
          },
          "type": "array"
        },
        "add": {
          "description": "Power adjustment for multifocal lenses measured in dioptres (0.25 units).",
          "$ref": "#/definitions/decimal"
        },
        "_add": {
          "description": "Extensions for add",
          "$ref": "#/definitions/Element"
        },
        "power": {
          "description": "Contact lens power measured in dioptres (0.25 units).",
          "$ref": "#/definitions/decimal"
        },
        "_power": {
          "description": "Extensions for power",
          "$ref": "#/definitions/Element"
        },
        "backCurve": {
          "description": "Back curvature measured in millimetres.",
          "$ref": "#/definitions/decimal"
        },
        "_backCurve": {
          "description": "Extensions for backCurve",
          "$ref": "#/definitions/Element"
        },
        "diameter": {
          "description": "Contact lens diameter measured in millimetres.",
          "$ref": "#/definitions/decimal"
        },
        "_diameter": {
          "description": "Extensions for diameter",
          "$ref": "#/definitions/Element"
        },
        "duration": {
          "description": "The recommended maximum wear period for the lens.",
          "$ref": "#/definitions/Quantity"
        },
        "color": {
          "description": "Special color or pattern.",
          "$ref": "#/definitions/string"
        },
        "_color": {
          "description": "Extensions for color",
          "$ref": "#/definitions/Element"
        },
        "brand": {
          "description": "Brand recommendations or restrictions.",
          "$ref": "#/definitions/string"
        },
        "_brand": {
          "description": "Extensions for brand",
          "$ref": "#/definitions/Element"
        },
        "note": {
          "description": "Notes for special requirements such as coatings and lens materials.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "product"
      ]
    },
    "VisionPrescription_Prism": {
      "description": "An authorization for the provision of glasses and/or contact lenses to a patient.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "type": "array"
        },
        "amount": {
          "description": "Amount of prism to compensate for eye alignment in fractional units.",
          "$ref": "#/definitions/decimal"
        },
        "_amount": {
          "description": "Extensions for amount",
          "$ref": "#/definitions/Element"
        },
        "base": {
          "description": "The relative base, or reference lens edge, for the prism.",
          "$ref": "#/definitions/code"
        },
        "_base": {
          "description": "Extensions for base",
          "$ref": "#/definitions/Element"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  }
}