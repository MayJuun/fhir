<?xml version="1.0" encoding="UTF-8"?><Library xmlns="http://hl7.org/fhir">
  <id value="opioidcds-common"/>
  <meta>
    <security>
      <system value="http://terminology.hl7.org/CodeSystem/v3-ActReason"/>
      <code value="HTEST"/>
      <display value="test health data"/>
    </security>
  </meta>
  <text>
    <status value="generated"/>
    <div xmlns="http://www.w3.org/1999/xhtml">
      <h2>Participants</h2>
      <table class="grid">
        <tr>
          <td>Author</td>
          <td>Kensaku Kawamoto, MD, PhD, MHS</td>
        </tr>
        <tr>
          <td>Author</td>
          <td>Bryn Rhodes</td>
        </tr>
        <tr>
          <td>Author</td>
          <td>Floyd Eisenberg, MD, MPH</td>
        </tr>
        <tr>
          <td>Author</td>
          <td>Robert McClure, MD, MPH</td>
        </tr>
      </table>
      <h2>Related Artifacts</h2>
      <table class="grid">
        <tr>
          <td>Documentation</td>
          <td>CDC guideline for prescribing opioids for chronic pain</td>
          <td>
            <p>
              <code>
                <a href="https://guidelines.gov/summaries/summary/50153/cdc-guideline-for-prescribing-opioids-for-chronic-pain---united-states-2016#420">https://guidelines.gov/summaries/summary/50153/cdc-guideline-for-prescribing-opioids-for-chronic-pain---united-states-2016#420</a>
              </code> (
              <code/>)
            </p>
          </td>
        </tr>
        <tr>
          <td>Depends On</td>
          <td/>
          <td>
            <code>http://example.org/fhir/Library/omtk-logic</code>
          </td>
        </tr>
        <tr>
          <td>Documentation</td>
          <td>MME Conversion Tables</td>
          <td>
            <p>
              <code>
                <a href="https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf">https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf</a>
              </code> (
              <code/>)
            </p>
          </td>
        </tr>
      </table>
      <h2>Contents</h2>
      <p>
        <code>application/elm+xml</code>
      </p>
      <pre>
        <code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;library xmlns="urn:hl7-org:elm:r1" xmlns:t="urn:hl7-org:elm-types:r1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:fhir="http://hl7.org/fhir" xmlns:qdm43="urn:healthit-gov:qdm:v4_3" xmlns:qdm53="urn:healthit-gov:qdm:v5_3" xmlns:a="urn:hl7-org:cql-annotations:r1"&gt;
   &lt;identifier id="OpioidCDS_STU4_Common" version="0.1.0"/&gt;
   &lt;schemaIdentifier id="urn:hl7-org:elm" version="r1"/&gt;
   &lt;usings&gt;
      &lt;def localIdentifier="System" uri="urn:hl7-org:elm-types:r1"/&gt;
      &lt;def localIdentifier="FHIR" uri="http://hl7.org/fhir" version="3.2.0"/&gt;
   &lt;/usings&gt;
   &lt;includes&gt;
      &lt;def localIdentifier="OMTKLogic" path="OMTKLogic" version="0.1.0"/&gt;
   &lt;/includes&gt;
   &lt;valueSets&gt;
      &lt;def name="Benzodiazepines" id="benzodiazepines" accessLevel="Public"/&gt;
      &lt;def name="Naloxone" id="naloxone" accessLevel="Public"/&gt;
      &lt;def name="Ambulatory Abuse Potential Opioids" id="opioids-abused-in-ambulatory-care" accessLevel="Public"/&gt;
      &lt;def name="End Of Life Opioids" id="opioids-indicating-end-of-life" accessLevel="Public"/&gt;
      &lt;def name="Long Acting Opioids" id="long-acting-opioids" accessLevel="Public"/&gt;
      &lt;def name="Illicit Drug Screening" id="illicit-drug-urine-screening" accessLevel="Public"/&gt;
      &lt;def name="Opioid Drug Screening" id="opioid-urine-screening" accessLevel="Public"/&gt;
      &lt;def name="Opioids" id="opioids" accessLevel="Public"/&gt;
      &lt;def name="Codeine Cough Meds" id="opioids-codeine-cough-meds" accessLevel="Public"/&gt;
      &lt;def name="Short Acting Opioids" id="short-acting-opioids" accessLevel="Public"/&gt;
   &lt;/valueSets&gt;
   &lt;statements&gt;
      &lt;def name="IsForChronicPain" context="Patient" accessLevel="Public"&gt;
         &lt;expression valueType="t:Boolean" value="true" xsi:type="Literal"/&gt;
      &lt;/def&gt;
      &lt;def name="HasMetastaticCancer" context="Patient" accessLevel="Public"&gt;
         &lt;expression valueType="t:Boolean" value="false" xsi:type="Literal"/&gt;
      &lt;/def&gt;
      &lt;def name="ToCode" context="Patient" accessLevel="Public" xsi:type="FunctionDef"&gt;
         &lt;expression classType="t:Code" xsi:type="Instance"&gt;
            &lt;element name="code"&gt;
               &lt;value path="value" xsi:type="Property"&gt;
                  &lt;source path="code" xsi:type="Property"&gt;
                     &lt;source name="coding" xsi:type="OperandRef"/&gt;
                  &lt;/source&gt;
               &lt;/value&gt;
            &lt;/element&gt;
            &lt;element name="system"&gt;
               &lt;value path="value" xsi:type="Property"&gt;
                  &lt;source path="system" xsi:type="Property"&gt;
                     &lt;source name="coding" xsi:type="OperandRef"/&gt;
                  &lt;/source&gt;
               &lt;/value&gt;
            &lt;/element&gt;
            &lt;element name="version"&gt;
               &lt;value path="value" xsi:type="Property"&gt;
                  &lt;source path="version" xsi:type="Property"&gt;
                     &lt;source name="coding" xsi:type="OperandRef"/&gt;
                  &lt;/source&gt;
               &lt;/value&gt;
            &lt;/element&gt;
            &lt;element name="display"&gt;
               &lt;value path="value" xsi:type="Property"&gt;
                  &lt;source path="display" xsi:type="Property"&gt;
                     &lt;source name="coding" xsi:type="OperandRef"/&gt;
                  &lt;/source&gt;
               &lt;/value&gt;
            &lt;/element&gt;
         &lt;/expression&gt;
         &lt;operand name="coding"&gt;
            &lt;operandTypeSpecifier name="fhir:Coding" xsi:type="NamedTypeSpecifier"/&gt;
         &lt;/operand&gt;
      &lt;/def&gt;
      &lt;def name="ToQuantity" context="Patient" accessLevel="Public" xsi:type="FunctionDef"&gt;
         &lt;expression classType="t:Quantity" xsi:type="Instance"&gt;
            &lt;element name="value"&gt;
               &lt;value path="value" xsi:type="Property"&gt;
                  &lt;source path="value" xsi:type="Property"&gt;
                     &lt;source name="quantity" xsi:type="OperandRef"/&gt;
                  &lt;/source&gt;
               &lt;/value&gt;
            &lt;/element&gt;
            &lt;element name="unit"&gt;
               &lt;value path="value" xsi:type="Property"&gt;
                  &lt;source path="unit" xsi:type="Property"&gt;
                     &lt;source name="quantity" xsi:type="OperandRef"/&gt;
                  &lt;/source&gt;
               &lt;/value&gt;
            &lt;/element&gt;
         &lt;/expression&gt;
         &lt;operand name="quantity"&gt;
            &lt;operandTypeSpecifier name="fhir:Quantity" xsi:type="NamedTypeSpecifier"/&gt;
         &lt;/operand&gt;
      &lt;/def&gt;
      &lt;def name="Prescriptions" context="Patient" accessLevel="Public" xsi:type="FunctionDef"&gt;
         &lt;expression xsi:type="Query"&gt;
            &lt;source alias="O"&gt;
               &lt;expression name="Orders" xsi:type="OperandRef"/&gt;
            &lt;/source&gt;
            &lt;let identifier="rxNormCode"&gt;
               &lt;expression name="ToCode" xsi:type="FunctionRef"&gt;
                  &lt;operand xsi:type="Indexer"&gt;
                     &lt;operand path="coding" xsi:type="Property"&gt;
                        &lt;source path="medication" scope="O" xsi:type="Property"/&gt;
                     &lt;/operand&gt;
                     &lt;operand valueType="t:Integer" value="0" xsi:type="Literal"/&gt;
                  &lt;/operand&gt;
               &lt;/expression&gt;
            &lt;/let&gt;
            &lt;let identifier="medicationName"&gt;
               &lt;expression name="GetMedicationName" libraryName="OMTKLogic" xsi:type="FunctionRef"&gt;
                  &lt;operand name="rxNormCode" xsi:type="QueryLetRef"/&gt;
               &lt;/expression&gt;
            &lt;/let&gt;
            &lt;let identifier="dosageInstruction"&gt;
               &lt;expression xsi:type="Indexer"&gt;
                  &lt;operand path="dosageInstruction" scope="O" xsi:type="Property"/&gt;
                  &lt;operand valueType="t:Integer" value="0" xsi:type="Literal"/&gt;
               &lt;/expression&gt;
            &lt;/let&gt;
            &lt;let identifier="repeat"&gt;
               &lt;expression path="repeat" xsi:type="Property"&gt;
                  &lt;source path="timing" xsi:type="Property"&gt;
                     &lt;source name="dosageInstruction" xsi:type="QueryLetRef"/&gt;
                  &lt;/source&gt;
               &lt;/expression&gt;
            &lt;/let&gt;
            &lt;let identifier="frequency"&gt;
               &lt;expression xsi:type="Coalesce"&gt;
                  &lt;operand path="value" xsi:type="Property"&gt;
                     &lt;source path="frequencyMax" xsi:type="Property"&gt;
                        &lt;source name="repeat" xsi:type="QueryLetRef"/&gt;
                     &lt;/source&gt;
                  &lt;/operand&gt;
                  &lt;operand path="value" xsi:type="Property"&gt;
                     &lt;source path="frequency" xsi:type="Property"&gt;
                        &lt;source name="repeat" xsi:type="QueryLetRef"/&gt;
                     &lt;/source&gt;
                  &lt;/operand&gt;
               &lt;/expression&gt;
            &lt;/let&gt;
            &lt;let identifier="period"&gt;
               &lt;expression classType="t:Quantity" xsi:type="Instance"&gt;
                  &lt;element name="value"&gt;
                     &lt;value path="value" xsi:type="Property"&gt;
                        &lt;source path="period" xsi:type="Property"&gt;
                           &lt;source name="repeat" xsi:type="QueryLetRef"/&gt;
                        &lt;/source&gt;
                     &lt;/value&gt;
                  &lt;/element&gt;
                  &lt;element name="unit"&gt;
                     &lt;value path="value" xsi:type="Property"&gt;
                        &lt;source path="periodUnit" xsi:type="Property"&gt;
                           &lt;source name="repeat" xsi:type="QueryLetRef"/&gt;
                        &lt;/source&gt;
                     &lt;/value&gt;
                  &lt;/element&gt;
               &lt;/expression&gt;
            &lt;/let&gt;
            &lt;let identifier="doseDescription"&gt;
               &lt;expression xsi:type="Coalesce"&gt;
                  &lt;operand xsi:type="ToList"&gt;
                     &lt;operand xsi:type="If"&gt;
                        &lt;condition asType="t:Boolean" xsi:type="As"&gt;
                           &lt;operand xsi:type="Is"&gt;
                              &lt;operand path="dose" xsi:type="Property"&gt;
                                 &lt;source name="dosageInstruction" xsi:type="QueryLetRef"/&gt;
                              &lt;/operand&gt;
                              &lt;isTypeSpecifier name="fhir:Range" xsi:type="NamedTypeSpecifier"/&gt;
                           &lt;/operand&gt;
                        &lt;/condition&gt;
                        &lt;then xsi:type="Concatenate"&gt;
                           &lt;operand xsi:type="Concatenate"&gt;
                              &lt;operand xsi:type="Concatenate"&gt;
                                 &lt;operand xsi:type="ToString"&gt;
                                    &lt;operand name="ToQuantity" xsi:type="FunctionRef"&gt;
                                       &lt;operand path="low" xsi:type="Property"&gt;
                                          &lt;source path="dose" xsi:type="Property"&gt;
                                             &lt;source name="dosageInstruction" xsi:type="QueryLetRef"/&gt;
                                          &lt;/source&gt;
                                       &lt;/operand&gt;
                                    &lt;/operand&gt;
                                 &lt;/operand&gt;
                                 &lt;operand valueType="t:String" value="-" xsi:type="Literal"/&gt;
                              &lt;/operand&gt;
                              &lt;operand xsi:type="ToString"&gt;
                                 &lt;operand name="ToQuantity" xsi:type="FunctionRef"&gt;
                                    &lt;operand path="high" xsi:type="Property"&gt;
                                       &lt;source path="dose" xsi:type="Property"&gt;
                                          &lt;source name="dosageInstruction" xsi:type="QueryLetRef"/&gt;
                                       &lt;/source&gt;
                                    &lt;/operand&gt;
                                 &lt;/operand&gt;
                              &lt;/operand&gt;
                           &lt;/operand&gt;
                           &lt;operand path="value" xsi:type="Property"&gt;
                              &lt;source path="unit" xsi:type="Property"&gt;
                                 &lt;source path="high" xsi:type="Property"&gt;
                                    &lt;source path="dose" xsi:type="Property"&gt;
                                       &lt;source name="dosageInstruction" xsi:type="QueryLetRef"/&gt;
                                    &lt;/source&gt;
                                 &lt;/source&gt;
                              &lt;/source&gt;
                           &lt;/operand&gt;
                        &lt;/then&gt;
                        &lt;else xsi:type="ToString"&gt;
                           &lt;operand name="ToQuantity" xsi:type="FunctionRef"&gt;
                              &lt;operand asType="fhir:Quantity" xsi:type="As"&gt;
                                 &lt;operand path="dose" xsi:type="Property"&gt;
                                    &lt;source name="dosageInstruction" xsi:type="QueryLetRef"/&gt;
                                 &lt;/operand&gt;
                              &lt;/operand&gt;
                           &lt;/operand&gt;
                        &lt;/else&gt;
                     &lt;/operand&gt;
                  &lt;/operand&gt;
               &lt;/expression&gt;
            &lt;/let&gt;
            &lt;let identifier="frequencyDescription"&gt;
               &lt;expression xsi:type="Concatenate"&gt;
                  &lt;operand xsi:type="ToString"&gt;
                     &lt;operand path="value" xsi:type="Property"&gt;
                        &lt;source path="frequency" xsi:type="Property"&gt;
                           &lt;source path="repeat" xsi:type="Property"&gt;
                              &lt;source path="timing" xsi:type="Property"&gt;
                                 &lt;source name="dosageInstruction" xsi:type="QueryLetRef"/&gt;
                              &lt;/source&gt;
                           &lt;/source&gt;
                        &lt;/source&gt;
                     &lt;/operand&gt;
                  &lt;/operand&gt;
                  &lt;operand xsi:type="Coalesce"&gt;
                     &lt;operand xsi:type="Concatenate"&gt;
                        &lt;operand valueType="t:String" value="-" xsi:type="Literal"/&gt;
                        &lt;operand xsi:type="ToString"&gt;
                           &lt;operand path="value" xsi:type="Property"&gt;
                              &lt;source path="frequencyMax" xsi:type="Property"&gt;
                                 &lt;source path="repeat" xsi:type="Property"&gt;
                                    &lt;source path="timing" xsi:type="Property"&gt;
                                       &lt;source name="dosageInstruction" xsi:type="QueryLetRef"/&gt;
                                    &lt;/source&gt;
                                 &lt;/source&gt;
                              &lt;/source&gt;
                           &lt;/operand&gt;
                        &lt;/operand&gt;
                     &lt;/operand&gt;
                     &lt;operand valueType="t:String" value="" xsi:type="Literal"/&gt;
                  &lt;/operand&gt;
               &lt;/expression&gt;
            &lt;/let&gt;
            &lt;return&gt;
               &lt;expression xsi:type="Tuple"&gt;
                  &lt;element name="rxNormCode"&gt;
                     &lt;value name="rxNormCode" xsi:type="QueryLetRef"/&gt;
                  &lt;/element&gt;
                  &lt;element name="isDraft"&gt;
                     &lt;value xsi:type="Equal"&gt;
                        &lt;operand path="value" xsi:type="Property"&gt;
                           &lt;source path="status" scope="O" xsi:type="Property"/&gt;
                        &lt;/operand&gt;
                        &lt;operand valueType="t:String" value="draft" xsi:type="Literal"/&gt;
                     &lt;/value&gt;
                  &lt;/element&gt;
                  &lt;element name="isPRN"&gt;
                     &lt;value path="value" xsi:type="Property"&gt;
                        &lt;source path="asNeeded" xsi:type="Property"&gt;
                           &lt;source name="dosageInstruction" xsi:type="QueryLetRef"/&gt;
                        &lt;/source&gt;
                     &lt;/value&gt;
                  &lt;/element&gt;
                  &lt;element name="prescription"&gt;
                     &lt;value xsi:type="If"&gt;
                        &lt;condition asType="t:Boolean" xsi:type="As"&gt;
                           &lt;operand xsi:type="Not"&gt;
                              &lt;operand xsi:type="IsNull"&gt;
                                 &lt;operand path="text" xsi:type="Property"&gt;
                                    &lt;source name="dosageInstruction" xsi:type="QueryLetRef"/&gt;
                                 &lt;/operand&gt;
                              &lt;/operand&gt;
                           &lt;/operand&gt;
                        &lt;/condition&gt;
                        &lt;then xsi:type="Concatenate"&gt;
                           &lt;operand xsi:type="Concatenate"&gt;
                              &lt;operand name="medicationName" xsi:type="QueryLetRef"/&gt;
                              &lt;operand valueType="t:String" value=" " xsi:type="Literal"/&gt;
                           &lt;/operand&gt;
                           &lt;operand path="value" xsi:type="Property"&gt;
                              &lt;source path="text" xsi:type="Property"&gt;
                                 &lt;source name="dosageInstruction" xsi:type="QueryLetRef"/&gt;
                              &lt;/source&gt;
                           &lt;/operand&gt;
                        &lt;/then&gt;
                        &lt;else xsi:type="Concatenate"&gt;
                           &lt;operand xsi:type="Concatenate"&gt;
                              &lt;operand xsi:type="Concatenate"&gt;
                                 &lt;operand xsi:type="Concatenate"&gt;
                                    &lt;operand xsi:type="Concatenate"&gt;
                                       &lt;operand name="medicationName" xsi:type="QueryLetRef"/&gt;
                                       &lt;operand valueType="t:String" value=" " xsi:type="Literal"/&gt;
                                    &lt;/operand&gt;
                                    &lt;operand name="doseDescription" xsi:type="QueryLetRef"/&gt;
                                 &lt;/operand&gt;
                                 &lt;operand valueType="t:String" value=" q" xsi:type="Literal"/&gt;
                              &lt;/operand&gt;
                              &lt;operand name="frequencyDescription" xsi:type="QueryLetRef"/&gt;
                           &lt;/operand&gt;
                           &lt;operand xsi:type="If"&gt;
                              &lt;condition asType="t:Boolean" xsi:type="As"&gt;
                                 &lt;operand path="value" xsi:type="Property"&gt;
                                    &lt;source path="asNeeded" xsi:type="Property"&gt;
                                       &lt;source name="dosageInstruction" xsi:type="QueryLetRef"/&gt;
                                    &lt;/source&gt;
                                 &lt;/operand&gt;
                              &lt;/condition&gt;
                              &lt;then valueType="t:String" value=" PRN" xsi:type="Literal"/&gt;
                              &lt;else valueType="t:String" value="" xsi:type="Literal"/&gt;
                           &lt;/operand&gt;
                        &lt;/else&gt;
                     &lt;/value&gt;
                  &lt;/element&gt;
                  &lt;element name="dose"&gt;
                     &lt;value xsi:type="If"&gt;
                        &lt;condition asType="t:Boolean" xsi:type="As"&gt;
                           &lt;operand xsi:type="Is"&gt;
                              &lt;operand path="dose" xsi:type="Property"&gt;
                                 &lt;source name="dosageInstruction" xsi:type="QueryLetRef"/&gt;
                              &lt;/operand&gt;
                              &lt;isTypeSpecifier name="fhir:Range" xsi:type="NamedTypeSpecifier"/&gt;
                           &lt;/operand&gt;
                        &lt;/condition&gt;
                        &lt;then name="ToQuantity" xsi:type="FunctionRef"&gt;
                           &lt;operand path="high" xsi:type="Property"&gt;
                              &lt;source path="dose" xsi:type="Property"&gt;
                                 &lt;source name="dosageInstruction" xsi:type="QueryLetRef"/&gt;
                              &lt;/source&gt;
                           &lt;/operand&gt;
                        &lt;/then&gt;
                        &lt;else name="ToQuantity" xsi:type="FunctionRef"&gt;
                           &lt;operand asType="fhir:Quantity" xsi:type="As"&gt;
                              &lt;operand path="dose" xsi:type="Property"&gt;
                                 &lt;source name="dosageInstruction" xsi:type="QueryLetRef"/&gt;
                              &lt;/operand&gt;
                           &lt;/operand&gt;
                        &lt;/else&gt;
                     &lt;/value&gt;
                  &lt;/element&gt;
                  &lt;element name="dosesPerDay"&gt;
                     &lt;value xsi:type="Coalesce"&gt;
                        &lt;operand name="ToDaily" libraryName="OMTKLogic" xsi:type="FunctionRef"&gt;
                           &lt;operand name="frequency" xsi:type="QueryLetRef"/&gt;
                           &lt;operand name="period" xsi:type="QueryLetRef"/&gt;
                        &lt;/operand&gt;
                        &lt;operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/&gt;
                     &lt;/value&gt;
                  &lt;/element&gt;
               &lt;/expression&gt;
            &lt;/return&gt;
         &lt;/expression&gt;
         &lt;operand name="Orders"&gt;
            &lt;operandTypeSpecifier xsi:type="ListTypeSpecifier"&gt;
               &lt;elementType name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/&gt;
            &lt;/operandTypeSpecifier&gt;
         &lt;/operand&gt;
      &lt;/def&gt;
      &lt;def name="MME" context="Patient" accessLevel="Public" xsi:type="FunctionDef"&gt;
         &lt;expression xsi:type="Query"&gt;
            &lt;source alias="P"&gt;
               &lt;expression name="Prescriptions" xsi:type="FunctionRef"&gt;
                  &lt;operand name="prescriptions" xsi:type="OperandRef"/&gt;
               &lt;/expression&gt;
            &lt;/source&gt;
            &lt;let identifier="mme"&gt;
               &lt;expression xsi:type="SingletonFrom"&gt;
                  &lt;operand name="CalculateMMEs" libraryName="OMTKLogic" xsi:type="FunctionRef"&gt;
                     &lt;operand xsi:type="List"&gt;
                        &lt;element xsi:type="Tuple"&gt;
                           &lt;element name="rxNormCode"&gt;
                              &lt;value path="rxNormCode" scope="P" xsi:type="Property"/&gt;
                           &lt;/element&gt;
                           &lt;element name="doseQuantity"&gt;
                              &lt;value path="dose" scope="P" xsi:type="Property"/&gt;
                           &lt;/element&gt;
                           &lt;element name="dosesPerDay"&gt;
                              &lt;value path="dosesPerDay" scope="P" xsi:type="Property"/&gt;
                           &lt;/element&gt;
                        &lt;/element&gt;
                     &lt;/operand&gt;
                  &lt;/operand&gt;
               &lt;/expression&gt;
            &lt;/let&gt;
            &lt;return&gt;
               &lt;expression xsi:type="Tuple"&gt;
                  &lt;element name="rxNormCode"&gt;
                     &lt;value path="rxNormCode" scope="P" xsi:type="Property"/&gt;
                  &lt;/element&gt;
                  &lt;element name="isDraft"&gt;
                     &lt;value path="isDraft" scope="P" xsi:type="Property"/&gt;
                  &lt;/element&gt;
                  &lt;element name="isPRN"&gt;
                     &lt;value path="isPRN" scope="P" xsi:type="Property"/&gt;
                  &lt;/element&gt;
                  &lt;element name="prescription"&gt;
                     &lt;value path="prescription" scope="P" xsi:type="Property"/&gt;
                  &lt;/element&gt;
                  &lt;element name="dailyDose"&gt;
                     &lt;value path="dailyDoseDescription" xsi:type="Property"&gt;
                        &lt;source name="mme" xsi:type="QueryLetRef"/&gt;
                     &lt;/value&gt;
                  &lt;/element&gt;
                  &lt;element name="conversionFactor"&gt;
                     &lt;value path="conversionFactor" xsi:type="Property"&gt;
                        &lt;source name="mme" xsi:type="QueryLetRef"/&gt;
                     &lt;/value&gt;
                  &lt;/element&gt;
                  &lt;element name="mme"&gt;
                     &lt;value path="mme" xsi:type="Property"&gt;
                        &lt;source name="mme" xsi:type="QueryLetRef"/&gt;
                     &lt;/value&gt;
                  &lt;/element&gt;
               &lt;/expression&gt;
            &lt;/return&gt;
         &lt;/expression&gt;
         &lt;operand name="prescriptions"&gt;
            &lt;operandTypeSpecifier xsi:type="ListTypeSpecifier"&gt;
               &lt;elementType name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/&gt;
            &lt;/operandTypeSpecifier&gt;
         &lt;/operand&gt;
      &lt;/def&gt;
      &lt;def name="TotalMME" context="Patient" accessLevel="Public" xsi:type="FunctionDef"&gt;
         &lt;expression classType="t:Quantity" xsi:type="Instance"&gt;
            &lt;element name="value"&gt;
               &lt;value xsi:type="Sum"&gt;
                  &lt;source xsi:type="Query"&gt;
                     &lt;source alias="M"&gt;
                        &lt;expression name="MME" xsi:type="FunctionRef"&gt;
                           &lt;operand name="prescriptions" xsi:type="OperandRef"/&gt;
                        &lt;/expression&gt;
                     &lt;/source&gt;
                     &lt;return&gt;
                        &lt;expression path="value" xsi:type="Property"&gt;
                           &lt;source path="mme" scope="M" xsi:type="Property"/&gt;
                        &lt;/expression&gt;
                     &lt;/return&gt;
                  &lt;/source&gt;
               &lt;/value&gt;
            &lt;/element&gt;
            &lt;element name="unit"&gt;
               &lt;value valueType="t:String" value="mg/d" xsi:type="Literal"/&gt;
            &lt;/element&gt;
         &lt;/expression&gt;
         &lt;operand name="prescriptions"&gt;
            &lt;operandTypeSpecifier xsi:type="ListTypeSpecifier"&gt;
               &lt;elementType name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/&gt;
            &lt;/operandTypeSpecifier&gt;
         &lt;/operand&gt;
      &lt;/def&gt;
      &lt;def name="GetPeriodDays" context="Patient" accessLevel="Public" xsi:type="FunctionDef"&gt;
         &lt;expression xsi:type="Case"&gt;
            &lt;caseItem&gt;
               &lt;when xsi:type="StartsWith"&gt;
                  &lt;operand name="value" xsi:type="OperandRef"/&gt;
                  &lt;operand valueType="t:String" value="year" xsi:type="Literal"/&gt;
               &lt;/when&gt;
               &lt;then valueType="t:Decimal" value="365.0" xsi:type="Literal"/&gt;
            &lt;/caseItem&gt;
            &lt;caseItem&gt;
               &lt;when xsi:type="StartsWith"&gt;
                  &lt;operand name="value" xsi:type="OperandRef"/&gt;
                  &lt;operand valueType="t:String" value="month" xsi:type="Literal"/&gt;
               &lt;/when&gt;
               &lt;then valueType="t:Decimal" value="30.0" xsi:type="Literal"/&gt;
            &lt;/caseItem&gt;
            &lt;caseItem&gt;
               &lt;when xsi:type="StartsWith"&gt;
                  &lt;operand name="value" xsi:type="OperandRef"/&gt;
                  &lt;operand valueType="t:String" value="hour" xsi:type="Literal"/&gt;
               &lt;/when&gt;
               &lt;then xsi:type="Divide"&gt;
                  &lt;operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/&gt;
                  &lt;operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/&gt;
               &lt;/then&gt;
            &lt;/caseItem&gt;
            &lt;caseItem&gt;
               &lt;when xsi:type="StartsWith"&gt;
                  &lt;operand name="value" xsi:type="OperandRef"/&gt;
                  &lt;operand valueType="t:String" value="minute" xsi:type="Literal"/&gt;
               &lt;/when&gt;
               &lt;then xsi:type="Multiply"&gt;
                  &lt;operand xsi:type="Divide"&gt;
                     &lt;operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/&gt;
                     &lt;operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/&gt;
                  &lt;/operand&gt;
                  &lt;operand valueType="t:Decimal" value="60.0" xsi:type="Literal"/&gt;
               &lt;/then&gt;
            &lt;/caseItem&gt;
            &lt;else valueType="t:Decimal" value="1.0" xsi:type="Literal"/&gt;
         &lt;/expression&gt;
         &lt;operand name="value"&gt;
            &lt;operandTypeSpecifier name="t:String" xsi:type="NamedTypeSpecifier"/&gt;
         &lt;/operand&gt;
      &lt;/def&gt;
      &lt;def name="GetDurationInDays" context="Patient" accessLevel="Public" xsi:type="FunctionDef"&gt;
         &lt;expression xsi:type="Case"&gt;
            &lt;caseItem&gt;
               &lt;when xsi:type="StartsWith"&gt;
                  &lt;operand path="value" xsi:type="Property"&gt;
                     &lt;source path="unit" xsi:type="Property"&gt;
                        &lt;source name="value" xsi:type="OperandRef"/&gt;
                     &lt;/source&gt;
                  &lt;/operand&gt;
                  &lt;operand valueType="t:String" value="year" xsi:type="Literal"/&gt;
               &lt;/when&gt;
               &lt;then xsi:type="Multiply"&gt;
                  &lt;operand path="value" xsi:type="Property"&gt;
                     &lt;source path="value" xsi:type="Property"&gt;
                        &lt;source name="value" xsi:type="OperandRef"/&gt;
                     &lt;/source&gt;
                  &lt;/operand&gt;
                  &lt;operand valueType="t:Decimal" value="365.0" xsi:type="Literal"/&gt;
               &lt;/then&gt;
            &lt;/caseItem&gt;
            &lt;caseItem&gt;
               &lt;when xsi:type="StartsWith"&gt;
                  &lt;operand path="value" xsi:type="Property"&gt;
                     &lt;source path="unit" xsi:type="Property"&gt;
                        &lt;source name="value" xsi:type="OperandRef"/&gt;
                     &lt;/source&gt;
                  &lt;/operand&gt;
                  &lt;operand valueType="t:String" value="month" xsi:type="Literal"/&gt;
               &lt;/when&gt;
               &lt;then xsi:type="Multiply"&gt;
                  &lt;operand path="value" xsi:type="Property"&gt;
                     &lt;source path="value" xsi:type="Property"&gt;
                        &lt;source name="value" xsi:type="OperandRef"/&gt;
                     &lt;/source&gt;
                  &lt;/operand&gt;
                  &lt;operand valueType="t:Decimal" value="30.0" xsi:type="Literal"/&gt;
               &lt;/then&gt;
            &lt;/caseItem&gt;
            &lt;else path="value" xsi:type="Property"&gt;
               &lt;source path="value" xsi:type="Property"&gt;
                  &lt;source name="value" xsi:type="OperandRef"/&gt;
               &lt;/source&gt;
            &lt;/else&gt;
         &lt;/expression&gt;
         &lt;operand name="value"&gt;
            &lt;operandTypeSpecifier name="fhir:Duration" xsi:type="NamedTypeSpecifier"/&gt;
         &lt;/operand&gt;
      &lt;/def&gt;
      &lt;def name="ProbableDaysInRange" context="Patient" accessLevel="Public" xsi:type="FunctionDef"&gt;
         &lt;expression xsi:type="Query"&gt;
            &lt;source alias="orders"&gt;
               &lt;expression name="Orders" xsi:type="OperandRef"/&gt;
            &lt;/source&gt;
            &lt;let identifier="frequency"&gt;
               &lt;expression path="value" xsi:type="Property"&gt;
                  &lt;source path="frequency" xsi:type="Property"&gt;
                     &lt;source path="repeat" xsi:type="Property"&gt;
                        &lt;source path="timing" xsi:type="Property"&gt;
                           &lt;source xsi:type="Indexer"&gt;
                              &lt;operand path="dosageInstruction" scope="orders" xsi:type="Property"/&gt;
                              &lt;operand valueType="t:Integer" value="0" xsi:type="Literal"/&gt;
                           &lt;/source&gt;
                        &lt;/source&gt;
                     &lt;/source&gt;
                  &lt;/source&gt;
               &lt;/expression&gt;
            &lt;/let&gt;
            &lt;let identifier="period"&gt;
               &lt;expression path="value" xsi:type="Property"&gt;
                  &lt;source path="period" xsi:type="Property"&gt;
                     &lt;source path="repeat" xsi:type="Property"&gt;
                        &lt;source path="timing" xsi:type="Property"&gt;
                           &lt;source xsi:type="Indexer"&gt;
                              &lt;operand path="dosageInstruction" scope="orders" xsi:type="Property"/&gt;
                              &lt;operand valueType="t:Integer" value="0" xsi:type="Literal"/&gt;
                           &lt;/source&gt;
                        &lt;/source&gt;
                     &lt;/source&gt;
                  &lt;/source&gt;
               &lt;/expression&gt;
            &lt;/let&gt;
            &lt;let identifier="periodDays"&gt;
               &lt;expression name="GetPeriodDays" xsi:type="FunctionRef"&gt;
                  &lt;operand path="value" xsi:type="Property"&gt;
                     &lt;source path="periodUnit" xsi:type="Property"&gt;
                        &lt;source path="repeat" xsi:type="Property"&gt;
                           &lt;source path="timing" xsi:type="Property"&gt;
                              &lt;source xsi:type="Indexer"&gt;
                                 &lt;operand path="dosageInstruction" scope="orders" xsi:type="Property"/&gt;
                                 &lt;operand valueType="t:Integer" value="0" xsi:type="Literal"/&gt;
                              &lt;/source&gt;
                           &lt;/source&gt;
                        &lt;/source&gt;
                     &lt;/source&gt;
                  &lt;/operand&gt;
               &lt;/expression&gt;
            &lt;/let&gt;
            &lt;let identifier="dosesPerDay"&gt;
               &lt;expression xsi:type="If"&gt;
                  &lt;condition asType="t:Boolean" xsi:type="As"&gt;
                     &lt;operand xsi:type="GreaterOrEqual"&gt;
                        &lt;operand xsi:type="Divide"&gt;
                           &lt;operand xsi:type="ToDecimal"&gt;
                              &lt;operand name="frequency" xsi:type="QueryLetRef"/&gt;
                           &lt;/operand&gt;
                           &lt;operand xsi:type="Multiply"&gt;
                              &lt;operand name="period" xsi:type="QueryLetRef"/&gt;
                              &lt;operand name="periodDays" xsi:type="QueryLetRef"/&gt;
                           &lt;/operand&gt;
                        &lt;/operand&gt;
                        &lt;operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/&gt;
                     &lt;/operand&gt;
                  &lt;/condition&gt;
                  &lt;then valueType="t:Decimal" value="1.0" xsi:type="Literal"/&gt;
                  &lt;else xsi:type="Divide"&gt;
                     &lt;operand xsi:type="ToDecimal"&gt;
                        &lt;operand name="frequency" xsi:type="QueryLetRef"/&gt;
                     &lt;/operand&gt;
                     &lt;operand xsi:type="Multiply"&gt;
                        &lt;operand name="period" xsi:type="QueryLetRef"/&gt;
                        &lt;operand name="periodDays" xsi:type="QueryLetRef"/&gt;
                     &lt;/operand&gt;
                  &lt;/else&gt;
               &lt;/expression&gt;
            &lt;/let&gt;
            &lt;let identifier="repeat"&gt;
               &lt;expression path="value" xsi:type="Property"&gt;
                  &lt;source path="numberOfRepeatsAllowed" xsi:type="Property"&gt;
                     &lt;source path="dispenseRequest" scope="orders" xsi:type="Property"/&gt;
                  &lt;/source&gt;
               &lt;/expression&gt;
            &lt;/let&gt;
            &lt;let identifier="supplyDuration"&gt;
               &lt;expression name="GetDurationInDays" xsi:type="FunctionRef"&gt;
                  &lt;operand path="expectedSupplyDuration" xsi:type="Property"&gt;
                     &lt;source path="dispenseRequest" scope="orders" xsi:type="Property"/&gt;
                  &lt;/operand&gt;
               &lt;/expression&gt;
            &lt;/let&gt;
            &lt;let identifier="validityPeriod"&gt;
               &lt;expression precision="Day" xsi:type="DurationBetween"&gt;
                  &lt;operand path="value" xsi:type="Property"&gt;
                     &lt;source path="start" xsi:type="Property"&gt;
                        &lt;source path="validityPeriod" xsi:type="Property"&gt;
                           &lt;source path="dispenseRequest" scope="orders" xsi:type="Property"/&gt;
                        &lt;/source&gt;
                     &lt;/source&gt;
                  &lt;/operand&gt;
                  &lt;operand xsi:type="Today"/&gt;
               &lt;/expression&gt;
            &lt;/let&gt;
            &lt;let identifier="endDifference"&gt;
               &lt;expression xsi:type="If"&gt;
                  &lt;condition asType="t:Boolean" xsi:type="As"&gt;
                     &lt;operand xsi:type="Less"&gt;
                        &lt;operand path="value" xsi:type="Property"&gt;
                           &lt;source path="end" xsi:type="Property"&gt;
                              &lt;source path="validityPeriod" xsi:type="Property"&gt;
                                 &lt;source path="dispenseRequest" scope="orders" xsi:type="Property"/&gt;
                              &lt;/source&gt;
                           &lt;/source&gt;
                        &lt;/operand&gt;
                        &lt;operand xsi:type="Today"/&gt;
                     &lt;/operand&gt;
                  &lt;/condition&gt;
                  &lt;then precision="Day" xsi:type="DurationBetween"&gt;
                     &lt;operand path="value" xsi:type="Property"&gt;
                        &lt;source path="end" xsi:type="Property"&gt;
                           &lt;source path="validityPeriod" xsi:type="Property"&gt;
                              &lt;source path="dispenseRequest" scope="orders" xsi:type="Property"/&gt;
                           &lt;/source&gt;
                        &lt;/source&gt;
                     &lt;/operand&gt;
                     &lt;operand xsi:type="Today"/&gt;
                  &lt;/then&gt;
                  &lt;else valueType="t:Integer" value="0" xsi:type="Literal"/&gt;
               &lt;/expression&gt;
            &lt;/let&gt;
            &lt;return&gt;
               &lt;expression xsi:type="GreaterOrEqual"&gt;
                  &lt;operand xsi:type="Multiply"&gt;
                     &lt;operand xsi:type="Multiply"&gt;
                        &lt;operand name="dosesPerDay" xsi:type="QueryLetRef"/&gt;
                        &lt;operand xsi:type="Divide"&gt;
                           &lt;operand xsi:type="Multiply"&gt;
                              &lt;operand xsi:type="ToDecimal"&gt;
                                 &lt;operand name="repeat" xsi:type="QueryLetRef"/&gt;
                              &lt;/operand&gt;
                              &lt;operand name="supplyDuration" xsi:type="QueryLetRef"/&gt;
                           &lt;/operand&gt;
                           &lt;operand xsi:type="ToDecimal"&gt;
                              &lt;operand name="validityPeriod" xsi:type="QueryLetRef"/&gt;
                           &lt;/operand&gt;
                        &lt;/operand&gt;
                     &lt;/operand&gt;
                     &lt;operand xsi:type="ToDecimal"&gt;
                        &lt;operand xsi:type="Subtract"&gt;
                           &lt;operand name="daysPast" xsi:type="OperandRef"/&gt;
                           &lt;operand name="endDifference" xsi:type="QueryLetRef"/&gt;
                        &lt;/operand&gt;
                     &lt;/operand&gt;
                  &lt;/operand&gt;
                  &lt;operand xsi:type="ToDecimal"&gt;
                     &lt;operand name="numDaysInDaysPast" xsi:type="OperandRef"/&gt;
                  &lt;/operand&gt;
               &lt;/expression&gt;
            &lt;/return&gt;
         &lt;/expression&gt;
         &lt;operand name="Orders"&gt;
            &lt;operandTypeSpecifier xsi:type="ListTypeSpecifier"&gt;
               &lt;elementType name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/&gt;
            &lt;/operandTypeSpecifier&gt;
         &lt;/operand&gt;
         &lt;operand name="daysPast"&gt;
            &lt;operandTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/&gt;
         &lt;/operand&gt;
         &lt;operand name="numDaysInDaysPast"&gt;
            &lt;operandTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/&gt;
         &lt;/operand&gt;
      &lt;/def&gt;
      &lt;def name="IsNaloxone" context="Patient" accessLevel="Public" xsi:type="FunctionDef"&gt;
         &lt;expression xsi:type="InValueSet"&gt;
            &lt;code name="rxNormCode" xsi:type="OperandRef"/&gt;
            &lt;valueset name="Naloxone"/&gt;
         &lt;/expression&gt;
         &lt;operand name="rxNormCode"&gt;
            &lt;operandTypeSpecifier name="t:Code" xsi:type="NamedTypeSpecifier"/&gt;
         &lt;/operand&gt;
      &lt;/def&gt;
      &lt;def name="IsBenzodiazepine" context="Patient" accessLevel="Public" xsi:type="FunctionDef"&gt;
         &lt;expression xsi:type="InValueSet"&gt;
            &lt;code name="rxNormCode" xsi:type="OperandRef"/&gt;
            &lt;valueset name="Benzodiazepines"/&gt;
         &lt;/expression&gt;
         &lt;operand name="rxNormCode"&gt;
            &lt;operandTypeSpecifier name="t:Code" xsi:type="NamedTypeSpecifier"/&gt;
         &lt;/operand&gt;
      &lt;/def&gt;
      &lt;def name="IsOpioidWithAmbulatoryAbusePotential" context="Patient" accessLevel="Public" xsi:type="FunctionDef"&gt;
         &lt;expression xsi:type="InValueSet"&gt;
            &lt;code name="rxNormCode" xsi:type="OperandRef"/&gt;
            &lt;valueset name="Ambulatory Abuse Potential Opioids"/&gt;
         &lt;/expression&gt;
         &lt;operand name="rxNormCode"&gt;
            &lt;operandTypeSpecifier name="t:Code" xsi:type="NamedTypeSpecifier"/&gt;
         &lt;/operand&gt;
      &lt;/def&gt;
      &lt;def name="IsLongActingOpioid" context="Patient" accessLevel="Public" xsi:type="FunctionDef"&gt;
         &lt;expression xsi:type="InValueSet"&gt;
            &lt;code name="rxNormCode" xsi:type="OperandRef"/&gt;
            &lt;valueset name="Long Acting Opioids"/&gt;
         &lt;/expression&gt;
         &lt;operand name="rxNormCode"&gt;
            &lt;operandTypeSpecifier name="t:Code" xsi:type="NamedTypeSpecifier"/&gt;
         &lt;/operand&gt;
      &lt;/def&gt;
      &lt;def name="IsEndOfLifeOpioid" context="Patient" accessLevel="Public" xsi:type="FunctionDef"&gt;
         &lt;expression xsi:type="InValueSet"&gt;
            &lt;code name="rxNormCode" xsi:type="OperandRef"/&gt;
            &lt;valueset name="End Of Life Opioids"/&gt;
         &lt;/expression&gt;
         &lt;operand name="rxNormCode"&gt;
            &lt;operandTypeSpecifier name="t:Code" xsi:type="NamedTypeSpecifier"/&gt;
         &lt;/operand&gt;
      &lt;/def&gt;
      &lt;def name="IsOpioidDrugScreen" context="Patient" accessLevel="Public" xsi:type="FunctionDef"&gt;
         &lt;expression xsi:type="InValueSet"&gt;
            &lt;code name="observationCode" xsi:type="OperandRef"/&gt;
            &lt;valueset name="Opioid Drug Screening"/&gt;
         &lt;/expression&gt;
         &lt;operand name="observationCode"&gt;
            &lt;operandTypeSpecifier name="t:Code" xsi:type="NamedTypeSpecifier"/&gt;
         &lt;/operand&gt;
      &lt;/def&gt;
      &lt;def name="IsIllicitDrugScreen" context="Patient" accessLevel="Public" xsi:type="FunctionDef"&gt;
         &lt;expression xsi:type="InValueSet"&gt;
            &lt;code name="observationCode" xsi:type="OperandRef"/&gt;
            &lt;valueset name="Illicit Drug Screening"/&gt;
         &lt;/expression&gt;
         &lt;operand name="observationCode"&gt;
            &lt;operandTypeSpecifier name="t:Code" xsi:type="NamedTypeSpecifier"/&gt;
         &lt;/operand&gt;
      &lt;/def&gt;
      &lt;def name="GetIngredient" context="Patient" accessLevel="Public" xsi:type="FunctionDef"&gt;
         &lt;expression xsi:type="Query"&gt;
            &lt;source alias="$this"&gt;
               &lt;expression name="GetIngredients" libraryName="OMTKLogic" xsi:type="FunctionRef"&gt;
                  &lt;operand name="rxNormCode" xsi:type="OperandRef"/&gt;
               &lt;/expression&gt;
            &lt;/source&gt;
            &lt;where xsi:type="Not"&gt;
               &lt;operand xsi:type="IsNull"&gt;
                  &lt;operand path="ingredientName" xsi:type="Property"&gt;
                     &lt;source name="$this" xsi:type="AliasRef"/&gt;
                  &lt;/operand&gt;
               &lt;/operand&gt;
            &lt;/where&gt;
            &lt;return&gt;
               &lt;expression path="ingredientName" xsi:type="Property"&gt;
                  &lt;source name="$this" xsi:type="AliasRef"/&gt;
               &lt;/expression&gt;
            &lt;/return&gt;
         &lt;/expression&gt;
         &lt;operand name="rxNormCode"&gt;
            &lt;operandTypeSpecifier name="t:Code" xsi:type="NamedTypeSpecifier"/&gt;
         &lt;/operand&gt;
      &lt;/def&gt;
   &lt;/statements&gt;
&lt;/library&gt;
</code>
      </pre>
    </div>
  </text>
  <identifier>
    <use value="official"/>
    <value value="OpioidCDS_Common"/>
  </identifier>
  <version value="0.1.0"/>
  <title value="Opioid CDS Common Logic"/>
  <status value="active"/>
  <experimental value="false"/>
  <type>
    <coding>
      <system value="http://terminology.hl7.org/CodeSystem/library-type"/>
      <code value="logic-library"/>
      <display value="Logic Library"/>
    </coding>
  </type>
  <date value="2018-03-25T13:49:09-06:00"/>
  <publisher value="Centers for Disease Control and Prevention (CDC)"/>
  <description value="Common Opioid Decision Support Logic for use in implementing CDC Opioid Prescribing Guidelines."/>
  <useContext>
    <code>
      <system value="http://terminology.hl7.org/CodeSystem/usage-context-type"/>
      <code value="focus"/>
      <display value="Clinical Focus"/>
    </code>
    <valueCodeableConcept>
      <coding>
        <system value="http://snomed.info/sct"/>
        <code value="182888003"/>
        <display value="Medication requested (situation)"/>
      </coding>
    </valueCodeableConcept>
  </useContext>
  <useContext>
    <code>
      <system value="http://terminology.hl7.org/CodeSystem/usage-context-type"/>
      <code value="focus"/>
      <display value="Clinical Focus"/>
    </code>
    <valueCodeableConcept>
      <coding>
        <system value="http://snomed.info/sct"/>
        <code value="82423001"/>
        <display value="Chronic pain (finding)"/>
      </coding>
    </valueCodeableConcept>
  </useContext>
  <jurisdiction>
    <coding>
      <system value="urn:iso:std:iso:3166"/>
      <code value="US"/>
      <display value="United States of America"/>
    </coding>
  </jurisdiction>
  <purpose value="This library contains common logic across recommendations including MME calculations, conversions, and looking up codes in valuesets."/>
  <usage value="This library is used for decision support for opioid guideline recommendations when applying PlanDefinitions."/>
  <copyright value="© CDC 2016+."/>
  <topic>
    <text value="Opioid Prescribing"/>
  </topic>
  <author>
    <name value="Kensaku Kawamoto, MD, PhD, MHS"/>
  </author>
  <author>
    <name value="Bryn Rhodes"/>
  </author>
  <author>
    <name value="Floyd Eisenberg, MD, MPH"/>
  </author>
  <author>
    <name value="Robert McClure, MD, MPH"/>
  </author>
  <relatedArtifact>
    <type value="documentation"/>
    <display value="CDC guideline for prescribing opioids for chronic pain"/>
    <document>
      <url value="https://guidelines.gov/summaries/summary/50153/cdc-guideline-for-prescribing-opioids-for-chronic-pain---united-states-2016#420"/>
    </document>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="http://example.org/fhir/Library/omtk-logic"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="documentation"/>
    <display value="MME Conversion Tables"/>
    <document>
      <url value="https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf"/>
    </document>
  </relatedArtifact>
  <content>
    <contentType value="application/elm+xml"/>
    <data value=""/>
  </content>
</Library>